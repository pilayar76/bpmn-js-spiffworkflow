{"version":3,"file":"index.js","mappings":"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B,eAAe,0BAA0B,MAAM,YAAY,cAAc,eAAe,YAAY,cAAc,sDAAsD,yBAAyB,qDAAqD,qBAAqB,kBAAkB,MAAM,oBAAoB,UAAU,MAAM,gBAAgB,qBAAqB,WAAW,yBAAyB,MAAM,kBAAkB,8BAA8B;AACnkkL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C,8BAA8B,cAAc;AAC5C,6BAA6B,aAAa;AAC1C,sCAAsC;AACtC,wCAAwC;AACxC,aAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,kCAAkC;AAClC,iCAAiC;AACjC,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA,gCAAgC;AAChC,oCAAoC;AACpC,mCAAmC;AACnC,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,QAAQ;AACR,eAAe;AACf;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,QAAQ;AACR,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI,iDAAO;;AAEX;AACA;;AAEA;AACA,IAAI,iDAAO;AACX;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,EAAE,iDAAO;AACT;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS,gDAAM;AACf;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4BAA4B;AAC3C,kBAAkB;AAClB,KAAK;AACL;AACA,aAAa,4BAA4B;AACzC,gBAAgB,4BAA4B;AAC5C,eAAe,6BAA6B;AAC5C,kBAAkB;AAClB;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0CAA0C,0BAA0B,kBAAkB,0BAA0B,gEAAgE,QAAQ,iFAAiF,OAAO,qFAAqF,gBAAgB,+FAA+F,YAAY,mPAAmP,cAAc,mHAAmH,cAAc,4HAA4H,sFAAsF,gHAAgH,kBAAkB,yGAAyG,gBAAgB,sHAAsH,oCAAoC,SAAS,wFAAwF,iHAAiH,kBAAkB,2GAA2G,iBAAiB,YAAY,sCAAsC,aAAa,kHAAkH,mBAAmB,mIAAmI,WAAW,4GAA4G,cAAc,kCAAkC,GAAG,WAAW,mDAAmD,yCAAyC,MAAM,qFAAqF,UAAU,4FAA4F,iBAAiB,YAAY,+BAA+B,GAAG,yCAAyC,GAAG,OAAO,qBAAqB,0FAA0F,6EAA6E,iBAAiB,YAAY,oIAAoI,gBAAgB,cAAc,uDAAuD,SAAS,kGAAkG,eAAe,YAAY,0HAA0H,yEAAyE,yCAAyC,YAAY,wCAAwC,kBAAkB,UAAU,qFAAqF,cAAc,0CAA0C,iCAAiC,GAAG,WAAW,4BAA4B,WAAW,MAAM,cAAc,QAAQ,oBAAoB,qBAAqB,SAAS,wFAAwF,gBAAgB,MAAM,mEAAmE,UAAU,8GAA8G,gBAAgB,8GAA8G,UAAU,kGAAkG,SAAS,gGAAgG,aAAa,8HAA8H,YAAY,4HAA4H,uEAAuE,eAAe,QAAQ,sGAAsG,UAAU,yGAAyG,6CAA6C,cAAc,cAAc,8CAA8C,gBAAgB,mIAAmI,aAAa,gBAAgB,EAAE,gBAAgB,YAAY,yHAAyH,cAAc,iIAAiI,cAAc,kIAAkI,YAAY,2HAA2H,4BAA4B,eAAe,SAAS,6HAA6H,YAAY,iIAAiI,EAAE,gBAAgB,IAAI,UAAU,yGAAyG,cAAc,iGAAiG,aAAa,uDAAuD,EAAE,wEAAwE,EAAE,wCAAwC,QAAQ,wGAAwG,aAAa,+FAA+F,WAAW,cAAc,UAAU,sCAAsC,uBAAuB,EAAE,cAAc,SAAS,wBAAwB,6BAA6B,sBAAsB,kBAAkB,YAAY,sDAAsD,EAAE,uIAAuI,4BAA4B,kCAAkC,MAAM,cAAc,WAAW,cAAc,QAAQ,oBAAoB,sBAAsB,wBAAwB,SAAS,cAAc,QAAQ,+FAA+F,GAAG,+BAA+B,iBAAiB,yCAAyC,KAAK,EAAE,MAAM,cAAc,WAAW,cAAc,QAAQ,sFAAsF,sBAAsB,wBAAwB,SAAS,cAAc,QAAQ,qFAAqF,GAAG,mBAAmB,iBAAiB,iBAAiB,gCAAgC,KAAK,EAAE,MAAM,cAAc,YAAY,cAAc,yBAAyB,SAAS,cAAc,WAAW,cAAc,QAAQ,mGAAmG,IAAI,iBAAiB,2BAA2B,GAAG,wBAAwB,EAAE,MAAM,cAAc,YAAY,cAAc,yBAAyB,SAAS,cAAc,eAAe,cAAc,YAAY,2FAA2F,4BAA4B,EAAE,MAAM,cAAc,QAAQ,OAAO,eAAe,qBAAqB,SAAS,cAAc,QAAQ,mGAAmG,sBAAsB,gBAAgB,WAAW,8LAA8L,MAAM,cAAc,QAAQ,mCAAmC,qBAAqB,SAAS,uDAAuD,QAAQ,gBAAgB,EAAE,MAAM,cAAc,QAAQ,wBAAwB,qBAAqB,SAAS,yDAAyD,QAAQ,kBAAkB,EAAE,MAAM,cAAc,QAAQ,4BAA4B,qBAAqB,SAAS,sDAAsD,QAAQ,eAAe,EAAE,aAAa,gCAAgC,EAAE,oCAAoC,EAAE,wCAAwC,EAAE,mCAAmC,EAAE,sCAAsC,EAAE,gBAAgB,QAAQ,2PAA2P,IAAI,iBAAiB,kFAAkF,EAAE,SAAS,2GAA2G,WAAW,oIAAoI,QAAQ,oIAAoI,aAAa,4KAA4K,SAAS,+KAA+K,iBAAiB,YAAY,4CAA4C,GAAG,OAAO,GAAG,0DAA0D,uDAAuD,sDAAsD,cAAc,uFAAuF,2BAA2B,2DAA2D,GAAG,EAAE,mBAAmB,eAAe,4DAA4D,4BAA4B,cAAc,oEAAoE,wBAAwB,uDAAuD,qBAAqB,kBAAkB,MAAM,oBAAoB,UAAU,0BAA0B,cAAc,oEAAoE,sBAAsB,qDAAqD,qBAAqB,kBAAkB,MAAM,oBAAoB,UAAU,iCAAiC,cAAc,oEAAoE,6BAA6B,4DAA4D,qBAAqB,kBAAkB,MAAM,oBAAoB,UAAU,kCAAkC,cAAc,oEAAoE,8BAA8B,6DAA6D,qBAAqB,kBAAkB,MAAM,oBAAoB,UAAU,4BAA4B,kCAAkC,cAAc,6FAA6F,eAAe,6BAA6B,qBAAqB,kBAAkB,MAAM,oBAAoB,WAAW,0BAA0B,gCAAgC,cAAc,yFAAyF,eAAe,6BAA6B,qBAAqB,kBAAkB,MAAM,oBAAoB,WAAW,mCAAmC,yCAAyC,cAAc,2GAA2G,eAAe,6BAA6B,qBAAqB,kBAAkB,MAAM,oBAAoB,WAAW,+BAA+B,uCAAuC,cAAc,mGAAmG,eAAe,6BAA6B,qBAAqB,kBAAkB,MAAM,oBAAoB,WAAW,iCAAiC,wCAAwC,cAAc,uGAAuG,gBAAgB,8BAA8B,qBAAqB,kBAAkB,MAAM,oBAAoB,WAAW,iCAAiC,2BAA2B,yBAAyB,0BAA0B,cAAc,SAAS,MAAM,sBAAsB,8BAA8B,0BAA0B,cAAc,yHAAyH,iCAAiC,iEAAiE,qBAAqB,kBAAkB,MAAM,oBAAoB,WAAW,MAAM,eAAe,mHAAmH,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,eAAe,mBAAmB,cAAc,sBAAsB,4BAA4B,qRAAqR,qCAAqC,sBAAsB,6BAA6B,2BAA2B,eAAe,mIAAmI,wBAAwB,oHAAoH,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,mBAAmB,4BAA4B,kBAAkB,sBAAsB,kBAAkB,2BAA2B,MAAM,eAAe,uGAAuG,cAAc,4BAA4B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,mCAAmC,6BAA6B,+DAA+D,8BAA8B,eAAe,mHAAmH,yBAAyB,wDAAwD,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,8BAA8B,wBAAwB,8BAA8B,0BAA0B,eAAe,wIAAwI,iCAAiC,iEAAiE,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,MAAM,eAAe,kIAAkI,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,eAAe,mBAAmB,cAAc,sBAAsB,4BAA4B,oSAAoS,qCAAqC,sBAAsB,6BAA6B,2BAA2B,eAAe,kJAAkJ,wBAAwB,iIAAiI,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,mBAAmB,4BAA4B,kBAAkB,sBAAsB,kBAAkB,2BAA2B,MAAM,eAAe,2GAA2G,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,eAAe,mBAAmB,YAAY,aAAa,oBAAoB,aAAa,kBAAkB,oBAAoB,4BAA4B,6QAA6Q,oCAAoC,wEAAwE,oBAAoB,4BAA4B,uBAAuB,6BAA6B,uCAAuC,4CAA4C,2BAA2B,6DAA6D,eAAe,2HAA2H,wBAAwB,kGAAkG,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,mBAAmB,4BAA4B,kBAAkB,sBAAsB,kBAAkB,0BAA0B,gCAAgC,0BAA0B,kEAAkE,eAAe,qGAAqG,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,sCAAsC,6CAA6C,eAAe,iHAAiH,gBAAgB,8BAA8B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,8BAA8B,yBAAyB,0BAA0B,2BAA2B,cAAc,SAAS,MAAM,wBAAwB,kEAAkE,4BAA4B,eAAe,qHAAqH,sBAAsB,qDAAqD,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,+BAA+B,eAAe,qHAAqH,yBAAyB,wDAAwD,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,4BAA4B,kCAAkC,eAAe,iIAAiI,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,+BAA+B,qCAAqC,eAAe,uIAAuI,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,MAAM,eAAe,6GAA6G,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,eAAe,mBAAmB,YAAY,qBAAqB,oBAAoB,UAAU,cAAc,6DAA6D,kBAAkB,mEAAmE,kBAAkB,oBAAoB,4BAA4B,+QAA+Q,oCAAoC,wEAAwE,oBAAoB,4BAA4B,uBAAuB,6BAA6B,uCAAuC,4CAA4C,2BAA2B,6DAA6D,eAAe,6HAA6H,wBAAwB,mGAAmG,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,mBAAmB,4BAA4B,kBAAkB,sBAAsB,kBAAkB,2BAA2B,MAAM,eAAe,iGAAiG,cAAc,4BAA4B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,wCAAwC,mCAAmC,+BAA+B,2BAA2B,eAAe,2HAA2H,8BAA8B,8DAA8D,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,MAAM,eAAe,qHAAqH,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,eAAe,mBAAmB,cAAc,sBAAsB,4BAA4B,uRAAuR,qCAAqC,sBAAsB,6BAA6B,2BAA2B,eAAe,qIAAqI,wBAAwB,qHAAqH,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,mBAAmB,4BAA4B,kBAAkB,sBAAsB,kBAAkB,2BAA2B,eAAe,mBAAmB,YAAY,mDAAmD,oBAAoB,aAAa,kBAAkB,oBAAoB,4BAA4B,sOAAsO,oCAAoC,wEAAwE,oBAAoB,4BAA4B,uBAAuB,6BAA6B,uCAAuC,4CAA4C,2BAA2B,6DAA6D,eAAe,4EAA4E,wBAAwB,2EAA2E,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,mBAAmB,4BAA4B,kBAAkB,sBAAsB,kBAAkB,yBAAyB,4DAA4D,kCAAkC,6BAA6B,0BAA0B,2BAA2B,cAAc,SAAS,MAAM,wBAAwB,uBAAuB,mBAAmB,uBAAuB,kEAAkE,4CAA4C,iBAAiB,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,MAAM,8BAA8B,oCAAoC,iBAAiB,qBAAqB,mBAAmB,MAAM,qBAAqB,aAAa,iCAAiC,iBAAiB,qBAAqB,YAAY,0BAA0B,MAAM,iBAAiB,YAAY,uBAAuB,kEAAkE,iCAAiC,eAAe,2IAA2I,2BAA2B,0DAA0D,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,eAAe,mBAAmB,4BAA4B,ibAAib,oBAAoB,sBAAsB,mBAAmB,eAAe,mJAAmJ,gBAAgB,2DAA2D,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,mBAAmB,4BAA4B,kBAAkB,sBAAsB,kBAAkB,yBAAyB,iCAAiC,mBAAmB,aAAa,eAAe,0HAA0H,uBAAuB,yCAAyC,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,kEAAkE,4BAA4B,kCAAkC,eAAe,0IAA0I,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,+BAA+B,0BAA0B,kEAAkE,eAAe,gJAAgJ,oDAAoD,qCAAqC,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,qCAAqC,2CAA2C,eAAe,4JAA4J,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,+BAA+B,qCAAqC,eAAe,gJAAgJ,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,8BAA8B,oCAAoC,eAAe,8IAA8I,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,kCAAkC,yCAAyC,eAAe,sJAAsJ,gBAAgB,8BAA8B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,iCAAiC,4BAA4B,0BAA0B,2BAA2B,cAAc,SAAS,MAAM,wBAAwB,kEAAkE,+BAA+B,eAAe,wKAAwK,yBAAyB,wDAAwD,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,8BAA8B,eAAe,wKAAwK,wBAAwB,uDAAuD,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,8BAA8B,oCAAoC,eAAe,wLAAwL,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,+BAA+B,qCAAqC,eAAe,0LAA0L,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,MAAM,eAAe,gKAAgK,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,eAAe,mBAAmB,eAAe,sBAAsB,4BAA4B,kUAAkU,qCAAqC,sBAAsB,6BAA6B,2BAA2B,eAAe,gLAAgL,wBAAwB,wHAAwH,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,mBAAmB,4BAA4B,kBAAkB,sBAAsB,kBAAkB,2BAA2B,MAAM,eAAe,oJAAoJ,cAAc,4BAA4B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,qCAAqC,gCAAgC,kEAAkE,kCAAkC,yCAAyC,eAAe,yLAAyL,gBAAgB,8BAA8B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,mCAAmC,2CAA2C,eAAe,2LAA2L,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,mCAAmC,2CAA2C,eAAe,2LAA2L,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,iCAAiC,4BAA4B,uBAAuB,oBAAoB,oBAAoB,uBAAuB,kEAAkE,+BAA+B,qCAAqC,eAAe,sNAAsN,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,iCAAiC,uCAAuC,eAAe,0NAA0N,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,MAAM,eAAe,+LAA+L,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,iCAAiC,YAAY,eAAe,cAAc,uBAAuB,+BAA+B,eAAe,+LAA+L,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,iCAAiC,uBAAuB,gBAAgB,0BAA0B,MAAM,YAAY,eAAe,eAAe,aAAa,eAAe,yLAAyL,yBAAyB,qDAAqD,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,MAAM,iBAAiB,qBAAqB,YAAY,0BAA0B,MAAM,oBAAoB,MAAM,eAAe,4JAA4J,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,+BAA+B,qCAAqC,eAAe,gJAAgJ,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,mCAAmC,8BAA8B,uBAAuB,oBAAoB,oBAAoB,uBAAuB,kEAAkE,gCAAgC,eAAe,wKAAwK,0BAA0B,yDAAyD,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,gCAAgC,2BAA2B,sGAAsG,eAAe,yLAAyL,mFAAmF,4CAA4C,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,iCAAiC,YAAY,eAAe,cAAc,uBAAuB,kEAAkE,+BAA+B,eAAe,wKAAwK,yBAAyB,wDAAwD,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,+BAA+B,0BAA0B,0BAA0B,2BAA2B,cAAc,SAAS,MAAM,wBAAwB,mEAAmE,eAAe,mMAAmM,wFAAwF,oCAAoC,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,MAAM,eAAe,uLAAuL,cAAc,4BAA4B,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,iCAAiC,uBAAuB,gBAAgB,0BAA0B,MAAM,YAAY,eAAe,eAAe,aAAa,eAAe,0JAA0J,yBAAyB,qDAAqD,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,MAAM,iBAAiB,qBAAqB,YAAY,0BAA0B,MAAM,kBAAkB,kEAAkE,kCAAkC,eAAe,gKAAgK,4BAA4B,2DAA2D,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,8BAA8B,kCAAkC,eAAe,+KAA+K,uBAAuB,wCAAwC,qBAAqB,mBAAmB,MAAM,qBAAqB,WAAW,kCAAkC,wCAAwC,eAAe,qLAAqL,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,MAAM,eAAe,wJAAwJ,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,eAAe,mBAAmB,YAAY,gBAAgB,oBAAoB,aAAa,kBAAkB,oBAAoB,4BAA4B,0TAA0T,oCAAoC,wEAAwE,oBAAoB,4BAA4B,uBAAuB,6BAA6B,uCAAuC,4CAA4C,2BAA2B,6DAA6D,eAAe,wKAAwK,wBAAwB,sGAAsG,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,mBAAmB,4BAA4B,kBAAkB,sBAAsB,kBAAkB,2BAA2B,MAAM,eAAe,sHAAsH,eAAe,6BAA6B,qBAAqB,mBAAmB,MAAM,qBAAqB,YAAY,MAAM,eAAe,0GAA0G,cAAc,4BAA4B,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,0BAA0B,2BAA2B,cAAc,SAAS,MAAM,wBAAwB,wBAAwB,mBAAmB,wBAAwB,kEAAkE,kDAAkD,iBAAiB,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,MAAM,iCAAiC,4BAA4B,kEAAkE,4CAA4C,iBAAiB,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,MAAM,8BAA8B,oCAAoC,iBAAiB,qBAAqB,mBAAmB,MAAM,qBAAqB,gBAAgB,kCAAkC,kBAAkB,qBAAqB,aAAa,2BAA2B,MAAM,iBAAiB,YAAY,wBAAwB,kEAAkE,8BAA8B,yBAAyB,wIAAwI,eAAe,2JAA2J,0EAA0E,yDAAyD,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,eAAe,oBAAoB,4BAA4B,yeAAye,qBAAqB,sBAAsB,oBAAoB,eAAe,2KAA2K,iBAAiB,8FAA8F,iBAAiB,yCAAyC,GAAG,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,oBAAoB,4BAA4B,kBAAkB,uBAAuB,mBAAmB,4BAA4B,kCAAkC,mBAAmB,aAAa,eAAe,0HAA0H,uBAAuB,yCAAyC,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,wBAAwB,mBAAmB,wBAAwB,kEAAkE,kDAAkD,iBAAiB,qBAAqB,mBAAmB,MAAM,qBAAqB,UAAU,MAAM,iCAAiC,4BAA4B,kEAAkE,4CAA4C,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,MAAM,8BAA8B,yBAAyB,oJAAoJ,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,gBAAgB,kCAAkC,kBAAkB,qBAAqB,aAAa,2BAA2B,MAAM,iBAAiB,YAAY,wBAAwB,kEAAkE,8BAA8B,yBAAyB,4GAA4G,gBAAgB,2JAA2J,0EAA0E,yDAAyD,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,eAAe,oBAAoB,6BAA6B,gfAAgf,sBAAsB,uBAAuB,oBAAoB,gBAAgB,2KAA2K,iBAAiB,yJAAyJ,iBAAiB,gCAAgC,GAAG,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,4BAA4B,kCAAkC,mBAAmB,aAAa,gBAAgB,0HAA0H,uBAAuB,yCAAyC,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,wBAAwB,mBAAmB,wBAAwB,kEAAkE,oDAAoD,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,MAAM,kCAAkC,kCAAkC,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,aAAa,kCAAkC,kBAAkB,qBAAqB,aAAa,2BAA2B,MAAM,iBAAiB,YAAY,wBAAwB,kEAAkE,iCAAiC,4BAA4B,kEAAkE,8BAA8B,gBAAgB,yKAAyK,wBAAwB,uDAAuD,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,8BAA8B,yBAAyB,iEAAiE,gBAAgB,sLAAsL,6FAA6F,yDAAyD,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,eAAe,oBAAoB,6BAA6B,8iBAA8iB,sBAAsB,uBAAuB,oBAAoB,gBAAgB,sMAAsM,iBAAiB,qFAAqF,iBAAiB,2BAA2B,GAAG,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,8BAA8B,kCAAkC,mBAAmB,aAAa,gBAAgB,0HAA0H,uBAAuB,yCAAyC,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,wBAAwB,mBAAmB,wBAAwB,kEAAkE,oDAAoD,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,MAAM,kCAAkC,kCAAkC,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,aAAa,kCAAkC,kBAAkB,qBAAqB,aAAa,2BAA2B,MAAM,iBAAiB,YAAY,wBAAwB,kEAAkE,qCAAqC,gCAAgC,kEAAkE,kCAAkC,gBAAgB,iLAAiL,4BAA4B,2DAA2D,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,kCAAkC,mCAAmC,gBAAgB,wMAAwM,oBAAoB,wCAAwC,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,eAAe,oBAAoB,6BAA6B,slBAAslB,sBAAsB,uBAAuB,oBAAoB,gBAAgB,sNAAsN,iBAAiB,uEAAuE,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,8BAA8B,kCAAkC,mBAAmB,aAAa,gBAAgB,0HAA0H,uBAAuB,yCAAyC,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,wBAAwB,mBAAmB,wBAAwB,kEAAkE,4CAA4C,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,MAAM,8BAA8B,wBAAwB,wBAAwB,uFAAuF,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,kCAAkC,aAAa,kBAAkB,qBAAqB,aAAa,2BAA2B,MAAM,kBAAkB,MAAM,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,aAAa,kCAAkC,kBAAkB,qBAAqB,aAAa,2BAA2B,MAAM,iBAAiB,YAAY,wBAAwB,kEAAkE,8BAA8B,gBAAgB,2IAA2I,wBAAwB,uDAAuD,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,8BAA8B,yBAAyB,oDAAoD,gBAAgB,2JAA2J,0EAA0E,yDAAyD,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,eAAe,oBAAoB,6BAA6B,gfAAgf,sBAAsB,uBAAuB,oBAAoB,gBAAgB,2KAA2K,iBAAiB,oEAAoE,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,4BAA4B,kCAAkC,mBAAmB,aAAa,gBAAgB,0HAA0H,uBAAuB,yCAAyC,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,kEAAkE,iCAAiC,gBAAgB,8HAA8H,2BAA2B,0DAA0D,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,iCAAiC,4BAA4B,wBAAwB,mBAAmB,wBAAwB,kEAAkE,4CAA4C,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,MAAM,8BAA8B,yBAAyB,6DAA6D,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,aAAa,kCAAkC,kBAAkB,qBAAqB,aAAa,2BAA2B,MAAM,iBAAiB,YAAY,wBAAwB,kEAAkE,8BAA8B,gBAAgB,yKAAyK,wBAAwB,uDAAuD,qBAAqB,oBAAoB,MAAM,sBAAsB,WAAW,eAAe,oBAAoB,6BAA6B,+fAA+f,sBAAsB,uBAAuB,oBAAoB,gBAAgB,iLAAiL,iBAAiB,yFAAyF,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,0BAA0B,kCAAkC,mBAAmB,aAAa,gBAAgB,wJAAwJ,uBAAuB,yCAAyC,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,wBAAwB,mBAAmB,wBAAwB,kEAAkE,4CAA4C,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,MAAM,8BAA8B,wCAAwC,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,aAAa,kCAAkC,kBAAkB,qBAAqB,aAAa,2BAA2B,MAAM,iBAAiB,YAAY,wBAAwB,kEAAkE,gCAAgC,gBAAgB,yKAAyK,0BAA0B,yDAAyD,qBAAqB,oBAAoB,MAAM,sBAAsB,WAAW,eAAe,oBAAoB,6BAA6B,+fAA+f,sBAAsB,uBAAuB,oBAAoB,gBAAgB,iLAAiL,iBAAiB,2FAA2F,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,0BAA0B,kCAAkC,mBAAmB,aAAa,gBAAgB,wJAAwJ,uBAAuB,yCAAyC,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,wBAAwB,mBAAmB,wBAAwB,kEAAkE,4CAA4C,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,MAAM,8BAA8B,4CAA4C,kBAAkB,qBAAqB,oBAAoB,MAAM,sBAAsB,aAAa,mCAAmC,kBAAkB,qBAAqB,aAAa,2BAA2B,MAAM,iBAAiB,aAAa,wBAAwB,kEAAkE,6BAA6B,gBAAgB,yKAAyK,uBAAuB,sDAAsD,qBAAqB,oBAAoB,MAAM,sBAAsB,WAAW,eAAe,oBAAoB,6BAA6B,+fAA+f,sBAAsB,uBAAuB,oBAAoB,gBAAgB,iLAAiL,iBAAiB,wFAAwF,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,0BAA0B,mCAAmC,oBAAoB,aAAa,gBAAgB,wJAAwJ,uBAAuB,yCAAyC,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,kEAAkE,8BAA8B,gBAAgB,4JAA4J,wBAAwB,uDAAuD,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,8BAA8B,yBAAyB,+BAA+B,gBAAgB,yKAAyK,eAAe,6BAA6B,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,iLAAiL,gBAAgB,yKAAyK,+EAA+E,yDAAyD,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,eAAe,oBAAoB,6BAA6B,ohBAAohB,sBAAsB,uBAAuB,oBAAoB,gBAAgB,yLAAyL,iBAAiB,wEAAwE,iBAAiB,kFAAkF,GAAG,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,2BAA2B,8BAA8B,oCAAoC,gBAAgB,yKAAyK,eAAe,6BAA6B,qBAAqB,oBAAoB,MAAM,sBAAsB,WAAW,gCAAgC,sCAAsC,gBAAgB,6KAA6K,eAAe,6BAA6B,qBAAqB,oBAAoB,MAAM,sBAAsB,WAAW,6BAA6B,mCAAmC,gBAAgB,uKAAuK,eAAe,6BAA6B,qBAAqB,oBAAoB,MAAM,sBAAsB,YAAY,MAAM,gBAAgB,oJAAoJ,eAAe,6BAA6B,qBAAqB,oBAAoB,MAAM,sBAAsB,WAAW,kCAAkC,yCAAyC,gBAAgB,sJAAsJ,gBAAgB,8BAA8B,qBAAqB,oBAAoB,MAAM,sBAAsB,WAAW,8BAA8B,yBAAyB,+BAA+B,gBAAgB,8IAA8I,eAAe,6BAA6B,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,iFAAiF,gBAAgB,8IAA8I,4DAA4D,yDAAyD,qBAAqB,oBAAoB,MAAM,sBAAsB,YAAY,MAAM,gBAAgB,sHAAsH,eAAe,6BAA6B,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,eAAe,mBAAmB,YAAY,eAAe,oBAAoB,UAAU,mBAAmB,wEAAwE,kBAAkB,oBAAoB,6BAA6B,8RAA8R,qCAAqC,0EAA0E,oBAAoB,6BAA6B,wBAAwB,6BAA6B,uCAAuC,4CAA4C,2BAA2B,6DAA6D,gBAAgB,sIAAsI,wBAAwB,iFAAiF,qBAAqB,oBAAoB,MAAM,sBAAsB,YAAY,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,4BAA4B,MAAM,gBAAgB,0GAA0G,cAAc,4BAA4B,qBAAqB,oBAAoB,MAAM,sBAAsB,WAAW,4BAA4B,uBAAuB,kEAAkE,kCAAkC,gBAAgB,6FAA6F,4BAA4B,2DAA2D,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,kCAAkC,6BAA6B,+BAA+B,2BAA2B,gBAAgB,wHAAwH,6BAA6B,6DAA6D,qBAAqB,oBAAoB,MAAM,sBAAsB,WAAW,MAAM,gBAAgB,kHAAkH,eAAe,6BAA6B,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,eAAe,mBAAmB,cAAc,sBAAsB,6BAA6B,0RAA0R,uCAAuC,uBAAuB,6BAA6B,2BAA2B,gBAAgB,kIAAkI,wBAAwB,oHAAoH,qBAAqB,oBAAoB,MAAM,sBAAsB,WAAW,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,4BAA4B,MAAM,gBAAgB,qFAAqF,eAAe,6BAA6B,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,eAAe,oBAAoB,YAAY,gBAAgB,qBAAqB,aAAa,kBAAkB,oBAAoB,6BAA6B,8PAA8P,qCAAqC,2EAA2E,oBAAoB,6BAA6B,wBAAwB,+BAA+B,yCAAyC,8CAA8C,2BAA2B,iEAAiE,gBAAgB,qGAAqG,wBAAwB,mFAAmF,qBAAqB,oBAAoB,MAAM,sBAAsB,YAAY,oBAAoB,6BAA6B,mBAAmB,wBAAwB,mBAAmB,4BAA4B,MAAM,gBAAgB,oDAAoD,eAAe,6BAA6B,qBAAqB,oBAAoB,MAAM,sBAAsB,UAAU,4BAA4B,qBAAqB,2BAA2B,2DAA2D,GAAG,EAAE,mBAAmB,eAAe,sBAAsB,mBAAmB,oBAAoB,sBAAsB,uBAAuB,gDAAgD,IAAI,mFAAmF,yBAAyB,gCAAgC,YAAY,cAAc,cAAc,sBAAsB,wBAAwB,yBAAyB,cAAc,SAAS,MAAM,2BAA2B,0EAA0E,IAAI,mFAAmF,2BAA2B,MAAM,cAAc,4DAA4D,cAAc,4BAA4B,qBAAqB,kBAAkB,MAAM,oBAAoB,UAAU,gCAAgC,sBAAsB,eAAe,0BAA0B,MAAM,YAAY,cAAc,eAAe,YAAY,cAAc,sDAAsD,yBAAyB,qDAAqD,qBAAqB,kBAAkB,MAAM,oBAAoB,UAAU,MAAM,gBAAgB,qBAAqB,WAAW,yBAAyB,MAAM,kBAAkB,4BAA4B;AAChljF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEoJ;;;;;;;;;;;;AC3rBvI;;AAEb,8CAA6C,EAAE,aAAa,EAAC;;AAE7D,cAAc,mBAAO,CAAC,2DAAU;;AAEhC;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,SAAS;AACrB;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA,kDAAkD;AAClD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,SAAS;AACrB;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB;AACA,YAAY,gCAAgC;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,sBAAsB;AACpC,cAAc,eAAe;AAC7B;;AAEA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B,4BAA4B;;;;;;;;;;;;ACvrBf;;AAEb,8CAA6C,EAAE,aAAa,EAAC;;AAE7D,cAAc,mBAAO,CAAC,2DAAU;;AAEhC;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,YAAY;AACZ;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,YAAY;AACZ;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,eAAe;AAC5B;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA,kDAAkD;AAClD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,SAAS;AACrB;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,sBAAsB;AACpC,cAAc,eAAe;AAC7B;;AAEA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA,2BAA2B;AAC3B,8BAA8B;AAC9B,4BAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3pBoE;AACa;AACzE;AACU;AACI;AAClB;AACyB;;AAEzD;AACA,SAAS,wDAAG,UAAU;AACtB,cAAc,wDAAG;AACjB;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,wDAAG,UAAU;AACtB,cAAc,wDAAG;AACjB;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,wDAAG,UAAU;AACtB,cAAc,wDAAG;AACjB;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,wDAAG,UAAU;AACtB,cAAc,wDAAG;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,yDAAI,UAAU;AACvB,eAAe,wDAAG;AAClB;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,yDAAI,UAAU;AACvB,eAAe,wDAAG;AAClB;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,SAAS,yDAAI;AACb;AACA,eAAe,wDAAG;AAClB;AACA,+BAA+B,wDAAG;AAClC;AACA;AACA;AACA,OAAO;AACP,KAAK,GAAG,yDAAI;AACZ;AACA,iBAAiB,wDAAG;AACpB;AACA;AACA;AACA,OAAO,WAAW,wDAAG;AACrB;AACA;AACA;AACA,OAAO;AACP,KAAK,GAAG,wDAAG;AACX;AACA,mCAAmC,wDAAG;AACtC;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAG,qBAAqB;AAC1C,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA,2BAA2B,sDAAa;AACxC,iBAAiB;AACjB;AACA,CAAC;;AAED,sBAAsB,sDAAa;AACnC;AACA,CAAC;;AAED;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA,4CAA4C,wBAAwB;AACpE;AACA,IAAI;AACJ;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA,qBAAqB,sDAAa;AAClC;AACA,CAAC;;AAED,sBAAsB,sDAAa;AACnC,YAAY;AACZ,qBAAqB;AACrB,2BAA2B;AAC3B;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,IAAI,EAAE,yDAAU;AAChB;AACA;;AAEA;AACA;AACA;AACA,IAAI,EAAE,yDAAU;AAChB;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;;AAEA;AACA,uBAAuB,yDAAU;;AAEjC;AACA;AACA;AACA,MAAM;AACN;;AAEA,mBAAmB,qDAAM,SAAS;;AAElC;AACA;AACA,IAAI;;;AAGJ,EAAE,wDAAS;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;;AAEA;AACA,iBAAiB,qDAAM;AACvB,oBAAoB,qDAAM;;AAE1B;AACA;AACA;AACA;AACA,KAAK;;;AAGL,EAAE,wDAAS;AACX;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG,+BAA+B;;AAElC,EAAE,wDAAS;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA,yBAAyB,IAAI;AAC7B,QAAQ;AACR,MAAM;AACN;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA,cAAc,sDAAO;;AAErB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,KAAK;AAChB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,IAAI,EAAE,yDAAU;AAChB;AACA,uBAAuB,uDAAQ;;AAE/B;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,qDAAM;AACpB,EAAE,wDAAS;AACX;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,IAAI,EAAE,yDAAU;AAChB,cAAc,qDAAM;AACpB,gBAAgB,qDAAM;AACtB,sBAAsB,0DAAW;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,wDAAS;AACX;AACA,UAAU,oDAAU;AACpB;AACA;;AAEA,UAAU,oDAAU;AACpB;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;;AAEA;AACA,EAAE,wDAAS;AACX,2CAA2C;;AAE3C;AACA;AACA;;AAEA;;AAEA;AACA,8BAA8B,8CAAK;AACnC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,qBAAqB;AACrE;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;;AAEA;AACA,sBAAsB,qDAAM;AAC5B;AACA,SAAS,0DAAW;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB,qDAAM;AACzB;AACA,iBAAiB,0DAAW;;AAE5B;;AAEA,8BAA8B,uDAAQ;AACtC,8BAA8B,uDAAQ,SAAS;;AAE/C,EAAE,wDAAS;AACX;AACA;AACA;AACA;AACA,QAAQ;AACR,wBAAwB,8CAAK,oBAAoB,GAAG;;AAEpD,WAAW,oDAAU;AACrB;AACA;;AAEA,wBAAwB,8CAAK;AAC7B;AACA,KAAK;AACL;AACA,GAAG,cAAc;;AAEjB;AACA,mCAAmC,GAAG,yDAAU;AAChD;AACA;AACA,SAAS,yDAAI;AACb;AACA;AACA;AACA,eAAe,yDAAI;AACnB,aAAa,iDAAU;AACvB;AACA,iBAAiB,wDAAG;AACpB;AACA;AACA;AACA,OAAO,GAAG,yDAAI;AACd;AACA,6BAA6B,wDAAG,eAAe,GAAG,wDAAG;AACrD;AACA;AACA,oBAAoB,wDAAG;AACvB;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK,GAAG,wDAAG;AACX,aAAa,iDAAU;AACvB,gBAAgB,wDAAG;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,iBAAiB,sDAAa,cAAc;AAC5C;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA,SAAS,wDAAG;AACZ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS,wDAAG;AACZ;AACA,cAAc,yDAAI;AAClB;AACA,yBAAyB,wDAAG;AAC5B;AACA,OAAO,GAAG,wDAAG;AACb;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,8CAA8C;AACzD,WAAW,qBAAqB;AAChC,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,mBAAmB;AAC9B,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,0BAA0B;AAC1B;AACA;AACA,IAAI,SAAS;;AAEb,8BAA8B,uDAAQ;AACtC,EAAE,wDAAS;AACX;AACA;AACA;AACA,GAAG;;AAEH;AACA,WAAW,6CAAG;AACd;;AAEA;AACA,sBAAsB,gDAAM,GAAG;AAC/B,IAAI,6CAAG;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uDAAQ,GAAG;;AAEzC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,WA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;AACA,gBAAgB,qCAAqC;AACrD;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe,kBAAkB;AAC9C;AACA;AACA,mBAAmB,6CAA6C,+FAA+F;AAC/J;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA,2BAA2B,EAAE,8CAA8C;AAC3E;AACA,yCAAyC,kCAAkC,cAAc,2BAA2B,+BAA+B,+BAA+B,gBAAgB;AAClM;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B,qBAAqB,yBAAyB,qBAAqB,6BAA6B,mCAAmC;AACpL;AACA,yBAAyB;AACzB;AACA,2BAA2B,yDAAyD,wHAAwH;AAC5M;AACA,qFAAqF,yFAAyF;AAC9K;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uEAAuE;AAC1F;AACA;AACA;AACA;AACA,yBAAyB,oEAAoE;AAC7F;AACA;AACA;AACA;AACA,kBAAkB,uDAAuD,oBAAoB;AAC7F;AACA,uBAAuB,mEAAmE,kBAAkB;AAC5G;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA,yBAAyB,kDAAkD;AAC3E;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAA6C,wGAAwG;AAC9K;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD;AACzD;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,cAAc,mBAAmB,EAAE,YAAY,8CAA8C,aAAa,YAAY,qBAAqB,aAAa,YAAY,mBAAmB,qEAAqE,gEAAgE,0CAA0C,OAAO,4BAA4B,eAAe,kBAAkB,0CAA0C,sCAAsC,MAAM,iCAAiC,0CAA0C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AACA;AACA;AACA;AACA;AACA,8BAA8B,2FAA2F,YAAY,iCAAiC,8BAA8B,KAAK,8CAA8C,gCAAgC,SAAS,qCAAqC;AACrU;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC,4HAA4H,wCAAwC;AAC9N;AACA;AACA;AACA,wBAAwB,8EAA8E;AACtG;AACA,4BAA4B,QAAQ,oEAAoE;AACxG;AACA;AACA;AACA,8BAA8B,oBAAoB,+CAA+C;AACjG;AACA;AACA;AACA,gCAAgC,oBAAoB,iDAAiD;AACrG;AACA;AACA;AACA;AACA,+BAA+B,qCAAqC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wCAAwC;AAC/D;AACA,0BAA0B,qCAAqC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gEAAgE;AACnG;AACA;AACA;AACA,iCAAiC,uGAAuG;AACxI;AACA;AACA;AACA;AACA;AACA,yDAAyD,2DAA2D;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,0EAA0E;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mCAAmC;AACvD;AACA;AACA;AACA,8BAA8B,6CAA6C,iCAAiC,oBAAoB,yCAAyC;AACzK;AACA;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB,yCAAyC,4CAA4C,+DAA+D,2DAA2D,0DAA0D;AAC3T;AACA;AACA;AACA,kCAAkC,8CAA8C;AAChF;AACA;AACA,8BAA8B,+CAA+C;AAC7E;AACA;AACA;AACA,0BAA0B,4CAA4C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mDAAmD,oFAAoF,oBAAoB,0CAA0C;AAChO;AACA;AACA;AACA;AACA,yBAAyB,iDAAiD;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAA4D,wCAAwC,4FAA4F,sCAAsC,kEAAkE,cAAc;AAC5U;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,6KAA6K;AAC7K;AACA,cAAc,0BAA0B,oCAAoC,gCAAgC,GAAG;AAC/G;AACA;AACA;AACA;AACA,gBAAgB,oDAAoD,gBAAgB,0BAA0B,kBAAkB,wBAAwB,wEAAwE,qBAAqB;AACrP;AACA;AACA;AACA,0CAA0C,EAAE,wJAAwJ;AACpM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gCAAgC,GAAG,uBAAuB,GAAG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iCAAiC,6DAA6D,OAAO,UAAU,yDAAyD,eAAe;AACxN;AACA;AACA;AACA;AACA;AACA,6BAA6B,mFAAmF;AAChH;AACA;AACA,8BAA8B,OAAO,6CAA6C,kEAAkE,4GAA4G;AAChQ;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,iDAAiD;AACjD;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,wEAAwE,0BAA0B,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,uBAAuB,oBAAoB,kBAAkB,+BAA+B,eAAe,WAAW,aAAa,kBAAkB,6BAA6B,8BAA8B,2EAA2E,sCAAsC,eAAe,KAAK,mBAAmB,gLAAgL,gBAAgB,yCAAyC,2DAA2D,KAAK,KAAK,0EAA0E,mCAAmC,aAAa,0FAA0F,yCAAyC,iCAAiC,iCAAiC,8BAA8B,wBAAwB,YAAY,iBAAiB,KAAK,mBAAmB,yCAAyC,uCAAuC,kDAAkD,2CAA2C,4BAA4B,6BAA6B,gBAAgB,0DAA0D,4BAA4B,8BAA8B,8BAA8B,gCAAgC,eAAe,qCAAqC,iCAAiC,mCAAmC,mCAAmC,oDAAoD,aAAa,gEAAgE,oBAAoB,gEAAgE,EAAE;AAC11D;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB,EAAE,yCAAyC;AAC7G;AACA,0BAA0B,iCAAiC,8BAA8B,sFAAsF,YAAY,sBAAsB,yBAAyB,wDAAwD,8BAA8B,iCAAiC,4BAA4B,2BAA2B,mCAAmC,6HAA6H,6CAA6C,8DAA8D,mEAAmE,YAAY,eAAe,KAAK,sCAAsC,yBAAyB,uCAAuC,qCAAqC,yBAAyB,mBAAmB,gBAAgB,2CAA2C,gBAAgB,aAAa,IAAI,yBAAyB,wBAAwB,6CAA6C,iCAAiC,EAAE,+BAA+B,gDAAgD,uBAAuB,4BAA4B,kBAAkB,wDAAwD,uCAAuC,+DAA+D,cAAc,2CAA2C,yDAAyD,gCAAgC,qEAAqE,+BAA+B,yEAAyE,qBAAqB,YAAY,yDAAyD,4CAA4C,eAAe,iCAAiC,aAAa,sEAAsE,0GAA0G,wEAAwE,gCAAgC,qEAAqE,oBAAoB,yBAAyB,yBAAyB,0CAA0C,iBAAiB,yCAAyC,mCAAmC,sCAAsC,wDAAwD,eAAe,yCAAyC,gCAAgC,uBAAuB,4DAA4D,cAAc,oBAAoB,YAAY,kBAAkB,KAAK,6BAA6B,iBAAiB,YAAY,uBAAuB,KAAK,2BAA2B,4CAA4C,YAAY,6CAA6C,MAAM,yDAAyD,mDAAmD,2EAA2E,iBAAiB,uBAAuB,+BAA+B,cAAc,uBAAuB,QAAQ,mDAAmD,+CAA+C,iBAAiB,aAAa,QAAQ,oUAAoU,EAAE,4DAA4D,kBAAkB,OAAO,eAAe,iBAAiB,uBAAuB,uBAAuB,2CAA2C,8BAA8B,0BAA0B,+BAA+B,uBAAuB,iBAAiB,8EAA8E,+EAA+E,qGAAqG,2HAA2H,EAAE,cAAc,OAAO,2BAA2B,8IAA8I,qBAAqB,kBAAkB,gBAAgB,6CAA6C,yCAAyC,gDAAgD,yCAAyC,MAAM,+BAA+B,sBAAsB,8BAA8B,uCAAuC,8FAA8F,cAAc,6DAA6D,uBAAuB,qBAAqB,MAAM,eAAe,8DAA8D,wCAAwC,sCAAsC,kDAAkD,gDAAgD,sCAAsC,iCAAiC,0EAA0E,oBAAoB,kCAAkC,uCAAuC,6BAA6B,uBAAuB,yEAAyE,oBAAoB,2DAA2D,8DAA8D,sCAAsC,uBAAuB,0CAA0C,4CAA4C,qFAAqF,wCAAwC,mCAAmC,oCAAoC,6CAA6C,kCAAkC,4CAA4C,kDAAkD,oBAAoB,UAAU,UAAU,0HAA0H,QAAQ,IAAI,0CAA0C,0EAA0E,mCAAmC,cAAc,iDAAiD,QAAQ,8GAA8G,oCAAoC,sEAAsE,uCAAuC,IAAI,qGAAqG,uBAAuB,IAAI,aAAa,UAAU,cAAc,YAAY,+BAA+B,KAAK,yEAAyE,IAAI,OAAO,8CAA8C;AACr8O,mMAAmM,sBAAsB,UAAU,0EAA0E,oCAAoC,2DAA2D,6EAA6E,kOAAkO,0BAA0B,yMAAyM,kFAAkF,qBAAqB,sKAAsK,8BAA8B,2CAA2C,+CAA+C,MAAM,uBAAuB,0BAA0B,6BAA6B,oEAAoE,IAAI,qCAAqC,iCAAiC,EAAE,+CAA+C,gDAAgD,yCAAyC,eAAe,iCAAiC,8DAA8D,kCAAkC,6BAA6B,qFAAqF,EAAE,eAAe,SAAS,uBAAuB,EAAE,qDAAqD,eAAe,WAAW,uBAAuB,kDAAkD,iDAAiD,2BAA2B,sBAAsB,wCAAwC,sBAAsB,UAAU,YAAY,aAAa,cAAc,yEAAyE,gEAAgE,YAAY,qCAAqC,YAAY,sBAAsB,wBAAwB,WAAW,YAAY,gBAAgB,aAAa,YAAY,eAAe,YAAY,aAAa,YAAY,gCAAgC,wBAAwB,QAAQ,YAAY,gBAAgB,gBAAgB,YAAY,eAAe,YAAY,gBAAgB,YAAY,8BAA8B,wCAAwC,YAAY,qDAAqD,YAAY,+DAA+D,EAAE,gBAAgB,SAAS;AACjjG;AACA,+CAA+C,oCAAoC,EAAE,mDAAmD,uBAAuB,kBAAkB,eAAe,mBAAmB,uCAAuC,2CAA2C,wFAAwF;AAC7X,oBAAoB,mCAAmC,0BAA0B,yCAAyC,mDAAmD,qCAAqC,8DAA8D,mBAAmB,YAAY,iDAAiD,4CAA4C,mBAAmB,aAAa,iDAAiD,mDAAmD,eAAe,8BAA8B,uFAAuF,wDAAwD,mCAAmC,QAAQ,gMAAgM,EAAE,kBAAkB,kDAAkD,eAAe,mBAAmB,iBAAiB,uBAAuB,yBAAyB,qBAAqB,uBAAuB,kBAAkB,eAAe,gCAAgC,2CAA2C,mFAAmF,iFAAiF,SAAS,iBAAiB,kBAAkB,kCAAkC,2DAA2D,aAAa,0CAA0C,aAAa,qBAAqB,sBAAsB,0CAA0C,+FAA+F,wBAAwB,aAAa,kCAAkC,IAAI,SAAS,MAAM,4FAA4F,oBAAoB,yCAAyC,wMAAwM,8FAA8F,2CAA2C,uEAAuE,gDAAgD,0BAA0B,KAAK,mBAAmB,0BAA0B,kBAAkB,8BAA8B,iCAAiC,IAAI,sDAAsD,cAAc,oBAAoB,+BAA+B,IAAI,iBAAiB,OAAO,eAAe,qEAAqE,oFAAoF,wBAAwB,8DAA8D,IAAI,IAAI,+GAA+G,kIAAkI,oBAAoB,+BAA+B,EAAE,qBAAqB,aAAa,gCAAgC,qBAAqB,mCAAmC,+BAA+B,GAAG,UAAU,gCAAgC,gEAAgE,gEAAgE,0BAA0B,gBAAgB,IAAI,wFAAwF,cAAc,8CAA8C,iCAAiC,wDAAwD,sCAAsC,4CAA4C,iCAAiC,eAAe,YAAY,eAAe,KAAK,kBAAkB,qEAAqE,6BAA6B,cAAc;AAC7rI;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,EAAE,kCAAkC,kCAAkC,SAAS,aAAa,kBAAkB,sHAAsH,yBAAyB,4DAA4D,4BAA4B,kDAAkD,gBAAgB,yDAAyD,YAAY,8BAA8B,0CAA0C,kDAAkD,cAAc,qCAAqC,EAAE,qJAAqJ;AACz0B;AACA,oCAAoC,sCAAsC,uBAAuB,mDAAmD,wDAAwD,gEAAgE,6CAA6C,iBAAiB,iCAAiC,sBAAsB,0CAA0C,oDAAoD,QAAQ,gCAAgC,EAAE,0DAA0D,kBAAkB,uCAAuC,mCAAmC,6CAA6C,uCAAuC,qDAAqD,4DAA4D,4CAA4C,gDAAgD,0BAA0B,gCAAgC,uBAAuB,eAAe,yCAAyC,0CAA0C,kBAAkB,6DAA6D,gDAAgD,qBAAqB,oEAAoE,uBAAuB,0BAA0B,wCAAwC,sBAAsB,6BAA6B,wCAAwC,uBAAuB,yCAAyC,YAAY,wBAAwB,mBAAmB,MAAM,yBAAyB,sCAAsC,mBAAmB,oCAAoC,iBAAiB,mBAAmB,mBAAmB,yBAAyB,oBAAoB,gCAAgC,uBAAuB,MAAM,wDAAwD,UAAU,kBAAkB,uBAAuB,EAAE,mDAAmD,8BAA8B,eAAe,kEAAkE,EAAE,EAAE,iBAAiB,gCAAgC,eAAe,aAAa,yBAAyB,mBAAmB,gBAAgB,eAAe,oBAAoB,aAAa,uEAAuE,mBAAmB,gBAAgB,UAAU,0BAA0B,aAAa,kBAAkB,oBAAoB,QAAQ,cAAc,uCAAuC,mFAAmF,4CAA4C,yCAAyC,+DAA+D,+BAA+B,8BAA8B,mCAAmC,0CAA0C,2BAA2B,MAAM,0CAA0C,gCAAgC,eAAe,2QAA2Q,cAAc,gEAAgE,mFAAmF,2GAA2G,kBAAkB,0BAA0B,cAAc,aAAa;AACtqH;AACA;AACA;AACA,6CAA6C,oBAAoB,EAAE;AACnE;AACA;AACA;AACA,wCAAwC;AACxC;AACA,qBAAqB,yEAAyE;AAC9F;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA,qBAAqB,uCAAuC,uCAAuC,mDAAmD,mEAAmE,kCAAkC;AAC3P;AACA;AACA,iCAAiC,mBAAmB,cAAc,qBAAqB,eAAe,aAAa;AACnH;AACA;AACA,iBAAiB;AACjB,qBAAqB,EAAE,uBAAuB,8BAA8B,2CAA2C,yEAAyE,GAAG;AACnM;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+EAA+E,0DAA0D,cAAc,uBAAuB,iDAAiD;AAC1O;AACA;AACA;AACA,oCAAoC,gCAAgC,EAAE;AACtE;AACA;AACA,oCAAoC,gCAAgC,EAAE;AACtE;AACA;AACA,iCAAiC,gCAAgC,EAAE;AACnE;AACA;AACA,uCAAuC,aAAa,EAAE;AACtD;AACA;AACA;AACA,qCAAqC,aAAa,EAAE;AACpD;AACA;AACA,mCAAmC,aAAa,EAAE,oCAAoC;AACtF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,iBAAiB,WAAW,kBAAkB;AACtE,oBAAoB,sEAAsE,mIAAmI,2DAA2D,yCAAyC,qCAAqC,QAAQ,qFAAqF,0BAA0B,aAAa;AAC1e;AACA,WAAW,4BAA4B;AACvC,YAAY,kCAAkC;AAC9C,gBAAgB,sCAAsC;AACtD,cAAc,oCAAoC;AAClD;AACA,kBAAkB,wCAAwC;AAC1D;AACA,SAAS,0BAA0B,+BAA+B,sCAAsC,2CAA2C,sBAAsB;AACzK;AACA;AACA;AACA;AACA;AACA,kBAAkB,+BAA+B,2EAA2E,cAAc,gDAAgD,2BAA2B,KAAK,0CAA0C,2BAA2B;AAC/R,0EAA0E,iEAAiE;AAC3I;AACA,eAAe,oBAAoB;AACnC;AACA;AACA,wDAAwD;AACxD;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,yDAAyD,4BAA4B,GAAG;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAe,uBAAuB,yBAAyB,mBAAmB;AACzF,gBAAgB,wBAAwB,+BAA+B,mFAAmF;AAC1J,WAAW,0CAA0C,4DAA4D,gBAAgB,6BAA6B,sBAAsB,QAAQ,0BAA0B,gBAAgB,qKAAqK;AAC3Y;AACA;AACA,eAAe,4CAA4C;AAC3D;AACA;AACA,4BAA4B,+CAA+C,mCAAmC,wBAAwB,oCAAoC,eAAe;AACzL;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA,oBAAoB,4EAA4E,4BAA4B,aAAa;AACzI;AACA;AACA;AACA;AACA,yBAAyB,gFAAgF,iCAAiC,aAAa;AACvJ;AACA;AACA;AACA;AACA,cAAc,IAAI,kCAAkC,MAAM,mEAAmE,EAAE,kBAAkB,mEAAmE,2BAA2B,cAAc,MAAM,EAAE,gDAAgD,yBAAyB,sBAAsB,gBAAgB;AACpX;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA,iBAAiB,cAAc,yEAAyE,eAAe;AACvH;AACA;AACA,iBAAiB,EAAE,4VAA4V;AAC/W;AACA,mBAAmB,2BAA2B;AAC9C,iDAAiD,yBAAyB,0BAA0B,mBAAmB,kBAAkB,SAAS,kCAAkC,YAAY,kCAAkC,UAAU,kCAAkC,WAAW,kCAAkC,UAAU,mBAAmB,OAAO,eAAe,OAAO,wDAAwD;AAC7a;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,KAAK,mBAAmB,mBAAmB,cAAc;AACzD,WAAW,wBAAwB;AACnC,WAAW,cAAc,gBAAgB,yBAAyB,EAAE,qCAAqC,4BAA4B,yBAAyB;AAC9J,mBAAmB,wDAAwD,6CAA6C,kEAAkE,SAAS,iCAAiC,gBAAgB,sBAAsB,uCAAuC,4BAA4B,0CAA0C;AACvX,4CAA4C,IAAI,OAAO,cAAc,qBAAqB,YAAY,eAAe,kDAAkD,OAAO,iBAAiB,aAAa;AAC5M,2BAA2B,kBAAkB,sCAAsC,qBAAqB,OAAO,EAAE,iBAAiB,sBAAsB,sBAAsB,yBAAyB,iDAAiD,uCAAuC,aAAa,mCAAmC,gDAAgD,2CAA2C,+CAA+C,gCAAgC,mCAAmC,gDAAgD,+BAA+B,YAAY,wBAAwB,iCAAiC,0CAA0C,UAAU,uBAAuB,MAAM,YAAY,aAAa,+CAA+C,OAAO;AACh1B,qGAAqG,gFAAgF,uBAAuB,aAAa,8CAA8C;AACvQ,iDAAiD,OAAO,gCAAgC,2IAA2I,MAAM,EAAE,oCAAoC,sBAAsB,aAAa,iBAAiB;AACnU,eAAe,iBAAiB,eAAe,iBAAiB,sBAAsB,WAAW,wBAAwB,WAAW,6BAA6B,SAAS,oCAAoC,iCAAiC,qBAAqB,EAAE,QAAQ,mBAAmB,yCAAyC,KAAK,QAAQ,oDAAoD,2DAA2D,iCAAiC,2CAA2C,kEAAkE,0FAA0F,oFAAoF,YAAY,6JAA6J,8CAA8C,sIAAsI,0EAA0E,sCAAsC,qDAAqD,sBAAsB,yBAAyB,iBAAiB,8CAA8C,gBAAgB,0EAA0E,gBAAgB,6CAA6C,iBAAiB,2EAA2E,uBAAuB,YAAY,sGAAsG,uBAAuB,QAAQ,QAAQ,oBAAoB,4IAA4I,0CAA0C,wBAAwB,aAAa,wDAAwD,YAAY,aAAa,+DAA+D,kBAAkB,kGAAkG,kBAAkB,mGAAmG,eAAe,oCAAoC,WAAW,mBAAmB,SAAS,mBAAmB,oBAAoB,2CAA2C,yBAAyB,0CAA0C,gCAAgC,+CAA+C,sCAAsC,4CAA4C,2BAA2B,yCAAyC,8CAA8C;AAC/3F,WAAW,8BAA8B,WAAW,aAAa,sBAAsB,0CAA0C,+CAA+C,gCAAgC,mCAAmC,+EAA+E,MAAM,EAAE,iDAAiD,2CAA2C,qDAAqD,6DAA6D,sBAAsB,KAAK,YAAY,mBAAmB,wBAAwB,+CAA+C,MAAM,aAAa,sBAAsB,uCAAuC,mBAAmB,mBAAmB,iBAAiB,mBAAmB,mBAAmB,mCAAmC,qBAAqB,qBAAqB,iBAAiB,kEAAkE,WAAW,uBAAuB,WAAW,oEAAoE,SAAS,oEAAoE,oBAAoB,IAAI,OAAO,cAAc,qGAAqG,+DAA+D,iBAAiB,wCAAwC,gBAAgB,yCAAyC,gBAAgB,uCAAuC,iBAAiB,0CAA0C,uBAAuB,8CAA8C,IAAI,OAAO,cAAc,6GAA6G,+DAA+D,aAAa,kEAAkE,qBAAqB,sGAAsG,kBAAkB,IAAI,OAAO,cAAc,sCAAsC,0IAA0I,gCAAgC,kBAAkB,IAAI,OAAO,cAAc,oDAAoD,2DAA2D,kHAAkH,eAAe,oCAAoC,WAAW,aAAa,SAAS,6BAA6B,IAAI,OAAO,cAAc,yDAAyD,gBAAgB,oEAAoE,iDAAiD,mBAAmB,mEAAmE,oBAAoB,2CAA2C,yBAAyB,0CAA0C,gCAAgC,+CAA+C;AACnqG,WAAW,oDAAoD,sCAAsC,4CAA4C,2BAA2B,yCAAyC,8CAA8C,WAAW,aAAa,sBAAsB,0CAA0C;AAC3V;AACA,mBAAmB;AACnB;AACA,QAAQ,eAAe;AACvB,iBAAiB,cAAc;AAC/B,aAAa,qBAAqB,+BAA+B,sBAAsB,MAAM,+BAA+B,yBAAyB,uBAAuB,EAAE,wCAAwC,qBAAqB,4BAA4B;AACvQ,WAAW,uBAAuB,gBAAgB,sBAAsB,gBAAgB,oBAAoB,oBAAoB,gBAAgB,aAAa,qBAAqB,iBAAiB,IAAI,aAAa,aAAa,uDAAuD,uCAAuC,qCAAqC,aAAa,YAAY,sBAAsB,+BAA+B,iBAAiB,6BAA6B,yBAAyB,4CAA4C;AACriB,WAAW,qFAAqF;AAChG,yBAAyB,2HAA2H,IAAI,OAAO,aAAa,oGAAoG,wBAAwB,4BAA4B,6BAA6B;AACjW;AACA,aAAa,6CAA6C;AAC1D,YAAY,8CAA8C;AAC1D,gBAAgB,4CAA4C;AAC5D,iBAAiB,+CAA+C;AAChE;AACA;AACA;AACA;AACA,+BAA+B,mEAAmE,yEAAyE;AAC3K,SAAS,kHAAkH,4DAA4D,+GAA+G,iBAAiB,+BAA+B;AACtV,aAAa,wKAAwK,IAAI,OAAO,mCAAmC,UAAU,sCAAsC,gHAAgH,MAAM,sCAAsC,gGAAgG,kHAAkH;AACjoB,cAAc,wBAAwB;AACtC,cAAc,yBAAyB,gBAAgB,kBAAkB,OAAO,MAAM,WAAW,UAAU,wDAAwD,MAAM,YAAY,aAAa,0DAA0D,EAAE,aAAa,UAAU,MAAM,EAAE,qBAAqB,cAAc,KAAK,OAAO,EAAE,qBAAqB,UAAU,wEAAwE,KAAK,QAAQ,mCAAmC,mIAAmI,aAAa,gBAAgB,6DAA6D,MAAM,EAAE,iCAAiC,uDAAuD;AAClyB;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;AACA,mBAAmB;AACnB,4HAA4H;AAC5H,oCAAoC,aAAa;AACjD;AACA,WAAW,kCAAkC,8CAA8C,sCAAsC,kDAAkD,KAAK,EAAE,gBAAgB,EAAE,+BAA+B,8BAA8B,SAAS,UAAU,YAAY,wBAAwB,gBAAgB,oBAAoB,8DAA8D,wEAAwE;AAC1e;AACA;AACA,WAAW,0CAA0C;AACrD;AACA;AACA;AACA,qBAAqB,iBAAiB,EAAE,oBAAoB,+CAA+C,sBAAsB,QAAQ,UAAU,0CAA0C,MAAM,EAAE,gCAAgC,gCAAgC,4BAA4B,iBAAiB,cAAc,QAAQ,kBAAkB;AAC1V;AACA;AACA,sBAAsB,6DAA6D,IAAI,OAAO,cAAc,MAAM,YAAY,iDAAiD,KAAK,KAAK,sDAAsD,6CAA6C,sBAAsB,kDAAkD,MAAM,cAAc,0BAA0B,iGAAiG,2BAA2B,OAAO,IAAI,kGAAkG,MAAM,qFAAqF,wBAAwB,8BAA8B,kEAAkE,IAAI,kBAAkB,QAAQ,+BAA+B,cAAc,cAAc,wBAAwB,oBAAoB,oBAAoB,kCAAkC,QAAQ,qCAAqC;AACtjC,eAAe,QAAQ,iCAAiC,aAAa,QAAQ,MAAM,kDAAkD,KAAK,KAAK,+BAA+B,+BAA+B,oFAAoF;AACjS,kDAAkD,oDAAoD,oEAAoE,qDAAqD,mCAAmC,MAAM;AACxQ,2BAA2B,cAAc,uCAAuC,0CAA0C,4BAA4B,yBAAyB,+DAA+D,wCAAwC,+GAA+G,+BAA+B,oBAAoB,eAAe,MAAM,oEAAoE,2KAA2K,wBAAwB,yBAAyB,kCAAkC,4BAA4B,qGAAqG,MAAM,kFAAkF,oBAAoB,0BAA0B,4BAA4B,qCAAqC,2DAA2D,sDAAsD,4DAA4D,uGAAuG,6DAA6D,0EAA0E,uCAAuC,yBAAyB,mCAAmC,gDAAgD,+FAA+F,2BAA2B,oEAAoE,gBAAgB,8CAA8C,yCAAyC,iBAAiB,0CAA0C,yCAAyC,yDAAyD,0CAA0C;AACjnE;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAA4D,YAAY,uBAAuB,qCAAqC,gBAAgB,EAAE,uBAAuB;AACpM,mCAAmC;AACnC;AACA,iBAAiB,mBAAmB,iBAAiB,QAAQ,QAAQ,YAAY,UAAU,+BAA+B,0DAA0D,4CAA4C,yBAAyB,YAAY,yBAAyB,gBAAgB,oDAAoD,iBAAiB,gCAAgC,iBAAiB,aAAa,gBAAgB,eAAe,oBAAoB,8BAA8B,iBAAiB,mBAAmB,kBAAkB,uCAAuC,gDAAgD,IAAI,kBAAkB,QAAQ,cAAc,8BAA8B,qBAAqB,WAAW,+BAA+B,sEAAsE,2BAA2B,gCAAgC,kCAAkC,oBAAoB,qCAAqC,gBAAgB,iCAAiC,cAAc,cAAc,6BAA6B,qFAAqF,qGAAqG,oFAAoF,oCAAoC,sCAAsC,2FAA2F,mCAAmC,eAAe,OAAO,gCAAgC,wDAAwD,OAAO,OAAO,qCAAqC,gCAAgC,aAAa;AAClwD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY,eAAe,KAAK,+CAA+C,sDAAsD,uCAAuC,mDAAmD,eAAe,KAAK,EAAE,sFAAsF,IAAI,KAAK,KAAK,KAAK,iDAAiD,sCAAsC,qBAAqB,mBAAmB,uBAAuB,6BAA6B;AACzhB,wFAAwF,UAAU,yCAAyC,MAAM,0DAA0D,8GAA8G,+CAA+C,qCAAqC,6DAA6D;AAC1c;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,eAAe,WAAW,eAAe,mBAAmB,6DAA6D;AAC/J;AACA;AACA;AACA,gBAAgB,mCAAmC;AACnD;AACA,cAAc,iCAAiC;AAC/C;AACA;AACA;AACA;AACA;AACA,gDAAgD,kEAAkE,0DAA0D,eAAe;AAC3L;AACA;AACA,kDAAkD,oCAAoC,cAAc,kDAAkD,0BAA0B,MAAM,6CAA6C,kCAAkC,wDAAwD,cAAc,wCAAwC,sEAAsE,sFAAsF,wBAAwB,0BAA0B,gDAAgD,gBAAgB,cAAc,yBAAyB,gBAAgB;AACxrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yDAAyD,sHAAsH,qDAAqD;AACvQ,8BAA8B,kDAAkD,MAAM,EAAE,yBAAyB,uBAAuB,oBAAoB,oBAAoB,oBAAoB,aAAa,2BAA2B,YAAY,gCAAgC,iBAAiB,cAAc,cAAc,oCAAoC,gBAAgB,aAAa,EAAE,gBAAgB;AACxZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU,aAAa,eAAe,uBAAuB;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA;AACA,sBAAsB,2GAA2G,4BAA4B,kBAAkB,kDAAkD,YAAY;AAC7O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB,aAAa,2CAA2C,uFAAuF,qBAAqB,eAAe,cAAc,kBAAkB,0BAA0B,sBAAsB,4BAA4B,+EAA+E,wBAAwB,sCAAsC,wCAAwC,0BAA0B,2FAA2F,aAAa,wBAAwB,oDAAoD,wBAAwB,mBAAmB,YAAY,eAAe,KAAK,gFAAgF,eAAe;AAC33B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,yBAAyB,+BAA+B,sBAAsB,oBAAoB,oCAAoC,yCAAyC,2CAA2C,eAAe,EAAE,2CAA2C,oBAAoB,OAAO,+CAA+C,kDAAkD,6DAA6D,iBAAiB,0BAA0B,qBAAqB,gCAAgC,mBAAmB,OAAO,yDAAyD,sBAAsB,4CAA4C,sDAAsD,8DAA8D,yCAAyC,iCAAiC,oCAAoC,WAAW,oCAAoC,eAAe,eAAe,qBAAqB,gBAAgB,YAAY,mCAAmC,gBAAgB,aAAa,iCAAiC,cAAc,YAAY,4CAA4C;AAC3sC;AACA;AACA,sCAAsC,4BAA4B,uBAAuB,2DAA2D,uDAAuD,IAAI,eAAe,aAAa,QAAQ,aAAa,YAAY,qBAAqB,wBAAwB,yBAAyB,aAAa,kCAAkC,SAAS,YAAY,eAAe,4CAA4C,gBAAgB,qCAAqC,kCAAkC,+CAA+C,eAAe;AACtmB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qGAAqG,sEAAsE,mBAAmB,uBAAuB,kCAAkC,WAAW,+BAA+B,eAAe,eAAe,kBAAkB,oBAAoB,eAAe,yBAAyB,iBAAiB,UAAU,4DAA4D,2DAA2D,IAAI,uBAAuB,QAAQ,+BAA+B,gFAAgF,uBAAuB,8CAA8C,YAAY,qDAAqD,mDAAmD,WAAW,gBAAgB,YAAY,4EAA4E,8CAA8C,OAAO,gBAAgB,gCAAgC,iBAAiB,8DAA8D,6BAA6B,6DAA6D,wFAAwF,iCAAiC,uBAAuB,KAAK,0DAA0D,qCAAqC,8DAA8D,gCAAgC,2BAA2B,0EAA0E,2CAA2C,qDAAqD,2BAA2B,kBAAkB,aAAa,qHAAqH,0BAA0B,6BAA6B,6BAA6B,GAAG,4BAA4B,yBAAyB,gEAAgE,4CAA4C,4BAA4B,mBAAmB,mBAAmB,yNAAyN;AACp9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+BAA+B,EAAE,qCAAqC,EAAE,uCAAuC,EAAE,mCAAmC,EAAE,qCAAqC,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,6BAA6B,EAAE,yCAAyC,EAAE,uCAAuC,EAAE,qCAAqC,EAAE,qCAAqC,EAAE,mCAAmC,EAAE,mCAAmC,EAAE,4EAA4E,EAAE,+CAA+C,EAAE,qEAAqE,EAAE,+EAA+E,EAAE,8DAA8D,EAAE,+EAA+E,EAAE,uCAAuC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,+CAA+C,EAAE,uCAAuC,EAAE,qCAAqC,EAAE,+BAA+B,EAAE,qCAAqC,EAAE,6CAA6C,GAAG,OAAO;AAC72C;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB,2DAA2D,GAAG;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;A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AACA;AACA,oCAAoC,wDAAG,qBAAqB,IAAI,wDAAG,qBAAqB;AACxF,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,uCAAuC,uDAAQ;AAC/C;AACA;AACA;AACA,4BAA4B,uDAAQ;AACpC,8BAA8B,sDAAO;AACrC;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,wDAAS;AACX;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,wDAAS;AACX;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH,SAAS,yDAAI;AACb;AACA,eAAe,yDAAI;AACnB;AACA;AACA;AACA,wBAAwB,wDAAG;AAC3B;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,GAAG,yDAAI;AACZ;AACA,iBAAiB,wDAAG;AACpB;AACA;AACA;AACA,OAAO,gBAAgB,wDAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO,IAAI,wDAAG,sBAAsB;AACpC;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA,0BAA0B,0DAAU;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB,qDAAM,IAAI;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,6BAA6B,0DAAU;AACvC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB,qDAAM,IAAI;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,sDAAsD,uDAAQ;AAC9D,gDAAgD,uDAAQ;AACxD;AACA;AACA,EAAE,wDAAS;AACX,QAAQ,oDAAU;AAClB;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,QAAQ,oDAAU;AAClB;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,SAAS,yDAAI;AACb,WAAW,iDAAU;AACrB;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,qBAAqB,wDAAG;AAC7B;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;;AAEA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,0BAA0B,uDAAQ;AAClC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE,wDAAS;AACX;AACA;AACA;AACA,GAAG;AACH;AACA,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS,yDAAI;AACb;AACA,WAAW,iDAAU;AACrB,eAAe,yDAAI;AACnB;AACA;AACA,iBAAiB,wDAAG;AACpB;AACA,eAAe,iDAAU;AACzB;AACA,OAAO,GAAG,yDAAI;AACd;AACA,mBAAmB,yDAAI;AACvB;AACA;AACA;AACA,qBAAqB,wDAAG,eAAe,eAAe,wDAAG;AACzD;AACA;AACA,WAAW;AACX,SAAS,eAAe,wDAAG;AAC3B,kCAAkC,cAAc,MAAM,6BAA6B;AACnF;AACA;AACA,SAAS,eAAe,wDAAG;AAC3B;AACA;AACA,oBAAoB,wDAAG;AACvB;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK,eAAe,wDAAG,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE,wDAAS;AACX;AACA;AACA,oBAAoB,8CAAK,oBAAoB,GAAG,MAAM;;AAEtD;AACA,6BAA6B,8CAAK,mBAAmB;;AAErD;AACA,YAAY,oDAAU;AACtB;AACA,UAAU,SAAS,oDAAU;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH,SAAS,wDAAG;AACZ,WAAW,iDAAU;AACrB;AACA;AACA,aAAa,yDAAI;AACjB;AACA,mBAAmB,wDAAG,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,wDAAG;AAC3B;AACA;AACA;AACA;AACA,oBAAoB,wDAAG,eAAe;AACtC,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,kCAAkC;AAC7C,WAAW,SAAS;AACpB,aAAa;AACb;;;AAGA;AACA,mBAAmB,qDAAM,wBAAwB;;AAEjD;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,sCAAsC,uDAAQ;AAC9C,8BAA8B,sDAAO;AACrC;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,EAAE,wDAAS;AACX;AACA;AACA;;AAEA;AACA,GAAG;AACH,SAAS,yDAAI;AACb;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,SAAS,yDAAI;AACb;AACA;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,wDAAG;AACpB;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,sCAAsC,uDAAQ;;AAE9C;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,wDAAS;AACX;AACA;AACA;;AAEA;AACA,GAAG;AACH,SAAS,yDAAI;AACb;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,yDAAI;AACb,WAAW,iDAAU;AACrB;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,qBAAqB,wDAAG;AAC7B;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,sCAAsC,uDAAQ;AAC9C,8BAA8B,sDAAO;AACrC;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,EAAE,wDAAS;AACX;AACA;AACA;;AAEA;AACA,GAAG;AACH,SAAS,wDAAG;AACZ;AACA,cAAc,wDAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,sCAAsC,uDAAQ;AAC9C;AACA,8BAA8B,sDAAO;AACrC;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,EAAE,wDAAS;AACX;AACA;AACA;;AAEA;AACA,GAAG;AACH,SAAS,yDAAI;AACb;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA;AACA;AACA,aAAa,iDAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,SAAS,yDAAI;AACb,WAAW,iDAAU;AACrB;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,qBAAqB,wDAAG;AAC7B;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,sCAAsC,uDAAQ;AAC9C;AACA,8BAA8B,sDAAO;AACrC;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,EAAE,wDAAS;AACX;AACA;AACA;;AAEA;AACA,GAAG;AACH,SAAS,yDAAI;AACb;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,sDAAsD,uDAAQ;AAC9D;AACA,sCAAsC,uDAAQ;AAC9C;AACA;AACA,EAAE,wDAAS;AACX,QAAQ,oDAAU;AAClB;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,QAAQ,oDAAU;AAClB;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,yDAAI;AACb,WAAW,iDAAU;AACrB;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,qBAAqB,wDAAG;AAC7B;AACA;AACA,KAAK,GAAG,wDAAG;AACX;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,sCAAsC,uDAAQ;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,wDAAS;AACX;AACA;AACA;;AAEA;AACA,GAAG;AACH,SAAS,yDAAI;AACb;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA,KAAK,GAAG,yDAAI;AACZ;AACA,iBAAiB,yDAAI;AACrB;AACA,mBAAmB,wDAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,wDAAG;AACf;AACA,SAAS;AACT,OAAO,GAAG,wDAAG;AACb;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,SAAS,yDAAI;AACb;AACA;AACA,eAAe,wDAAG;AAClB;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,wDAAG;AA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AAkB,6FAAmB;AACtC;AACA;AACA;AACA,CAAC,uBAAuB,6FAAmB;AAC3C;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,sCAAsC;;AAEtC;;AAEA;AACA,cAAc,0CAA0C,EAAE,KAAK,GAAG;;AAElE,QAAQ,+DAAE,iCAAiC,wEAAc,aAAa,+DAAE;AACxE,gBAAgB,KAAK;AACrB;;AAEA;AACA,IAAI;;;AAGJ,MAAM,+DAAE,iCAAiC,+DAAE;AAC3C,QAAQ,2EAAiB;AACzB,qBAAqB,KAAK;AAC1B,MAAM;AACN,uBAAuB,oEAAU;AACjC,gBAAgB,oCAAoC,EAAE,KAAK;AAC3D;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,QAAQ,+DAAE;AACV,aAAa,8EAAiB;AAC9B;;AAEA,WAAW,uFAAQ;AACnB,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,iFAAG;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C,+BAA+B,8EAAiB;;AAEhD,OAAO,+DAAE;AACT;AACA;;AAEA,6FAA6F,+DAAE,0CAA0C,+DAAE;AAC3I;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C,+BAA+B,8EAAiB;;AAEhD,OAAO,+DAAE;AACT;AACA;;AAEA,+CAA+C,+DAAE;AACjD;;AAEA;AACA;AACA,uCAAuC,8EAAiB;AACxD,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB,kDAAkD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,iCAAiC,kBAAkB;AACxR;AACA,aAAa;AACb;AACA,CAAC,kBAAkB,6FAAmB;AACtC;AACA;AACA;AACA;AACA,CAAC,uBAAuB,6FAAmB,4BAA4B,6FAAmB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB,6FAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,eAAe,6FAAmB;AACnC;AACA,CAAC,kBAAkB,6FAAmB;AACtC;AACA;AACA,CAAC,eAAe,6FAAmB;AACnC;AACA;AACA,CAAC,gBAAgB,6FAAmB;AACpC;AACA;AACA,CAAC,gBAAgB,6FAAmB;AACpC;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,sBAAsB,gDAAgD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,iCAAiC,kBAAkB;AACpR;AACA,aAAa;AACb;AACA,CAAC,kBAAkB,6FAAmB;AACtC;AACA;AACA;AACA;AACA,CAAC,uBAAuB,6FAAmB,4BAA4B,6FAAmB;AAC1F;AACA;AACA,CAAC,gBAAgB,6FAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,eAAe,6FAAmB;AACnC;AACA,CAAC,kBAAkB,6FAAmB;AACtC;AACA;AACA,CAAC,eAAe,6FAAmB;AACnC;AACA;AACA,CAAC,gBAAgB,6FAAmB;AACpC;AACA;AACA,CAAC,gBAAgB,6FAAmB;AACpC;AACA;AACA,CAAC,gBAAgB,6FAAmB;AACpC;AACA;AACA,CAAC,gBAAgB,6FAAmB;AACpC;AACA;AACA,CAAC,gBAAgB,6FAAmB,yBAAyB,6FAAmB;AAChF;AACA;AACA,CAAC,gBAAgB,6FAAmB;AACpC;AACA;AACA,CAAC,iBAAiB,6FAAmB;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,4BAA4B,gFAAQ;AACpC;AACA,GAAG;AACH;AACA;AACA,aAAa,wCAAwC;AACrD;;AAEA;AACA;AACA;AACA;;AAEA,sCAAsC;;AAEtC;AACA;AACA;;AAEA,eAAe;AACf;AACA,KAAK,GAAG;;AAER;AACA;AACA,KAAK;AACL,KAAK;AACL;;;AAGA,EAAE,iFAAS;AACX;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,OAAO;;AAEV,EAAE,iFAAS;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,sBAAsB;;AAEzB,EAAE,iFAAS;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,sBAAsB;;AAEzB,EAAE,iFAAS;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,sBAAsB;;AAEzB,EAAE,iFAAS;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,sBAAsB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA,iBAAiB,+EAAO;AACxB,WAAW,iDAAM;AACjB;AACA,UAAU,kDAAO;AACjB;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG,iCAAiC;;AAEpC;AACA;AACA;AACA,KAAK;AACL,KAAK;;;AAGL;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG;AACZ;AACA,cAAc,iFAAG,CAAC,sEAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,SAAS,+CAAI;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,sDAAsD;AACpE,cAAc,0DAA0D;AACxE,gBAAgB,qCAAqC,oCAAoC,WAAW,oCAAoC,IAAI;AAC5I;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,sBAAsB,gDAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ;;AAER;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;;;AAGA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA,kBAAkB,+CAAK;AACvB,MAAM;;;AAGN,mBAAmB;;AAEnB,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,oBAAoB;AACjC;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,wEAAM,CAAC,iFAAG;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,MAAM,wEAAM;;AAEZ;AACA;AACA;;AAEA;AACA,0FAA0F;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,cAAc;AACzB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,sFAAM;AACd;AACA;AACA;;AAEA,QAAQ,sFAAM;AACd;AACA;AACA;AACA;;AAEA;AACA,IAAI,gDAAU;AACd,GAAG;AACH;AACA,IAAI,kDAAY;AAChB,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,kDAAO;AACX;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,kDAAO;AACX;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,0EAAmB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,sBAAsB,sEAAW,WAAW;;AAE5C,EAAE,iFAAS;AACX;AACA,oBAAoB,+CAAK,oBAAoB,eAAe;AAC5D,6BAA6B,+CAAK;;AAElC;AACA;AACA;AACA;AACA,GAAG;AACH,SAAS,iFAAG,CAAC,kEAAW,IAAI;AAC5B,GAAG;AACH;;AAEA;AACA,SAAS,kEAAK;AACd;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAK;AACd;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA,YAAY,kBAAkB;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8EAAiB;AAC1C;AACA,SAAS,+CAAI;AACb,WAAW,+DAAE;AACb,GAAG;AACH;AACA;AACA,SAAS,+DAAE,iCAAiC,kEAAK;AACjD;AACA;AACA,MAAM,+DAAE;AACR,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAK;AACd;AACA;AACA,SAAS,+DAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,4EAAqB;AACnC,GAAG;AACH;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,8EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA;AACA,IAAI;AACJ;AACA,WAAW,+DAAE;AACb,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,sBAAsB;AACjC,aAAa;AACb;;;AAGA;AACA;AACA;AACA,IAAI;AACJ,WAAW,+CAAI;AACf;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,sBAAsB;AACjC,aAAa;AACb;;;AAGA;AACA,SAAS,+DAAE,mCAAmC,+DAAE;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa;AACb;;;AAGA;AACA,yBAAyB,8EAAiB;AAC1C,uCAAuC;;AAEvC,yDAAyD;AACzD;;AAEA,MAAM,+DAAE;AACR;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA,IAAI;AACJ,YAAY,uBAAuB,MAAM,GAAG;AAC5C;;AAEA;AACA,SAAS,iDAAM;AACf;;AAEA;AACA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,cAAc,4EAAqB;AACnC,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,oCAAoC,8EAAiB;AACrD,6CAA6C,8EAAiB;AAC9D,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,qBAAqB,8EAAiB;AACtC;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa,eAAe;AAC5B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;;;AAGA;AACA;AACA,kGAAkG;;AAElG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA,2BAA2B,kDAAO;AAClC;AACA,SAAS;AACT;AACA,MAAM;;;AAGN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B,WAAW,aAAa;AACxB;AACA,aAAa,gBAAgB;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,2CAAG;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,+DAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,0CAA0C,8EAAiB;AAC3D;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,iDAAM;AACf;;AAEA;AACA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,+CAA+C,8EAAiB;AAChE;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,iDAAM;AACf;;AAEA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,4EAAqB;AACnC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,KAAK;;;AAGL,MAAM,+DAAE;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE;AACX;;AAEA,0BAA0B;;AAE1B,wDAAwD;;AAExD;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,8EAAiB;AAC5C;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA,qBAAqB,+DAAE;AACvB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,4CAA4C,8EAAiB;AAC7D;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,iDAAM;AACf;;AAEA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;;;AAGA;AACA;AACA,kCAAkC,+DAAE;AACpC;AACA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB;AACA,YAAY,KAAK;AACjB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;;;AAGA;AACA,aAAa,8EAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY,sCAAsC;AAClD;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,sCAAsC;AAClD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,sCAAsC;AAClD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,MAAM,kEAAK;AACX;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL,MAAM,+DAAE;AACR,gBAAgB;AAChB;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ,WAAW,+DAAE;AACb,gBAAgB;AAChB;AACA,+BAA+B,8EAAiB;AAChD;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA,+BAA+B,8EAAiB;AAChD;AACA;AACA;AACA;AACA,IAAI;AACJ,WAAW,+DAAE;AACb;AACA;;AAEA,SAAS,yEAAc;AACvB,EAAE;;;AAGF;AACA,sBAAsB,8EAAiB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,GAAG;;AAEN,EAAE,qEAAG;AACL,EAAE,8EAAiB;AACnB,EAAE,8EAAiB;AACnB;AACA;;AAEA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,2CAA2C,8EAAiB;AAC5D;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,iDAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;;AAEJ;AACA,2BAA2B,8EAAiB;AAC5C;AACA;;AAEA,iFAAiF;;AAEjF;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,KAAK;AACL,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA;AACA,aAAa,kFAAI;AACjB,mBAAmB,iFAAG;AACtB;AACA,SAAS,GAAG,kFAAI;AAChB,qBAAqB,kFAAI;AACzB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW,GAAG,kFAAI;AAClB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW;AACX,SAAS,GAAG,iFAAG;AACf;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA,aAAa,kFAAI;AACjB,mBAAmB,iFAAG;AACtB;AACA,SAAS,GAAG,kFAAI;AAChB,qBAAqB,kFAAI;AACzB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW,GAAG,kFAAI;AAClB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW;AACX,SAAS,GAAG,iFAAG;AACf;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA,aAAa,kFAAI;AACjB,mBAAmB,iFAAG;AACtB;AACA,SAAS,GAAG,kFAAI;AAChB,qBAAqB,kFAAI;AACzB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW,GAAG,kFAAI;AAClB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW,GAAG,kFAAI;AAClB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW;AACX,SAAS,GAAG,iFAAG;AACf;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA,qBAAqB,+DAAE;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qQAAqQ;;AAErQ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,+DAAE;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,oCAAoC;AAC/C,WAAW,cAAc;AACzB;;AAEA;AACA;AACA,mEAAmE;;AAEnE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,oCAAoC;AAC/C,WAAW,cAAc;AACzB;;AAEA;AACA,OAAO,kDAAO;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,oBAAoB,+EAAO;AAC3B,wBAAwB,gGAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,WAAW,iFAAG,cAAc;AAC5B;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,wEAAiB;AAC/B,GAAG;AACH;AACA;AACA,cAAc,wEAAiB;AAC/B,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA,2BAA2B,8EAAiB;AAC5C,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA,2BAA2B,8EAAiB;AAC5C,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,qDAAqD;;AAErD,MAAM,+DAAE;AACR,6BAA6B,kDAAO;AACpC,IAAI,SAAS,+DAAE;AACf,6BAA6B,kDAAO;AACpC,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,wEAAiB;AAC/B,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA,2BAA2B,8EAAiB;AAC5C,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA,2BAA2B,8EAAiB;AAC5C,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,wEAAiB;AACjC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,8EAAiB,WAAW;AACvD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;;;AAGA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;;AAEA;AACA,SAAS,kEAAK;AACd;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY;AACZ;;;AAGA;AACA,yBAAyB,8EAAiB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA,2BAA2B,8EAAiB;AAC5C;AACA;AACA;;AAEA;AACA,2DAA2D;;AAE3D;;AAEA,QAAQ,sDAAW;AACnB;AACA;;AAEA,mDAAmD;;AAEnD;AACA;AACA;;AAEA;AACA;AACA,iDAAiD;;AAEjD;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,MAAM;;;AAGN,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,8EAAiB;AAC5C,uBAAuB;;AAEvB;;AAEA,QAAQ,sDAAW;AACnB;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,MAAM;;;AAGN,qDAAqD;;AAErD;AACA;;AAEA,UAAU,sDAAW;AACrB;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,2BAA2B,8EAAiB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kDAAO;AACxB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,wEAAwE;;AAExE,mDAAmD;;AAEnD;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,kDAAO;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,+CAAI;AACf;AACA,KAAK;AACL;;AAEA;AACA,2BAA2B,8EAAiB;AAC5C;;AAEA,8BAA8B,+DAAE;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,OAAO,+DAAE;;AAET,MAAM,+DAAE,8BAA8B,+DAAE;AACxC;AACA,IAAI;AACJ;;;AAGA,MAAM,+DAAE;AACR;AACA;;AAEA;AACA;AACA;AACA,SAAS,+DAAE;AACX;AACA;AACA,SAAS,+DAAE;AACX,EAAE;;AAEF;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA,SAAS,+DAAE;AACX;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,eAAe;AAC3B;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,sBAAsB;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B,kDAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA,6BAA6B,8EAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAO;AAC3B;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,2BAA2B,8EAAiB;AAC5C,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN,mDAAmD,6BAA6B;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA,qBAAqB,+DAAE;AACvB;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,eAAe;AAC3B;;;AAGA;AACA,aAAa,8EAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,SAAS,kEAAK;AACd;AACA;AACA,SAAS,kEAAK;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,kDAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,2BAA2B,8EAAiB;AAC5C;AACA,mBAAmB,kDAAO,8CAA8C;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,2BAA2B,8EAAiB;AAC5C,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA,KAAK,2BAA2B;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,wEAAiB;AACjC,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,wEAAiB;AACjC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D;;AAE9D;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA,MAAM,+DAAE;AACR;AACA,IAAI;;;AAGJ,OAAO,+DAAE;AACT;AACA,IAAI;;;AAGJ,MAAM,+DAAE,gCAAgC,2EAAiB;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wEAAiB;AAC/B,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,wEAAiB;AAC/B,GAAG;AACH;AACA;AACA,cAAc,wEAAiB;AAC/B,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;;AAEA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,8EAAiB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,gFAAyB;AACvC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,8EAAiB,WAAW;;AAEvD;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,SAAS,4EAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA,YAAY,QAAQ;AACpB;AACA,cAAc;AACd;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,cAAc;AACd;;;AAGA;AACA,OAAO,+DAAE;AACT;AACA;;AAEA,aAAa,8EAAiB;AAC9B;AACA,0BAA0B,8CAAG;AAC7B;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,kDAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA,6BAA6B,8EAAiB;AAC9C;AACA,qBAAqB,kDAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,2BAA2B,8EAAiB;AAC5C,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA,KAAK,2BAA2B;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,wEAAiB;AAC/B,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,8EAAiB,WAAW;;AAEvD;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wEAAiB;AAC/B,GAAG;AACH;AACA;AACA,cAAc,wEAAiB;AAC/B,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA,2BAA2B,8EAAiB;AAC5C,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA,2BAA2B,8EAAiB;AAC5C,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;AAC1C;AACA,iFAAiF;;AAEjF;AACA;AACA,IAAI;;;AAGJ,6IAA6I;AAC7I;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,wEAAiB;AACjC,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,0EAAmB;AACnC,KAAK;;AAEL;AACA;AACA;AACA;AACA,kBAAkB,wEAAiB;AACnC,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,KAAK;AACL,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA,OAAO;AACP,iEAAiE;;AAEjE;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA,YAAY;AACZ;;;AAGA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA,UAAU,+DAAE;AACZ;AACA;;AAEA;;AAEA;AACA,UAAU,+DAAE;AACZ;AACA;;AAEA,UAAU,+DAAE;AACZ;AACA;;AAEA;;AAEA;AACA,UAAU,+DAAE;AACZ;AACA;;AAEA,UAAU,+DAAE;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,kFAAI;AACjB,mBAAmB,iFAAG;AACtB;AACA,SAAS,GAAG,kFAAI;AAChB,qBAAqB,kFAAI;AACzB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW,GAAG,kFAAI;AAClB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW;AACX,SAAS,GAAG,iFAAG;AACf;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA,aAAa,kFAAI;AACjB,mBAAmB,iFAAG;AACtB;AACA,SAAS,GAAG,kFAAI;AAChB,qBAAqB,kFAAI;AACzB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW,GAAG,kFAAI;AAClB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW;AACX,SAAS,GAAG,iFAAG;AACf;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA,aAAa,kFAAI;AACjB,mBAAmB,iFAAG;AACtB;AACA,SAAS,GAAG,kFAAI;AAChB,qBAAqB,kFAAI;AACzB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW,GAAG,kFAAI;AAClB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW,GAAG,kFAAI;AAClB,uBAAuB,iFAAG;AAC1B;AACA,aAAa;AACb,WAAW;AACX,SAAS,GAAG,iFAAG;AACf;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,4DAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,4DAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,4DAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,4DAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,4DAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,4DAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,4DAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,4DAAK;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA,yBAAyB,8EAAiB;AAC1C;;AAEA,MAAM,+DAAE;AACR;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC,KAAK;AACL;AACA;AACA,gBAAgB,4EAAqB;AACrC,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,SAAS;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,SAAS;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,SAAS;AACrB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH,kBAAkB,8EAAiB;;AAEnC;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH,SAAS,iFAAG,CAAC,kEAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;;AAEH,MAAM,8EAAiB;AACvB;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH,SAAS,iFAAG,CAAC,kEAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH,SAAS,iFAAG,CAAC,kEAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,WAAW,8EAAiB;AAC5B;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;AACH;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;;AAE7D;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH,SAAS,iFAAG,CAAC,kEAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,cAAc,4EAAqB;AACnC,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,2BAA2B,8EAAiB;AAC5C,qEAAqE;;AAErE;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,2BAA2B,8EAAiB;AAC5C;AACA;AACA;AACA;;AAEA,SAAS,iFAAG,CAAC,oEAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;;AAE1C,OAAO,+DAAE,+BAA+B,+DAAE;AAC1C;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY;AACZ;;;AAGA;AACA,SAAS,+DAAE,4BAA4B,8EAAiB,YAAY,8EAAiB;AACrF;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,QAAQ,+DAAE;AACV;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;AACH;;AAEA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH,SAAS,iFAAG,CAAC,kEAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG,GAAG;;AAEN;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG,GAAG;;AAEN;AACA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,oEAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;;AAEH,OAAO,+DAAE;AACT;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;;AAEA;AACA,SAAS,kEAAK;AACd;;AAEA;AACA,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY;AACZ;;;AAGA;AACA,yBAAyB,8EAAiB;;AAE1C,MAAM,+DAAE;AACR;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,MAAM,+DAAE;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,4DAA4D,+DAAE,gCAAgC,8EAAiB;AAC/G;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,cAAc,6EAAsB;AACpC;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA;AACA,cAAc,0EAAmB;AACjC;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,mCAAmC,8EAAiB;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,mCAAmC,8EAAiB;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,mCAAmC,8EAAiB;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,mCAAmC,8EAAiB;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA,YAAY,eAAe;AAC3B;;;AAGA;AACA,MAAM,+DAAE;AACR;AACA;;AAEA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,8EAAiB;AAC1C,SAAS,+DAAE,uCAAuC,kEAAK,+EAA+E,+DAAE;AACxI;AACA;AACA;AACA;AACA;AACA,yBAAyB,8EAAiB;AAC1C,6CAA6C,+DAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8EAAiB;AAC1C,mEAAmE;;AAEnE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB,SAAS,YAAY,MAAM;AAC3C,SAAS,iFAAG;AACZ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAO;AACtB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,SAAS,oEAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,SAAS,iFAAG,CAAC,kEAAW;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE;AACX;;AAEA;AACA,SAAS,+DAAE;AACX;;AAEA;AACA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB,SAAS,YAAY,MAAM;AAC3C;AACA,SAAS,iFAAG,CAAC,uEAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kDAAO;AACxB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,SAAS,oEAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE;AACX;;AAEA;AACA,SAAS,+DAAE;AACX;;AAEA;AACA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC;AACA;AACA,GAAG;AACH;AACA;AACA,cAAc,0EAAmB;AACjC;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC;AACA;AACA,KAAK,GAAG;AACR,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT,IAAI;AACJ;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA,KAAK,GAAG;AACR,IAAI;AACJ;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,SAAS;AACrB;;AAEA;AACA,SAAS,+DAAE;AACX;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,SAAS;AACrB;;AAEA;AACA,SAAS,+DAAE;AACX;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,SAAS;AACrB;;AAEA;AACA,SAAS,+DAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY,eAAe;AAC3B;;AAEA;AACA,MAAM,+DAAE,4CAA4C,+DAAE;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC,8EAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,kEAAK;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN,oGAAoG;;AAEpG;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,kDAAO;AAChC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN,qGAAqG;;AAErG;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,kDAAO;AACjC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA,mCAAmC;;AAEnC;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE,gCAAgC,+DAAE;AAC7C;;AAEA;AACA,qBAAqB,oDAAS;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,cAAc,0EAAmB;AACjC;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,6EAAsB;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,6EAAsB;AACtC;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,0CAA0C,8EAAiB;AAC3D;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,iDAAM;AACf;;AAEA;AACA;AACA;AACA,CAAC;AACD,yBAAyB,8EAAiB;;AAE1C,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,2BAA2B,8EAAiB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,2BAA2B,8EAAiB;AAC5C,kEAAkE;AAClE;AACA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,MAAM,UAAU,UAAU;AACxC;;AAEA;AACA;;AAEA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE,gCAAgC,+DAAE;AAC7C;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;AACD,2DAA2D;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,kDAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA,6BAA6B,8EAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAO;AAC3B;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN,yDAAyD,4BAA4B;;AAErF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA,EAAE;;;AAGF;AACA,uBAAuB,8EAAiB;;AAExC,MAAM,+DAAE;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;;AAE1C,OAAO,+DAAE,+BAA+B,+DAAE;AAC1C;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA,MAAM,+DAAE;AACR,qBAAqB,8EAAiB;AACtC,IAAI;AACJ;AACA,IAAI;AACJ,qBAAqB,8EAAiB;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA;AACA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,uCAAuC;;AAEvC,uCAAuC;AACvC,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gBAAgB,SAAS,SAAS,MAAM;AACxC,SAAS,iFAAG,CAAC,uEAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAO;AACvB;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,gEAAS;AACtB;AACA,uCAAuC,GAAG,SAAS,kBAAkB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gBAAgB,SAAS,cAAc,MAAM;AAC7C,SAAS,iFAAG,CAAC,uEAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB,SAAS;AACzB;AACA;AACA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAO;AAC5B;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,gEAAS;AACtB;AACA,uCAAuC,GAAG,cAAc,uBAAuB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gBAAgB,SAAS,YAAY,MAAM;AAC3C,SAAS,iFAAG,CAAC,uEAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB,SAAS;AACzB;AACA;AACA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAO;AACvB;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,gEAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,yBAAyB;;AAEzB,6CAA6C;;AAE7C,2DAA2D,0BAA0B;;AAErF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,kDAAO,qCAAqC;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,EAAE;;;AAGF;AACA;AACA,UAAU,+DAAE,iCAAiC,+DAAE,uCAAuC,+DAAE;AACxF;;AAEA;AACA,aAAa,8EAAiB;AAC9B;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA,QAAQ,oDAAS;AACjB;AACA,MAAM,SAAS,oDAAS;AACxB;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;;;AAGR;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,aAAa,8EAAiB;AAC9B;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kDAAO;AACzB;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C,MAAM,oDAAS;AACf;AACA,IAAI,SAAS,oDAAS;AACtB;AACA;AACA;AACA;AACA,SAAS,+DAAE,iCAAiC,+DAAE,uCAAuC,+DAAE;AACvF;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD,wCAAwC;;AAExC;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;AACA;AACA,gBAAgB,0EAAmB;AACnC,KAAK;;AAEL;AACA;AACA;AACA;AACA,kBAAkB,6EAAsB;AACxC,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;;AAE1C,OAAO,+DAAE,+BAA+B,+DAAE;AAC1C;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE,4BAA4B,8EAAiB,YAAY,8EAAiB;AACrF;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG,GAAG;;AAEN;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG,GAAG;;AAEN;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG,GAAG;;AAEN;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG,GAAG;;AAEN;AACA;AACA;AACA;AACA,gBAAgB,0EAAmB;AACnC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,8EAAiB,WAAW;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0EAAmB;AACjC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qEAAqE;;AAErE;AACA,4BAA4B;AAC5B,yEAAyE,QAAQ;AACjF;AACA,MAAM;;;AAGN;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,MAAM;AACN;AACA;;;AAGA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kDAAO;AAC7B;AACA;AACA,SAAS;AACT,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;;AAEA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;;;AAGN,8FAA8F;;AAE9F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAM;AACf;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA,6DAA6D;;AAE7D,kDAAkD;;AAElD;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL,IAAI;AACJ;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE,mCAAmC,+DAAE;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,4EAAqB;AACnC,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,gEAAgE,8EAAiB;AACjF;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,gEAAgE,8EAAiB;AACjF;AACA;AACA;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;;AAEA;AACA,WAAW,kEAAK;AAChB;;AAEA,SAAS,+DAAE;AACX;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;;AAEA;AACA;AACA,SAAS,iDAAM;AACf;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gEAAgE,8EAAiB;AACjF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gEAAgE,8EAAiB;AACjF;AACA;;AAEA,KAAK;AACL;AACA;AACA,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C;AACA,oGAAoG;AACpG;AACA;;AAEA,SAAS,iDAAM;AACf;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA,WAAW,kEAAK;AAChB;;AAEA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,kDAAO;AAChC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;AAC1C,sBAAsB;AACtB;;AAEA,MAAM,+DAAE;AACR;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL,IAAI;AACJ;AACA;AACA;;;AAGA,MAAM,+DAAE,kEAAkE,+DAAE,6BAA6B,+DAAE;AAC3G;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,+DAAE,gCAAgC,8EAAiB,8BAA8B,8EAAiB;;AAE3H;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAqE;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA,YAAY,eAAe;AAC3B,YAAY,SAAS;AACrB;;;AAGA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY;AACZ;;;AAGA;AACA,SAAS,+DAAE;AACX;;AAEA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,4EAAqB;AACnC,GAAG;AACH;AACA;AACA,cAAc,4EAAqB;AACnC,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,6EAAsB;AACtC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0EAA0E;;AAE1E;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;;AAEA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;;;AAGA;AACA;AACA,kCAAkC,+DAAE;AACpC;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB;AACA,YAAY,KAAK;AACjB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;;;AAGA;AACA,aAAa,8EAAiB;AAC9B;AACA,EAAE;;AAEF;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,SAAS;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,SAAS;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,SAAS;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY;AACZ;;;AAGA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,4EAAqB;AACnC,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,2BAA2B,8EAAiB;AAC5C;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,2BAA2B,8EAAiB;AAC5C;AACA;AACA;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE;AACX;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA,SAAS,iDAAM;AACf;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,2BAA2B,8EAAiB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,2BAA2B,8EAAiB;AAC5C;AACA;;AAEA,KAAK;AACL;AACA;AACA,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C,4EAA4E;AAC5E;AACA;;AAEA,SAAS,iDAAM;AACf;AACA,GAAG;AACH;;AAEA;AACA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,kDAAO;AACjC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD,OAAO,kEAAK;AACZ;AACA;;AAEA;AACA;;AAEA,MAAM,+DAAE;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,WAAW,qBAAqB,MAAM,GAAG;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,WAAW,SAAS;AACpB;AACA;AACA,GAAG;AACH,WAAW,SAAS;AACpB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,WAAW,SAAS;AACpB;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;AACD,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW,gBAAgB,MAAM,GAAG;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,WAAW,SAAS;AACpB;AACA;AACA,GAAG;AACH,WAAW,SAAS;AACpB;AACA;AACA,GAAG;AACH,WAAW,SAAS;AACpB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,WAAW,SAAS;AACpB;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,QAAQ,+DAAE;AACV;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA,QAAQ,+DAAE;AACV;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,kEAAW;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS,yEAAc;AACvB;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,iFAAG,CAAC,kEAAW;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qBAAqB,SAAS,SAAS,MAAM;AAC7C,SAAS,iFAAG,CAAC,uEAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAO;AACvB;AACA,KAAK;AACL;;AAEA,SAAS,iFAAG,CAAC,gEAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA,GAAG;AACH;;AAEA;AACA,8BAA8B;AAC9B;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,kBAAkB;AAC7B;;;AAGA;AACA;AACA;AACA,YAAY,iCAAiC,IAAI,4DAA4D;AAC7G;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA,eAAe;AACf;AACA;;AAEA;AACA,eAAe;AACf;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO,GAAG,GAAG;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA,yBAAyB,8EAAiB;AAC1C;AACA,mCAAmC;;AAEnC,oBAAoB,wFAAoB;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA,qBAAqB,8CAAG,SAAS,+CAAI;AACrC,oBAAoB,kDAAO;AAC3B,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,SAAS,kFAAI;AACb;AACA;AACA,eAAe,iFAAG;AAClB;AACA;AACA;AACA,KAAK,GAAG,iFAAG;AACX;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,kFAAI;AACb;AACA;AACA,eAAe,iFAAG;AAClB;AACA;AACA;AACA,KAAK,GAAG,iFAAG;AACX;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,EAAE;;;AAGF;AACA,yBAAyB,8EAAiB;AAC1C,SAAS,kEAAK,kDAAkD,+DAAE;AAClE;;AAEA;AACA,yBAAyB,8EAAiB;;AAE1C,MAAM,+DAAE;AACR;AACA;;AAEA,MAAM,+DAAE;AACR;AACA;;AAEA;;AAEA,4BAA4B,+DAAE;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,8EAAiB;;AAE9B,MAAM,+DAAE;AACR;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,iDAAM;AACf;AACA,GAAG;AACH;;AAEA;AACA,SAAS,kDAAO;AAChB;;AAEA;AACA,EAAE,kDAAO;AACT,kBAAkB,8CAAG;AACrB;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,SAAS,+CAAI;AACb;;AAEA;AACA,SAAS,8CAAG;AACZ;AACA,GAAG;AACH;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA,OAAO,+DAAE,+BAA+B,+DAAE;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE,4BAA4B,8EAAiB,YAAY,8EAAiB;AACrF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ,OAAO,+DAAE;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA,qEAAqE,SAAS;AAC9E;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA,2EAA2E,SAAS;AACpF;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;;AAE1C,OAAO,+DAAE,+BAA+B,+DAAE;AAC1C;AACA;;AAEA;AACA;AACA;AACA,cAAc,6EAAsB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA,SAAS,+DAAE,4BAA4B,8EAAiB,YAAY,8EAAiB;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;;AAEA;AACA,qGAAqG;;AAErG;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,gBAAgB;;AAEpB,0BAA0B,oDAAS;AACnC;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA,SAAS,oDAAS;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,kDAAM;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;;AAEA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;;AAEA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,QAAQ;AACnB;AACA,YAAY,eAAe;AAC3B;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;;AAEA,MAAM,+DAAE;AACR;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,+DAAE;AACb,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB,aAAa;AACb;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,8EAAiB;AACxC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI,WAAW;;AAEf;AACA;;AAEA,SAAS,sDAAW;AACpB;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,uBAAuB,8EAAiB;AACxC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;;;AAGJ;AACA,kFAAkF;;AAElF;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ,sBAAsB;;AAE9B;AACA,wDAAwD,aAAa;AACrE;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA,SAAS,sDAAW;AACpB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA,yGAAyG;;AAEzG;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA,2GAA2G;;AAE3G;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,uBAAuB,8EAAiB;AACxC;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,kBAAkB,kDAAO;AACzB;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,sBAAsB,kDAAO;AAC7B;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,sBAAsB,kDAAO;AAC7B;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,oBAAoB,kDAAO;AAC3B;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ,uCAAuC,KAAK,iBAAiB,GAAG;AAChE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,YAAY;;AAEhB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA,mCAAmC;;AAEnC,4DAA4D;;;AAG5D;;AAEA;AACA;AACA,2DAA2D;;AAE3D,8EAA8E;;AAE9E,iEAAiE;;;AAGjE,0EAA0E;;;AAG1E,0FAA0F;;;AAG1F;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,8EAAiB;AAC5C;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,2BAA2B,8EAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,wEAAwE;;AAExE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kDAAO;AACzB;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA,cAAc,+DAAE;AAChB;AACA,YAAY;AACZ;AACA;AACA,UAAU;;;AAGV;AACA,cAAc,+DAAE;AAChB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA,2BAA2B,kDAAO;AAClC;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAO;AACnC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,4EAA4E;;AAE5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kDAAO;AACzB;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA,kBAAkB,kDAAO;AACzB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA,qGAAqG;;AAErG;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,+CAAI;AACjB;AACA,OAAO;AACP,MAAM;AACN,aAAa,+CAAI;AACjB;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,+CAAI;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM,sDAAW;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAA+C,kFAAkB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G;;AAE5G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;;AAEA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;;AAEA;AACA,yBAAyB,8EAAiB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,QAAQ;AACnB;AACA,YAAY,eAAe;AAC3B;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;;AAEA,MAAM,+DAAE;AACR;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,+DAAE;AACb,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,kEAAK;AAChB,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,aAAa,+DAAE;AACf;AACA,IAAI;AACJ;AACA,aAAa,+DAAE;AACf;AACA,IAAI;AACJ;AACA,aAAa,+DAAE;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,aAAa,wCAAwC,UAAU;;AAE/D;AACA;;AAEA;AACA,sDAAsD,SAAS;AAC/D;AACA,GAAG;AACH;;AAEA;AACA,yBAAyB,8EAAiB;;AAE1C,MAAM,+DAAE;AACR;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,QAAQ;AACrB;AACA,cAAc;AACd;;;AAGA;AACA;AACA;;AAEA,QAAQ,sDAAW;AACnB;AACA,MAAM,SAAS,mDAAQ;AACvB,UAAU,sDAAW;AACrB;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA,cAAc;AACd;;;AAGA;AACA,WAAW,+CAAI;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;;;AAGA;AACA;AACA;AACA;AACA,sBAAsB,sDAAW;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,UAAU,sDAAW;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR,qCAAqC,iDAAM;AAC3C;;AAEA,QAAQ,sDAAW;AACnB,aAAa,kDAAO,CAAC,iDAAM;AAC3B;;AAEA,QAAQ,mDAAQ;AAChB;AACA,aAAa,iDAAM;AACnB,eAAe,kEAAK;AACpB,OAAO;AACP;;AAEA,QAAQ,mDAAQ;AAChB;AACA;;AAEA,+CAA+C,gCAAgC;AAC/E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,iBAAiB;AAC9B;AACA,cAAc,gBAAgB;AAC9B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,eAAe;AACf;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,iBAAiB;AAC9B;AACA,cAAc,gBAAgB;AAC9B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,mCAAmC,uFAAkB;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2BAA2B;AACxC;AACA,cAAc;AACd;;;AAGA;AACA,SAAS,kDAAO;AAChB;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA,cAAc;AACd;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA;AACA,kFAAkF;;AAElF,yBAAyB,qDAAa;AACtC,4EAA4E,cAAc,oDAAoD,2BAA2B;AACzK,MAAM;;;AAGN;AACA;AACA,8CAA8C,GAAG;AACjD,QAAQ;AACR,8CAA8C,GAAG,iBAAiB,QAAQ;AAC1E;AACA,MAAM;;;AAGN;;AAEA;AACA;AACA,MAAM;;;AAGN,6BAA6B,+EAAU;AACvC;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA,4CAA4C;AAC5C;;AAEA;AACA,oFAAoF,YAAY;AAChG,QAAQ;AACR;;;AAGA;AACA;AACA,kDAAkD,WAAW,UAAU,YAAY;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe;AACf;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe;AACf;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,oBAAoB;AACjC;AACA,cAAc,OAAO;AACrB;;;AAGA;AACA,QAAQ,mDAAQ;AAChB;AACA;AACA;AACA;AACA,UAAU;AACV,+BAA+B,GAAG,YAAY,KAAK,MAAM,IAAI;AAC7D;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE;;AAEF;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;;AAEA;AACA,SAAS,iDAAM;AACf;AACA;AACA;AACA,MAAM,OAAO;;AAEb;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA,iCAAiC,4FAAqB;AACtD,iCAAiC,4FAAqB;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA,8DAA8D;;AAE9D;AACA;AACA;;AAEA;AACA,8DAA8D,OAAO;AACrE,MAAM;;;AAGN,yBAAyB,qDAAa;AACtC,4EAA4E,cAAc,oDAAoD,yBAAyB;AACvK,MAAM;;;AAGN;AACA;AACA,8CAA8C,GAAG;AACjD,QAAQ;AACR,8CAA8C,GAAG,iBAAiB,QAAQ;AAC1E;AACA,MAAM;;;AAGN;;AAEA;AACA;AACA,MAAM;;;AAGN,6BAA6B,oFAAa;AAC1C;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,UAAU;AACrB,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,+CAA+C;;AAE/C,QAAQ,sDAAW;AACnB;AACA,MAAM;;;AAGN,QAAQ,qDAAU;AAClB;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,sDAAW;AACpB;AACA,MAAM,UAAU,sDAAW;AAC3B;AACA;AACA;;AAEA,MAAM,sDAAW;AACjB;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,8EAAiB;AAC9B;AACA,gBAAgB,uFAAQ;;AAExB;AACA;AACA;;AAEA,MAAM,+DAAE;AACR;AACA;;AAEA,EAAE,uFAAQ;AACV;AACA,GAAG;AACH;AACA;;AAEA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,kFAAkB;AAClD;AACA;AACA;AACA;AACA;AACA,kBAAkB,8EAAiB;AACnC;AACA,kBAAkB,8EAAiB;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;AAER;AACA,aAAa,+DAAE;AACf;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,+DAAE;AAC5B,OAAO;;AAEP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,wGAAwG;;AAExG;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN,2BAA2B,8EAAiB;AAC5C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN,8BAA8B,8EAAiB;AAC/C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,uCAAuC;;AAEvC,iDAAiD;;AAEjD;AACA;AACA;;AAEA,mEAAmE;;AAEnE;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA,MAAM;;;AAGN,iDAAiD;;;AAGjD;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA,2BAA2B,8EAAiB;AAC5C;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,2BAA2B,8EAAiB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN,2BAA2B,8EAAiB;AAC5C;AACA;;AAEA;AACA,8EAA8E;;AAE9E;AACA;AACA;AACA,IAAI,YAAY;;AAEhB;AACA;AACA;;AAEA,SAAS,+CAAI;AACb;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,4BAA4B,yEAAc;AAC1C;;AAEA;;AAEA,WAAW,kFAAI;AACf;AACA;AACA,iBAAiB,kFAAI;AACrB,eAAe,kDAAU;AACzB;AACA;AACA,SAAS;AACT;AACA,mBAAmB,iFAAG;AACtB;AACA;AACA;AACA,SAAS,GAAG,kFAAI;AAChB;AACA,qBAAqB,iFAAG;AACxB;AACA;AACA;AACA;AACA,WAAW,aAAa,iFAAG;AAC3B;AACA,WAAW;AACX,SAAS;AACT,OAAO,GAAG,iFAAG;AACb,eAAe,kDAAU;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY;AACZ,iBAAiB,+EAAe,cAAc;AAC9C;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA,CAAC;AACD,SAAS,iFAAG,CAAC,mEAAY;AACzB;AACA;AACA,cAAc,iFAAG,CAAC,gEAAS;AAC3B;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA,WAAW,iFAAG;AACd;AACA,KAAK;AACL,IAAI;AACJ,WAAW,iFAAG;AACd;AACA;AACA,KAAK;AACL,IAAI;AACJ,WAAW,iFAAG;AACd;AACA;AACA,KAAK;AACL,IAAI;AACJ,WAAW,iFAAG;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,SAAS,kFAAI,CAAC,mEAAY;AAC1B;AACA;AACA;AACA,eAAe,iFAAG,CAAC,iEAAU,IAAI,GAAG,iFAAG;AACvC;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,WAAW,iFAAG,mBAAmB;AACjC;AACA,GAAG;AACH,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA,cAAc,kFAAI,CAAC,mEAAY;AAC/B,iBAAiB,iFAAG;AACpB;AACA,OAAO,GAAG,iFAAG,CAAC,gEAAS;AACvB;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA,SAAS,iFAAG;AACZ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,WAAW,iFAAG,iBAAiB;AAC/B,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,WAAW,iFAAG,mBAAmB;AACjC;AACA,GAAG;AACH,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA,cAAc,kFAAI,CAAC,mEAAY;AAC/B,iBAAiB,iFAAG;AACpB;AACA,OAAO,GAAG,iFAAG,CAAC,gEAAS;AACvB;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA,SAAS,iFAAG;AACZ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,WAAW,iFAAG;AACd;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,WAAW,iFAAG,mBAAmB;AACjC;AACA,GAAG;AACH,SAAS,iFAAG,CAAC,qEAAc;AAC3B;AACA;AACA,cAAc,kFAAI,CAAC,mEAAY;AAC/B,iBAAiB,iFAAG;AACpB;AACA,OAAO,GAAG,iFAAG,CAAC,gEAAS;AACvB;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA,CAAC;AACD;AACA,uEAAuE,gBAAgB;AACvF;AACA,GAAG;AACH,SAAS,iFAAG;AACZ;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa;AACb;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA,SAAS,iFAAG;AACZ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,mBAAmB,iFAAG;AACtB;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,IAAI;AACJ,uBAAuB,iFAAG;AAC1B;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD,SAAS,kFAAI;AACb;AACA;AACA,eAAe,iFAAG;AAClB;AACA;AACA,KAAK,GAAG,iFAAG;AACX;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS,OAAO;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,KAAK;AACL,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,qBAAqB;AACrB;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL,4EAA4E,+DAAC;;AAE7E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,yDAAyD,QAAQ,YAAY,WAAW,YAAY,gBAAgB;AACpH,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC,EAAE,uEAAS;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qHAAqH;;AAErH,+FAA+F;;AAE/F;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA,mFAAmF,KAAK;AACxF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;;AAEA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA,4CAA4C;;AAE5C;AACA;AACA;;AAEA,sCAAsC;;AAEtC,kCAAkC,IAAI;AACtC;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA,uCAAuC,IAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,wBAAwB,iFAAG;AAC3B;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB;;AAEvB;AACA;AACA,EAAE,kDAAO;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,qBAAqB,GAAG,GAAG,QAAQ;AACnC,KAAK;AACL,GAAG,GAAG;;AAEN;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA;AACA;AACA,sDAAsD,WAAW,GAAG,MAAM;;AAE1E;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,0EAAmB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wEAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wEAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,6BAA6B,wEAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA,8CAA8C,UAAU;AACxD;AACA,OAAO;AACP;;AAEA;AACA,8CAA8C,UAAU;AACxD;AACA,OAAO;AACP;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA,WAAW,mDAAQ;AACnB;AACA;AACA;;AAEA;AACA,yDAAyD,QAAQ;AACjE;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,kDAAO;AAChB;;AAEA;AACA,SAAS,+CAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;;AAEb;AACA,QAAQ;;;AAGR;AACA,iEAAiE;AACjE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oGAAoG;;AAEpG;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,cAAc;AACjC,WAAW,QAAQ,YAAY,GAAG;AAClC;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,gEAAgE,sEAAe;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,kFAAkB;AAChD;AACA;AACA;AACA;AACA;AACA,kBAAkB,8EAAiB;AACnC;AACA,kBAAkB,8EAAiB;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;AAER;AACA,aAAa,+DAAE;AACf;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,+DAAE;AAC5B,OAAO;;AAEP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA,aAAa;AACb;;AAEA;AACA;;AAEA,OAAO,mDAAQ;AACf;AACA;;AAEA,EAAE,kDAAO,CAAC,+CAAI;AACd,uBAAuB,iDAAM;AAC7B;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iDAAM,GAAG;AACzB;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B,WAAW,aAAa;AACxB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA,mCAAmC;;AAEnC;;AAEA;AACA,8EAA8E;;AAE9E,iEAAiE;;;AAGjE,4EAA4E;;;AAG5E,6EAA6E;;;AAG7E,6EAA6E;;;AAG7E,4FAA4F;;;AAG5F,gFAAgF;;;AAGhF,4FAA4F;;;AAG5F;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,8EAAiB;AAC5C;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,QAAQ;AACR;AACA,oCAAoC,8EAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA,kBAAkB,kDAAO;AACzB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;;AAEA,2EAA2E;;;AAG3E,0FAA0F;;AAE1F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,kDAAO;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,kEAAK;AAC9B;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAO;AACjC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA,MAAM;;;AAGN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA,UAAU;;;AAGV;AACA;AACA;;AAEA,YAAY,+CAAI;AAChB;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA,kBAAkB,kDAAO;AACzB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,QAAQ,+DAAE;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA,cAAc,+DAAE;AAChB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA,YAAY,+DAAE;AACd;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA,2BAA2B,kDAAO;AAClC;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAO;AACnC;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA,kBAAkB,kDAAO;AACzB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA,2BAA2B,8EAAiB;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,+CAAI;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,uBAAuB,8EAAiB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR,YAAY,+DAAE;AACd;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kFAAkF;;AAElF,uFAAuF;;;AAGvF,+EAA+E;;;AAG/E,qFAAqF;;;AAGrF,kHAAkH;;;AAGlH,mGAAmG;;;AAGnG,sGAAsG;;;AAGtG;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA,mGAAmG;;AAEnG;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;;AAEA;AACA,uBAAuB,8EAAiB;AACxC;AACA;AACA;;AAEA;AACA,QAAQ,kEAAK;AACb;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,+CAAI;AACf;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf,aAAa,mDAAQ;AACrB,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA,KAAK;AACL;;AAEA;AACA,QAAQ,+DAAE;AACV;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,+CAAI;AACjB;AACA,OAAO;AACP,MAAM;AACN,aAAa,+CAAI;AACjB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,WAAW,+CAAI;AACf;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+CAAI;AACf;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,+CAAI;AACvB;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,SAAS,+CAAI;AACb;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;;;AAGA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM,sDAAW;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wGAAwG;;AAExG;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB;;AAEvB;AACA;AACA,EAAE,kDAAO;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,qBAAqB,GAAG,GAAG,QAAQ;AACnC,KAAK;AACL,GAAG,GAAG;;AAEN;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ,MAAM,kDAAO;AACb;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,6CAA6C,GAAG;AAChD,+CAA+C,KAAK;AACpD;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,eAAe,4DAAK;AACpB;AACA;AACA;AACA;AACA,oDAAoD,WAAW,GAAG,MAAM;;AAExE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,0EAAmB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,6EAAsB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,4EAAqB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,sEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR,aAAa,sDAAW;AACxB;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;;AAEA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,YAAY;;AAEZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA,UAAU,sBAAsB;;AAEhC;AACA,0DAA0D,aAAa;AACvE;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,WAAW,sDAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;;;AAGN;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA,8CAA8C,UAAU;AACxD;AACA,OAAO;AACP;;AAEA;AACA,8CAA8C,UAAU;AACxD;AACA,OAAO;AACP;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA,WAAW,mDAAQ;AACnB;AACA;AACA;;AAEA;AACA,yDAAyD,QAAQ;AACjE;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ,uCAAuC,KAAK,iBAAiB,GAAG;AAChE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,kDAAO;AAChB;;AAEA;AACA,SAAS,+CAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,WAAW,wBAAwB,MAAM;AACzD;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG;AACN;;AAEA,iDAAiD;AACjD;;AAEA,mDAAmD;;AAEnD;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH,SAAS,kDAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;AAC1C;AACA;AACA,gBAAgB,WAAW,kBAAkB,MAAM;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA,IAAI;;;AAGJ;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS,iFAAG;AACZ;AACA;AACA,cAAc,iFAAG;AACjB;AACA,gBAAgB,iFAAG;AACnB;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,SAAS,4EAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA;AACA,qBAAqB,kDAAO;AAC5B,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH,SAAS,kDAAO;AAChB;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA,gBAAgB,WAAW,mBAAmB,MAAM;AACpD,oBAAoB;;AAEpB;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS,iFAAG;AACZ;AACA;AACA,cAAc,iFAAG;AACjB;AACA,gBAAgB,iFAAG;AACnB;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,SAAS,4EAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,SAAS,yEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,8EAAiB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,8EAAiB;AAC1C;AACA;AACA;AACA;AACA,sBAAsB,kDAAO;AAC7B,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS,IAAI;;AAEb;AACA,QAAQ;;;AAGR;AACA,+DAA+D;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kGAAkG;;AAElG;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG,GAAG;;AAEN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,cAAc;AACjC,WAAW,QAAQ,YAAY,GAAG;AAClC;;;AAGA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,gCAAgC,sEAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,iFAAG;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,iFAAG;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,iFAAG;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,iFAAG;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA,QAAQ,+DAAE;AACV,aAAa,iFAAG;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,WAAW,iFAAG;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA,QAAQ,+DAAE;AACV,aAAa,iFAAG;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,WAAW,iFAAG;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA,QAAQ,+DAAE;AACV,aAAa,iFAAG;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,QAAQ,+DAAE;AACV,aAAa,iFAAG;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,QAAQ,+DAAE;AACV,aAAa,iFAAG;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,QAAQ,+DAAE;AACV,aAAa,iFAAG;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,QAAQ,+DAAE;AACV,aAAa,iFAAG;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,WAAW,iFAAG;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,WAAW,iFAAG;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,aAAa,8EAAiB;AAC9B;AACA,SAAS,+DAAE;AACX;;AAEoc;AACpc;;;;;;;;;;;;;;;;;;ACztvB0C;;AAE1C;AACA;AACA,IAAI,mDAAE;AACN,IAAI,mDAAE;AACN,IAAI,mDAAE;AACN,IAAI,mDAAE;AACN,IAAI,mDAAE;AACN,IAAI,mDAAE;AACN,IAAI,mDAAE;AACN;AACA;AACA;;AAEA,MAAM,mDAAE;AACR;AACA;;AAEA,MAAM,mDAAE;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEO;AACP;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9DqB;;AAIH;;;AAGX;;AAEP,MAAM,8CAAE;AACR;AACA;;AAEA,MAAM,8CAAE;AACR,eAAe,iDAAK;;AAEpB,cAAc,8CAAE;AAChB;AACA;;AAEA;AACA;;AAEA,MAAM,8CAAE;AACR,aAAa,6DAAiB;AAC9B;;AAEA;AACA;;AAEO;AACP,oBAAoB,6DAAiB;AACrC;;AAEO;AACP,sBAAsB,6DAAiB;AACvC;;AAEO;AACP,WAAW,6DAAiB;AAC5B;;AAEA;AACA,IAAI,iDAAO;AACX,UAAU,8CAAE;AACZ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;;;;;ACjEkB;;;AAGlB;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,QAAQ;AACpB;AACA,YAAY;AACZ;AACO;AACP;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,eAAe;AAC1B;AACA,YAAY;AACZ;AACO;AACP,SAAS,8CAAI;AACb;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA,YAAY;AACZ;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY;AACZ;AACO;AACP;AACA;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB;AAChB;;AAEA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK,KAA6B;AAClC;AACA;AACA,GAAG,SAAS,IAA4E;AACxF;AACA,EAAE,iCAAqB,EAAE,mCAAE;AAC3B;AACA,GAAG;AAAA,kGAAC;AACJ,GAAG,KAAK,EAEN;AACF,CAAC;;;;;;;;;;;;;;;;;ACrDiB;;;AAGlB;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA,MAAM,oDAAU,UAAU,kDAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,oDAAU;AAChB;AACA;AACA;AACA;AACA;;AAEA,MAAM,kDAAQ;AACd;AACA;AACA;;AAEA,OAAO,oDAAU;AACjB;AACA;;AAEA,OAAO,iDAAO;AACd;AACA;;AAEA;;AAEA,EAAE,iDAAO;;AAET;AACA,yEAAyE,WAAW;;AAEpF;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAO;;AAEP;AACA,MAAM;AACN;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA,QAAQ,oDAAU,YAAY,kDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;AC/ID;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACe;AACf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA,aAAa,UAAU;AACvB;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,YAAY;AACvB;AACA,aAAa,UAAU;AACvB;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,YAAY,QAAQ;AACpB;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACrFmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACO;AACP;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,eAAe;AAC1B;AACO;AACP,SAAS,iDAAO;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvEwC;;AAE0B;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;AACf,EAAE,wEAAuB;;AAEzB;AACA;;AAEA;;AAEA,4DAAQ,eAAe,mEAAkB;;;AAGzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;AACf;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AC7C4B;;AAE5B,iEAAe;AACf;AACA,mBAAmB,8CAAK;AACxB,CAAC,EAAC;;;;;;;;;;;;;;;;;ACLkC;;AAEpC,iEAAe;AACf,wBAAwB,kDAAS;AACjC,CAAC;;;;;;;;;;;;;;;ACJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI,KAAK,aAAa;AACnD;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;AACe;;AAEf;;AAEA,4BAA4B,IAAI,IAAI;AACpC,kCAAkC,YAAY;AAC9C,GAAG;AACH;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1BA;AACA,mBAAmB,aAAa;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;;AAEA;AACA;AACA,IAAI,2BAA2B,UAAU,QAAQ;;;AAGjD,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,GAAG,EAAC;AACnB;;;;;;;;;;;;;;;;ACpKA,gBAAgB,sDAAsD,aAAa,mDAAmD,GAAwB;AAC9J;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,iBAAiB;AAC7B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,UAAU;AACtB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB,YAAY,KAAK;AACjB;AACA,YAAY,KAAK;AACjB;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,UAAU;AACtB;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY,QAAQ,WAAW;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,gGAAgG,aAAa;AAC7G;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,iBAAiB;AAC7B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,qBAAqB;AAC3C;;AAEA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,UAAU;AACtB;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wEAAwE,aAAa;AACrF;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA,YAAY,UAAU;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA,YAAY,UAAU;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA,2FAA2F,aAAa;AACxG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,WAAW,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,WAAW,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA,gGAAgG,eAAe;AAC/G;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEiU;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrrBjU;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,WAAW;AACtB;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA,6FAA6F,aAAa;AAC1G;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,SAAS;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEyK;;;;;;;;;;;AChmBzK;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;;AAEA,oBAAoB,mBAAmB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAc,eAAe;AAC7B;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,EAAE;AAC9B,8BAA8B,EAAE;;AAEhC;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA,cAAc,qBAAqB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,sDAAsD;AAClE;AACA,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEmM;;;;;;;;;;;;;;;;;;UCt0BnM;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;;;;;WCVA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://bpmn-js-spiffworkflow/./node_modules/@bpmn-io/element-templates-validator/dist/index.esm.js","webpack://bpmn-js-spiffworkflow/./node_modules/@bpmn-io/extract-process-variables/dist/index.js","webpack://bpmn-js-spiffworkflow/./node_modules/@bpmn-io/extract-process-variables/zeebe/index.js","webpack://bpmn-js-spiffworkflow/./node_modules/@bpmn-io/properties-panel/dist/index.esm.js","webpack://bpmn-js-spiffworkflow/./node_modules/@bpmn-io/properties-panel/preact/compat/dist/compat.module.js","webpack://bpmn-js-spiffworkflow/./node_modules/@bpmn-io/properties-panel/preact/dist/preact.module.js","webpack://bpmn-js-spiffworkflow/./node_modules/@bpmn-io/properties-panel/preact/hooks/dist/hooks.module.js","webpack://bpmn-js-spiffworkflow/./node_modules/@bpmn-io/properties-panel/preact/jsx-runtime/dist/jsxRuntime.module.js","webpack://bpmn-js-spiffworkflow/./node_modules/array-move/index.js","webpack://bpmn-js-spiffworkflow/./src/DataObject/DataObjectHelpers.js","webpack://bpmn-js-spiffworkflow/./src/DataObject/DataObjectInterceptor.js","webpack://bpmn-js-spiffworkflow/./src/DataObject/DataObjectRenderer.js","webpack://bpmn-js-spiffworkflow/./src/DataObject/DataObjectRules.js","webpack://bpmn-js-spiffworkflow/./src/DataObject/propertiesPanel/DataObjectArray.js","webpack://bpmn-js-spiffworkflow/./src/DataObject/propertiesPanel/DataObjectPropertiesProvider.js","webpack://bpmn-js-spiffworkflow/./src/DataObject/propertiesPanel/DataObjectSelect.js","webpack://bpmn-js-spiffworkflow/./src/InputOutput/IoInterceptor.js","webpack://bpmn-js-spiffworkflow/./src/InputOutput/IoPalette.js","webpack://bpmn-js-spiffworkflow/./src/InputOutput/IoRules.js","webpack://bpmn-js-spiffworkflow/./src/callActivity/propertiesPanel/CallActivityPropertiesProvider.js","webpack://bpmn-js-spiffworkflow/./src/conditions/propertiesPanel/ConditionsPropertiesProvider.js","webpack://bpmn-js-spiffworkflow/./src/constants.js","webpack://bpmn-js-spiffworkflow/./src/extensions/propertiesPanel/ExtensionsPropertiesProvider.js","webpack://bpmn-js-spiffworkflow/./src/extensions/propertiesPanel/SpiffExtensionCalledDecision.js","webpack://bpmn-js-spiffworkflow/./src/extensions/propertiesPanel/SpiffExtensionInstructionsForEndUser.js","webpack://bpmn-js-spiffworkflow/./src/extensions/propertiesPanel/SpiffExtensionServiceProperties.js","webpack://bpmn-js-spiffworkflow/./src/extensions/propertiesPanel/SpiffExtensionTextInput.js","webpack://bpmn-js-spiffworkflow/./src/extensions/propertiesPanel/SpiffScriptGroup.js","webpack://bpmn-js-spiffworkflow/./src/helpers.js","webpack://bpmn-js-spiffworkflow/./src/index.js","webpack://bpmn-js-spiffworkflow/./src/messages/MessageHelpers.js","webpack://bpmn-js-spiffworkflow/./src/messages/propertiesPanel/CorrelationKeysArray.js","webpack://bpmn-js-spiffworkflow/./src/messages/propertiesPanel/CorrelationPropertiesArray.js","webpack://bpmn-js-spiffworkflow/./src/messages/propertiesPanel/MessageArray.js","webpack://bpmn-js-spiffworkflow/./src/messages/propertiesPanel/MessageCorrelationPropertiesArray.js","webpack://bpmn-js-spiffworkflow/./src/messages/propertiesPanel/MessagePayload.js","webpack://bpmn-js-spiffworkflow/./src/messages/propertiesPanel/MessageSelect.js","webpack://bpmn-js-spiffworkflow/./src/messages/propertiesPanel/MessageVariable.js","webpack://bpmn-js-spiffworkflow/./src/messages/propertiesPanel/MessagesPropertiesProvider.js","webpack://bpmn-js-spiffworkflow/./node_modules/bpmn-js-properties-panel/dist/index.esm.js","webpack://bpmn-js-spiffworkflow/./node_modules/bpmn-js/lib/features/label-editing/LabelUtil.js","webpack://bpmn-js-spiffworkflow/./node_modules/bpmn-js/lib/util/DiUtil.js","webpack://bpmn-js-spiffworkflow/./node_modules/bpmn-js/lib/util/ModelUtil.js","webpack://bpmn-js-spiffworkflow/./node_modules/classnames/index.js","webpack://bpmn-js-spiffworkflow/./node_modules/diagram-js/lib/command/CommandInterceptor.js","webpack://bpmn-js-spiffworkflow/./node_modules/diagram-js/lib/draw/BaseRenderer.js","webpack://bpmn-js-spiffworkflow/./node_modules/diagram-js/lib/features/keyboard/KeyboardUtil.js","webpack://bpmn-js-spiffworkflow/./node_modules/diagram-js/lib/features/rules/RuleProvider.js","webpack://bpmn-js-spiffworkflow/./node_modules/diagram-js/lib/features/rules/Rules.js","webpack://bpmn-js-spiffworkflow/./node_modules/diagram-js/lib/features/rules/index.js","webpack://bpmn-js-spiffworkflow/./node_modules/diagram-js/lib/i18n/translate/index.js","webpack://bpmn-js-spiffworkflow/./node_modules/diagram-js/lib/i18n/translate/translate.js","webpack://bpmn-js-spiffworkflow/./node_modules/diagram-js/lib/util/Collections.js","webpack://bpmn-js-spiffworkflow/./node_modules/diagram-js/lib/util/IdGenerator.js","webpack://bpmn-js-spiffworkflow/./node_modules/ids/dist/index.esm.js","webpack://bpmn-js-spiffworkflow/./node_modules/inherits-browser/dist/index.es.js","webpack://bpmn-js-spiffworkflow/./node_modules/inherits/inherits_browser.js","webpack://bpmn-js-spiffworkflow/./node_modules/min-dash/dist/index.esm.js","webpack://bpmn-js-spiffworkflow/./node_modules/min-dom/dist/index.esm.js","webpack://bpmn-js-spiffworkflow/./node_modules/semver-compare/index.js","webpack://bpmn-js-spiffworkflow/./node_modules/tiny-svg/dist/index.esm.js","webpack://bpmn-js-spiffworkflow/webpack/bootstrap","webpack://bpmn-js-spiffworkflow/webpack/runtime/compat get default export","webpack://bpmn-js-spiffworkflow/webpack/runtime/define property getters","webpack://bpmn-js-spiffworkflow/webpack/runtime/harmony module decorator","webpack://bpmn-js-spiffworkflow/webpack/runtime/hasOwnProperty shorthand","webpack://bpmn-js-spiffworkflow/webpack/runtime/make namespace object","webpack://bpmn-js-spiffworkflow/webpack/before-startup","webpack://bpmn-js-spiffworkflow/webpack/startup","webpack://bpmn-js-spiffworkflow/webpack/after-startup"],"sourcesContent":["import { forEach, filter } from 'min-dash';\n\nvar name$1 = \"@camunda/element-templates-json-schema\";\nvar version$1 = \"0.10.0\";\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\n// do NOT remove this file - it would break pre-compiled schemas\n// https://github.com/ajv-validator/ajv/issues/889\nvar equal = fastDeepEqual;\n\nvar standaloneValidator = validate14$1;var _default$1 = validate14$1;const schema17$1 = {\"type\":\"object\",\"allOf\":[{\"required\":[\"name\",\"id\",\"appliesTo\",\"properties\"],\"properties\":{\"name\":{\"$id\":\"#/name\",\"type\":\"string\",\"description\":\"The name of the element template.\"},\"id\":{\"$id\":\"#/id\",\"type\":\"string\",\"description\":\"The identifier of the element template.\"},\"description\":{\"$id\":\"#/description\",\"type\":\"string\",\"description\":\"The description of the element template.\"},\"version\":{\"$id\":\"#/version\",\"type\":\"number\",\"description\":\"Optional version of the template. If you add a version to a template it will be considered unique based on its ID and version. Two templates can have the same ID if their version is different.\"},\"isDefault\":{\"$id\":\"#/isDefault\",\"type\":\"boolean\",\"description\":\"Indicates whether the element template is a default template.\"},\"appliesTo\":{\"$id\":\"#/appliesTo\",\"type\":\"array\",\"description\":\"List of BPMN types the template can be applied to.\",\"default\":[],\"items\":{\"$id\":\"#/appliesTo/items\",\"type\":\"string\",\"pattern\":\"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\",\"allOf\":[{\"examples\":[\"bpmn:Task\",\"bpmn:ServiceTask\",\"bpmn:SequenceFlow\",\"bpmn:Process\",\"bpmn:StartEvent\",\"bpmn:Gateway\"]}],\"errorMessage\":{\"pattern\":\"invalid item for \\\"appliesTo\\\", should contain namespaced property, example: \\\"bpmn:Task\\\"\"}}},\"elementType\":{\"$id\":\"#/elementType\",\"type\":\"object\",\"description\":\"The BPMN type the element will be transformed into.\",\"default\":{},\"required\":[\"value\"],\"properties\":{\"value\":{\"$id\":\"#/elementType/value\",\"type\":\"string\",\"pattern\":\"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\",\"allOf\":[{\"examples\":[\"bpmn:ServiceTask\",\"bpmn:UserTask\",\"bpmn:StartEvent\",\"bpmn:ExclusiveGateway\",\"bpmn:ParallelGateway\"]}],\"errorMessage\":{\"pattern\":\"invalid item for \\\"elementType\\\", should contain namespaced property, example: \\\"bpmn:Task\\\"\"}}},\"errorMessage\":{\"required\":{\"value\":\"missing elementType value\"}}},\"metadata\":{\"$id\":\"#/metadata\",\"type\":\"object\",\"description\":\"Some custom properties for further configuration.\",\"default\":{}},\"entriesVisible\":{\"$id\":\"#/entriesVisible\",\"type\":\"boolean\",\"description\":\"Select whether non-template entries are visible in the properties panel.\"},\"groups\":{\"$id\":\"#/groups\",\"type\":\"array\",\"description\":\"Custom fields can be ordered together via groups.\",\"allOf\":[{\"examples\":[[{\"id\":\"group-1\",\"label\":\"My Group\"}]]}],\"items\":{\"$id\":\"#/groups/group\",\"type\":\"object\",\"default\":{},\"required\":[\"id\",\"label\"],\"properties\":{\"id\":{\"$id\":\"#/groups/group/id\",\"type\":\"string\",\"description\":\"The id of the custom group\"},\"label\":{\"$id\":\"#/groups/group/label\",\"type\":\"string\",\"description\":\"The label of the custom group\"}},\"errorMessage\":{\"required\":{\"id\":\"missing id for group \\\"${0#}\\\"\",\"label\":\"missing label for group \\\"${0#}\\\"\"}}}},\"documentationRef\":{\"$id\":\"#/documentationRef\",\"type\":\"string\",\"pattern\":\"^(https|http)://.*\",\"errorMessage\":{\"pattern\":\"Malformed documentation URL, must match \\\"^(https|http)://.*\\\"\"}}},\"errorMessage\":{\"required\":{\"name\":\"missing template name\",\"id\":\"missing template id\",\"appliesTo\":\"missing appliesTo=[]\",\"properties\":\"missing properties=[]\"}}}],\"properties\":{\"properties\":{\"$ref\":\"#/definitions/properties\",\"$id\":\"#/properties\"},\"scopes\":{\"$id\":\"#/scopes\",\"type\":\"array\",\"description\":\"Special scoped bindings that allow you to configure nested elements.\",\"allOf\":[{\"examples\":[[{\"type\":\"bpmn:Error\",\"id\":\"Error_1\",\"properties\":[{\"value\":\"error-code\",\"binding\":{\"type\":\"property\",\"name\":\"errorCode\"}},{\"value\":\"error-message\",\"binding\":{\"type\":\"property\",\"name\":\"camunda:errorMessage\"}},{\"value\":\"error-name\",\"binding\":{\"type\":\"property\",\"name\":\"name\"}}]}]]}],\"items\":{\"$id\":\"#/scopes/item\",\"type\":\"object\",\"default\":{},\"properties\":{\"type\":{\"$id\":\"#scopes/item/type\",\"type\":\"string\",\"description\":\"The type of a scope.\",\"enum\":[\"camunda:Connector\",\"bpmn:Error\"],\"errorMessage\":\"invalid scope type ${0}; must be any of { camunda:Connector, bpmn:Error }\"},\"properties\":{\"$id\":\"#/scopes/properties\",\"description\":\"List of properties of a scope.\",\"default\":[],\"allOf\":[{\"$ref\":\"#/definitions/properties/allOf/0\"},{\"$ref\":\"#/definitions/properties/allOf/1\"}]}},\"required\":[\"type\",\"properties\"],\"allOf\":[{\"if\":{\"properties\":{\"type\":{\"enum\":[\"bpmn:Error\"]}},\"required\":[\"type\"]},\"then\":{\"required\":[\"id\"],\"errorMessage\":\"invalid scope ${0/type}, missing id\"}}],\"errorMessage\":{\"required\":{\"type\":\"invalid scope, missing type\",\"properties\":\"invalid scope ${0/type}, missing properties=[]\"}}}}}};const schema18$1 = {\"allOf\":[{\"type\":\"array\",\"description\":\"List of properties of the element template.\",\"allOf\":[{\"examples\":[[{\"label\":\"Name\",\"type\":\"String\",\"binding\":{\"type\":\"property\",\"name\":\"name\"}}]]}],\"items\":{\"type\":\"object\",\"default\":{},\"allOf\":[{\"if\":{\"properties\":{\"type\":{\"const\":\"Dropdown\"}},\"required\":[\"type\"]},\"then\":{\"required\":[\"choices\"],\"errorMessage\":\"must provide choices=[] with \\\"Dropdown\\\" type\"}}],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the property.\"},\"value\":{\"$id\":\"#/properties/property/value\",\"type\":[\"string\",\"boolean\"],\"description\":\"The value of a control field.\"},\"description\":{\"$id\":\"#/properties/property/description\",\"type\":\"string\",\"description\":\"The description of a control field.\"},\"label\":{\"$id\":\"#/properties/property/label\",\"type\":\"string\",\"description\":\"The label of a control field.\"},\"type\":{\"$id\":\"#/properties/property/type\",\"type\":\"string\",\"description\":\"The type of a control field.\"},\"editable\":{\"$id\":\"#/properties/property/editable\",\"type\":\"boolean\",\"description\":\"Indicates whether a control field is editable or not.\"},\"choices\":{\"$id\":\"#/properties/property/choices\",\"type\":\"array\",\"description\":\"The choices for dropdown fields.\",\"default\":[],\"items\":{\"$id\":\"#/properties/property/choices/item\",\"type\":\"object\",\"default\":{},\"properties\":{\"name\":{\"$id\":\"#/properties/property/choices/item/name\",\"type\":\"string\",\"description\":\"The name of a choice.\"},\"value\":{\"$id\":\"#/properties/property/choices/item/value\",\"type\":\"string\",\"description\":\"The value of a choice.\"}},\"required\":[\"value\",\"name\"],\"errorMessage\":{\"required\":\"{ name, value } must be specified for \\\"Dropdown\\\" choices\"}}},\"constraints\":{\"$id\":\"#/properties/property/constraints\",\"type\":\"object\",\"description\":\"The validation constraints of a control field.\",\"allOf\":[{\"examples\":[{\"notEmpty\":true}]}],\"properties\":{\"notEmpty\":{\"$id\":\"#/properties/property/constraints/notEmpty\",\"type\":\"boolean\",\"description\":\"The control field must not be empty.\"},\"minLength\":{\"$id\":\"#/properties/property/constraints/minLength\",\"type\":\"number\",\"description\":\"The minimal length of a control field value.\"},\"maxLength\":{\"$id\":\"#/properties/property/constraints/maxLength\",\"type\":\"number\",\"description\":\"The maximal length for a control field value.\"},\"pattern\":{\"$id\":\"#/properties/property/constraints/pattern\",\"description\":\"A regular expression pattern for a constraint.\",\"oneOf\":[{\"type\":\"object\",\"default\":{},\"properties\":{\"value\":{\"$id\":\"#/properties/property/constraints/pattern/value\",\"type\":\"string\",\"description\":\"The regular expression of a pattern.\"},\"message\":{\"$id\":\"#/properties/property/constraints/pattern/message\",\"type\":\"string\",\"description\":\"The validation message of a pattern.\"}}},{\"type\":\"string\"}]}}},\"group\":{\"$id\":\"#/properties/property/group\",\"type\":\"string\",\"description\":\"The custom group of a control field.\"},\"condition\":{\"$id\":\"#/condition\",\"type\":\"object\",\"description\":\"Condition to activate the binding.\",\"allOf\":[{\"examples\":[{\"type\":\"simple\",\"property\":\"httpMethod\",\"equals\":\"GET\"},{\"type\":\"simple\",\"property\":\"httpMethod\",\"oneOf\":[\"POST\",\"PUT\",\"DELETE\"]}]}],\"required\":[\"property\"],\"properties\":{\"type\":{\"$id\":\"#/condition/type\",\"const\":\"simple\",\"description\":\"The type of the condition.\",\"default\":\"simple\"},\"property\":{\"$id\":\"#/condition/property\",\"type\":\"string\",\"description\":\"The id of the property to check.\"}},\"oneOf\":[{\"properties\":{\"equals\":{\"type\":[\"string\",\"number\",\"boolean\"]}},\"required\":[\"equals\"]},{\"properties\":{\"oneOf\":{\"type\":\"array\",\"items\":{\"type\":[\"string\",\"number\"]}}},\"required\":[\"oneOf\"]}],\"errorMessage\":{\"required\":{\"property\":\"missing property name for condition\"}}}}}},{\"$schema\":\"http://json-schema.org/draft-07/schema\",\"type\":\"array\",\"description\":\"List of properties of the element template.\",\"items\":{\"type\":\"object\",\"default\":{},\"required\":[\"binding\"],\"allOf\":[{\"if\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"const\":\"property\"}},\"required\":[\"type\"]}},\"required\":[\"binding\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"String\",\"Text\",\"Hidden\",\"Dropdown\",\"Boolean\"],\"errorMessage\":\"invalid property type ${0} for binding type \\\"property\\\"; must be any of { String, Text, Hidden, Dropdown, Boolean }\"}}}},{\"if\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"const\":\"camunda:executionListener\"}},\"required\":[\"type\"]}},\"required\":[\"binding\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"Hidden\"],\"errorMessage\":\"invalid property type ${1/type} for binding type \\\"camunda:executionListener\\\"; must be \\\"Hidden\\\"\"}}}},{\"if\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"enum\":[\"camunda:property\",\"camunda:outputParameter\",\"camunda:in\",\"camunda:in:businessKey\",\"camunda:out\",\"camunda:errorEventDefinition\"]}},\"required\":[\"type\"]}},\"required\":[\"binding\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"String\",\"Hidden\",\"Dropdown\"],\"errorMessage\":\"invalid property type ${0} for binding type ${1/binding/type}; must be any of { String, Hidden, Dropdown }\"}}}},{\"if\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"enum\":[\"camunda:inputParameter\",\"camunda:field\"]}},\"required\":[\"type\"]}},\"required\":[\"binding\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"String\",\"Text\",\"Hidden\",\"Dropdown\"],\"errorMessage\":\"invalid property type ${0} for binding type ${1/binding/type}; must be any of { String, Text, Hidden, Dropdown }\"}}}}],\"properties\":{\"binding\":{\"$id\":\"#/properties/property/binding\",\"type\":\"object\",\"description\":\"Specifying how the property is mapped to BPMN or Camunda extension elements and attributes.\",\"required\":[\"type\"],\"allOf\":[{\"if\":{\"properties\":{\"type\":{\"enum\":[\"property\",\"camunda:property\",\"camunda:inputParameter\",\"camunda:field\"]}},\"required\":[\"type\"]},\"then\":{\"required\":[\"name\"],\"errorMessage\":\"property.binding ${0/type} requires name\"}},{\"if\":{\"properties\":{\"type\":{\"const\":\"camunda:outputParameter\"}},\"required\":[\"type\"]},\"then\":{\"required\":[\"source\"],\"errorMessage\":\"property.binding ${0/type} requires source\"}},{\"if\":{\"properties\":{\"type\":{\"const\":\"camunda:in\"}},\"required\":[\"type\"]},\"then\":{\"anyOf\":[{\"required\":[\"variables\"]},{\"required\":[\"target\"]}],\"errorMessage\":\"property.binding ${0/type} requires variables, target, or both\"}},{\"if\":{\"properties\":{\"type\":{\"const\":\"camunda:out\"}},\"required\":[\"type\"]},\"then\":{\"oneOf\":[{\"required\":[\"variables\"],\"not\":{\"anyOf\":[{\"required\":[\"source\"]},{\"required\":[\"sourceExpression\"]}]}},{\"required\":[\"source\"],\"not\":{\"anyOf\":[{\"required\":[\"variables\"]},{\"required\":[\"sourceExpression\"]}]}},{\"required\":[\"sourceExpression\"],\"not\":{\"anyOf\":[{\"required\":[\"variables\"]},{\"required\":[\"source\"]}]}},{\"required\":[\"variables\",\"sourceExpression\"],\"not\":{\"required\":[\"source\"]}},{\"required\":[\"variables\",\"source\"],\"not\":{\"required\":[\"sourceExpression\"]}}],\"errorMessage\":\"property.binding ${0/type} requires one of the following: variables, sourceExpression, source, (sourceExpression and variables), or (source and variables)\"}},{\"if\":{\"properties\":{\"type\":{\"const\":\"camunda:errorEventDefinition\"}},\"required\":[\"type\"]},\"then\":{\"oneOf\":[{\"required\":[\"errorRef\"]}],\"errorMessage\":\"property.binding ${0/type} requires errorRef\"}},{\"examples\":[{\"type\":\"property\",\"name\":\"name\"},{\"type\":\"camunda:property\",\"name\":\"property\"},{\"type\":\"camunda:inputParameter\",\"name\":\"input\"},{\"type\":\"camunda:outputParameter\",\"source\":\"output\"},{\"type\":\"camunda:in\",\"target\":\"target\"},{\"type\":\"camunda:in:businessKey\"},{\"type\":\"camunda:out\",\"source\":\"output\"},{\"type\":\"camunda:executionListener\",\"event\":\"start\"},{\"type\":\"camunda:field\",\"name\":\"field\"},{\"type\":\"camunda:errorEventDefinition\",\"errorRef\":\"error\"},{\"type\":\"camunda:errorEventDefinition\",\"errorRef\":\"error\"}]}],\"properties\":{\"type\":{\"$id\":\"#/properties/property/binding/type\",\"type\":\"string\",\"enum\":[\"property\",\"camunda:property\",\"camunda:inputParameter\",\"camunda:outputParameter\",\"camunda:in\",\"camunda:out\",\"camunda:in:businessKey\",\"camunda:executionListener\",\"camunda:field\",\"camunda:errorEventDefinition\"],\"description\":\"The type of a property binding.\",\"errorMessage\":\"invalid property.binding type ${0}; must be any of { property, camunda:property, camunda:inputParameter, camunda:outputParameter, camunda:in, camunda:out, camunda:in:businessKey, camunda:executionListener, camunda:field, camunda:errorEventDefinition }\"},\"name\":{\"$id\":\"#/properties/property/binding/name\",\"type\":\"string\",\"description\":\"The name of a property binding.\"},\"event\":{\"$id\":\"#/properties/property/binding/event\",\"type\":\"string\",\"description\":\"The event type of a property binding (camunda:executionListener).\"},\"scriptFormat\":{\"$id\":\"#/properties/property/binding/scriptFormat\",\"type\":\"string\",\"description\":\"The script format of a property binding (camunda:outputParameter, camunda:inputParameter).\"},\"source\":{\"$id\":\"#/properties/property/binding/source\",\"type\":\"string\",\"description\":\"The source value of a property binding (camunda:outputParameter, camunda:out).\"},\"target\":{\"$id\":\"#/properties/property/binding/target\",\"type\":\"string\",\"description\":\"The target value of a property binding (camunda:in).\"},\"expression\":{\"$id\":\"#/properties/property/binding/expression\",\"type\":\"boolean\",\"description\":\"Indicates whether the control field value is an expression (camunda:in, camunda:field).\"},\"variables\":{\"$id\":\"#/properties/property/binding/variables\",\"type\":\"string\",\"enum\":[\"all\",\"local\"],\"description\":\"The variable mapping of a property binding (camunda:in).\"},\"sourceExpression\":{\"$id\":\"#/properties/property/binding/sourceExpression\",\"type\":\"string\",\"description\":\"The string containing the expression for the source attribute (camunda:out).\"}}}},\"errorMessage\":{\"required\":\"missing binding for property \\\"${0#}\\\"\"}}}]};const schema19 = {\"type\":\"array\",\"description\":\"List of properties of the element template.\",\"allOf\":[{\"examples\":[[{\"label\":\"Name\",\"type\":\"String\",\"binding\":{\"type\":\"property\",\"name\":\"name\"}}]]}],\"items\":{\"type\":\"object\",\"default\":{},\"allOf\":[{\"if\":{\"properties\":{\"type\":{\"const\":\"Dropdown\"}},\"required\":[\"type\"]},\"then\":{\"required\":[\"choices\"],\"errorMessage\":\"must provide choices=[] with \\\"Dropdown\\\" type\"}}],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the property.\"},\"value\":{\"$id\":\"#/properties/property/value\",\"type\":[\"string\",\"boolean\"],\"description\":\"The value of a control field.\"},\"description\":{\"$id\":\"#/properties/property/description\",\"type\":\"string\",\"description\":\"The description of a control field.\"},\"label\":{\"$id\":\"#/properties/property/label\",\"type\":\"string\",\"description\":\"The label of a control field.\"},\"type\":{\"$id\":\"#/properties/property/type\",\"type\":\"string\",\"description\":\"The type of a control field.\"},\"editable\":{\"$id\":\"#/properties/property/editable\",\"type\":\"boolean\",\"description\":\"Indicates whether a control field is editable or not.\"},\"choices\":{\"$id\":\"#/properties/property/choices\",\"type\":\"array\",\"description\":\"The choices for dropdown fields.\",\"default\":[],\"items\":{\"$id\":\"#/properties/property/choices/item\",\"type\":\"object\",\"default\":{},\"properties\":{\"name\":{\"$id\":\"#/properties/property/choices/item/name\",\"type\":\"string\",\"description\":\"The name of a choice.\"},\"value\":{\"$id\":\"#/properties/property/choices/item/value\",\"type\":\"string\",\"description\":\"The value of a choice.\"}},\"required\":[\"value\",\"name\"],\"errorMessage\":{\"required\":\"{ name, value } must be specified for \\\"Dropdown\\\" choices\"}}},\"constraints\":{\"$id\":\"#/properties/property/constraints\",\"type\":\"object\",\"description\":\"The validation constraints of a control field.\",\"allOf\":[{\"examples\":[{\"notEmpty\":true}]}],\"properties\":{\"notEmpty\":{\"$id\":\"#/properties/property/constraints/notEmpty\",\"type\":\"boolean\",\"description\":\"The control field must not be empty.\"},\"minLength\":{\"$id\":\"#/properties/property/constraints/minLength\",\"type\":\"number\",\"description\":\"The minimal length of a control field value.\"},\"maxLength\":{\"$id\":\"#/properties/property/constraints/maxLength\",\"type\":\"number\",\"description\":\"The maximal length for a control field value.\"},\"pattern\":{\"$id\":\"#/properties/property/constraints/pattern\",\"description\":\"A regular expression pattern for a constraint.\",\"oneOf\":[{\"type\":\"object\",\"default\":{},\"properties\":{\"value\":{\"$id\":\"#/properties/property/constraints/pattern/value\",\"type\":\"string\",\"description\":\"The regular expression of a pattern.\"},\"message\":{\"$id\":\"#/properties/property/constraints/pattern/message\",\"type\":\"string\",\"description\":\"The validation message of a pattern.\"}}},{\"type\":\"string\"}]}}},\"group\":{\"$id\":\"#/properties/property/group\",\"type\":\"string\",\"description\":\"The custom group of a control field.\"},\"condition\":{\"$id\":\"#/condition\",\"type\":\"object\",\"description\":\"Condition to activate the binding.\",\"allOf\":[{\"examples\":[{\"type\":\"simple\",\"property\":\"httpMethod\",\"equals\":\"GET\"},{\"type\":\"simple\",\"property\":\"httpMethod\",\"oneOf\":[\"POST\",\"PUT\",\"DELETE\"]}]}],\"required\":[\"property\"],\"properties\":{\"type\":{\"$id\":\"#/condition/type\",\"const\":\"simple\",\"description\":\"The type of the condition.\",\"default\":\"simple\"},\"property\":{\"$id\":\"#/condition/property\",\"type\":\"string\",\"description\":\"The id of the property to check.\"}},\"oneOf\":[{\"properties\":{\"equals\":{\"type\":[\"string\",\"number\",\"boolean\"]}},\"required\":[\"equals\"]},{\"properties\":{\"oneOf\":{\"type\":\"array\",\"items\":{\"type\":[\"string\",\"number\"]}}},\"required\":[\"oneOf\"]}],\"errorMessage\":{\"required\":{\"property\":\"missing property name for condition\"}}}}}};const schema20 = {\"$schema\":\"http://json-schema.org/draft-07/schema\",\"type\":\"array\",\"description\":\"List of properties of the element template.\",\"items\":{\"type\":\"object\",\"default\":{},\"required\":[\"binding\"],\"allOf\":[{\"if\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"const\":\"property\"}},\"required\":[\"type\"]}},\"required\":[\"binding\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"String\",\"Text\",\"Hidden\",\"Dropdown\",\"Boolean\"],\"errorMessage\":\"invalid property type ${0} for binding type \\\"property\\\"; must be any of { String, Text, Hidden, Dropdown, Boolean }\"}}}},{\"if\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"const\":\"camunda:executionListener\"}},\"required\":[\"type\"]}},\"required\":[\"binding\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"Hidden\"],\"errorMessage\":\"invalid property type ${1/type} for binding type \\\"camunda:executionListener\\\"; must be \\\"Hidden\\\"\"}}}},{\"if\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"enum\":[\"camunda:property\",\"camunda:outputParameter\",\"camunda:in\",\"camunda:in:businessKey\",\"camunda:out\",\"camunda:errorEventDefinition\"]}},\"required\":[\"type\"]}},\"required\":[\"binding\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"String\",\"Hidden\",\"Dropdown\"],\"errorMessage\":\"invalid property type ${0} for binding type ${1/binding/type}; must be any of { String, Hidden, Dropdown }\"}}}},{\"if\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"enum\":[\"camunda:inputParameter\",\"camunda:field\"]}},\"required\":[\"type\"]}},\"required\":[\"binding\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"String\",\"Text\",\"Hidden\",\"Dropdown\"],\"errorMessage\":\"invalid property type ${0} for binding type ${1/binding/type}; must be any of { String, Text, Hidden, Dropdown }\"}}}}],\"properties\":{\"binding\":{\"$id\":\"#/properties/property/binding\",\"type\":\"object\",\"description\":\"Specifying how the property is mapped to BPMN or Camunda extension elements and attributes.\",\"required\":[\"type\"],\"allOf\":[{\"if\":{\"properties\":{\"type\":{\"enum\":[\"property\",\"camunda:property\",\"camunda:inputParameter\",\"camunda:field\"]}},\"required\":[\"type\"]},\"then\":{\"required\":[\"name\"],\"errorMessage\":\"property.binding ${0/type} requires name\"}},{\"if\":{\"properties\":{\"type\":{\"const\":\"camunda:outputParameter\"}},\"required\":[\"type\"]},\"then\":{\"required\":[\"source\"],\"errorMessage\":\"property.binding ${0/type} requires source\"}},{\"if\":{\"properties\":{\"type\":{\"const\":\"camunda:in\"}},\"required\":[\"type\"]},\"then\":{\"anyOf\":[{\"required\":[\"variables\"]},{\"required\":[\"target\"]}],\"errorMessage\":\"property.binding ${0/type} requires variables, target, or both\"}},{\"if\":{\"properties\":{\"type\":{\"const\":\"camunda:out\"}},\"required\":[\"type\"]},\"then\":{\"oneOf\":[{\"required\":[\"variables\"],\"not\":{\"anyOf\":[{\"required\":[\"source\"]},{\"required\":[\"sourceExpression\"]}]}},{\"required\":[\"source\"],\"not\":{\"anyOf\":[{\"required\":[\"variables\"]},{\"required\":[\"sourceExpression\"]}]}},{\"required\":[\"sourceExpression\"],\"not\":{\"anyOf\":[{\"required\":[\"variables\"]},{\"required\":[\"source\"]}]}},{\"required\":[\"variables\",\"sourceExpression\"],\"not\":{\"required\":[\"source\"]}},{\"required\":[\"variables\",\"source\"],\"not\":{\"required\":[\"sourceExpression\"]}}],\"errorMessage\":\"property.binding ${0/type} requires one of the following: variables, sourceExpression, source, (sourceExpression and variables), or (source and variables)\"}},{\"if\":{\"properties\":{\"type\":{\"const\":\"camunda:errorEventDefinition\"}},\"required\":[\"type\"]},\"then\":{\"oneOf\":[{\"required\":[\"errorRef\"]}],\"errorMessage\":\"property.binding ${0/type} requires errorRef\"}},{\"examples\":[{\"type\":\"property\",\"name\":\"name\"},{\"type\":\"camunda:property\",\"name\":\"property\"},{\"type\":\"camunda:inputParameter\",\"name\":\"input\"},{\"type\":\"camunda:outputParameter\",\"source\":\"output\"},{\"type\":\"camunda:in\",\"target\":\"target\"},{\"type\":\"camunda:in:businessKey\"},{\"type\":\"camunda:out\",\"source\":\"output\"},{\"type\":\"camunda:executionListener\",\"event\":\"start\"},{\"type\":\"camunda:field\",\"name\":\"field\"},{\"type\":\"camunda:errorEventDefinition\",\"errorRef\":\"error\"},{\"type\":\"camunda:errorEventDefinition\",\"errorRef\":\"error\"}]}],\"properties\":{\"type\":{\"$id\":\"#/properties/property/binding/type\",\"type\":\"string\",\"enum\":[\"property\",\"camunda:property\",\"camunda:inputParameter\",\"camunda:outputParameter\",\"camunda:in\",\"camunda:out\",\"camunda:in:businessKey\",\"camunda:executionListener\",\"camunda:field\",\"camunda:errorEventDefinition\"],\"description\":\"The type of a property binding.\",\"errorMessage\":\"invalid property.binding type ${0}; must be any of { property, camunda:property, camunda:inputParameter, camunda:outputParameter, camunda:in, camunda:out, camunda:in:businessKey, camunda:executionListener, camunda:field, camunda:errorEventDefinition }\"},\"name\":{\"$id\":\"#/properties/property/binding/name\",\"type\":\"string\",\"description\":\"The name of a property binding.\"},\"event\":{\"$id\":\"#/properties/property/binding/event\",\"type\":\"string\",\"description\":\"The event type of a property binding (camunda:executionListener).\"},\"scriptFormat\":{\"$id\":\"#/properties/property/binding/scriptFormat\",\"type\":\"string\",\"description\":\"The script format of a property binding (camunda:outputParameter, camunda:inputParameter).\"},\"source\":{\"$id\":\"#/properties/property/binding/source\",\"type\":\"string\",\"description\":\"The source value of a property binding (camunda:outputParameter, camunda:out).\"},\"target\":{\"$id\":\"#/properties/property/binding/target\",\"type\":\"string\",\"description\":\"The target value of a property binding (camunda:in).\"},\"expression\":{\"$id\":\"#/properties/property/binding/expression\",\"type\":\"boolean\",\"description\":\"Indicates whether the control field value is an expression (camunda:in, camunda:field).\"},\"variables\":{\"$id\":\"#/properties/property/binding/variables\",\"type\":\"string\",\"enum\":[\"all\",\"local\"],\"description\":\"The variable mapping of a property binding (camunda:in).\"},\"sourceExpression\":{\"$id\":\"#/properties/property/binding/sourceExpression\",\"type\":\"string\",\"description\":\"The string containing the expression for the source attribute (camunda:out).\"}}}},\"errorMessage\":{\"required\":\"missing binding for property \\\"${0#}\\\"\"}}};const pattern0$1 = new RegExp(\"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\", \"u\");const pattern2$1 = new RegExp(\"^(https|http)://.*\", \"u\");const obj0$1 = {\"required\":\"missingProperty\",\"dependencies\":\"property\",\"dependentRequired\":\"property\"};function validate15$1(data, {dataPath=\"\", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(data && typeof data == \"object\" && !Array.isArray(data)){if(data.name === undefined){const err0 = {keyword:\"required\",dataPath,schemaPath:\"#/allOf/0/required\",params:{missingProperty: \"name\"},message:\"should have required property '\"+\"name\"+\"'\"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.id === undefined){const err1 = {keyword:\"required\",dataPath,schemaPath:\"#/allOf/0/required\",params:{missingProperty: \"id\"},message:\"should have required property '\"+\"id\"+\"'\"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}if(data.appliesTo === undefined){const err2 = {keyword:\"required\",dataPath,schemaPath:\"#/allOf/0/required\",params:{missingProperty: \"appliesTo\"},message:\"should have required property '\"+\"appliesTo\"+\"'\"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}if(data.properties === undefined){const err3 = {keyword:\"required\",dataPath,schemaPath:\"#/allOf/0/required\",params:{missingProperty: \"properties\"},message:\"should have required property '\"+\"properties\"+\"'\"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}if(data.name !== undefined){if(typeof data.name !== \"string\"){const err4 = {keyword:\"type\",dataPath:dataPath+\"/name\",schemaPath:\"#/allOf/0/properties/name/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}}if(data.id !== undefined){if(typeof data.id !== \"string\"){const err5 = {keyword:\"type\",dataPath:dataPath+\"/id\",schemaPath:\"#/allOf/0/properties/id/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}}if(data.description !== undefined){if(typeof data.description !== \"string\"){const err6 = {keyword:\"type\",dataPath:dataPath+\"/description\",schemaPath:\"#/allOf/0/properties/description/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}}if(data.version !== undefined){if(!(typeof data.version == \"number\")){const err7 = {keyword:\"type\",dataPath:dataPath+\"/version\",schemaPath:\"#/allOf/0/properties/version/type\",params:{type: \"number\"},message:\"should be number\"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}if(data.isDefault !== undefined){if(typeof data.isDefault !== \"boolean\"){const err8 = {keyword:\"type\",dataPath:dataPath+\"/isDefault\",schemaPath:\"#/allOf/0/properties/isDefault/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}}if(data.appliesTo !== undefined){let data5 = data.appliesTo;if(Array.isArray(data5)){const len0 = data5.length;for(let i0=0; i0<len0; i0++){let data6 = data5[i0];if(typeof data6 === \"string\"){if(!pattern0$1.test(data6)){const err9 = {keyword:\"pattern\",dataPath:dataPath+\"/appliesTo/\" + i0,schemaPath:\"#/allOf/0/properties/appliesTo/items/pattern\",params:{pattern: \"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\"},message:\"should match pattern \\\"\"+\"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\"+\"\\\"\"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}else {const err10 = {keyword:\"type\",dataPath:dataPath+\"/appliesTo/\" + i0,schemaPath:\"#/allOf/0/properties/appliesTo/items/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}if(errors > 0){const emErrors0 = {\"pattern\":[]};const templates0 = {};for(const err11 of vErrors){if((((((err11.keyword !== \"errorMessage\") && (!err11.emUsed)) && (err11.dataPath === dataPath+\"/appliesTo/\" + i0)) && (err11.keyword in emErrors0)) && (err11.schemaPath.indexOf(\"#/allOf/0/properties/appliesTo/items\") === 0)) && (/^\\/[^\\/]*$/.test(err11.schemaPath.slice(36)))){emErrors0[err11.keyword].push(err11);err11.emUsed = true;}}for(const key0 in emErrors0){if(emErrors0[key0].length){const err12 = {keyword:\"errorMessage\",dataPath:dataPath+\"/appliesTo/\" + i0,schemaPath:\"#/allOf/0/properties/appliesTo/items/errorMessage\",params:{errors: emErrors0[key0]},message:key0 in templates0 ? templates0[key0]() : schema17$1.allOf[0].properties.appliesTo.items.errorMessage[key0]};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}}const emErrs0 = [];for(const err13 of vErrors){if(!err13.emUsed){emErrs0.push(err13);}}vErrors = emErrs0;errors = emErrs0.length;}}}else {const err14 = {keyword:\"type\",dataPath:dataPath+\"/appliesTo\",schemaPath:\"#/allOf/0/properties/appliesTo/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}if(data.elementType !== undefined){let data7 = data.elementType;if(data7 && typeof data7 == \"object\" && !Array.isArray(data7)){if(data7.value === undefined){const err15 = {keyword:\"required\",dataPath:dataPath+\"/elementType\",schemaPath:\"#/allOf/0/properties/elementType/required\",params:{missingProperty: \"value\"},message:\"should have required property '\"+\"value\"+\"'\"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}if(data7.value !== undefined){let data8 = data7.value;if(typeof data8 === \"string\"){if(!pattern0$1.test(data8)){const err16 = {keyword:\"pattern\",dataPath:dataPath+\"/elementType/value\",schemaPath:\"#/allOf/0/properties/elementType/properties/value/pattern\",params:{pattern: \"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\"},message:\"should match pattern \\\"\"+\"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\"+\"\\\"\"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}else {const err17 = {keyword:\"type\",dataPath:dataPath+\"/elementType/value\",schemaPath:\"#/allOf/0/properties/elementType/properties/value/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}if(errors > 0){const emErrors1 = {\"pattern\":[]};const templates1 = {};for(const err18 of vErrors){if((((((err18.keyword !== \"errorMessage\") && (!err18.emUsed)) && (err18.dataPath === dataPath+\"/elementType/value\")) && (err18.keyword in emErrors1)) && (err18.schemaPath.indexOf(\"#/allOf/0/properties/elementType/properties/value\") === 0)) && (/^\\/[^\\/]*$/.test(err18.schemaPath.slice(49)))){emErrors1[err18.keyword].push(err18);err18.emUsed = true;}}for(const key1 in emErrors1){if(emErrors1[key1].length){const err19 = {keyword:\"errorMessage\",dataPath:dataPath+\"/elementType/value\",schemaPath:\"#/allOf/0/properties/elementType/properties/value/errorMessage\",params:{errors: emErrors1[key1]},message:key1 in templates1 ? templates1[key1]() : schema17$1.allOf[0].properties.elementType.properties.value.errorMessage[key1]};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}const emErrs1 = [];for(const err20 of vErrors){if(!err20.emUsed){emErrs1.push(err20);}}vErrors = emErrs1;errors = emErrs1.length;}}}else {const err21 = {keyword:\"type\",dataPath:dataPath+\"/elementType\",schemaPath:\"#/allOf/0/properties/elementType/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}if(errors > 0){const emErrors2 = {\"required\":{\"value\":[]}};const templates2 = {required:{}};let emPropParams0;let emParamsErrors0;for(const err22 of vErrors){if((((((err22.keyword !== \"errorMessage\") && (!err22.emUsed)) && (err22.dataPath === dataPath+\"/elementType\")) && (err22.keyword in emErrors2)) && (err22.schemaPath.indexOf(\"#/allOf/0/properties/elementType\") === 0)) && (/^\\/[^\\/]*$/.test(err22.schemaPath.slice(32)))){emPropParams0 = obj0$1[err22.keyword];emParamsErrors0 = emErrors2[err22.keyword][err22.params[emPropParams0]];if(emParamsErrors0){emParamsErrors0.push(err22);err22.emUsed = true;}}}for(const key2 in emErrors2){for(const keyProp0 in emErrors2[key2]){emParamsErrors0 = emErrors2[key2][keyProp0];if(emParamsErrors0.length){const tmpl0 = templates2[key2] && templates2[key2][keyProp0];const err23 = {keyword:\"errorMessage\",dataPath:dataPath+\"/elementType\",schemaPath:\"#/allOf/0/properties/elementType/errorMessage\",params:{errors: emParamsErrors0},message:tmpl0 ? tmpl0() : schema17$1.allOf[0].properties.elementType.errorMessage[key2][keyProp0]};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}}}const emErrs2 = [];for(const err24 of vErrors){if(!err24.emUsed){emErrs2.push(err24);}}vErrors = emErrs2;errors = emErrs2.length;}}if(data.metadata !== undefined){let data9 = data.metadata;if(!(data9 && typeof data9 == \"object\" && !Array.isArray(data9))){const err25 = {keyword:\"type\",dataPath:dataPath+\"/metadata\",schemaPath:\"#/allOf/0/properties/metadata/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}}if(data.entriesVisible !== undefined){if(typeof data.entriesVisible !== \"boolean\"){const err26 = {keyword:\"type\",dataPath:dataPath+\"/entriesVisible\",schemaPath:\"#/allOf/0/properties/entriesVisible/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}if(data.groups !== undefined){let data11 = data.groups;if(Array.isArray(data11)){const len1 = data11.length;for(let i1=0; i1<len1; i1++){let data12 = data11[i1];if(data12 && typeof data12 == \"object\" && !Array.isArray(data12)){if(data12.id === undefined){const err27 = {keyword:\"required\",dataPath:dataPath+\"/groups/\" + i1,schemaPath:\"#/allOf/0/properties/groups/items/required\",params:{missingProperty: \"id\"},message:\"should have required property '\"+\"id\"+\"'\"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}if(data12.label === undefined){const err28 = {keyword:\"required\",dataPath:dataPath+\"/groups/\" + i1,schemaPath:\"#/allOf/0/properties/groups/items/required\",params:{missingProperty: \"label\"},message:\"should have required property '\"+\"label\"+\"'\"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}if(data12.id !== undefined){if(typeof data12.id !== \"string\"){const err29 = {keyword:\"type\",dataPath:dataPath+\"/groups/\" + i1+\"/id\",schemaPath:\"#/allOf/0/properties/groups/items/properties/id/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}}if(data12.label !== undefined){if(typeof data12.label !== \"string\"){const err30 = {keyword:\"type\",dataPath:dataPath+\"/groups/\" + i1+\"/label\",schemaPath:\"#/allOf/0/properties/groups/items/properties/label/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;}}}else {const err31 = {keyword:\"type\",dataPath:dataPath+\"/groups/\" + i1,schemaPath:\"#/allOf/0/properties/groups/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}if(errors > 0){const emErrors3 = {\"required\":{\"id\":[],\"label\":[]}};const templates3 = {required:{id:function(){return \"missing id for group \\\"\" + JSON.stringify(i1) + \"\\\"\"},label:function(){return \"missing label for group \\\"\" + JSON.stringify(i1) + \"\\\"\"}}};let emPropParams1;let emParamsErrors1;for(const err32 of vErrors){if((((((err32.keyword !== \"errorMessage\") && (!err32.emUsed)) && (err32.dataPath === dataPath+\"/groups/\" + i1)) && (err32.keyword in emErrors3)) && (err32.schemaPath.indexOf(\"#/allOf/0/properties/groups/items\") === 0)) && (/^\\/[^\\/]*$/.test(err32.schemaPath.slice(33)))){emPropParams1 = obj0$1[err32.keyword];emParamsErrors1 = emErrors3[err32.keyword][err32.params[emPropParams1]];if(emParamsErrors1){emParamsErrors1.push(err32);err32.emUsed = true;}}}for(const key3 in emErrors3){for(const keyProp1 in emErrors3[key3]){emParamsErrors1 = emErrors3[key3][keyProp1];if(emParamsErrors1.length){const tmpl1 = templates3[key3] && templates3[key3][keyProp1];const err33 = {keyword:\"errorMessage\",dataPath:dataPath+\"/groups/\" + i1,schemaPath:\"#/allOf/0/properties/groups/items/errorMessage\",params:{errors: emParamsErrors1},message:tmpl1 ? tmpl1() : schema17$1.allOf[0].properties.groups.items.errorMessage[key3][keyProp1]};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}}}const emErrs3 = [];for(const err34 of vErrors){if(!err34.emUsed){emErrs3.push(err34);}}vErrors = emErrs3;errors = emErrs3.length;}}}else {const err35 = {keyword:\"type\",dataPath:dataPath+\"/groups\",schemaPath:\"#/allOf/0/properties/groups/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}}if(data.documentationRef !== undefined){let data15 = data.documentationRef;if(typeof data15 === \"string\"){if(!pattern2$1.test(data15)){const err36 = {keyword:\"pattern\",dataPath:dataPath+\"/documentationRef\",schemaPath:\"#/allOf/0/properties/documentationRef/pattern\",params:{pattern: \"^(https|http)://.*\"},message:\"should match pattern \\\"\"+\"^(https|http)://.*\"+\"\\\"\"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}}else {const err37 = {keyword:\"type\",dataPath:dataPath+\"/documentationRef\",schemaPath:\"#/allOf/0/properties/documentationRef/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}if(errors > 0){const emErrors4 = {\"pattern\":[]};const templates4 = {};for(const err38 of vErrors){if((((((err38.keyword !== \"errorMessage\") && (!err38.emUsed)) && (err38.dataPath === dataPath+\"/documentationRef\")) && (err38.keyword in emErrors4)) && (err38.schemaPath.indexOf(\"#/allOf/0/properties/documentationRef\") === 0)) && (/^\\/[^\\/]*$/.test(err38.schemaPath.slice(37)))){emErrors4[err38.keyword].push(err38);err38.emUsed = true;}}for(const key4 in emErrors4){if(emErrors4[key4].length){const err39 = {keyword:\"errorMessage\",dataPath:dataPath+\"/documentationRef\",schemaPath:\"#/allOf/0/properties/documentationRef/errorMessage\",params:{errors: emErrors4[key4]},message:key4 in templates4 ? templates4[key4]() : schema17$1.allOf[0].properties.documentationRef.errorMessage[key4]};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}}const emErrs4 = [];for(const err40 of vErrors){if(!err40.emUsed){emErrs4.push(err40);}}vErrors = emErrs4;errors = emErrs4.length;}}}if(errors > 0){const emErrors5 = {\"required\":{\"name\":[],\"id\":[],\"appliesTo\":[],\"properties\":[]}};const templates5 = {required:{}};let emPropParams2;let emParamsErrors2;for(const err41 of vErrors){if((((((err41.keyword !== \"errorMessage\") && (!err41.emUsed)) && (err41.dataPath === dataPath)) && (err41.keyword in emErrors5)) && (err41.schemaPath.indexOf(\"#/allOf/0\") === 0)) && (/^\\/[^\\/]*$/.test(err41.schemaPath.slice(9)))){emPropParams2 = obj0$1[err41.keyword];emParamsErrors2 = emErrors5[err41.keyword][err41.params[emPropParams2]];if(emParamsErrors2){emParamsErrors2.push(err41);err41.emUsed = true;}}}for(const key5 in emErrors5){for(const keyProp2 in emErrors5[key5]){emParamsErrors2 = emErrors5[key5][keyProp2];if(emParamsErrors2.length){const tmpl2 = templates5[key5] && templates5[key5][keyProp2];const err42 = {keyword:\"errorMessage\",dataPath,schemaPath:\"#/allOf/0/errorMessage\",params:{errors: emParamsErrors2},message:tmpl2 ? tmpl2() : schema17$1.allOf[0].errorMessage[key5][keyProp2]};if(vErrors === null){vErrors = [err42];}else {vErrors.push(err42);}errors++;}}}const emErrs5 = [];for(const err43 of vErrors){if(!err43.emUsed){emErrs5.push(err43);}}vErrors = emErrs5;errors = emErrs5.length;}if(data && typeof data == \"object\" && !Array.isArray(data)){if(data.properties !== undefined){let data16 = data.properties;if(Array.isArray(data16)){const len2 = data16.length;for(let i2=0; i2<len2; i2++){let data17 = data16[i2];const _errs41 = errors;let valid18 = true;const _errs42 = errors;if(data17 && typeof data17 == \"object\" && !Array.isArray(data17)){if((data17.type === undefined) && (\"type\")){const err44 = {};if(vErrors === null){vErrors = [err44];}else {vErrors.push(err44);}errors++;}else {if(data17.type !== undefined){if(!equal(data17.type, \"Dropdown\")){const err45 = {};if(vErrors === null){vErrors = [err45];}else {vErrors.push(err45);}errors++;}}}}var _valid0 = _errs42 === errors;errors = _errs41;if(vErrors !== null){if(_errs41){vErrors.length = _errs41;}else {vErrors = null;}}if(_valid0){const _errs44 = errors;if(data17 && typeof data17 == \"object\" && !Array.isArray(data17)){if(data17.choices === undefined){const err46 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2,schemaPath:\"#/definitions/properties/allOf/0/items/allOf/0/then/required\",params:{missingProperty: \"choices\"},message:\"should have required property '\"+\"choices\"+\"'\"};if(vErrors === null){vErrors = [err46];}else {vErrors.push(err46);}errors++;}}if(errors > 0){const emErrs6 = [];for(const err47 of vErrors){if(((((err47.keyword !== \"errorMessage\") && (!err47.emUsed)) && ((err47.dataPath === dataPath+\"/properties/\" + i2) || ((err47.dataPath.indexOf(dataPath+\"/properties/\" + i2) === 0) && (err47.dataPath[dataPath+\"/properties/\" + i2.length] === \"/\")))) && (err47.schemaPath.indexOf(\"#/definitions/properties/allOf/0/items/allOf/0/then\") === 0)) && (err47.schemaPath[\"#/definitions/properties/allOf/0/items/allOf/0/then\".length] === \"/\")){emErrs6.push(err47);err47.emUsed = true;}}if(emErrs6.length){const err48 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i2,schemaPath:\"#/definitions/properties/allOf/0/items/allOf/0/then/errorMessage\",params:{errors: emErrs6},message:\"must provide choices=[] with \\\"Dropdown\\\" type\"};if(vErrors === null){vErrors = [err48];}else {vErrors.push(err48);}errors++;}const emErrs7 = [];for(const err49 of vErrors){if(!err49.emUsed){emErrs7.push(err49);}}vErrors = emErrs7;errors = emErrs7.length;}var _valid0 = _errs44 === errors;valid18 = _valid0;}if(!valid18){const err50 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i2,schemaPath:\"#/definitions/properties/allOf/0/items/allOf/0/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err50];}else {vErrors.push(err50);}errors++;}if(data17 && typeof data17 == \"object\" && !Array.isArray(data17)){if(data17.id !== undefined){if(typeof data17.id !== \"string\"){const err51 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/id\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/id/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err51];}else {vErrors.push(err51);}errors++;}}if(data17.value !== undefined){let data20 = data17.value;if((typeof data20 !== \"string\") && (typeof data20 !== \"boolean\")){const err52 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/value\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/value/type\",params:{type: schema18$1.allOf[0].items.properties.value.type},message:\"should be string,boolean\"};if(vErrors === null){vErrors = [err52];}else {vErrors.push(err52);}errors++;}}if(data17.description !== undefined){if(typeof data17.description !== \"string\"){const err53 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/description\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/description/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err53];}else {vErrors.push(err53);}errors++;}}if(data17.label !== undefined){if(typeof data17.label !== \"string\"){const err54 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/label\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/label/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err54];}else {vErrors.push(err54);}errors++;}}if(data17.type !== undefined){if(typeof data17.type !== \"string\"){const err55 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/type\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/type/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err55];}else {vErrors.push(err55);}errors++;}}if(data17.editable !== undefined){if(typeof data17.editable !== \"boolean\"){const err56 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/editable\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/editable/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err56];}else {vErrors.push(err56);}errors++;}}if(data17.choices !== undefined){let data25 = data17.choices;if(Array.isArray(data25)){const len3 = data25.length;for(let i3=0; i3<len3; i3++){let data26 = data25[i3];if(data26 && typeof data26 == \"object\" && !Array.isArray(data26)){if(data26.value === undefined){const err57 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/required\",params:{missingProperty: \"value\"},message:\"should have required property '\"+\"value\"+\"'\"};if(vErrors === null){vErrors = [err57];}else {vErrors.push(err57);}errors++;}if(data26.name === undefined){const err58 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/required\",params:{missingProperty: \"name\"},message:\"should have required property '\"+\"name\"+\"'\"};if(vErrors === null){vErrors = [err58];}else {vErrors.push(err58);}errors++;}if(data26.name !== undefined){if(typeof data26.name !== \"string\"){const err59 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3+\"/name\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/properties/name/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err59];}else {vErrors.push(err59);}errors++;}}if(data26.value !== undefined){if(typeof data26.value !== \"string\"){const err60 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3+\"/value\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/properties/value/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err60];}else {vErrors.push(err60);}errors++;}}}else {const err61 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err61];}else {vErrors.push(err61);}errors++;}if(errors > 0){const emErrors6 = {\"required\":[]};const templates6 = {};for(const err62 of vErrors){if((((((err62.keyword !== \"errorMessage\") && (!err62.emUsed)) && (err62.dataPath === dataPath+\"/properties/\" + i2+\"/choices/\" + i3)) && (err62.keyword in emErrors6)) && (err62.schemaPath.indexOf(\"#/definitions/properties/allOf/0/items/properties/choices/items\") === 0)) && (/^\\/[^\\/]*$/.test(err62.schemaPath.slice(63)))){emErrors6[err62.keyword].push(err62);err62.emUsed = true;}}for(const key6 in emErrors6){if(emErrors6[key6].length){const err63 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/errorMessage\",params:{errors: emErrors6[key6]},message:key6 in templates6 ? templates6[key6]() : schema18$1.allOf[0].items.properties.choices.items.errorMessage[key6]};if(vErrors === null){vErrors = [err63];}else {vErrors.push(err63);}errors++;}}const emErrs8 = [];for(const err64 of vErrors){if(!err64.emUsed){emErrs8.push(err64);}}vErrors = emErrs8;errors = emErrs8.length;}}}else {const err65 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/choices\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err65];}else {vErrors.push(err65);}errors++;}}if(data17.constraints !== undefined){let data29 = data17.constraints;if(data29 && typeof data29 == \"object\" && !Array.isArray(data29)){if(data29.notEmpty !== undefined){if(typeof data29.notEmpty !== \"boolean\"){const err66 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/notEmpty\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/notEmpty/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err66];}else {vErrors.push(err66);}errors++;}}if(data29.minLength !== undefined){if(!(typeof data29.minLength == \"number\")){const err67 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/minLength\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/minLength/type\",params:{type: \"number\"},message:\"should be number\"};if(vErrors === null){vErrors = [err67];}else {vErrors.push(err67);}errors++;}}if(data29.maxLength !== undefined){if(!(typeof data29.maxLength == \"number\")){const err68 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/maxLength\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/maxLength/type\",params:{type: \"number\"},message:\"should be number\"};if(vErrors === null){vErrors = [err68];}else {vErrors.push(err68);}errors++;}}if(data29.pattern !== undefined){let data33 = data29.pattern;const _errs74 = errors;let valid26 = false;let passing0 = null;const _errs75 = errors;if(data33 && typeof data33 == \"object\" && !Array.isArray(data33)){if(data33.value !== undefined){if(typeof data33.value !== \"string\"){const err69 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/pattern/value\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/0/properties/value/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err69];}else {vErrors.push(err69);}errors++;}}if(data33.message !== undefined){if(typeof data33.message !== \"string\"){const err70 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/pattern/message\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/0/properties/message/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err70];}else {vErrors.push(err70);}errors++;}}}else {const err71 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/pattern\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/0/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err71];}else {vErrors.push(err71);}errors++;}var _valid1 = _errs75 === errors;if(_valid1){valid26 = true;passing0 = 0;}const _errs81 = errors;if(typeof data33 !== \"string\"){const err72 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/pattern\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/1/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err72];}else {vErrors.push(err72);}errors++;}var _valid1 = _errs81 === errors;if(_valid1 && valid26){valid26 = false;passing0 = [passing0, 1];}else {if(_valid1){valid26 = true;passing0 = 1;}}if(!valid26){const err73 = {keyword:\"oneOf\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/pattern\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf\",params:{passingSchemas: passing0},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err73];}else {vErrors.push(err73);}errors++;}else {errors = _errs74;if(vErrors !== null){if(_errs74){vErrors.length = _errs74;}else {vErrors = null;}}}}}else {const err74 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err74];}else {vErrors.push(err74);}errors++;}}if(data17.group !== undefined){if(typeof data17.group !== \"string\"){const err75 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/group\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/group/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err75];}else {vErrors.push(err75);}errors++;}}if(data17.condition !== undefined){let data37 = data17.condition;const _errs87 = errors;let valid28 = false;let passing1 = null;const _errs88 = errors;if(data37 && typeof data37 == \"object\" && !Array.isArray(data37)){if(data37.equals === undefined){const err76 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/0/required\",params:{missingProperty: \"equals\"},message:\"should have required property '\"+\"equals\"+\"'\"};if(vErrors === null){vErrors = [err76];}else {vErrors.push(err76);}errors++;}if(data37.equals !== undefined){let data38 = data37.equals;if(((typeof data38 !== \"string\") && (!(typeof data38 == \"number\"))) && (typeof data38 !== \"boolean\")){const err77 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/condition/equals\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/0/properties/equals/type\",params:{type: schema18$1.allOf[0].items.properties.condition.oneOf[0].properties.equals.type},message:\"should be string,number,boolean\"};if(vErrors === null){vErrors = [err77];}else {vErrors.push(err77);}errors++;}}}var _valid2 = _errs88 === errors;if(_valid2){valid28 = true;passing1 = 0;}const _errs91 = errors;if(data37 && typeof data37 == \"object\" && !Array.isArray(data37)){if(data37.oneOf === undefined){const err78 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/1/required\",params:{missingProperty: \"oneOf\"},message:\"should have required property '\"+\"oneOf\"+\"'\"};if(vErrors === null){vErrors = [err78];}else {vErrors.push(err78);}errors++;}if(data37.oneOf !== undefined){let data39 = data37.oneOf;if(Array.isArray(data39)){const len4 = data39.length;for(let i4=0; i4<len4; i4++){let data40 = data39[i4];if((typeof data40 !== \"string\") && (!(typeof data40 == \"number\"))){const err79 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/condition/oneOf/\" + i4,schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/1/properties/oneOf/items/type\",params:{type: schema18$1.allOf[0].items.properties.condition.oneOf[1].properties.oneOf.items.type},message:\"should be string,number\"};if(vErrors === null){vErrors = [err79];}else {vErrors.push(err79);}errors++;}}}else {const err80 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/condition/oneOf\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/1/properties/oneOf/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err80];}else {vErrors.push(err80);}errors++;}}}var _valid2 = _errs91 === errors;if(_valid2 && valid28){valid28 = false;passing1 = [passing1, 1];}else {if(_valid2){valid28 = true;passing1 = 1;}}if(!valid28){const err81 = {keyword:\"oneOf\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf\",params:{passingSchemas: passing1},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err81];}else {vErrors.push(err81);}errors++;}else {errors = _errs87;if(vErrors !== null){if(_errs87){vErrors.length = _errs87;}else {vErrors = null;}}}if(data37 && typeof data37 == \"object\" && !Array.isArray(data37)){if(data37.property === undefined){const err82 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/required\",params:{missingProperty: \"property\"},message:\"should have required property '\"+\"property\"+\"'\"};if(vErrors === null){vErrors = [err82];}else {vErrors.push(err82);}errors++;}if(data37.type !== undefined){if(!equal(data37.type, \"simple\")){const err83 = {keyword:\"const\",dataPath:dataPath+\"/properties/\" + i2+\"/condition/type\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/properties/type/const\",params:{allowedValue: \"simple\"},message:\"should be equal to constant\"};if(vErrors === null){vErrors = [err83];}else {vErrors.push(err83);}errors++;}}if(data37.property !== undefined){if(typeof data37.property !== \"string\"){const err84 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/condition/property\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/properties/property/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err84];}else {vErrors.push(err84);}errors++;}}}else {const err85 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err85];}else {vErrors.push(err85);}errors++;}if(errors > 0){const emErrors7 = {\"required\":{\"property\":[]}};const templates7 = {required:{}};let emPropParams3;let emParamsErrors3;for(const err86 of vErrors){if((((((err86.keyword !== \"errorMessage\") && (!err86.emUsed)) && (err86.dataPath === dataPath+\"/properties/\" + i2+\"/condition\")) && (err86.keyword in emErrors7)) && (err86.schemaPath.indexOf(\"#/definitions/properties/allOf/0/items/properties/condition\") === 0)) && (/^\\/[^\\/]*$/.test(err86.schemaPath.slice(59)))){emPropParams3 = obj0$1[err86.keyword];emParamsErrors3 = emErrors7[err86.keyword][err86.params[emPropParams3]];if(emParamsErrors3){emParamsErrors3.push(err86);err86.emUsed = true;}}}for(const key7 in emErrors7){for(const keyProp3 in emErrors7[key7]){emParamsErrors3 = emErrors7[key7][keyProp3];if(emParamsErrors3.length){const tmpl3 = templates7[key7] && templates7[key7][keyProp3];const err87 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/errorMessage\",params:{errors: emParamsErrors3},message:tmpl3 ? tmpl3() : schema18$1.allOf[0].items.properties.condition.errorMessage[key7][keyProp3]};if(vErrors === null){vErrors = [err87];}else {vErrors.push(err87);}errors++;}}}const emErrs9 = [];for(const err88 of vErrors){if(!err88.emUsed){emErrs9.push(err88);}}vErrors = emErrs9;errors = emErrs9.length;}}}else {const err89 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2,schemaPath:\"#/definitions/properties/allOf/0/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err89];}else {vErrors.push(err89);}errors++;}}}else {const err90 = {keyword:\"type\",dataPath:dataPath+\"/properties\",schemaPath:\"#/definitions/properties/allOf/0/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err90];}else {vErrors.push(err90);}errors++;}if(Array.isArray(data16)){const len5 = data16.length;for(let i5=0; i5<len5; i5++){let data43 = data16[i5];const _errs104 = errors;let valid38 = true;const _errs105 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if((data43.binding === undefined) && (\"binding\")){const err91 = {};if(vErrors === null){vErrors = [err91];}else {vErrors.push(err91);}errors++;}else {if(data43.binding !== undefined){let data44 = data43.binding;if(data44 && typeof data44 == \"object\" && !Array.isArray(data44)){if((data44.type === undefined) && (\"type\")){const err92 = {};if(vErrors === null){vErrors = [err92];}else {vErrors.push(err92);}errors++;}else {if(data44.type !== undefined){if(!equal(data44.type, \"property\")){const err93 = {};if(vErrors === null){vErrors = [err93];}else {vErrors.push(err93);}errors++;}}}}}}}var _valid3 = _errs105 === errors;errors = _errs104;if(vErrors !== null){if(_errs104){vErrors.length = _errs104;}else {vErrors = null;}}if(_valid3){const _errs108 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.type !== undefined){let data46 = data43.type;if(!(((((data46 === \"String\") || (data46 === \"Text\")) || (data46 === \"Hidden\")) || (data46 === \"Dropdown\")) || (data46 === \"Boolean\"))){const err94 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type/enum\",params:{allowedValues: schema18$1.allOf[1].items.allOf[0].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err94];}else {vErrors.push(err94);}errors++;}if(errors > 0){const emErrs10 = [];for(const err95 of vErrors){if(((((err95.keyword !== \"errorMessage\") && (!err95.emUsed)) && ((err95.dataPath === dataPath+\"/properties/\" + i5+\"/type\") || ((err95.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/type\") === 0) && (err95.dataPath[dataPath+\"/properties/\" + i5+\"/type\".length] === \"/\")))) && (err95.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type\") === 0)) && (err95.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type\".length] === \"/\")){emErrs10.push(err95);err95.emUsed = true;}}if(emErrs10.length){const err96 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type/errorMessage\",params:{errors: emErrs10},message:\"invalid property type \" + JSON.stringify(data46) + \" for binding type \\\"property\\\"; must be any of { String, Text, Hidden, Dropdown, Boolean }\"};if(vErrors === null){vErrors = [err96];}else {vErrors.push(err96);}errors++;}const emErrs11 = [];for(const err97 of vErrors){if(!err97.emUsed){emErrs11.push(err97);}}vErrors = emErrs11;errors = emErrs11.length;}}}var _valid3 = _errs108 === errors;valid38 = _valid3;}if(!valid38){const err98 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/0/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err98];}else {vErrors.push(err98);}errors++;}const _errs111 = errors;let valid42 = true;const _errs112 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if((data43.binding === undefined) && (\"binding\")){const err99 = {};if(vErrors === null){vErrors = [err99];}else {vErrors.push(err99);}errors++;}else {if(data43.binding !== undefined){let data47 = data43.binding;if(data47 && typeof data47 == \"object\" && !Array.isArray(data47)){if((data47.type === undefined) && (\"type\")){const err100 = {};if(vErrors === null){vErrors = [err100];}else {vErrors.push(err100);}errors++;}else {if(data47.type !== undefined){if(!equal(data47.type, \"camunda:executionListener\")){const err101 = {};if(vErrors === null){vErrors = [err101];}else {vErrors.push(err101);}errors++;}}}}}}}var _valid4 = _errs112 === errors;errors = _errs111;if(vErrors !== null){if(_errs111){vErrors.length = _errs111;}else {vErrors = null;}}if(_valid4){const _errs115 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.type !== undefined){if(!(data43.type === \"Hidden\")){const err102 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type/enum\",params:{allowedValues: schema18$1.allOf[1].items.allOf[1].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err102];}else {vErrors.push(err102);}errors++;}if(errors > 0){const emErrs12 = [];for(const err103 of vErrors){if(((((err103.keyword !== \"errorMessage\") && (!err103.emUsed)) && ((err103.dataPath === dataPath+\"/properties/\" + i5+\"/type\") || ((err103.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/type\") === 0) && (err103.dataPath[dataPath+\"/properties/\" + i5+\"/type\".length] === \"/\")))) && (err103.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type\") === 0)) && (err103.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type\".length] === \"/\")){emErrs12.push(err103);err103.emUsed = true;}}if(emErrs12.length){const err104 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type/errorMessage\",params:{errors: emErrs12},message:\"invalid property type \" + JSON.stringify(data43 && data43.type) + \" for binding type \\\"camunda:executionListener\\\"; must be \\\"Hidden\\\"\"};if(vErrors === null){vErrors = [err104];}else {vErrors.push(err104);}errors++;}const emErrs13 = [];for(const err105 of vErrors){if(!err105.emUsed){emErrs13.push(err105);}}vErrors = emErrs13;errors = emErrs13.length;}}}var _valid4 = _errs115 === errors;valid42 = _valid4;}if(!valid42){const err106 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/1/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err106];}else {vErrors.push(err106);}errors++;}const _errs118 = errors;let valid46 = true;const _errs119 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if((data43.binding === undefined) && (\"binding\")){const err107 = {};if(vErrors === null){vErrors = [err107];}else {vErrors.push(err107);}errors++;}else {if(data43.binding !== undefined){let data50 = data43.binding;if(data50 && typeof data50 == \"object\" && !Array.isArray(data50)){if((data50.type === undefined) && (\"type\")){const err108 = {};if(vErrors === null){vErrors = [err108];}else {vErrors.push(err108);}errors++;}else {if(data50.type !== undefined){let data51 = data50.type;if(!((((((data51 === \"camunda:property\") || (data51 === \"camunda:outputParameter\")) || (data51 === \"camunda:in\")) || (data51 === \"camunda:in:businessKey\")) || (data51 === \"camunda:out\")) || (data51 === \"camunda:errorEventDefinition\"))){const err109 = {};if(vErrors === null){vErrors = [err109];}else {vErrors.push(err109);}errors++;}}}}}}}var _valid5 = _errs119 === errors;errors = _errs118;if(vErrors !== null){if(_errs118){vErrors.length = _errs118;}else {vErrors = null;}}if(_valid5){const _errs122 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.type !== undefined){let data52 = data43.type;if(!(((data52 === \"String\") || (data52 === \"Hidden\")) || (data52 === \"Dropdown\"))){const err110 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/type/enum\",params:{allowedValues: schema18$1.allOf[1].items.allOf[2].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err110];}else {vErrors.push(err110);}errors++;}if(errors > 0){const emErrs14 = [];for(const err111 of vErrors){if(((((err111.keyword !== \"errorMessage\") && (!err111.emUsed)) && ((err111.dataPath === dataPath+\"/properties/\" + i5+\"/type\") || ((err111.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/type\") === 0) && (err111.dataPath[dataPath+\"/properties/\" + i5+\"/type\".length] === \"/\")))) && (err111.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/type\") === 0)) && (err111.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/type\".length] === \"/\")){emErrs14.push(err111);err111.emUsed = true;}}if(emErrs14.length){const err112 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/type/errorMessage\",params:{errors: emErrs14},message:\"invalid property type \" + JSON.stringify(data52) + \" for binding type \" + JSON.stringify(data43 && data43.binding && data43.binding.type) + \"; must be any of { String, Hidden, Dropdown }\"};if(vErrors === null){vErrors = [err112];}else {vErrors.push(err112);}errors++;}const emErrs15 = [];for(const err113 of vErrors){if(!err113.emUsed){emErrs15.push(err113);}}vErrors = emErrs15;errors = emErrs15.length;}}}var _valid5 = _errs122 === errors;valid46 = _valid5;}if(!valid46){const err114 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/2/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err114];}else {vErrors.push(err114);}errors++;}const _errs125 = errors;let valid50 = true;const _errs126 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if((data43.binding === undefined) && (\"binding\")){const err115 = {};if(vErrors === null){vErrors = [err115];}else {vErrors.push(err115);}errors++;}else {if(data43.binding !== undefined){let data53 = data43.binding;if(data53 && typeof data53 == \"object\" && !Array.isArray(data53)){if((data53.type === undefined) && (\"type\")){const err116 = {};if(vErrors === null){vErrors = [err116];}else {vErrors.push(err116);}errors++;}else {if(data53.type !== undefined){let data54 = data53.type;if(!((data54 === \"camunda:inputParameter\") || (data54 === \"camunda:field\"))){const err117 = {};if(vErrors === null){vErrors = [err117];}else {vErrors.push(err117);}errors++;}}}}}}}var _valid6 = _errs126 === errors;errors = _errs125;if(vErrors !== null){if(_errs125){vErrors.length = _errs125;}else {vErrors = null;}}if(_valid6){const _errs129 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.type !== undefined){let data55 = data43.type;if(!((((data55 === \"String\") || (data55 === \"Text\")) || (data55 === \"Hidden\")) || (data55 === \"Dropdown\"))){const err118 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/type/enum\",params:{allowedValues: schema18$1.allOf[1].items.allOf[3].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err118];}else {vErrors.push(err118);}errors++;}if(errors > 0){const emErrs16 = [];for(const err119 of vErrors){if(((((err119.keyword !== \"errorMessage\") && (!err119.emUsed)) && ((err119.dataPath === dataPath+\"/properties/\" + i5+\"/type\") || ((err119.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/type\") === 0) && (err119.dataPath[dataPath+\"/properties/\" + i5+\"/type\".length] === \"/\")))) && (err119.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/type\") === 0)) && (err119.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/type\".length] === \"/\")){emErrs16.push(err119);err119.emUsed = true;}}if(emErrs16.length){const err120 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/type/errorMessage\",params:{errors: emErrs16},message:\"invalid property type \" + JSON.stringify(data55) + \" for binding type \" + JSON.stringify(data43 && data43.binding && data43.binding.type) + \"; must be any of { String, Text, Hidden, Dropdown }\"};if(vErrors === null){vErrors = [err120];}else {vErrors.push(err120);}errors++;}const emErrs17 = [];for(const err121 of vErrors){if(!err121.emUsed){emErrs17.push(err121);}}vErrors = emErrs17;errors = emErrs17.length;}}}var _valid6 = _errs129 === errors;valid50 = _valid6;}if(!valid50){const err122 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/3/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err122];}else {vErrors.push(err122);}errors++;}if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.binding === undefined){const err123 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/required\",params:{missingProperty: \"binding\"},message:\"should have required property '\"+\"binding\"+\"'\"};if(vErrors === null){vErrors = [err123];}else {vErrors.push(err123);}errors++;}if(data43.binding !== undefined){let data56 = data43.binding;const _errs134 = errors;let valid56 = true;const _errs135 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.type === undefined) && (\"type\")){const err124 = {};if(vErrors === null){vErrors = [err124];}else {vErrors.push(err124);}errors++;}else {if(data56.type !== undefined){let data57 = data56.type;if(!((((data57 === \"property\") || (data57 === \"camunda:property\")) || (data57 === \"camunda:inputParameter\")) || (data57 === \"camunda:field\"))){const err125 = {};if(vErrors === null){vErrors = [err125];}else {vErrors.push(err125);}errors++;}}}}var _valid7 = _errs135 === errors;errors = _errs134;if(vErrors !== null){if(_errs134){vErrors.length = _errs134;}else {vErrors = null;}}if(_valid7){const _errs137 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.name === undefined){const err126 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then/required\",params:{missingProperty: \"name\"},message:\"should have required property '\"+\"name\"+\"'\"};if(vErrors === null){vErrors = [err126];}else {vErrors.push(err126);}errors++;}}if(errors > 0){const emErrs18 = [];for(const err127 of vErrors){if(((((err127.keyword !== \"errorMessage\") && (!err127.emUsed)) && ((err127.dataPath === dataPath+\"/properties/\" + i5+\"/binding\") || ((err127.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding\") === 0) && (err127.dataPath[dataPath+\"/properties/\" + i5+\"/binding\".length] === \"/\")))) && (err127.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then\") === 0)) && (err127.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then\".length] === \"/\")){emErrs18.push(err127);err127.emUsed = true;}}if(emErrs18.length){const err128 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then/errorMessage\",params:{errors: emErrs18},message:\"property.binding \" + JSON.stringify(data56 && data56.type) + \" requires name\"};if(vErrors === null){vErrors = [err128];}else {vErrors.push(err128);}errors++;}const emErrs19 = [];for(const err129 of vErrors){if(!err129.emUsed){emErrs19.push(err129);}}vErrors = emErrs19;errors = emErrs19.length;}var _valid7 = _errs137 === errors;valid56 = _valid7;}if(!valid56){const err130 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err130];}else {vErrors.push(err130);}errors++;}const _errs139 = errors;let valid58 = true;const _errs140 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.type === undefined) && (\"type\")){const err131 = {};if(vErrors === null){vErrors = [err131];}else {vErrors.push(err131);}errors++;}else {if(data56.type !== undefined){if(!equal(data56.type, \"camunda:outputParameter\")){const err132 = {};if(vErrors === null){vErrors = [err132];}else {vErrors.push(err132);}errors++;}}}}var _valid8 = _errs140 === errors;errors = _errs139;if(vErrors !== null){if(_errs139){vErrors.length = _errs139;}else {vErrors = null;}}if(_valid8){const _errs142 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.source === undefined){const err133 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then/required\",params:{missingProperty: \"source\"},message:\"should have required property '\"+\"source\"+\"'\"};if(vErrors === null){vErrors = [err133];}else {vErrors.push(err133);}errors++;}}if(errors > 0){const emErrs20 = [];for(const err134 of vErrors){if(((((err134.keyword !== \"errorMessage\") && (!err134.emUsed)) && ((err134.dataPath === dataPath+\"/properties/\" + i5+\"/binding\") || ((err134.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding\") === 0) && (err134.dataPath[dataPath+\"/properties/\" + i5+\"/binding\".length] === \"/\")))) && (err134.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then\") === 0)) && (err134.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then\".length] === \"/\")){emErrs20.push(err134);err134.emUsed = true;}}if(emErrs20.length){const err135 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then/errorMessage\",params:{errors: emErrs20},message:\"property.binding \" + JSON.stringify(data56 && data56.type) + \" requires source\"};if(vErrors === null){vErrors = [err135];}else {vErrors.push(err135);}errors++;}const emErrs21 = [];for(const err136 of vErrors){if(!err136.emUsed){emErrs21.push(err136);}}vErrors = emErrs21;errors = emErrs21.length;}var _valid8 = _errs142 === errors;valid58 = _valid8;}if(!valid58){const err137 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err137];}else {vErrors.push(err137);}errors++;}const _errs144 = errors;let valid60 = true;const _errs145 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.type === undefined) && (\"type\")){const err138 = {};if(vErrors === null){vErrors = [err138];}else {vErrors.push(err138);}errors++;}else {if(data56.type !== undefined){if(!equal(data56.type, \"camunda:in\")){const err139 = {};if(vErrors === null){vErrors = [err139];}else {vErrors.push(err139);}errors++;}}}}var _valid9 = _errs145 === errors;errors = _errs144;if(vErrors !== null){if(_errs144){vErrors.length = _errs144;}else {vErrors = null;}}if(_valid9){const _errs147 = errors;const _errs148 = errors;let valid62 = false;const _errs149 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.variables === undefined){const err140 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then/anyOf/0/required\",params:{missingProperty: \"variables\"},message:\"should have required property '\"+\"variables\"+\"'\"};if(vErrors === null){vErrors = [err140];}else {vErrors.push(err140);}errors++;}}var _valid10 = _errs149 === errors;valid62 = valid62 || _valid10;if(!valid62){const _errs150 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.target === undefined){const err141 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then/anyOf/1/required\",params:{missingProperty: \"target\"},message:\"should have required property '\"+\"target\"+\"'\"};if(vErrors === null){vErrors = [err141];}else {vErrors.push(err141);}errors++;}}var _valid10 = _errs150 === errors;valid62 = valid62 || _valid10;}if(!valid62){const err142 = {keyword:\"anyOf\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then/anyOf\",params:{},message:\"should match some schema in anyOf\"};if(vErrors === null){vErrors = [err142];}else {vErrors.push(err142);}errors++;}else {errors = _errs148;if(vErrors !== null){if(_errs148){vErrors.length = _errs148;}else {vErrors = null;}}}if(errors > 0){const emErrs22 = [];for(const err143 of vErrors){if(((((err143.keyword !== \"errorMessage\") && (!err143.emUsed)) && ((err143.dataPath === dataPath+\"/properties/\" + i5+\"/binding\") || ((err143.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding\") === 0) && (err143.dataPath[dataPath+\"/properties/\" + i5+\"/binding\".length] === \"/\")))) && (err143.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then\") === 0)) && (err143.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then\".length] === \"/\")){emErrs22.push(err143);err143.emUsed = true;}}if(emErrs22.length){const err144 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then/errorMessage\",params:{errors: emErrs22},message:\"property.binding \" + JSON.stringify(data56 && data56.type) + \" requires variables, target, or both\"};if(vErrors === null){vErrors = [err144];}else {vErrors.push(err144);}errors++;}const emErrs23 = [];for(const err145 of vErrors){if(!err145.emUsed){emErrs23.push(err145);}}vErrors = emErrs23;errors = emErrs23.length;}var _valid9 = _errs147 === errors;valid60 = _valid9;}if(!valid60){const err146 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err146];}else {vErrors.push(err146);}errors++;}const _errs152 = errors;let valid63 = true;const _errs153 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.type === undefined) && (\"type\")){const err147 = {};if(vErrors === null){vErrors = [err147];}else {vErrors.push(err147);}errors++;}else {if(data56.type !== undefined){if(!equal(data56.type, \"camunda:out\")){const err148 = {};if(vErrors === null){vErrors = [err148];}else {vErrors.push(err148);}errors++;}}}}var _valid11 = _errs153 === errors;errors = _errs152;if(vErrors !== null){if(_errs152){vErrors.length = _errs152;}else {vErrors = null;}}if(_valid11){const _errs155 = errors;const _errs156 = errors;let valid65 = false;let passing2 = null;const _errs157 = errors;const _errs158 = errors;const _errs159 = errors;const _errs160 = errors;let valid67 = false;const _errs161 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.source === undefined) && (\"source\")){const err149 = {};if(vErrors === null){vErrors = [err149];}else {vErrors.push(err149);}errors++;}}var _valid13 = _errs161 === errors;valid67 = valid67 || _valid13;if(!valid67){const _errs162 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.sourceExpression === undefined) && (\"sourceExpression\")){const err150 = {};if(vErrors === null){vErrors = [err150];}else {vErrors.push(err150);}errors++;}}var _valid13 = _errs162 === errors;valid67 = valid67 || _valid13;}if(!valid67){const err151 = {};if(vErrors === null){vErrors = [err151];}else {vErrors.push(err151);}errors++;}else {errors = _errs160;if(vErrors !== null){if(_errs160){vErrors.length = _errs160;}else {vErrors = null;}}}var valid66 = _errs159 === errors;if(!valid66){errors = _errs158;if(vErrors !== null){if(_errs158){vErrors.length = _errs158;}else {vErrors = null;}}}else {const err152 = {keyword:\"not\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/0/not\",params:{},message:\"should NOT be valid\"};if(vErrors === null){vErrors = [err152];}else {vErrors.push(err152);}errors++;}if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.variables === undefined){const err153 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/0/required\",params:{missingProperty: \"variables\"},message:\"should have required property '\"+\"variables\"+\"'\"};if(vErrors === null){vErrors = [err153];}else {vErrors.push(err153);}errors++;}}var _valid12 = _errs157 === errors;if(_valid12){valid65 = true;passing2 = 0;}const _errs163 = errors;const _errs164 = errors;const _errs165 = errors;const _errs166 = errors;let valid69 = false;const _errs167 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.variables === undefined) && (\"variables\")){const err154 = {};if(vErrors === null){vErrors = [err154];}else {vErrors.push(err154);}errors++;}}var _valid14 = _errs167 === errors;valid69 = valid69 || _valid14;if(!valid69){const _errs168 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.sourceExpression === undefined) && (\"sourceExpression\")){const err155 = {};if(vErrors === null){vErrors = [err155];}else {vErrors.push(err155);}errors++;}}var _valid14 = _errs168 === errors;valid69 = valid69 || _valid14;}if(!valid69){const err156 = {};if(vErrors === null){vErrors = [err156];}else {vErrors.push(err156);}errors++;}else {errors = _errs166;if(vErrors !== null){if(_errs166){vErrors.length = _errs166;}else {vErrors = null;}}}var valid68 = _errs165 === errors;if(!valid68){errors = _errs164;if(vErrors !== null){if(_errs164){vErrors.length = _errs164;}else {vErrors = null;}}}else {const err157 = {keyword:\"not\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/1/not\",params:{},message:\"should NOT be valid\"};if(vErrors === null){vErrors = [err157];}else {vErrors.push(err157);}errors++;}if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.source === undefined){const err158 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/1/required\",params:{missingProperty: \"source\"},message:\"should have required property '\"+\"source\"+\"'\"};if(vErrors === null){vErrors = [err158];}else {vErrors.push(err158);}errors++;}}var _valid12 = _errs163 === errors;if(_valid12 && valid65){valid65 = false;passing2 = [passing2, 1];}else {if(_valid12){valid65 = true;passing2 = 1;}const _errs169 = errors;const _errs170 = errors;const _errs171 = errors;const _errs172 = errors;let valid71 = false;const _errs173 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.variables === undefined) && (\"variables\")){const err159 = {};if(vErrors === null){vErrors = [err159];}else {vErrors.push(err159);}errors++;}}var _valid15 = _errs173 === errors;valid71 = valid71 || _valid15;if(!valid71){const _errs174 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.source === undefined) && (\"source\")){const err160 = {};if(vErrors === null){vErrors = [err160];}else {vErrors.push(err160);}errors++;}}var _valid15 = _errs174 === errors;valid71 = valid71 || _valid15;}if(!valid71){const err161 = {};if(vErrors === null){vErrors = [err161];}else {vErrors.push(err161);}errors++;}else {errors = _errs172;if(vErrors !== null){if(_errs172){vErrors.length = _errs172;}else {vErrors = null;}}}var valid70 = _errs171 === errors;if(!valid70){errors = _errs170;if(vErrors !== null){if(_errs170){vErrors.length = _errs170;}else {vErrors = null;}}}else {const err162 = {keyword:\"not\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/2/not\",params:{},message:\"should NOT be valid\"};if(vErrors === null){vErrors = [err162];}else {vErrors.push(err162);}errors++;}if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.sourceExpression === undefined){const err163 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/2/required\",params:{missingProperty: \"sourceExpression\"},message:\"should have required property '\"+\"sourceExpression\"+\"'\"};if(vErrors === null){vErrors = [err163];}else {vErrors.push(err163);}errors++;}}var _valid12 = _errs169 === errors;if(_valid12 && valid65){valid65 = false;passing2 = [passing2, 2];}else {if(_valid12){valid65 = true;passing2 = 2;}const _errs175 = errors;const _errs176 = errors;const _errs177 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.source === undefined) && (\"source\")){const err164 = {};if(vErrors === null){vErrors = [err164];}else {vErrors.push(err164);}errors++;}}var valid72 = _errs177 === errors;if(!valid72){errors = _errs176;if(vErrors !== null){if(_errs176){vErrors.length = _errs176;}else {vErrors = null;}}}else {const err165 = {keyword:\"not\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/3/not\",params:{},message:\"should NOT be valid\"};if(vErrors === null){vErrors = [err165];}else {vErrors.push(err165);}errors++;}if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.variables === undefined){const err166 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/3/required\",params:{missingProperty: \"variables\"},message:\"should have required property '\"+\"variables\"+\"'\"};if(vErrors === null){vErrors = [err166];}else {vErrors.push(err166);}errors++;}if(data56.sourceExpression === undefined){const err167 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/3/required\",params:{missingProperty: \"sourceExpression\"},message:\"should have required property '\"+\"sourceExpression\"+\"'\"};if(vErrors === null){vErrors = [err167];}else {vErrors.push(err167);}errors++;}}var _valid12 = _errs175 === errors;if(_valid12 && valid65){valid65 = false;passing2 = [passing2, 3];}else {if(_valid12){valid65 = true;passing2 = 3;}const _errs178 = errors;const _errs179 = errors;const _errs180 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.sourceExpression === undefined) && (\"sourceExpression\")){const err168 = {};if(vErrors === null){vErrors = [err168];}else {vErrors.push(err168);}errors++;}}var valid73 = _errs180 === errors;if(!valid73){errors = _errs179;if(vErrors !== null){if(_errs179){vErrors.length = _errs179;}else {vErrors = null;}}}else {const err169 = {keyword:\"not\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/4/not\",params:{},message:\"should NOT be valid\"};if(vErrors === null){vErrors = [err169];}else {vErrors.push(err169);}errors++;}if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.variables === undefined){const err170 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/4/required\",params:{missingProperty: \"variables\"},message:\"should have required property '\"+\"variables\"+\"'\"};if(vErrors === null){vErrors = [err170];}else {vErrors.push(err170);}errors++;}if(data56.source === undefined){const err171 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/4/required\",params:{missingProperty: \"source\"},message:\"should have required property '\"+\"source\"+\"'\"};if(vErrors === null){vErrors = [err171];}else {vErrors.push(err171);}errors++;}}var _valid12 = _errs178 === errors;if(_valid12 && valid65){valid65 = false;passing2 = [passing2, 4];}else {if(_valid12){valid65 = true;passing2 = 4;}}}}}if(!valid65){const err172 = {keyword:\"oneOf\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf\",params:{passingSchemas: passing2},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err172];}else {vErrors.push(err172);}errors++;}else {errors = _errs156;if(vErrors !== null){if(_errs156){vErrors.length = _errs156;}else {vErrors = null;}}}if(errors > 0){const emErrs24 = [];for(const err173 of vErrors){if(((((err173.keyword !== \"errorMessage\") && (!err173.emUsed)) && ((err173.dataPath === dataPath+\"/properties/\" + i5+\"/binding\") || ((err173.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding\") === 0) && (err173.dataPath[dataPath+\"/properties/\" + i5+\"/binding\".length] === \"/\")))) && (err173.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then\") === 0)) && (err173.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then\".length] === \"/\")){emErrs24.push(err173);err173.emUsed = true;}}if(emErrs24.length){const err174 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/errorMessage\",params:{errors: emErrs24},message:\"property.binding \" + JSON.stringify(data56 && data56.type) + \" requires one of the following: variables, sourceExpression, source, (sourceExpression and variables), or (source and variables)\"};if(vErrors === null){vErrors = [err174];}else {vErrors.push(err174);}errors++;}const emErrs25 = [];for(const err175 of vErrors){if(!err175.emUsed){emErrs25.push(err175);}}vErrors = emErrs25;errors = emErrs25.length;}var _valid11 = _errs155 === errors;valid63 = _valid11;}if(!valid63){const err176 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err176];}else {vErrors.push(err176);}errors++;}const _errs182 = errors;let valid74 = true;const _errs183 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if((data56.type === undefined) && (\"type\")){const err177 = {};if(vErrors === null){vErrors = [err177];}else {vErrors.push(err177);}errors++;}else {if(data56.type !== undefined){if(!equal(data56.type, \"camunda:errorEventDefinition\")){const err178 = {};if(vErrors === null){vErrors = [err178];}else {vErrors.push(err178);}errors++;}}}}var _valid16 = _errs183 === errors;errors = _errs182;if(vErrors !== null){if(_errs182){vErrors.length = _errs182;}else {vErrors = null;}}if(_valid16){const _errs185 = errors;const _errs186 = errors;let valid76 = false;let passing3 = null;const _errs187 = errors;if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.errorRef === undefined){const err179 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/then/oneOf/0/required\",params:{missingProperty: \"errorRef\"},message:\"should have required property '\"+\"errorRef\"+\"'\"};if(vErrors === null){vErrors = [err179];}else {vErrors.push(err179);}errors++;}}var _valid17 = _errs187 === errors;if(_valid17){valid76 = true;passing3 = 0;}if(!valid76){const err180 = {keyword:\"oneOf\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/then/oneOf\",params:{passingSchemas: passing3},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err180];}else {vErrors.push(err180);}errors++;}else {errors = _errs186;if(vErrors !== null){if(_errs186){vErrors.length = _errs186;}else {vErrors = null;}}}if(errors > 0){const emErrs26 = [];for(const err181 of vErrors){if(((((err181.keyword !== \"errorMessage\") && (!err181.emUsed)) && ((err181.dataPath === dataPath+\"/properties/\" + i5+\"/binding\") || ((err181.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding\") === 0) && (err181.dataPath[dataPath+\"/properties/\" + i5+\"/binding\".length] === \"/\")))) && (err181.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/then\") === 0)) && (err181.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/then\".length] === \"/\")){emErrs26.push(err181);err181.emUsed = true;}}if(emErrs26.length){const err182 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/then/errorMessage\",params:{errors: emErrs26},message:\"property.binding \" + JSON.stringify(data56 && data56.type) + \" requires errorRef\"};if(vErrors === null){vErrors = [err182];}else {vErrors.push(err182);}errors++;}const emErrs27 = [];for(const err183 of vErrors){if(!err183.emUsed){emErrs27.push(err183);}}vErrors = emErrs27;errors = emErrs27.length;}var _valid16 = _errs185 === errors;valid74 = _valid16;}if(!valid74){const err184 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err184];}else {vErrors.push(err184);}errors++;}if(data56 && typeof data56 == \"object\" && !Array.isArray(data56)){if(data56.type === undefined){const err185 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/required\",params:{missingProperty: \"type\"},message:\"should have required property '\"+\"type\"+\"'\"};if(vErrors === null){vErrors = [err185];}else {vErrors.push(err185);}errors++;}if(data56.type !== undefined){let data62 = data56.type;if(typeof data62 !== \"string\"){const err186 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/type/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err186];}else {vErrors.push(err186);}errors++;}if(!((((((((((data62 === \"property\") || (data62 === \"camunda:property\")) || (data62 === \"camunda:inputParameter\")) || (data62 === \"camunda:outputParameter\")) || (data62 === \"camunda:in\")) || (data62 === \"camunda:out\")) || (data62 === \"camunda:in:businessKey\")) || (data62 === \"camunda:executionListener\")) || (data62 === \"camunda:field\")) || (data62 === \"camunda:errorEventDefinition\"))){const err187 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/type/enum\",params:{allowedValues: schema18$1.allOf[1].items.properties.binding.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err187];}else {vErrors.push(err187);}errors++;}if(errors > 0){const emErrs28 = [];for(const err188 of vErrors){if(((((err188.keyword !== \"errorMessage\") && (!err188.emUsed)) && ((err188.dataPath === dataPath+\"/properties/\" + i5+\"/binding/type\") || ((err188.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding/type\") === 0) && (err188.dataPath[dataPath+\"/properties/\" + i5+\"/binding/type\".length] === \"/\")))) && (err188.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/properties/type\") === 0)) && (err188.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/properties/type\".length] === \"/\")){emErrs28.push(err188);err188.emUsed = true;}}if(emErrs28.length){const err189 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/type/errorMessage\",params:{errors: emErrs28},message:\"invalid property.binding type \" + JSON.stringify(data62) + \"; must be any of { property, camunda:property, camunda:inputParameter, camunda:outputParameter, camunda:in, camunda:out, camunda:in:businessKey, camunda:executionListener, camunda:field, camunda:errorEventDefinition }\"};if(vErrors === null){vErrors = [err189];}else {vErrors.push(err189);}errors++;}const emErrs29 = [];for(const err190 of vErrors){if(!err190.emUsed){emErrs29.push(err190);}}vErrors = emErrs29;errors = emErrs29.length;}}if(data56.name !== undefined){if(typeof data56.name !== \"string\"){const err191 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/name\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/name/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err191];}else {vErrors.push(err191);}errors++;}}if(data56.event !== undefined){if(typeof data56.event !== \"string\"){const err192 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/event\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/event/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err192];}else {vErrors.push(err192);}errors++;}}if(data56.scriptFormat !== undefined){if(typeof data56.scriptFormat !== \"string\"){const err193 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/scriptFormat\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/scriptFormat/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err193];}else {vErrors.push(err193);}errors++;}}if(data56.source !== undefined){if(typeof data56.source !== \"string\"){const err194 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/source\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/source/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err194];}else {vErrors.push(err194);}errors++;}}if(data56.target !== undefined){if(typeof data56.target !== \"string\"){const err195 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/target\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/target/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err195];}else {vErrors.push(err195);}errors++;}}if(data56.expression !== undefined){if(typeof data56.expression !== \"boolean\"){const err196 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/expression\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/expression/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err196];}else {vErrors.push(err196);}errors++;}}if(data56.variables !== undefined){let data69 = data56.variables;if(typeof data69 !== \"string\"){const err197 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/variables\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/variables/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err197];}else {vErrors.push(err197);}errors++;}if(!((data69 === \"all\") || (data69 === \"local\"))){const err198 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/variables\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/variables/enum\",params:{allowedValues: schema18$1.allOf[1].items.properties.binding.properties.variables.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err198];}else {vErrors.push(err198);}errors++;}}if(data56.sourceExpression !== undefined){if(typeof data56.sourceExpression !== \"string\"){const err199 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/sourceExpression\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/sourceExpression/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err199];}else {vErrors.push(err199);}errors++;}}}else {const err200 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err200];}else {vErrors.push(err200);}errors++;}}}else {const err201 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err201];}else {vErrors.push(err201);}errors++;}if(errors > 0){const emErrors8 = {\"required\":[]};const templates8 = {required:function(){return \"missing binding for property \\\"\" + JSON.stringify(i5) + \"\\\"\"}};for(const err202 of vErrors){if((((((err202.keyword !== \"errorMessage\") && (!err202.emUsed)) && (err202.dataPath === dataPath+\"/properties/\" + i5)) && (err202.keyword in emErrors8)) && (err202.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items\") === 0)) && (/^\\/[^\\/]*$/.test(err202.schemaPath.slice(38)))){emErrors8[err202.keyword].push(err202);err202.emUsed = true;}}for(const key8 in emErrors8){if(emErrors8[key8].length){const err203 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/errorMessage\",params:{errors: emErrors8[key8]},message:key8 in templates8 ? templates8[key8]() : schema18$1.allOf[1].items.errorMessage[key8]};if(vErrors === null){vErrors = [err203];}else {vErrors.push(err203);}errors++;}}const emErrs30 = [];for(const err204 of vErrors){if(!err204.emUsed){emErrs30.push(err204);}}vErrors = emErrs30;errors = emErrs30.length;}}}else {const err205 = {keyword:\"type\",dataPath:dataPath+\"/properties\",schemaPath:\"#/definitions/properties/allOf/1/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err205];}else {vErrors.push(err205);}errors++;}}if(data.scopes !== undefined){let data71 = data.scopes;if(Array.isArray(data71)){const len6 = data71.length;for(let i6=0; i6<len6; i6++){let data72 = data71[i6];const _errs211 = errors;let valid82 = true;const _errs212 = errors;if(data72 && typeof data72 == \"object\" && !Array.isArray(data72)){if((data72.type === undefined) && (\"type\")){const err206 = {};if(vErrors === null){vErrors = [err206];}else {vErrors.push(err206);}errors++;}else {if(data72.type !== undefined){if(!(data72.type === \"bpmn:Error\")){const err207 = {};if(vErrors === null){vErrors = [err207];}else {vErrors.push(err207);}errors++;}}}}var _valid18 = _errs212 === errors;errors = _errs211;if(vErrors !== null){if(_errs211){vErrors.length = _errs211;}else {vErrors = null;}}if(_valid18){const _errs214 = errors;if(data72 && typeof data72 == \"object\" && !Array.isArray(data72)){if(data72.id === undefined){const err208 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6,schemaPath:\"#/properties/scopes/items/allOf/0/then/required\",params:{missingProperty: \"id\"},message:\"should have required property '\"+\"id\"+\"'\"};if(vErrors === null){vErrors = [err208];}else {vErrors.push(err208);}errors++;}}if(errors > 0){const emErrs31 = [];for(const err209 of vErrors){if(((((err209.keyword !== \"errorMessage\") && (!err209.emUsed)) && ((err209.dataPath === dataPath+\"/scopes/\" + i6) || ((err209.dataPath.indexOf(dataPath+\"/scopes/\" + i6) === 0) && (err209.dataPath[dataPath+\"/scopes/\" + i6.length] === \"/\")))) && (err209.schemaPath.indexOf(\"#/properties/scopes/items/allOf/0/then\") === 0)) && (err209.schemaPath[\"#/properties/scopes/items/allOf/0/then\".length] === \"/\")){emErrs31.push(err209);err209.emUsed = true;}}if(emErrs31.length){const err210 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6,schemaPath:\"#/properties/scopes/items/allOf/0/then/errorMessage\",params:{errors: emErrs31},message:\"invalid scope \" + JSON.stringify(data72 && data72.type) + \", missing id\"};if(vErrors === null){vErrors = [err210];}else {vErrors.push(err210);}errors++;}const emErrs32 = [];for(const err211 of vErrors){if(!err211.emUsed){emErrs32.push(err211);}}vErrors = emErrs32;errors = emErrs32.length;}var _valid18 = _errs214 === errors;valid82 = _valid18;}if(!valid82){const err212 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6,schemaPath:\"#/properties/scopes/items/allOf/0/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err212];}else {vErrors.push(err212);}errors++;}if(data72 && typeof data72 == \"object\" && !Array.isArray(data72)){if(data72.type === undefined){const err213 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6,schemaPath:\"#/properties/scopes/items/required\",params:{missingProperty: \"type\"},message:\"should have required property '\"+\"type\"+\"'\"};if(vErrors === null){vErrors = [err213];}else {vErrors.push(err213);}errors++;}if(data72.properties === undefined){const err214 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6,schemaPath:\"#/properties/scopes/items/required\",params:{missingProperty: \"properties\"},message:\"should have required property '\"+\"properties\"+\"'\"};if(vErrors === null){vErrors = [err214];}else {vErrors.push(err214);}errors++;}if(data72.type !== undefined){let data74 = data72.type;if(typeof data74 !== \"string\"){const err215 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/type\",schemaPath:\"#/properties/scopes/items/properties/type/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err215];}else {vErrors.push(err215);}errors++;}if(!((data74 === \"camunda:Connector\") || (data74 === \"bpmn:Error\"))){const err216 = {keyword:\"enum\",dataPath:dataPath+\"/scopes/\" + i6+\"/type\",schemaPath:\"#/properties/scopes/items/properties/type/enum\",params:{allowedValues: schema17$1.properties.scopes.items.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err216];}else {vErrors.push(err216);}errors++;}if(errors > 0){const emErrs33 = [];for(const err217 of vErrors){if(((((err217.keyword !== \"errorMessage\") && (!err217.emUsed)) && ((err217.dataPath === dataPath+\"/scopes/\" + i6+\"/type\") || ((err217.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/type\") === 0) && (err217.dataPath[dataPath+\"/scopes/\" + i6+\"/type\".length] === \"/\")))) && (err217.schemaPath.indexOf(\"#/properties/scopes/items/properties/type\") === 0)) && (err217.schemaPath[\"#/properties/scopes/items/properties/type\".length] === \"/\")){emErrs33.push(err217);err217.emUsed = true;}}if(emErrs33.length){const err218 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/type\",schemaPath:\"#/properties/scopes/items/properties/type/errorMessage\",params:{errors: emErrs33},message:\"invalid scope type \" + JSON.stringify(data74) + \"; must be any of { camunda:Connector, bpmn:Error }\"};if(vErrors === null){vErrors = [err218];}else {vErrors.push(err218);}errors++;}const emErrs34 = [];for(const err219 of vErrors){if(!err219.emUsed){emErrs34.push(err219);}}vErrors = emErrs34;errors = emErrs34.length;}}if(data72.properties !== undefined){let data75 = data72.properties;if(Array.isArray(data75)){const len7 = data75.length;for(let i7=0; i7<len7; i7++){let data76 = data75[i7];const _errs224 = errors;let valid91 = true;const _errs225 = errors;if(data76 && typeof data76 == \"object\" && !Array.isArray(data76)){if((data76.type === undefined) && (\"type\")){const err220 = {};if(vErrors === null){vErrors = [err220];}else {vErrors.push(err220);}errors++;}else {if(data76.type !== undefined){if(!equal(data76.type, \"Dropdown\")){const err221 = {};if(vErrors === null){vErrors = [err221];}else {vErrors.push(err221);}errors++;}}}}var _valid19 = _errs225 === errors;errors = _errs224;if(vErrors !== null){if(_errs224){vErrors.length = _errs224;}else {vErrors = null;}}if(_valid19){const _errs227 = errors;if(data76 && typeof data76 == \"object\" && !Array.isArray(data76)){if(data76.choices === undefined){const err222 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7,schemaPath:\"#/definitions/properties/allOf/0/items/allOf/0/then/required\",params:{missingProperty: \"choices\"},message:\"should have required property '\"+\"choices\"+\"'\"};if(vErrors === null){vErrors = [err222];}else {vErrors.push(err222);}errors++;}}if(errors > 0){const emErrs35 = [];for(const err223 of vErrors){if(((((err223.keyword !== \"errorMessage\") && (!err223.emUsed)) && ((err223.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i7) || ((err223.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i7) === 0) && (err223.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i7.length] === \"/\")))) && (err223.schemaPath.indexOf(\"#/definitions/properties/allOf/0/items/allOf/0/then\") === 0)) && (err223.schemaPath[\"#/definitions/properties/allOf/0/items/allOf/0/then\".length] === \"/\")){emErrs35.push(err223);err223.emUsed = true;}}if(emErrs35.length){const err224 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7,schemaPath:\"#/definitions/properties/allOf/0/items/allOf/0/then/errorMessage\",params:{errors: emErrs35},message:\"must provide choices=[] with \\\"Dropdown\\\" type\"};if(vErrors === null){vErrors = [err224];}else {vErrors.push(err224);}errors++;}const emErrs36 = [];for(const err225 of vErrors){if(!err225.emUsed){emErrs36.push(err225);}}vErrors = emErrs36;errors = emErrs36.length;}var _valid19 = _errs227 === errors;valid91 = _valid19;}if(!valid91){const err226 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7,schemaPath:\"#/definitions/properties/allOf/0/items/allOf/0/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err226];}else {vErrors.push(err226);}errors++;}if(data76 && typeof data76 == \"object\" && !Array.isArray(data76)){if(data76.id !== undefined){if(typeof data76.id !== \"string\"){const err227 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/id\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/id/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err227];}else {vErrors.push(err227);}errors++;}}if(data76.value !== undefined){let data79 = data76.value;if((typeof data79 !== \"string\") && (typeof data79 !== \"boolean\")){const err228 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/value\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/value/type\",params:{type: schema19.items.properties.value.type},message:\"should be string,boolean\"};if(vErrors === null){vErrors = [err228];}else {vErrors.push(err228);}errors++;}}if(data76.description !== undefined){if(typeof data76.description !== \"string\"){const err229 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/description\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/description/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err229];}else {vErrors.push(err229);}errors++;}}if(data76.label !== undefined){if(typeof data76.label !== \"string\"){const err230 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/label\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/label/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err230];}else {vErrors.push(err230);}errors++;}}if(data76.type !== undefined){if(typeof data76.type !== \"string\"){const err231 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/type\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/type/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err231];}else {vErrors.push(err231);}errors++;}}if(data76.editable !== undefined){if(typeof data76.editable !== \"boolean\"){const err232 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/editable\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/editable/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err232];}else {vErrors.push(err232);}errors++;}}if(data76.choices !== undefined){let data84 = data76.choices;if(Array.isArray(data84)){const len8 = data84.length;for(let i8=0; i8<len8; i8++){let data85 = data84[i8];if(data85 && typeof data85 == \"object\" && !Array.isArray(data85)){if(data85.value === undefined){const err233 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/choices/\" + i8,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/required\",params:{missingProperty: \"value\"},message:\"should have required property '\"+\"value\"+\"'\"};if(vErrors === null){vErrors = [err233];}else {vErrors.push(err233);}errors++;}if(data85.name === undefined){const err234 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/choices/\" + i8,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/required\",params:{missingProperty: \"name\"},message:\"should have required property '\"+\"name\"+\"'\"};if(vErrors === null){vErrors = [err234];}else {vErrors.push(err234);}errors++;}if(data85.name !== undefined){if(typeof data85.name !== \"string\"){const err235 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/choices/\" + i8+\"/name\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/properties/name/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err235];}else {vErrors.push(err235);}errors++;}}if(data85.value !== undefined){if(typeof data85.value !== \"string\"){const err236 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/choices/\" + i8+\"/value\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/properties/value/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err236];}else {vErrors.push(err236);}errors++;}}}else {const err237 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/choices/\" + i8,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err237];}else {vErrors.push(err237);}errors++;}if(errors > 0){const emErrors9 = {\"required\":[]};const templates9 = {};for(const err238 of vErrors){if((((((err238.keyword !== \"errorMessage\") && (!err238.emUsed)) && (err238.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/choices/\" + i8)) && (err238.keyword in emErrors9)) && (err238.schemaPath.indexOf(\"#/definitions/properties/allOf/0/items/properties/choices/items\") === 0)) && (/^\\/[^\\/]*$/.test(err238.schemaPath.slice(63)))){emErrors9[err238.keyword].push(err238);err238.emUsed = true;}}for(const key9 in emErrors9){if(emErrors9[key9].length){const err239 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/choices/\" + i8,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/errorMessage\",params:{errors: emErrors9[key9]},message:key9 in templates9 ? templates9[key9]() : schema19.items.properties.choices.items.errorMessage[key9]};if(vErrors === null){vErrors = [err239];}else {vErrors.push(err239);}errors++;}}const emErrs37 = [];for(const err240 of vErrors){if(!err240.emUsed){emErrs37.push(err240);}}vErrors = emErrs37;errors = emErrs37.length;}}}else {const err241 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/choices\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err241];}else {vErrors.push(err241);}errors++;}}if(data76.constraints !== undefined){let data88 = data76.constraints;if(data88 && typeof data88 == \"object\" && !Array.isArray(data88)){if(data88.notEmpty !== undefined){if(typeof data88.notEmpty !== \"boolean\"){const err242 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/constraints/notEmpty\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/notEmpty/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err242];}else {vErrors.push(err242);}errors++;}}if(data88.minLength !== undefined){if(!(typeof data88.minLength == \"number\")){const err243 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/constraints/minLength\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/minLength/type\",params:{type: \"number\"},message:\"should be number\"};if(vErrors === null){vErrors = [err243];}else {vErrors.push(err243);}errors++;}}if(data88.maxLength !== undefined){if(!(typeof data88.maxLength == \"number\")){const err244 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/constraints/maxLength\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/maxLength/type\",params:{type: \"number\"},message:\"should be number\"};if(vErrors === null){vErrors = [err244];}else {vErrors.push(err244);}errors++;}}if(data88.pattern !== undefined){let data92 = data88.pattern;const _errs257 = errors;let valid99 = false;let passing4 = null;const _errs258 = errors;if(data92 && typeof data92 == \"object\" && !Array.isArray(data92)){if(data92.value !== undefined){if(typeof data92.value !== \"string\"){const err245 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/constraints/pattern/value\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/0/properties/value/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err245];}else {vErrors.push(err245);}errors++;}}if(data92.message !== undefined){if(typeof data92.message !== \"string\"){const err246 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/constraints/pattern/message\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/0/properties/message/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err246];}else {vErrors.push(err246);}errors++;}}}else {const err247 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/constraints/pattern\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/0/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err247];}else {vErrors.push(err247);}errors++;}var _valid20 = _errs258 === errors;if(_valid20){valid99 = true;passing4 = 0;}const _errs264 = errors;if(typeof data92 !== \"string\"){const err248 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/constraints/pattern\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/1/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err248];}else {vErrors.push(err248);}errors++;}var _valid20 = _errs264 === errors;if(_valid20 && valid99){valid99 = false;passing4 = [passing4, 1];}else {if(_valid20){valid99 = true;passing4 = 1;}}if(!valid99){const err249 = {keyword:\"oneOf\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/constraints/pattern\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf\",params:{passingSchemas: passing4},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err249];}else {vErrors.push(err249);}errors++;}else {errors = _errs257;if(vErrors !== null){if(_errs257){vErrors.length = _errs257;}else {vErrors = null;}}}}}else {const err250 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/constraints\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err250];}else {vErrors.push(err250);}errors++;}}if(data76.group !== undefined){if(typeof data76.group !== \"string\"){const err251 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/group\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/group/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err251];}else {vErrors.push(err251);}errors++;}}if(data76.condition !== undefined){let data96 = data76.condition;const _errs270 = errors;let valid101 = false;let passing5 = null;const _errs271 = errors;if(data96 && typeof data96 == \"object\" && !Array.isArray(data96)){if(data96.equals === undefined){const err252 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/0/required\",params:{missingProperty: \"equals\"},message:\"should have required property '\"+\"equals\"+\"'\"};if(vErrors === null){vErrors = [err252];}else {vErrors.push(err252);}errors++;}if(data96.equals !== undefined){let data97 = data96.equals;if(((typeof data97 !== \"string\") && (!(typeof data97 == \"number\"))) && (typeof data97 !== \"boolean\")){const err253 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition/equals\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/0/properties/equals/type\",params:{type: schema19.items.properties.condition.oneOf[0].properties.equals.type},message:\"should be string,number,boolean\"};if(vErrors === null){vErrors = [err253];}else {vErrors.push(err253);}errors++;}}}var _valid21 = _errs271 === errors;if(_valid21){valid101 = true;passing5 = 0;}const _errs274 = errors;if(data96 && typeof data96 == \"object\" && !Array.isArray(data96)){if(data96.oneOf === undefined){const err254 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/1/required\",params:{missingProperty: \"oneOf\"},message:\"should have required property '\"+\"oneOf\"+\"'\"};if(vErrors === null){vErrors = [err254];}else {vErrors.push(err254);}errors++;}if(data96.oneOf !== undefined){let data98 = data96.oneOf;if(Array.isArray(data98)){const len9 = data98.length;for(let i9=0; i9<len9; i9++){let data99 = data98[i9];if((typeof data99 !== \"string\") && (!(typeof data99 == \"number\"))){const err255 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition/oneOf/\" + i9,schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/1/properties/oneOf/items/type\",params:{type: schema19.items.properties.condition.oneOf[1].properties.oneOf.items.type},message:\"should be string,number\"};if(vErrors === null){vErrors = [err255];}else {vErrors.push(err255);}errors++;}}}else {const err256 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition/oneOf\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/1/properties/oneOf/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err256];}else {vErrors.push(err256);}errors++;}}}var _valid21 = _errs274 === errors;if(_valid21 && valid101){valid101 = false;passing5 = [passing5, 1];}else {if(_valid21){valid101 = true;passing5 = 1;}}if(!valid101){const err257 = {keyword:\"oneOf\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf\",params:{passingSchemas: passing5},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err257];}else {vErrors.push(err257);}errors++;}else {errors = _errs270;if(vErrors !== null){if(_errs270){vErrors.length = _errs270;}else {vErrors = null;}}}if(data96 && typeof data96 == \"object\" && !Array.isArray(data96)){if(data96.property === undefined){const err258 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/required\",params:{missingProperty: \"property\"},message:\"should have required property '\"+\"property\"+\"'\"};if(vErrors === null){vErrors = [err258];}else {vErrors.push(err258);}errors++;}if(data96.type !== undefined){if(!equal(data96.type, \"simple\")){const err259 = {keyword:\"const\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition/type\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/properties/type/const\",params:{allowedValue: \"simple\"},message:\"should be equal to constant\"};if(vErrors === null){vErrors = [err259];}else {vErrors.push(err259);}errors++;}}if(data96.property !== undefined){if(typeof data96.property !== \"string\"){const err260 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition/property\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/properties/property/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err260];}else {vErrors.push(err260);}errors++;}}}else {const err261 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err261];}else {vErrors.push(err261);}errors++;}if(errors > 0){const emErrors10 = {\"required\":{\"property\":[]}};const templates10 = {required:{}};let emPropParams4;let emParamsErrors4;for(const err262 of vErrors){if((((((err262.keyword !== \"errorMessage\") && (!err262.emUsed)) && (err262.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition\")) && (err262.keyword in emErrors10)) && (err262.schemaPath.indexOf(\"#/definitions/properties/allOf/0/items/properties/condition\") === 0)) && (/^\\/[^\\/]*$/.test(err262.schemaPath.slice(59)))){emPropParams4 = obj0$1[err262.keyword];emParamsErrors4 = emErrors10[err262.keyword][err262.params[emPropParams4]];if(emParamsErrors4){emParamsErrors4.push(err262);err262.emUsed = true;}}}for(const key10 in emErrors10){for(const keyProp4 in emErrors10[key10]){emParamsErrors4 = emErrors10[key10][keyProp4];if(emParamsErrors4.length){const tmpl4 = templates10[key10] && templates10[key10][keyProp4];const err263 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/errorMessage\",params:{errors: emParamsErrors4},message:tmpl4 ? tmpl4() : schema19.items.properties.condition.errorMessage[key10][keyProp4]};if(vErrors === null){vErrors = [err263];}else {vErrors.push(err263);}errors++;}}}const emErrs38 = [];for(const err264 of vErrors){if(!err264.emUsed){emErrs38.push(err264);}}vErrors = emErrs38;errors = emErrs38.length;}}}else {const err265 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i7,schemaPath:\"#/definitions/properties/allOf/0/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err265];}else {vErrors.push(err265);}errors++;}}}else {const err266 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties\",schemaPath:\"#/definitions/properties/allOf/0/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err266];}else {vErrors.push(err266);}errors++;}if(Array.isArray(data75)){const len10 = data75.length;for(let i10=0; i10<len10; i10++){let data102 = data75[i10];const _errs288 = errors;let valid112 = true;const _errs289 = errors;if(data102 && typeof data102 == \"object\" && !Array.isArray(data102)){if((data102.binding === undefined) && (\"binding\")){const err267 = {};if(vErrors === null){vErrors = [err267];}else {vErrors.push(err267);}errors++;}else {if(data102.binding !== undefined){let data103 = data102.binding;if(data103 && typeof data103 == \"object\" && !Array.isArray(data103)){if((data103.type === undefined) && (\"type\")){const err268 = {};if(vErrors === null){vErrors = [err268];}else {vErrors.push(err268);}errors++;}else {if(data103.type !== undefined){if(!equal(data103.type, \"property\")){const err269 = {};if(vErrors === null){vErrors = [err269];}else {vErrors.push(err269);}errors++;}}}}}}}var _valid22 = _errs289 === errors;errors = _errs288;if(vErrors !== null){if(_errs288){vErrors.length = _errs288;}else {vErrors = null;}}if(_valid22){const _errs292 = errors;if(data102 && typeof data102 == \"object\" && !Array.isArray(data102)){if(data102.type !== undefined){let data105 = data102.type;if(!(((((data105 === \"String\") || (data105 === \"Text\")) || (data105 === \"Hidden\")) || (data105 === \"Dropdown\")) || (data105 === \"Boolean\"))){const err270 = {keyword:\"enum\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type/enum\",params:{allowedValues: schema20.items.allOf[0].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err270];}else {vErrors.push(err270);}errors++;}if(errors > 0){const emErrs39 = [];for(const err271 of vErrors){if(((((err271.keyword !== \"errorMessage\") && (!err271.emUsed)) && ((err271.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\") || ((err271.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\") === 0) && (err271.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\".length] === \"/\")))) && (err271.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type\") === 0)) && (err271.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type\".length] === \"/\")){emErrs39.push(err271);err271.emUsed = true;}}if(emErrs39.length){const err272 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type/errorMessage\",params:{errors: emErrs39},message:\"invalid property type \" + JSON.stringify(data105) + \" for binding type \\\"property\\\"; must be any of { String, Text, Hidden, Dropdown, Boolean }\"};if(vErrors === null){vErrors = [err272];}else {vErrors.push(err272);}errors++;}const emErrs40 = [];for(const err273 of vErrors){if(!err273.emUsed){emErrs40.push(err273);}}vErrors = emErrs40;errors = emErrs40.length;}}}var _valid22 = _errs292 === errors;valid112 = _valid22;}if(!valid112){const err274 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/0/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err274];}else {vErrors.push(err274);}errors++;}const _errs295 = errors;let valid116 = true;const _errs296 = errors;if(data102 && typeof data102 == \"object\" && !Array.isArray(data102)){if((data102.binding === undefined) && (\"binding\")){const err275 = {};if(vErrors === null){vErrors = [err275];}else {vErrors.push(err275);}errors++;}else {if(data102.binding !== undefined){let data106 = data102.binding;if(data106 && typeof data106 == \"object\" && !Array.isArray(data106)){if((data106.type === undefined) && (\"type\")){const err276 = {};if(vErrors === null){vErrors = [err276];}else {vErrors.push(err276);}errors++;}else {if(data106.type !== undefined){if(!equal(data106.type, \"camunda:executionListener\")){const err277 = {};if(vErrors === null){vErrors = [err277];}else {vErrors.push(err277);}errors++;}}}}}}}var _valid23 = _errs296 === errors;errors = _errs295;if(vErrors !== null){if(_errs295){vErrors.length = _errs295;}else {vErrors = null;}}if(_valid23){const _errs299 = errors;if(data102 && typeof data102 == \"object\" && !Array.isArray(data102)){if(data102.type !== undefined){if(!(data102.type === \"Hidden\")){const err278 = {keyword:\"enum\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type/enum\",params:{allowedValues: schema20.items.allOf[1].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err278];}else {vErrors.push(err278);}errors++;}if(errors > 0){const emErrs41 = [];for(const err279 of vErrors){if(((((err279.keyword !== \"errorMessage\") && (!err279.emUsed)) && ((err279.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\") || ((err279.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\") === 0) && (err279.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\".length] === \"/\")))) && (err279.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type\") === 0)) && (err279.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type\".length] === \"/\")){emErrs41.push(err279);err279.emUsed = true;}}if(emErrs41.length){const err280 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type/errorMessage\",params:{errors: emErrs41},message:\"invalid property type \" + JSON.stringify(data102 && data102.type) + \" for binding type \\\"camunda:executionListener\\\"; must be \\\"Hidden\\\"\"};if(vErrors === null){vErrors = [err280];}else {vErrors.push(err280);}errors++;}const emErrs42 = [];for(const err281 of vErrors){if(!err281.emUsed){emErrs42.push(err281);}}vErrors = emErrs42;errors = emErrs42.length;}}}var _valid23 = _errs299 === errors;valid116 = _valid23;}if(!valid116){const err282 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/1/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err282];}else {vErrors.push(err282);}errors++;}const _errs302 = errors;let valid120 = true;const _errs303 = errors;if(data102 && typeof data102 == \"object\" && !Array.isArray(data102)){if((data102.binding === undefined) && (\"binding\")){const err283 = {};if(vErrors === null){vErrors = [err283];}else {vErrors.push(err283);}errors++;}else {if(data102.binding !== undefined){let data109 = data102.binding;if(data109 && typeof data109 == \"object\" && !Array.isArray(data109)){if((data109.type === undefined) && (\"type\")){const err284 = {};if(vErrors === null){vErrors = [err284];}else {vErrors.push(err284);}errors++;}else {if(data109.type !== undefined){let data110 = data109.type;if(!((((((data110 === \"camunda:property\") || (data110 === \"camunda:outputParameter\")) || (data110 === \"camunda:in\")) || (data110 === \"camunda:in:businessKey\")) || (data110 === \"camunda:out\")) || (data110 === \"camunda:errorEventDefinition\"))){const err285 = {};if(vErrors === null){vErrors = [err285];}else {vErrors.push(err285);}errors++;}}}}}}}var _valid24 = _errs303 === errors;errors = _errs302;if(vErrors !== null){if(_errs302){vErrors.length = _errs302;}else {vErrors = null;}}if(_valid24){const _errs306 = errors;if(data102 && typeof data102 == \"object\" && !Array.isArray(data102)){if(data102.type !== undefined){let data111 = data102.type;if(!(((data111 === \"String\") || (data111 === \"Hidden\")) || (data111 === \"Dropdown\"))){const err286 = {keyword:\"enum\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/type/enum\",params:{allowedValues: schema20.items.allOf[2].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err286];}else {vErrors.push(err286);}errors++;}if(errors > 0){const emErrs43 = [];for(const err287 of vErrors){if(((((err287.keyword !== \"errorMessage\") && (!err287.emUsed)) && ((err287.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\") || ((err287.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\") === 0) && (err287.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\".length] === \"/\")))) && (err287.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/type\") === 0)) && (err287.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/type\".length] === \"/\")){emErrs43.push(err287);err287.emUsed = true;}}if(emErrs43.length){const err288 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/type/errorMessage\",params:{errors: emErrs43},message:\"invalid property type \" + JSON.stringify(data111) + \" for binding type \" + JSON.stringify(data102 && data102.binding && data102.binding.type) + \"; must be any of { String, Hidden, Dropdown }\"};if(vErrors === null){vErrors = [err288];}else {vErrors.push(err288);}errors++;}const emErrs44 = [];for(const err289 of vErrors){if(!err289.emUsed){emErrs44.push(err289);}}vErrors = emErrs44;errors = emErrs44.length;}}}var _valid24 = _errs306 === errors;valid120 = _valid24;}if(!valid120){const err290 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/2/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err290];}else {vErrors.push(err290);}errors++;}const _errs309 = errors;let valid124 = true;const _errs310 = errors;if(data102 && typeof data102 == \"object\" && !Array.isArray(data102)){if((data102.binding === undefined) && (\"binding\")){const err291 = {};if(vErrors === null){vErrors = [err291];}else {vErrors.push(err291);}errors++;}else {if(data102.binding !== undefined){let data112 = data102.binding;if(data112 && typeof data112 == \"object\" && !Array.isArray(data112)){if((data112.type === undefined) && (\"type\")){const err292 = {};if(vErrors === null){vErrors = [err292];}else {vErrors.push(err292);}errors++;}else {if(data112.type !== undefined){let data113 = data112.type;if(!((data113 === \"camunda:inputParameter\") || (data113 === \"camunda:field\"))){const err293 = {};if(vErrors === null){vErrors = [err293];}else {vErrors.push(err293);}errors++;}}}}}}}var _valid25 = _errs310 === errors;errors = _errs309;if(vErrors !== null){if(_errs309){vErrors.length = _errs309;}else {vErrors = null;}}if(_valid25){const _errs313 = errors;if(data102 && typeof data102 == \"object\" && !Array.isArray(data102)){if(data102.type !== undefined){let data114 = data102.type;if(!((((data114 === \"String\") || (data114 === \"Text\")) || (data114 === \"Hidden\")) || (data114 === \"Dropdown\"))){const err294 = {keyword:\"enum\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/type/enum\",params:{allowedValues: schema20.items.allOf[3].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err294];}else {vErrors.push(err294);}errors++;}if(errors > 0){const emErrs45 = [];for(const err295 of vErrors){if(((((err295.keyword !== \"errorMessage\") && (!err295.emUsed)) && ((err295.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\") || ((err295.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\") === 0) && (err295.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\".length] === \"/\")))) && (err295.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/type\") === 0)) && (err295.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/type\".length] === \"/\")){emErrs45.push(err295);err295.emUsed = true;}}if(emErrs45.length){const err296 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/type/errorMessage\",params:{errors: emErrs45},message:\"invalid property type \" + JSON.stringify(data114) + \" for binding type \" + JSON.stringify(data102 && data102.binding && data102.binding.type) + \"; must be any of { String, Text, Hidden, Dropdown }\"};if(vErrors === null){vErrors = [err296];}else {vErrors.push(err296);}errors++;}const emErrs46 = [];for(const err297 of vErrors){if(!err297.emUsed){emErrs46.push(err297);}}vErrors = emErrs46;errors = emErrs46.length;}}}var _valid25 = _errs313 === errors;valid124 = _valid25;}if(!valid124){const err298 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/3/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err298];}else {vErrors.push(err298);}errors++;}if(data102 && typeof data102 == \"object\" && !Array.isArray(data102)){if(data102.binding === undefined){const err299 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10,schemaPath:\"#/definitions/properties/allOf/1/items/required\",params:{missingProperty: \"binding\"},message:\"should have required property '\"+\"binding\"+\"'\"};if(vErrors === null){vErrors = [err299];}else {vErrors.push(err299);}errors++;}if(data102.binding !== undefined){let data115 = data102.binding;const _errs318 = errors;let valid130 = true;const _errs319 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.type === undefined) && (\"type\")){const err300 = {};if(vErrors === null){vErrors = [err300];}else {vErrors.push(err300);}errors++;}else {if(data115.type !== undefined){let data116 = data115.type;if(!((((data116 === \"property\") || (data116 === \"camunda:property\")) || (data116 === \"camunda:inputParameter\")) || (data116 === \"camunda:field\"))){const err301 = {};if(vErrors === null){vErrors = [err301];}else {vErrors.push(err301);}errors++;}}}}var _valid26 = _errs319 === errors;errors = _errs318;if(vErrors !== null){if(_errs318){vErrors.length = _errs318;}else {vErrors = null;}}if(_valid26){const _errs321 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.name === undefined){const err302 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then/required\",params:{missingProperty: \"name\"},message:\"should have required property '\"+\"name\"+\"'\"};if(vErrors === null){vErrors = [err302];}else {vErrors.push(err302);}errors++;}}if(errors > 0){const emErrs47 = [];for(const err303 of vErrors){if(((((err303.keyword !== \"errorMessage\") && (!err303.emUsed)) && ((err303.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\") || ((err303.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\") === 0) && (err303.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\".length] === \"/\")))) && (err303.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then\") === 0)) && (err303.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then\".length] === \"/\")){emErrs47.push(err303);err303.emUsed = true;}}if(emErrs47.length){const err304 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then/errorMessage\",params:{errors: emErrs47},message:\"property.binding \" + JSON.stringify(data115 && data115.type) + \" requires name\"};if(vErrors === null){vErrors = [err304];}else {vErrors.push(err304);}errors++;}const emErrs48 = [];for(const err305 of vErrors){if(!err305.emUsed){emErrs48.push(err305);}}vErrors = emErrs48;errors = emErrs48.length;}var _valid26 = _errs321 === errors;valid130 = _valid26;}if(!valid130){const err306 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err306];}else {vErrors.push(err306);}errors++;}const _errs323 = errors;let valid132 = true;const _errs324 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.type === undefined) && (\"type\")){const err307 = {};if(vErrors === null){vErrors = [err307];}else {vErrors.push(err307);}errors++;}else {if(data115.type !== undefined){if(!equal(data115.type, \"camunda:outputParameter\")){const err308 = {};if(vErrors === null){vErrors = [err308];}else {vErrors.push(err308);}errors++;}}}}var _valid27 = _errs324 === errors;errors = _errs323;if(vErrors !== null){if(_errs323){vErrors.length = _errs323;}else {vErrors = null;}}if(_valid27){const _errs326 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.source === undefined){const err309 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then/required\",params:{missingProperty: \"source\"},message:\"should have required property '\"+\"source\"+\"'\"};if(vErrors === null){vErrors = [err309];}else {vErrors.push(err309);}errors++;}}if(errors > 0){const emErrs49 = [];for(const err310 of vErrors){if(((((err310.keyword !== \"errorMessage\") && (!err310.emUsed)) && ((err310.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\") || ((err310.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\") === 0) && (err310.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\".length] === \"/\")))) && (err310.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then\") === 0)) && (err310.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then\".length] === \"/\")){emErrs49.push(err310);err310.emUsed = true;}}if(emErrs49.length){const err311 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then/errorMessage\",params:{errors: emErrs49},message:\"property.binding \" + JSON.stringify(data115 && data115.type) + \" requires source\"};if(vErrors === null){vErrors = [err311];}else {vErrors.push(err311);}errors++;}const emErrs50 = [];for(const err312 of vErrors){if(!err312.emUsed){emErrs50.push(err312);}}vErrors = emErrs50;errors = emErrs50.length;}var _valid27 = _errs326 === errors;valid132 = _valid27;}if(!valid132){const err313 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err313];}else {vErrors.push(err313);}errors++;}const _errs328 = errors;let valid134 = true;const _errs329 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.type === undefined) && (\"type\")){const err314 = {};if(vErrors === null){vErrors = [err314];}else {vErrors.push(err314);}errors++;}else {if(data115.type !== undefined){if(!equal(data115.type, \"camunda:in\")){const err315 = {};if(vErrors === null){vErrors = [err315];}else {vErrors.push(err315);}errors++;}}}}var _valid28 = _errs329 === errors;errors = _errs328;if(vErrors !== null){if(_errs328){vErrors.length = _errs328;}else {vErrors = null;}}if(_valid28){const _errs331 = errors;const _errs332 = errors;let valid136 = false;const _errs333 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.variables === undefined){const err316 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then/anyOf/0/required\",params:{missingProperty: \"variables\"},message:\"should have required property '\"+\"variables\"+\"'\"};if(vErrors === null){vErrors = [err316];}else {vErrors.push(err316);}errors++;}}var _valid29 = _errs333 === errors;valid136 = valid136 || _valid29;if(!valid136){const _errs334 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.target === undefined){const err317 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then/anyOf/1/required\",params:{missingProperty: \"target\"},message:\"should have required property '\"+\"target\"+\"'\"};if(vErrors === null){vErrors = [err317];}else {vErrors.push(err317);}errors++;}}var _valid29 = _errs334 === errors;valid136 = valid136 || _valid29;}if(!valid136){const err318 = {keyword:\"anyOf\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then/anyOf\",params:{},message:\"should match some schema in anyOf\"};if(vErrors === null){vErrors = [err318];}else {vErrors.push(err318);}errors++;}else {errors = _errs332;if(vErrors !== null){if(_errs332){vErrors.length = _errs332;}else {vErrors = null;}}}if(errors > 0){const emErrs51 = [];for(const err319 of vErrors){if(((((err319.keyword !== \"errorMessage\") && (!err319.emUsed)) && ((err319.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\") || ((err319.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\") === 0) && (err319.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\".length] === \"/\")))) && (err319.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then\") === 0)) && (err319.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then\".length] === \"/\")){emErrs51.push(err319);err319.emUsed = true;}}if(emErrs51.length){const err320 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then/errorMessage\",params:{errors: emErrs51},message:\"property.binding \" + JSON.stringify(data115 && data115.type) + \" requires variables, target, or both\"};if(vErrors === null){vErrors = [err320];}else {vErrors.push(err320);}errors++;}const emErrs52 = [];for(const err321 of vErrors){if(!err321.emUsed){emErrs52.push(err321);}}vErrors = emErrs52;errors = emErrs52.length;}var _valid28 = _errs331 === errors;valid134 = _valid28;}if(!valid134){const err322 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err322];}else {vErrors.push(err322);}errors++;}const _errs336 = errors;let valid137 = true;const _errs337 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.type === undefined) && (\"type\")){const err323 = {};if(vErrors === null){vErrors = [err323];}else {vErrors.push(err323);}errors++;}else {if(data115.type !== undefined){if(!equal(data115.type, \"camunda:out\")){const err324 = {};if(vErrors === null){vErrors = [err324];}else {vErrors.push(err324);}errors++;}}}}var _valid30 = _errs337 === errors;errors = _errs336;if(vErrors !== null){if(_errs336){vErrors.length = _errs336;}else {vErrors = null;}}if(_valid30){const _errs339 = errors;const _errs340 = errors;let valid139 = false;let passing6 = null;const _errs341 = errors;const _errs342 = errors;const _errs343 = errors;const _errs344 = errors;let valid141 = false;const _errs345 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.source === undefined) && (\"source\")){const err325 = {};if(vErrors === null){vErrors = [err325];}else {vErrors.push(err325);}errors++;}}var _valid32 = _errs345 === errors;valid141 = valid141 || _valid32;if(!valid141){const _errs346 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.sourceExpression === undefined) && (\"sourceExpression\")){const err326 = {};if(vErrors === null){vErrors = [err326];}else {vErrors.push(err326);}errors++;}}var _valid32 = _errs346 === errors;valid141 = valid141 || _valid32;}if(!valid141){const err327 = {};if(vErrors === null){vErrors = [err327];}else {vErrors.push(err327);}errors++;}else {errors = _errs344;if(vErrors !== null){if(_errs344){vErrors.length = _errs344;}else {vErrors = null;}}}var valid140 = _errs343 === errors;if(!valid140){errors = _errs342;if(vErrors !== null){if(_errs342){vErrors.length = _errs342;}else {vErrors = null;}}}else {const err328 = {keyword:\"not\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/0/not\",params:{},message:\"should NOT be valid\"};if(vErrors === null){vErrors = [err328];}else {vErrors.push(err328);}errors++;}if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.variables === undefined){const err329 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/0/required\",params:{missingProperty: \"variables\"},message:\"should have required property '\"+\"variables\"+\"'\"};if(vErrors === null){vErrors = [err329];}else {vErrors.push(err329);}errors++;}}var _valid31 = _errs341 === errors;if(_valid31){valid139 = true;passing6 = 0;}const _errs347 = errors;const _errs348 = errors;const _errs349 = errors;const _errs350 = errors;let valid143 = false;const _errs351 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.variables === undefined) && (\"variables\")){const err330 = {};if(vErrors === null){vErrors = [err330];}else {vErrors.push(err330);}errors++;}}var _valid33 = _errs351 === errors;valid143 = valid143 || _valid33;if(!valid143){const _errs352 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.sourceExpression === undefined) && (\"sourceExpression\")){const err331 = {};if(vErrors === null){vErrors = [err331];}else {vErrors.push(err331);}errors++;}}var _valid33 = _errs352 === errors;valid143 = valid143 || _valid33;}if(!valid143){const err332 = {};if(vErrors === null){vErrors = [err332];}else {vErrors.push(err332);}errors++;}else {errors = _errs350;if(vErrors !== null){if(_errs350){vErrors.length = _errs350;}else {vErrors = null;}}}var valid142 = _errs349 === errors;if(!valid142){errors = _errs348;if(vErrors !== null){if(_errs348){vErrors.length = _errs348;}else {vErrors = null;}}}else {const err333 = {keyword:\"not\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/1/not\",params:{},message:\"should NOT be valid\"};if(vErrors === null){vErrors = [err333];}else {vErrors.push(err333);}errors++;}if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.source === undefined){const err334 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/1/required\",params:{missingProperty: \"source\"},message:\"should have required property '\"+\"source\"+\"'\"};if(vErrors === null){vErrors = [err334];}else {vErrors.push(err334);}errors++;}}var _valid31 = _errs347 === errors;if(_valid31 && valid139){valid139 = false;passing6 = [passing6, 1];}else {if(_valid31){valid139 = true;passing6 = 1;}const _errs353 = errors;const _errs354 = errors;const _errs355 = errors;const _errs356 = errors;let valid145 = false;const _errs357 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.variables === undefined) && (\"variables\")){const err335 = {};if(vErrors === null){vErrors = [err335];}else {vErrors.push(err335);}errors++;}}var _valid34 = _errs357 === errors;valid145 = valid145 || _valid34;if(!valid145){const _errs358 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.source === undefined) && (\"source\")){const err336 = {};if(vErrors === null){vErrors = [err336];}else {vErrors.push(err336);}errors++;}}var _valid34 = _errs358 === errors;valid145 = valid145 || _valid34;}if(!valid145){const err337 = {};if(vErrors === null){vErrors = [err337];}else {vErrors.push(err337);}errors++;}else {errors = _errs356;if(vErrors !== null){if(_errs356){vErrors.length = _errs356;}else {vErrors = null;}}}var valid144 = _errs355 === errors;if(!valid144){errors = _errs354;if(vErrors !== null){if(_errs354){vErrors.length = _errs354;}else {vErrors = null;}}}else {const err338 = {keyword:\"not\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/2/not\",params:{},message:\"should NOT be valid\"};if(vErrors === null){vErrors = [err338];}else {vErrors.push(err338);}errors++;}if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.sourceExpression === undefined){const err339 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/2/required\",params:{missingProperty: \"sourceExpression\"},message:\"should have required property '\"+\"sourceExpression\"+\"'\"};if(vErrors === null){vErrors = [err339];}else {vErrors.push(err339);}errors++;}}var _valid31 = _errs353 === errors;if(_valid31 && valid139){valid139 = false;passing6 = [passing6, 2];}else {if(_valid31){valid139 = true;passing6 = 2;}const _errs359 = errors;const _errs360 = errors;const _errs361 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.source === undefined) && (\"source\")){const err340 = {};if(vErrors === null){vErrors = [err340];}else {vErrors.push(err340);}errors++;}}var valid146 = _errs361 === errors;if(!valid146){errors = _errs360;if(vErrors !== null){if(_errs360){vErrors.length = _errs360;}else {vErrors = null;}}}else {const err341 = {keyword:\"not\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/3/not\",params:{},message:\"should NOT be valid\"};if(vErrors === null){vErrors = [err341];}else {vErrors.push(err341);}errors++;}if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.variables === undefined){const err342 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/3/required\",params:{missingProperty: \"variables\"},message:\"should have required property '\"+\"variables\"+\"'\"};if(vErrors === null){vErrors = [err342];}else {vErrors.push(err342);}errors++;}if(data115.sourceExpression === undefined){const err343 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/3/required\",params:{missingProperty: \"sourceExpression\"},message:\"should have required property '\"+\"sourceExpression\"+\"'\"};if(vErrors === null){vErrors = [err343];}else {vErrors.push(err343);}errors++;}}var _valid31 = _errs359 === errors;if(_valid31 && valid139){valid139 = false;passing6 = [passing6, 3];}else {if(_valid31){valid139 = true;passing6 = 3;}const _errs362 = errors;const _errs363 = errors;const _errs364 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.sourceExpression === undefined) && (\"sourceExpression\")){const err344 = {};if(vErrors === null){vErrors = [err344];}else {vErrors.push(err344);}errors++;}}var valid147 = _errs364 === errors;if(!valid147){errors = _errs363;if(vErrors !== null){if(_errs363){vErrors.length = _errs363;}else {vErrors = null;}}}else {const err345 = {keyword:\"not\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/4/not\",params:{},message:\"should NOT be valid\"};if(vErrors === null){vErrors = [err345];}else {vErrors.push(err345);}errors++;}if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.variables === undefined){const err346 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/4/required\",params:{missingProperty: \"variables\"},message:\"should have required property '\"+\"variables\"+\"'\"};if(vErrors === null){vErrors = [err346];}else {vErrors.push(err346);}errors++;}if(data115.source === undefined){const err347 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf/4/required\",params:{missingProperty: \"source\"},message:\"should have required property '\"+\"source\"+\"'\"};if(vErrors === null){vErrors = [err347];}else {vErrors.push(err347);}errors++;}}var _valid31 = _errs362 === errors;if(_valid31 && valid139){valid139 = false;passing6 = [passing6, 4];}else {if(_valid31){valid139 = true;passing6 = 4;}}}}}if(!valid139){const err348 = {keyword:\"oneOf\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/oneOf\",params:{passingSchemas: passing6},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err348];}else {vErrors.push(err348);}errors++;}else {errors = _errs340;if(vErrors !== null){if(_errs340){vErrors.length = _errs340;}else {vErrors = null;}}}if(errors > 0){const emErrs53 = [];for(const err349 of vErrors){if(((((err349.keyword !== \"errorMessage\") && (!err349.emUsed)) && ((err349.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\") || ((err349.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\") === 0) && (err349.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\".length] === \"/\")))) && (err349.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then\") === 0)) && (err349.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then\".length] === \"/\")){emErrs53.push(err349);err349.emUsed = true;}}if(emErrs53.length){const err350 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/then/errorMessage\",params:{errors: emErrs53},message:\"property.binding \" + JSON.stringify(data115 && data115.type) + \" requires one of the following: variables, sourceExpression, source, (sourceExpression and variables), or (source and variables)\"};if(vErrors === null){vErrors = [err350];}else {vErrors.push(err350);}errors++;}const emErrs54 = [];for(const err351 of vErrors){if(!err351.emUsed){emErrs54.push(err351);}}vErrors = emErrs54;errors = emErrs54.length;}var _valid30 = _errs339 === errors;valid137 = _valid30;}if(!valid137){const err352 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/3/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err352];}else {vErrors.push(err352);}errors++;}const _errs366 = errors;let valid148 = true;const _errs367 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if((data115.type === undefined) && (\"type\")){const err353 = {};if(vErrors === null){vErrors = [err353];}else {vErrors.push(err353);}errors++;}else {if(data115.type !== undefined){if(!equal(data115.type, \"camunda:errorEventDefinition\")){const err354 = {};if(vErrors === null){vErrors = [err354];}else {vErrors.push(err354);}errors++;}}}}var _valid35 = _errs367 === errors;errors = _errs366;if(vErrors !== null){if(_errs366){vErrors.length = _errs366;}else {vErrors = null;}}if(_valid35){const _errs369 = errors;const _errs370 = errors;let valid150 = false;let passing7 = null;const _errs371 = errors;if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.errorRef === undefined){const err355 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/then/oneOf/0/required\",params:{missingProperty: \"errorRef\"},message:\"should have required property '\"+\"errorRef\"+\"'\"};if(vErrors === null){vErrors = [err355];}else {vErrors.push(err355);}errors++;}}var _valid36 = _errs371 === errors;if(_valid36){valid150 = true;passing7 = 0;}if(!valid150){const err356 = {keyword:\"oneOf\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/then/oneOf\",params:{passingSchemas: passing7},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err356];}else {vErrors.push(err356);}errors++;}else {errors = _errs370;if(vErrors !== null){if(_errs370){vErrors.length = _errs370;}else {vErrors = null;}}}if(errors > 0){const emErrs55 = [];for(const err357 of vErrors){if(((((err357.keyword !== \"errorMessage\") && (!err357.emUsed)) && ((err357.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\") || ((err357.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\") === 0) && (err357.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\".length] === \"/\")))) && (err357.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/then\") === 0)) && (err357.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/then\".length] === \"/\")){emErrs55.push(err357);err357.emUsed = true;}}if(emErrs55.length){const err358 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/then/errorMessage\",params:{errors: emErrs55},message:\"property.binding \" + JSON.stringify(data115 && data115.type) + \" requires errorRef\"};if(vErrors === null){vErrors = [err358];}else {vErrors.push(err358);}errors++;}const emErrs56 = [];for(const err359 of vErrors){if(!err359.emUsed){emErrs56.push(err359);}}vErrors = emErrs56;errors = emErrs56.length;}var _valid35 = _errs369 === errors;valid148 = _valid35;}if(!valid148){const err360 = {keyword:\"if\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/4/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err360];}else {vErrors.push(err360);}errors++;}if(data115 && typeof data115 == \"object\" && !Array.isArray(data115)){if(data115.type === undefined){const err361 = {keyword:\"required\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/required\",params:{missingProperty: \"type\"},message:\"should have required property '\"+\"type\"+\"'\"};if(vErrors === null){vErrors = [err361];}else {vErrors.push(err361);}errors++;}if(data115.type !== undefined){let data121 = data115.type;if(typeof data121 !== \"string\"){const err362 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/type/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err362];}else {vErrors.push(err362);}errors++;}if(!((((((((((data121 === \"property\") || (data121 === \"camunda:property\")) || (data121 === \"camunda:inputParameter\")) || (data121 === \"camunda:outputParameter\")) || (data121 === \"camunda:in\")) || (data121 === \"camunda:out\")) || (data121 === \"camunda:in:businessKey\")) || (data121 === \"camunda:executionListener\")) || (data121 === \"camunda:field\")) || (data121 === \"camunda:errorEventDefinition\"))){const err363 = {keyword:\"enum\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/type/enum\",params:{allowedValues: schema20.items.properties.binding.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err363];}else {vErrors.push(err363);}errors++;}if(errors > 0){const emErrs57 = [];for(const err364 of vErrors){if(((((err364.keyword !== \"errorMessage\") && (!err364.emUsed)) && ((err364.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/type\") || ((err364.dataPath.indexOf(dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/type\") === 0) && (err364.dataPath[dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/type\".length] === \"/\")))) && (err364.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/properties/type\") === 0)) && (err364.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/properties/type\".length] === \"/\")){emErrs57.push(err364);err364.emUsed = true;}}if(emErrs57.length){const err365 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/type/errorMessage\",params:{errors: emErrs57},message:\"invalid property.binding type \" + JSON.stringify(data121) + \"; must be any of { property, camunda:property, camunda:inputParameter, camunda:outputParameter, camunda:in, camunda:out, camunda:in:businessKey, camunda:executionListener, camunda:field, camunda:errorEventDefinition }\"};if(vErrors === null){vErrors = [err365];}else {vErrors.push(err365);}errors++;}const emErrs58 = [];for(const err366 of vErrors){if(!err366.emUsed){emErrs58.push(err366);}}vErrors = emErrs58;errors = emErrs58.length;}}if(data115.name !== undefined){if(typeof data115.name !== \"string\"){const err367 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/name\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/name/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err367];}else {vErrors.push(err367);}errors++;}}if(data115.event !== undefined){if(typeof data115.event !== \"string\"){const err368 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/event\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/event/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err368];}else {vErrors.push(err368);}errors++;}}if(data115.scriptFormat !== undefined){if(typeof data115.scriptFormat !== \"string\"){const err369 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/scriptFormat\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/scriptFormat/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err369];}else {vErrors.push(err369);}errors++;}}if(data115.source !== undefined){if(typeof data115.source !== \"string\"){const err370 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/source\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/source/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err370];}else {vErrors.push(err370);}errors++;}}if(data115.target !== undefined){if(typeof data115.target !== \"string\"){const err371 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/target\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/target/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err371];}else {vErrors.push(err371);}errors++;}}if(data115.expression !== undefined){if(typeof data115.expression !== \"boolean\"){const err372 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/expression\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/expression/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err372];}else {vErrors.push(err372);}errors++;}}if(data115.variables !== undefined){let data128 = data115.variables;if(typeof data128 !== \"string\"){const err373 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/variables\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/variables/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err373];}else {vErrors.push(err373);}errors++;}if(!((data128 === \"all\") || (data128 === \"local\"))){const err374 = {keyword:\"enum\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/variables\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/variables/enum\",params:{allowedValues: schema20.items.properties.binding.properties.variables.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err374];}else {vErrors.push(err374);}errors++;}}if(data115.sourceExpression !== undefined){if(typeof data115.sourceExpression !== \"string\"){const err375 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding/sourceExpression\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/sourceExpression/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err375];}else {vErrors.push(err375);}errors++;}}}else {const err376 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err376];}else {vErrors.push(err376);}errors++;}}}else {const err377 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10,schemaPath:\"#/definitions/properties/allOf/1/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err377];}else {vErrors.push(err377);}errors++;}if(errors > 0){const emErrors11 = {\"required\":[]};const templates11 = {required:function(){return \"missing binding for property \\\"\" + JSON.stringify(i10) + \"\\\"\"}};for(const err378 of vErrors){if((((((err378.keyword !== \"errorMessage\") && (!err378.emUsed)) && (err378.dataPath === dataPath+\"/scopes/\" + i6+\"/properties/\" + i10)) && (err378.keyword in emErrors11)) && (err378.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items\") === 0)) && (/^\\/[^\\/]*$/.test(err378.schemaPath.slice(38)))){emErrors11[err378.keyword].push(err378);err378.emUsed = true;}}for(const key11 in emErrors11){if(emErrors11[key11].length){const err379 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties/\" + i10,schemaPath:\"#/definitions/properties/allOf/1/items/errorMessage\",params:{errors: emErrors11[key11]},message:key11 in templates11 ? templates11[key11]() : schema20.items.errorMessage[key11]};if(vErrors === null){vErrors = [err379];}else {vErrors.push(err379);}errors++;}}const emErrs59 = [];for(const err380 of vErrors){if(!err380.emUsed){emErrs59.push(err380);}}vErrors = emErrs59;errors = emErrs59.length;}}}else {const err381 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6+\"/properties\",schemaPath:\"#/definitions/properties/allOf/1/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err381];}else {vErrors.push(err381);}errors++;}}}else {const err382 = {keyword:\"type\",dataPath:dataPath+\"/scopes/\" + i6,schemaPath:\"#/properties/scopes/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err382];}else {vErrors.push(err382);}errors++;}if(errors > 0){const emErrors12 = {\"required\":{\"type\":[],\"properties\":[]}};const templates12 = {required:{properties:function(){return \"invalid scope \" + JSON.stringify(data72 && data72.type) + \", missing properties=[]\"}}};let emPropParams5;let emParamsErrors5;for(const err383 of vErrors){if((((((err383.keyword !== \"errorMessage\") && (!err383.emUsed)) && (err383.dataPath === dataPath+\"/scopes/\" + i6)) && (err383.keyword in emErrors12)) && (err383.schemaPath.indexOf(\"#/properties/scopes/items\") === 0)) && (/^\\/[^\\/]*$/.test(err383.schemaPath.slice(25)))){emPropParams5 = obj0$1[err383.keyword];emParamsErrors5 = emErrors12[err383.keyword][err383.params[emPropParams5]];if(emParamsErrors5){emParamsErrors5.push(err383);err383.emUsed = true;}}}for(const key12 in emErrors12){for(const keyProp5 in emErrors12[key12]){emParamsErrors5 = emErrors12[key12][keyProp5];if(emParamsErrors5.length){const tmpl5 = templates12[key12] && templates12[key12][keyProp5];const err384 = {keyword:\"errorMessage\",dataPath:dataPath+\"/scopes/\" + i6,schemaPath:\"#/properties/scopes/items/errorMessage\",params:{errors: emParamsErrors5},message:tmpl5 ? tmpl5() : schema17$1.properties.scopes.items.errorMessage[key12][keyProp5]};if(vErrors === null){vErrors = [err384];}else {vErrors.push(err384);}errors++;}}}const emErrs60 = [];for(const err385 of vErrors){if(!err385.emUsed){emErrs60.push(err385);}}vErrors = emErrs60;errors = emErrs60.length;}}}else {const err386 = {keyword:\"type\",dataPath:dataPath+\"/scopes\",schemaPath:\"#/properties/scopes/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err386];}else {vErrors.push(err386);}errors++;}}}else {const err387 = {keyword:\"type\",dataPath,schemaPath:\"#/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err387];}else {vErrors.push(err387);}errors++;}validate15$1.errors = vErrors;return errors === 0;}function validate14$1(data, {dataPath=\"\", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs0 = errors;let valid0 = false;let passing0 = null;const _errs1 = errors;if(!(validate15$1(data, {dataPath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate15$1.errors : vErrors.concat(validate15$1.errors);errors = vErrors.length;}var _valid0 = _errs1 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs2 = errors;if(Array.isArray(data)){const len0 = data.length;for(let i0=0; i0<len0; i0++){if(!(validate15$1(data[i0], {dataPath:dataPath+\"/\" + i0,parentData:data,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate15$1.errors : vErrors.concat(validate15$1.errors);errors = vErrors.length;}}}else {const err0 = {keyword:\"type\",dataPath,schemaPath:\"#/oneOf/1/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}var _valid0 = _errs2 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}}if(!valid0){const err1 = {keyword:\"oneOf\",dataPath,schemaPath:\"#/oneOf\",params:{passingSchemas: passing0},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}else {errors = _errs0;if(vErrors !== null){if(_errs0){vErrors.length = _errs0;}else {vErrors = null;}}}validate14$1.errors = vErrors;return errors === 0;}\nstandaloneValidator.default = _default$1;\n\nvar escapedChars = {\n  'b': '\\b',\n  'f': '\\f',\n  'n': '\\n',\n  'r': '\\r',\n  't': '\\t',\n  '\"': '\"',\n  '/': '/',\n  '\\\\': '\\\\'\n};\n\nvar A_CODE = 'a'.charCodeAt();\n\n\nvar parse = function (source, _, options) {\n  var pointers = {};\n  var line = 0;\n  var column = 0;\n  var pos = 0;\n  var bigint = options && options.bigint && typeof BigInt != 'undefined';\n  return {\n    data: _parse('', true),\n    pointers: pointers\n  };\n\n  function _parse(ptr, topLevel) {\n    whitespace();\n    var data;\n    map(ptr, 'value');\n    var char = getChar();\n    switch (char) {\n      case 't': read('rue'); data = true; break;\n      case 'f': read('alse'); data = false; break;\n      case 'n': read('ull'); data = null; break;\n      case '\"': data = parseString(); break;\n      case '[': data = parseArray(ptr); break;\n      case '{': data = parseObject(ptr); break;\n      default:\n        backChar();\n        if ('-0123456789'.indexOf(char) >= 0)\n          data = parseNumber();\n        else\n          unexpectedToken();\n    }\n    map(ptr, 'valueEnd');\n    whitespace();\n    if (topLevel && pos < source.length) unexpectedToken();\n    return data;\n  }\n\n  function whitespace() {\n    loop:\n      while (pos < source.length) {\n        switch (source[pos]) {\n          case ' ': column++; break;\n          case '\\t': column += 4; break;\n          case '\\r': column = 0; break;\n          case '\\n': column = 0; line++; break;\n          default: break loop;\n        }\n        pos++;\n      }\n  }\n\n  function parseString() {\n    var str = '';\n    var char;\n    while (true) {\n      char = getChar();\n      if (char == '\"') {\n        break;\n      } else if (char == '\\\\') {\n        char = getChar();\n        if (char in escapedChars)\n          str += escapedChars[char];\n        else if (char == 'u')\n          str += getCharCode();\n        else\n          wasUnexpectedToken();\n      } else {\n        str += char;\n      }\n    }\n    return str;\n  }\n\n  function parseNumber() {\n    var numStr = '';\n    var integer = true;\n    if (source[pos] == '-') numStr += getChar();\n\n    numStr += source[pos] == '0'\n              ? getChar()\n              : getDigits();\n\n    if (source[pos] == '.') {\n      numStr += getChar() + getDigits();\n      integer = false;\n    }\n\n    if (source[pos] == 'e' || source[pos] == 'E') {\n      numStr += getChar();\n      if (source[pos] == '+' || source[pos] == '-') numStr += getChar();\n      numStr += getDigits();\n      integer = false;\n    }\n\n    var result = +numStr;\n    return bigint && integer && (result > Number.MAX_SAFE_INTEGER || result < Number.MIN_SAFE_INTEGER)\n            ? BigInt(numStr)\n            : result;\n  }\n\n  function parseArray(ptr) {\n    whitespace();\n    var arr = [];\n    var i = 0;\n    if (getChar() == ']') return arr;\n    backChar();\n\n    while (true) {\n      var itemPtr = ptr + '/' + i;\n      arr.push(_parse(itemPtr));\n      whitespace();\n      var char = getChar();\n      if (char == ']') break;\n      if (char != ',') wasUnexpectedToken();\n      whitespace();\n      i++;\n    }\n    return arr;\n  }\n\n  function parseObject(ptr) {\n    whitespace();\n    var obj = {};\n    if (getChar() == '}') return obj;\n    backChar();\n\n    while (true) {\n      var loc = getLoc();\n      if (getChar() != '\"') wasUnexpectedToken();\n      var key = parseString();\n      var propPtr = ptr + '/' + escapeJsonPointer(key);\n      mapLoc(propPtr, 'key', loc);\n      map(propPtr, 'keyEnd');\n      whitespace();\n      if (getChar() != ':') wasUnexpectedToken();\n      whitespace();\n      obj[key] = _parse(propPtr);\n      whitespace();\n      var char = getChar();\n      if (char == '}') break;\n      if (char != ',') wasUnexpectedToken();\n      whitespace();\n    }\n    return obj;\n  }\n\n  function read(str) {\n    for (var i=0; i<str.length; i++)\n      if (getChar() !== str[i]) wasUnexpectedToken();\n  }\n\n  function getChar() {\n    checkUnexpectedEnd();\n    var char = source[pos];\n    pos++;\n    column++; // new line?\n    return char;\n  }\n\n  function backChar() {\n    pos--;\n    column--;\n  }\n\n  function getCharCode() {\n    var count = 4;\n    var code = 0;\n    while (count--) {\n      code <<= 4;\n      var char = getChar().toLowerCase();\n      if (char >= 'a' && char <= 'f')\n        code += char.charCodeAt() - A_CODE + 10;\n      else if (char >= '0' && char <= '9')\n        code += +char;\n      else\n        wasUnexpectedToken();\n    }\n    return String.fromCharCode(code);\n  }\n\n  function getDigits() {\n    var digits = '';\n    while (source[pos] >= '0' && source[pos] <= '9')\n      digits += getChar();\n\n    if (digits.length) return digits;\n    checkUnexpectedEnd();\n    unexpectedToken();\n  }\n\n  function map(ptr, prop) {\n    mapLoc(ptr, prop, getLoc());\n  }\n\n  function mapLoc(ptr, prop, loc) {\n    pointers[ptr] = pointers[ptr] || {};\n    pointers[ptr][prop] = loc;\n  }\n\n  function getLoc() {\n    return {\n      line: line,\n      column: column,\n      pos: pos\n    };\n  }\n\n  function unexpectedToken() {\n    throw new SyntaxError('Unexpected token ' + source[pos] + ' in JSON at position ' + pos);\n  }\n\n  function wasUnexpectedToken() {\n    backChar();\n    unexpectedToken();\n  }\n\n  function checkUnexpectedEnd() {\n    if (pos >= source.length)\n      throw new SyntaxError('Unexpected end of JSON input');\n  }\n};\n\n\nvar stringify = function (data, _, options) {\n  if (!validType(data)) return;\n  var wsLine = 0;\n  var wsPos, wsColumn;\n  var whitespace = typeof options == 'object'\n                    ? options.space\n                    : options;\n  switch (typeof whitespace) {\n    case 'number':\n      var len = whitespace > 10\n                  ? 10\n                  : whitespace < 0\n                    ? 0\n                    : Math.floor(whitespace);\n      whitespace = len && repeat(len, ' ');\n      wsPos = len;\n      wsColumn = len;\n      break;\n    case 'string':\n      whitespace = whitespace.slice(0, 10);\n      wsPos = 0;\n      wsColumn = 0;\n      for (var j=0; j<whitespace.length; j++) {\n        var char = whitespace[j];\n        switch (char) {\n          case ' ': wsColumn++; break;\n          case '\\t': wsColumn += 4; break;\n          case '\\r': wsColumn = 0; break;\n          case '\\n': wsColumn = 0; wsLine++; break;\n          default: throw new Error('whitespace characters not allowed in JSON');\n        }\n        wsPos++;\n      }\n      break;\n    default:\n      whitespace = undefined;\n  }\n\n  var json = '';\n  var pointers = {};\n  var line = 0;\n  var column = 0;\n  var pos = 0;\n  var es6 = options && options.es6 && typeof Map == 'function';\n  _stringify(data, 0, '');\n  return {\n    json: json,\n    pointers: pointers\n  };\n\n  function _stringify(_data, lvl, ptr) {\n    map(ptr, 'value');\n    switch (typeof _data) {\n      case 'number':\n      case 'bigint':\n      case 'boolean':\n        out('' + _data); break;\n      case 'string':\n        out(quoted(_data)); break;\n      case 'object':\n        if (_data === null) {\n          out('null');\n        } else if (typeof _data.toJSON == 'function') {\n          out(quoted(_data.toJSON()));\n        } else if (Array.isArray(_data)) {\n          stringifyArray();\n        } else if (es6) {\n          if (_data.constructor.BYTES_PER_ELEMENT)\n            stringifyArray();\n          else if (_data instanceof Map)\n            stringifyMapSet();\n          else if (_data instanceof Set)\n            stringifyMapSet(true);\n          else\n            stringifyObject();\n        } else {\n          stringifyObject();\n        }\n    }\n    map(ptr, 'valueEnd');\n\n    function stringifyArray() {\n      if (_data.length) {\n        out('[');\n        var itemLvl = lvl + 1;\n        for (var i=0; i<_data.length; i++) {\n          if (i) out(',');\n          indent(itemLvl);\n          var item = validType(_data[i]) ? _data[i] : null;\n          var itemPtr = ptr + '/' + i;\n          _stringify(item, itemLvl, itemPtr);\n        }\n        indent(lvl);\n        out(']');\n      } else {\n        out('[]');\n      }\n    }\n\n    function stringifyObject() {\n      var keys = Object.keys(_data);\n      if (keys.length) {\n        out('{');\n        var propLvl = lvl + 1;\n        for (var i=0; i<keys.length; i++) {\n          var key = keys[i];\n          var value = _data[key];\n          if (validType(value)) {\n            if (i) out(',');\n            var propPtr = ptr + '/' + escapeJsonPointer(key);\n            indent(propLvl);\n            map(propPtr, 'key');\n            out(quoted(key));\n            map(propPtr, 'keyEnd');\n            out(':');\n            if (whitespace) out(' ');\n            _stringify(value, propLvl, propPtr);\n          }\n        }\n        indent(lvl);\n        out('}');\n      } else {\n        out('{}');\n      }\n    }\n\n    function stringifyMapSet(isSet) {\n      if (_data.size) {\n        out('{');\n        var propLvl = lvl + 1;\n        var first = true;\n        var entries = _data.entries();\n        var entry = entries.next();\n        while (!entry.done) {\n          var item = entry.value;\n          var key = item[0];\n          var value = isSet ? true : item[1];\n          if (validType(value)) {\n            if (!first) out(',');\n            first = false;\n            var propPtr = ptr + '/' + escapeJsonPointer(key);\n            indent(propLvl);\n            map(propPtr, 'key');\n            out(quoted(key));\n            map(propPtr, 'keyEnd');\n            out(':');\n            if (whitespace) out(' ');\n            _stringify(value, propLvl, propPtr);\n          }\n          entry = entries.next();\n        }\n        indent(lvl);\n        out('}');\n      } else {\n        out('{}');\n      }\n    }\n  }\n\n  function out(str) {\n    column += str.length;\n    pos += str.length;\n    json += str;\n  }\n\n  function indent(lvl) {\n    if (whitespace) {\n      json += '\\n' + repeat(lvl, whitespace);\n      line++;\n      column = 0;\n      while (lvl--) {\n        if (wsLine) {\n          line += wsLine;\n          column = wsColumn;\n        } else {\n          column += wsColumn;\n        }\n        pos += wsPos;\n      }\n      pos += 1; // \\n character\n    }\n  }\n\n  function map(ptr, prop) {\n    pointers[ptr] = pointers[ptr] || {};\n    pointers[ptr][prop] = {\n      line: line,\n      column: column,\n      pos: pos\n    };\n  }\n\n  function repeat(n, str) {\n    return Array(n + 1).join(str);\n  }\n};\n\n\nvar VALID_TYPES = ['number', 'bigint', 'boolean', 'string', 'object'];\nfunction validType(data) {\n  return VALID_TYPES.indexOf(typeof data) >= 0;\n}\n\n\nvar ESC_QUOTE = /\"|\\\\/g;\nvar ESC_B = /[\\b]/g;\nvar ESC_F = /\\f/g;\nvar ESC_N = /\\n/g;\nvar ESC_R = /\\r/g;\nvar ESC_T = /\\t/g;\nfunction quoted(str) {\n  str = str.replace(ESC_QUOTE, '\\\\$&')\n           .replace(ESC_F, '\\\\f')\n           .replace(ESC_B, '\\\\b')\n           .replace(ESC_N, '\\\\n')\n           .replace(ESC_R, '\\\\r')\n           .replace(ESC_T, '\\\\t');\n  return '\"' + str + '\"';\n}\n\n\nvar ESC_0 = /~/g;\nvar ESC_1 = /\\//g;\nfunction escapeJsonPointer(str) {\n  return str.replace(ESC_0, '~0')\n            .replace(ESC_1, '~1');\n}\n\nvar jsonSourceMap = {\n\tparse: parse,\n\tstringify: stringify\n};\n\nfunction _validate(object, validateFn) {\n  const dataPointerMap = generateDataPointerMap(object);\n\n  const valid = validateFn(object);\n\n  let errors = validateFn.errors;\n\n  if (errors && errors.length) {\n\n    // @pinussilvestrus: the <ajv-errors> extensions produces a couple of\n    // unnecessary errors when using an <errorMessage> attribute.\n    // Therefore, we should flatten the produced errors a bit to not\n    // confuse the consumer of this library.\n\n    // (1) wrap raw errors in case of custom errorMessage attribute\n    forEach(errors, wrapRawErrors);\n\n    // (2) ignore supportive error messages (e.g. \"if-then-rules\")\n    errors = ignoreSupportiveErrors(errors);\n\n    // (3) set data pointer for each error\n    forEach(errors, function(error) {\n      setDataPointer(error, dataPointerMap);\n    });\n  }\n\n  return {\n    valid: valid,\n    object: object,\n    errors: errors\n  };\n}\n\nfunction _validateAll(objects, validateFn) {\n\n  const results = [];\n\n  let allValid = true;\n\n  forEach(objects, function(object) {\n    const result = validateFn(object);\n\n    if (!result.valid) {\n      allValid = false;\n    }\n\n    results.push(result);\n  });\n\n  return {\n    valid: allValid,\n    results: results\n  };\n}\n\n\n// helper //////////////\nfunction wrapRawErrors(error) {\n  const params = error.params;\n\n  if (params && params.errors) {\n    params.rawErrors = params.errors;\n    delete params.errors;\n  }\n}\n\nfunction setDataPointer(error, dataPointerMap) {\n  const dataPath = error.dataPath;\n\n  const pointer = dataPointerMap[dataPath];\n\n  error.dataPointer = pointer;\n}\n\nfunction ignoreSupportiveErrors(errors) {\n  return filter(errors, function(error) {\n    return error.keyword !== 'if';\n  });\n}\n\n/**\n * Generates a key-pointer map for the object.\n *\n * Example:\n *\n * {\n *  foo: 'bar'\n * }\n *\n * =>\n *\n * {\n *  '': {\n *    value: { line: 0, column: 0, pos: 0 },\n *    valueEnd: { line: 2, column: 1, pos: 18 }\n *  },\n *  '/foo': {\n *    key: { line: 1, column: 2, pos: 4 },\n *    keyEnd: { line: 1, column: 7, pos: 9 },\n *    value: { line: 1, column: 9, pos: 11 },\n *    valueEnd: { line: 1, column: 14, pos: 16 }\n *  }\n * }\n *\n * @param {Object} object\n * @return {Object}\n */\nfunction generateDataPointerMap(object) {\n  return jsonSourceMap.stringify(object, null, 2).pointers;\n}\n\nfunction getSchemaVersion() {\n  return version$1;\n}\n\nfunction getSchemaPackage() {\n  return name$1;\n}\n\n/**\n * Validate a single object.\n *\n * @param {Object} object\n * @return {Object} single object validation result\n */\nfunction validate(object) {\n  return _validate(object, standaloneValidator);\n}\n\n/**\n * Validate a list of objects\n *\n * @param  {Object[]} objects\n * @return {Object} list validation result\n */\nfunction validateAll(objects) {\n  return _validateAll(objects, validate);\n}\n\nvar name = \"@camunda/zeebe-element-templates-json-schema\";\nvar version = \"0.5.0\";\n\nvar standaloneZeebeValidator = validate14;var _default = validate14;const schema17 = {\"type\":\"object\",\"allOf\":[{\"required\":[\"name\",\"id\",\"appliesTo\",\"properties\"],\"properties\":{\"name\":{\"$id\":\"#/name\",\"type\":\"string\",\"description\":\"The name of the element template.\"},\"id\":{\"$id\":\"#/id\",\"type\":\"string\",\"description\":\"The identifier of the element template.\"},\"description\":{\"$id\":\"#/description\",\"type\":\"string\",\"description\":\"The description of the element template.\"},\"version\":{\"$id\":\"#/version\",\"type\":\"number\",\"description\":\"Optional version of the template. If you add a version to a template it will be considered unique based on its ID and version. Two templates can have the same ID if their version is different.\"},\"isDefault\":{\"$id\":\"#/isDefault\",\"type\":\"boolean\",\"description\":\"Indicates whether the element template is a default template.\"},\"appliesTo\":{\"$id\":\"#/appliesTo\",\"type\":\"array\",\"description\":\"List of BPMN types the template can be applied to.\",\"default\":[],\"items\":{\"$id\":\"#/appliesTo/items\",\"type\":\"string\",\"pattern\":\"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\",\"allOf\":[{\"examples\":[\"bpmn:Task\",\"bpmn:ServiceTask\",\"bpmn:SequenceFlow\",\"bpmn:Process\",\"bpmn:StartEvent\",\"bpmn:Gateway\"]}],\"errorMessage\":{\"pattern\":\"invalid item for \\\"appliesTo\\\", should contain namespaced property, example: \\\"bpmn:Task\\\"\"}}},\"elementType\":{\"$id\":\"#/elementType\",\"type\":\"object\",\"description\":\"The BPMN type the element will be transformed into.\",\"default\":{},\"required\":[\"value\"],\"properties\":{\"value\":{\"$id\":\"#/elementType/value\",\"type\":\"string\",\"pattern\":\"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\",\"allOf\":[{\"examples\":[\"bpmn:ServiceTask\",\"bpmn:UserTask\",\"bpmn:StartEvent\",\"bpmn:ExclusiveGateway\",\"bpmn:ParallelGateway\"]}],\"errorMessage\":{\"pattern\":\"invalid item for \\\"elementType\\\", should contain namespaced property, example: \\\"bpmn:Task\\\"\"}}},\"errorMessage\":{\"required\":{\"value\":\"missing elementType value\"}}},\"metadata\":{\"$id\":\"#/metadata\",\"type\":\"object\",\"description\":\"Some custom properties for further configuration.\",\"default\":{}},\"entriesVisible\":{\"$id\":\"#/entriesVisible\",\"type\":\"boolean\",\"description\":\"Select whether non-template entries are visible in the properties panel.\"},\"groups\":{\"$id\":\"#/groups\",\"type\":\"array\",\"description\":\"Custom fields can be ordered together via groups.\",\"allOf\":[{\"examples\":[[{\"id\":\"group-1\",\"label\":\"My Group\"}]]}],\"items\":{\"$id\":\"#/groups/group\",\"type\":\"object\",\"default\":{},\"required\":[\"id\",\"label\"],\"properties\":{\"id\":{\"$id\":\"#/groups/group/id\",\"type\":\"string\",\"description\":\"The id of the custom group\"},\"label\":{\"$id\":\"#/groups/group/label\",\"type\":\"string\",\"description\":\"The label of the custom group\"}},\"errorMessage\":{\"required\":{\"id\":\"missing id for group \\\"${0#}\\\"\",\"label\":\"missing label for group \\\"${0#}\\\"\"}}}},\"documentationRef\":{\"$id\":\"#/documentationRef\",\"type\":\"string\",\"pattern\":\"^(https|http)://.*\",\"errorMessage\":{\"pattern\":\"Malformed documentation URL, must match \\\"^(https|http)://.*\\\"\"}}},\"errorMessage\":{\"required\":{\"name\":\"missing template name\",\"id\":\"missing template id\",\"appliesTo\":\"missing appliesTo=[]\",\"properties\":\"missing properties=[]\"}}}],\"properties\":{\"properties\":{\"$ref\":\"#/definitions/properties\",\"$id\":\"#/properties\"},\"icon\":{\"$id\":\"#/icon\",\"type\":\"object\",\"description\":\"Custom icon to be shown on the element\",\"default\":{},\"properties\":{\"contents\":{\"$id\":\"#/icon/contents\",\"type\":\"string\",\"description\":\"The URL of an icon.\",\"pattern\":\"^(https?|data):.*\",\"errorMessage\":{\"pattern\":\"Malformed icon source, must be a valid HTTP(s) or data URL\"}}},\"required\":[\"contents\"],\"errorMessage\":{\"required\":{\"contents\":\"missing icon contents\"}}}}};const schema18 = {\"allOf\":[{\"type\":\"array\",\"description\":\"List of properties of the element template.\",\"allOf\":[{\"examples\":[[{\"label\":\"Name\",\"type\":\"String\",\"binding\":{\"type\":\"property\",\"name\":\"name\"}}]]}],\"items\":{\"type\":\"object\",\"default\":{},\"allOf\":[{\"if\":{\"properties\":{\"type\":{\"const\":\"Dropdown\"}},\"required\":[\"type\"]},\"then\":{\"required\":[\"choices\"],\"errorMessage\":\"must provide choices=[] with \\\"Dropdown\\\" type\"}}],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the property.\"},\"value\":{\"$id\":\"#/properties/property/value\",\"type\":[\"string\",\"boolean\"],\"description\":\"The value of a control field.\"},\"description\":{\"$id\":\"#/properties/property/description\",\"type\":\"string\",\"description\":\"The description of a control field.\"},\"label\":{\"$id\":\"#/properties/property/label\",\"type\":\"string\",\"description\":\"The label of a control field.\"},\"type\":{\"$id\":\"#/properties/property/type\",\"type\":\"string\",\"description\":\"The type of a control field.\"},\"editable\":{\"$id\":\"#/properties/property/editable\",\"type\":\"boolean\",\"description\":\"Indicates whether a control field is editable or not.\"},\"choices\":{\"$id\":\"#/properties/property/choices\",\"type\":\"array\",\"description\":\"The choices for dropdown fields.\",\"default\":[],\"items\":{\"$id\":\"#/properties/property/choices/item\",\"type\":\"object\",\"default\":{},\"properties\":{\"name\":{\"$id\":\"#/properties/property/choices/item/name\",\"type\":\"string\",\"description\":\"The name of a choice.\"},\"value\":{\"$id\":\"#/properties/property/choices/item/value\",\"type\":\"string\",\"description\":\"The value of a choice.\"}},\"required\":[\"value\",\"name\"],\"errorMessage\":{\"required\":\"{ name, value } must be specified for \\\"Dropdown\\\" choices\"}}},\"constraints\":{\"$id\":\"#/properties/property/constraints\",\"type\":\"object\",\"description\":\"The validation constraints of a control field.\",\"allOf\":[{\"examples\":[{\"notEmpty\":true}]}],\"properties\":{\"notEmpty\":{\"$id\":\"#/properties/property/constraints/notEmpty\",\"type\":\"boolean\",\"description\":\"The control field must not be empty.\"},\"minLength\":{\"$id\":\"#/properties/property/constraints/minLength\",\"type\":\"number\",\"description\":\"The minimal length of a control field value.\"},\"maxLength\":{\"$id\":\"#/properties/property/constraints/maxLength\",\"type\":\"number\",\"description\":\"The maximal length for a control field value.\"},\"pattern\":{\"$id\":\"#/properties/property/constraints/pattern\",\"description\":\"A regular expression pattern for a constraint.\",\"oneOf\":[{\"type\":\"object\",\"default\":{},\"properties\":{\"value\":{\"$id\":\"#/properties/property/constraints/pattern/value\",\"type\":\"string\",\"description\":\"The regular expression of a pattern.\"},\"message\":{\"$id\":\"#/properties/property/constraints/pattern/message\",\"type\":\"string\",\"description\":\"The validation message of a pattern.\"}}},{\"type\":\"string\"}]}}},\"group\":{\"$id\":\"#/properties/property/group\",\"type\":\"string\",\"description\":\"The custom group of a control field.\"},\"condition\":{\"$id\":\"#/condition\",\"type\":\"object\",\"description\":\"Condition to activate the binding.\",\"allOf\":[{\"examples\":[{\"type\":\"simple\",\"property\":\"httpMethod\",\"equals\":\"GET\"},{\"type\":\"simple\",\"property\":\"httpMethod\",\"oneOf\":[\"POST\",\"PUT\",\"DELETE\"]}]}],\"required\":[\"property\"],\"properties\":{\"type\":{\"$id\":\"#/condition/type\",\"const\":\"simple\",\"description\":\"The type of the condition.\",\"default\":\"simple\"},\"property\":{\"$id\":\"#/condition/property\",\"type\":\"string\",\"description\":\"The id of the property to check.\"}},\"oneOf\":[{\"properties\":{\"equals\":{\"type\":[\"string\",\"number\",\"boolean\"]}},\"required\":[\"equals\"]},{\"properties\":{\"oneOf\":{\"type\":\"array\",\"items\":{\"type\":[\"string\",\"number\"]}}},\"required\":[\"oneOf\"]}],\"errorMessage\":{\"required\":{\"property\":\"missing property name for condition\"}}}}}},{\"$schema\":\"http://json-schema.org/draft-07/schema\",\"type\":\"array\",\"description\":\"List of properties of the element template.\",\"items\":{\"type\":\"object\",\"default\":{},\"required\":[\"binding\"],\"allOf\":[{\"if\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"const\":\"property\"}},\"required\":[\"type\"]}},\"required\":[\"binding\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"String\",\"Text\",\"Hidden\",\"Dropdown\",\"Boolean\"],\"errorMessage\":\"invalid property type ${0} for binding type \\\"property\\\"; must be any of { String, Text, Hidden, Dropdown, Boolean }\"}}}},{\"if\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"enum\":[\"zeebe:input\",\"zeebe:output\",\"zeebe:taskHeader\",\"zeebe:taskDefinition:type\"]}},\"required\":[\"type\"]}},\"required\":[\"binding\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"String\",\"Text\",\"Hidden\",\"Dropdown\"],\"errorMessage\":\"invalid property type ${0} for binding type ${1/binding/type}; must be any of { String, Text, Hidden, Dropdown }\"}}}},{\"if\":{\"properties\":{\"optional\":{\"const\":true}},\"required\":[\"optional\"]},\"then\":{\"properties\":{\"binding\":{\"properties\":{\"type\":{\"enum\":[\"zeebe:input\",\"zeebe:output\"],\"errorMessage\":\"optional is not supported for binding type ${0}; must be any of { zeebe:input, zeebe:output }\"}},\"required\":[\"type\"]}}}},{\"if\":{\"properties\":{\"optional\":{\"const\":true}},\"required\":[\"optional\"]},\"then\":{\"properties\":{\"constraints\":{\"properties\":{\"notEmpty\":{\"const\":false,\"errorMessage\":\"optional is not allowed for truthy \\\"notEmpty\\\" constraint\"}},\"required\":[\"notEmpty\"]}}}},{\"if\":{\"properties\":{\"feel\":{\"not\":{\"const\":null}}},\"required\":[\"feel\"]},\"then\":{\"properties\":{\"type\":{\"enum\":[\"String\",\"Text\"],\"errorMessage\":\"feel is only supported for \\\"String\\\" and \\\"Text\\\" type\"}},\"required\":[\"type\"]}}],\"properties\":{\"binding\":{\"$id\":\"#/properties/property/binding\",\"type\":\"object\",\"description\":\"Specifying how the property is mapped to BPMN or Zeebe extension elements and attributes.\",\"required\":[\"type\"],\"allOf\":[{\"if\":{\"properties\":{\"type\":{\"enum\":[\"property\",\"zeebe:input\"]}},\"required\":[\"type\"]},\"then\":{\"required\":[\"name\"],\"errorMessage\":\"property.binding ${0/type} requires name\"}},{\"if\":{\"properties\":{\"type\":{\"const\":\"zeebe:output\"}},\"required\":[\"type\"]},\"then\":{\"required\":[\"source\"],\"errorMessage\":\"property.binding ${0/type} requires source\"}},{\"if\":{\"properties\":{\"type\":{\"const\":\"zeebe:taskHeader\"}},\"required\":[\"type\"]},\"then\":{\"required\":[\"key\"],\"errorMessage\":\"property.binding ${0/type} requires key\"}},{\"examples\":[{\"type\":\"property\",\"name\":\"name\"},{\"type\":\"zeebe:input\",\"name\":\"input\"},{\"type\":\"zeebe:output\",\"source\":\"output\"},{\"type\":\"zeebe:taskDefinition:type\"},{\"type\":\"zeebe:taskHeader\",\"key\":\"key\"}]}],\"properties\":{\"type\":{\"$id\":\"#/properties/property/binding/type\",\"type\":\"string\",\"description\":\"The type of a property binding.\",\"enum\":[\"property\",\"zeebe:taskDefinition:type\",\"zeebe:input\",\"zeebe:output\",\"zeebe:taskHeader\"],\"errorMessage\":\"invalid property.binding type ${0}; must be any of { property, zeebe:taskDefinition:type, zeebe:input, zeebe:output, zeebe:taskHeader }\"},\"name\":{\"$id\":\"#/properties/property/binding/name\",\"type\":\"string\",\"description\":\"The name of a property binding.\"},\"source\":{\"$id\":\"#/properties/property/binding/source\",\"type\":\"string\",\"description\":\"The source value of a property binding (zeebe:output).\"},\"key\":{\"$id\":\"#/properties/property/binding/key\",\"type\":\"string\",\"description\":\"The key value of a property binding (zeebe:taskHeader).\"}}},\"optional\":{\"$id\":\"#/optional\",\"type\":\"boolean\",\"description\":\"Indicates whether a property is optional. Optional bindings do not persist empty values in the underlying BPMN 2.0 XML.\"},\"feel\":{\"$id\":\"#/properties/property/feel\",\"type\":\"string\",\"default\":null,\"description\":\"Indicates whether the property can be a feel expression\",\"enum\":[null,\"optional\",\"required\"]}},\"errorMessage\":{\"required\":{\"binding\":\"missing binding for property \\\"${0#}\\\"\"}}}}]};const pattern0 = new RegExp(\"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\", \"u\");const pattern2 = new RegExp(\"^(https|http)://.*\", \"u\");const pattern3 = new RegExp(\"^(https?|data):.*\", \"u\");const obj0 = {\"required\":\"missingProperty\",\"dependencies\":\"property\",\"dependentRequired\":\"property\"};function validate15(data, {dataPath=\"\", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(data && typeof data == \"object\" && !Array.isArray(data)){if(data.name === undefined){const err0 = {keyword:\"required\",dataPath,schemaPath:\"#/allOf/0/required\",params:{missingProperty: \"name\"},message:\"should have required property '\"+\"name\"+\"'\"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.id === undefined){const err1 = {keyword:\"required\",dataPath,schemaPath:\"#/allOf/0/required\",params:{missingProperty: \"id\"},message:\"should have required property '\"+\"id\"+\"'\"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}if(data.appliesTo === undefined){const err2 = {keyword:\"required\",dataPath,schemaPath:\"#/allOf/0/required\",params:{missingProperty: \"appliesTo\"},message:\"should have required property '\"+\"appliesTo\"+\"'\"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}if(data.properties === undefined){const err3 = {keyword:\"required\",dataPath,schemaPath:\"#/allOf/0/required\",params:{missingProperty: \"properties\"},message:\"should have required property '\"+\"properties\"+\"'\"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}if(data.name !== undefined){if(typeof data.name !== \"string\"){const err4 = {keyword:\"type\",dataPath:dataPath+\"/name\",schemaPath:\"#/allOf/0/properties/name/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}}if(data.id !== undefined){if(typeof data.id !== \"string\"){const err5 = {keyword:\"type\",dataPath:dataPath+\"/id\",schemaPath:\"#/allOf/0/properties/id/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}}if(data.description !== undefined){if(typeof data.description !== \"string\"){const err6 = {keyword:\"type\",dataPath:dataPath+\"/description\",schemaPath:\"#/allOf/0/properties/description/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}}if(data.version !== undefined){if(!(typeof data.version == \"number\")){const err7 = {keyword:\"type\",dataPath:dataPath+\"/version\",schemaPath:\"#/allOf/0/properties/version/type\",params:{type: \"number\"},message:\"should be number\"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}if(data.isDefault !== undefined){if(typeof data.isDefault !== \"boolean\"){const err8 = {keyword:\"type\",dataPath:dataPath+\"/isDefault\",schemaPath:\"#/allOf/0/properties/isDefault/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}}if(data.appliesTo !== undefined){let data5 = data.appliesTo;if(Array.isArray(data5)){const len0 = data5.length;for(let i0=0; i0<len0; i0++){let data6 = data5[i0];if(typeof data6 === \"string\"){if(!pattern0.test(data6)){const err9 = {keyword:\"pattern\",dataPath:dataPath+\"/appliesTo/\" + i0,schemaPath:\"#/allOf/0/properties/appliesTo/items/pattern\",params:{pattern: \"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\"},message:\"should match pattern \\\"\"+\"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\"+\"\\\"\"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}else {const err10 = {keyword:\"type\",dataPath:dataPath+\"/appliesTo/\" + i0,schemaPath:\"#/allOf/0/properties/appliesTo/items/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}if(errors > 0){const emErrors0 = {\"pattern\":[]};const templates0 = {};for(const err11 of vErrors){if((((((err11.keyword !== \"errorMessage\") && (!err11.emUsed)) && (err11.dataPath === dataPath+\"/appliesTo/\" + i0)) && (err11.keyword in emErrors0)) && (err11.schemaPath.indexOf(\"#/allOf/0/properties/appliesTo/items\") === 0)) && (/^\\/[^\\/]*$/.test(err11.schemaPath.slice(36)))){emErrors0[err11.keyword].push(err11);err11.emUsed = true;}}for(const key0 in emErrors0){if(emErrors0[key0].length){const err12 = {keyword:\"errorMessage\",dataPath:dataPath+\"/appliesTo/\" + i0,schemaPath:\"#/allOf/0/properties/appliesTo/items/errorMessage\",params:{errors: emErrors0[key0]},message:key0 in templates0 ? templates0[key0]() : schema17.allOf[0].properties.appliesTo.items.errorMessage[key0]};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}}const emErrs0 = [];for(const err13 of vErrors){if(!err13.emUsed){emErrs0.push(err13);}}vErrors = emErrs0;errors = emErrs0.length;}}}else {const err14 = {keyword:\"type\",dataPath:dataPath+\"/appliesTo\",schemaPath:\"#/allOf/0/properties/appliesTo/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}if(data.elementType !== undefined){let data7 = data.elementType;if(data7 && typeof data7 == \"object\" && !Array.isArray(data7)){if(data7.value === undefined){const err15 = {keyword:\"required\",dataPath:dataPath+\"/elementType\",schemaPath:\"#/allOf/0/properties/elementType/required\",params:{missingProperty: \"value\"},message:\"should have required property '\"+\"value\"+\"'\"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}if(data7.value !== undefined){let data8 = data7.value;if(typeof data8 === \"string\"){if(!pattern0.test(data8)){const err16 = {keyword:\"pattern\",dataPath:dataPath+\"/elementType/value\",schemaPath:\"#/allOf/0/properties/elementType/properties/value/pattern\",params:{pattern: \"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\"},message:\"should match pattern \\\"\"+\"^[\\\\w\\\\d]+:[\\\\w\\\\d]+$\"+\"\\\"\"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}else {const err17 = {keyword:\"type\",dataPath:dataPath+\"/elementType/value\",schemaPath:\"#/allOf/0/properties/elementType/properties/value/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}if(errors > 0){const emErrors1 = {\"pattern\":[]};const templates1 = {};for(const err18 of vErrors){if((((((err18.keyword !== \"errorMessage\") && (!err18.emUsed)) && (err18.dataPath === dataPath+\"/elementType/value\")) && (err18.keyword in emErrors1)) && (err18.schemaPath.indexOf(\"#/allOf/0/properties/elementType/properties/value\") === 0)) && (/^\\/[^\\/]*$/.test(err18.schemaPath.slice(49)))){emErrors1[err18.keyword].push(err18);err18.emUsed = true;}}for(const key1 in emErrors1){if(emErrors1[key1].length){const err19 = {keyword:\"errorMessage\",dataPath:dataPath+\"/elementType/value\",schemaPath:\"#/allOf/0/properties/elementType/properties/value/errorMessage\",params:{errors: emErrors1[key1]},message:key1 in templates1 ? templates1[key1]() : schema17.allOf[0].properties.elementType.properties.value.errorMessage[key1]};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}const emErrs1 = [];for(const err20 of vErrors){if(!err20.emUsed){emErrs1.push(err20);}}vErrors = emErrs1;errors = emErrs1.length;}}}else {const err21 = {keyword:\"type\",dataPath:dataPath+\"/elementType\",schemaPath:\"#/allOf/0/properties/elementType/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}if(errors > 0){const emErrors2 = {\"required\":{\"value\":[]}};const templates2 = {required:{}};let emPropParams0;let emParamsErrors0;for(const err22 of vErrors){if((((((err22.keyword !== \"errorMessage\") && (!err22.emUsed)) && (err22.dataPath === dataPath+\"/elementType\")) && (err22.keyword in emErrors2)) && (err22.schemaPath.indexOf(\"#/allOf/0/properties/elementType\") === 0)) && (/^\\/[^\\/]*$/.test(err22.schemaPath.slice(32)))){emPropParams0 = obj0[err22.keyword];emParamsErrors0 = emErrors2[err22.keyword][err22.params[emPropParams0]];if(emParamsErrors0){emParamsErrors0.push(err22);err22.emUsed = true;}}}for(const key2 in emErrors2){for(const keyProp0 in emErrors2[key2]){emParamsErrors0 = emErrors2[key2][keyProp0];if(emParamsErrors0.length){const tmpl0 = templates2[key2] && templates2[key2][keyProp0];const err23 = {keyword:\"errorMessage\",dataPath:dataPath+\"/elementType\",schemaPath:\"#/allOf/0/properties/elementType/errorMessage\",params:{errors: emParamsErrors0},message:tmpl0 ? tmpl0() : schema17.allOf[0].properties.elementType.errorMessage[key2][keyProp0]};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}}}const emErrs2 = [];for(const err24 of vErrors){if(!err24.emUsed){emErrs2.push(err24);}}vErrors = emErrs2;errors = emErrs2.length;}}if(data.metadata !== undefined){let data9 = data.metadata;if(!(data9 && typeof data9 == \"object\" && !Array.isArray(data9))){const err25 = {keyword:\"type\",dataPath:dataPath+\"/metadata\",schemaPath:\"#/allOf/0/properties/metadata/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}}if(data.entriesVisible !== undefined){if(typeof data.entriesVisible !== \"boolean\"){const err26 = {keyword:\"type\",dataPath:dataPath+\"/entriesVisible\",schemaPath:\"#/allOf/0/properties/entriesVisible/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}if(data.groups !== undefined){let data11 = data.groups;if(Array.isArray(data11)){const len1 = data11.length;for(let i1=0; i1<len1; i1++){let data12 = data11[i1];if(data12 && typeof data12 == \"object\" && !Array.isArray(data12)){if(data12.id === undefined){const err27 = {keyword:\"required\",dataPath:dataPath+\"/groups/\" + i1,schemaPath:\"#/allOf/0/properties/groups/items/required\",params:{missingProperty: \"id\"},message:\"should have required property '\"+\"id\"+\"'\"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}if(data12.label === undefined){const err28 = {keyword:\"required\",dataPath:dataPath+\"/groups/\" + i1,schemaPath:\"#/allOf/0/properties/groups/items/required\",params:{missingProperty: \"label\"},message:\"should have required property '\"+\"label\"+\"'\"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}if(data12.id !== undefined){if(typeof data12.id !== \"string\"){const err29 = {keyword:\"type\",dataPath:dataPath+\"/groups/\" + i1+\"/id\",schemaPath:\"#/allOf/0/properties/groups/items/properties/id/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}}if(data12.label !== undefined){if(typeof data12.label !== \"string\"){const err30 = {keyword:\"type\",dataPath:dataPath+\"/groups/\" + i1+\"/label\",schemaPath:\"#/allOf/0/properties/groups/items/properties/label/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;}}}else {const err31 = {keyword:\"type\",dataPath:dataPath+\"/groups/\" + i1,schemaPath:\"#/allOf/0/properties/groups/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}if(errors > 0){const emErrors3 = {\"required\":{\"id\":[],\"label\":[]}};const templates3 = {required:{id:function(){return \"missing id for group \\\"\" + JSON.stringify(i1) + \"\\\"\"},label:function(){return \"missing label for group \\\"\" + JSON.stringify(i1) + \"\\\"\"}}};let emPropParams1;let emParamsErrors1;for(const err32 of vErrors){if((((((err32.keyword !== \"errorMessage\") && (!err32.emUsed)) && (err32.dataPath === dataPath+\"/groups/\" + i1)) && (err32.keyword in emErrors3)) && (err32.schemaPath.indexOf(\"#/allOf/0/properties/groups/items\") === 0)) && (/^\\/[^\\/]*$/.test(err32.schemaPath.slice(33)))){emPropParams1 = obj0[err32.keyword];emParamsErrors1 = emErrors3[err32.keyword][err32.params[emPropParams1]];if(emParamsErrors1){emParamsErrors1.push(err32);err32.emUsed = true;}}}for(const key3 in emErrors3){for(const keyProp1 in emErrors3[key3]){emParamsErrors1 = emErrors3[key3][keyProp1];if(emParamsErrors1.length){const tmpl1 = templates3[key3] && templates3[key3][keyProp1];const err33 = {keyword:\"errorMessage\",dataPath:dataPath+\"/groups/\" + i1,schemaPath:\"#/allOf/0/properties/groups/items/errorMessage\",params:{errors: emParamsErrors1},message:tmpl1 ? tmpl1() : schema17.allOf[0].properties.groups.items.errorMessage[key3][keyProp1]};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}}}const emErrs3 = [];for(const err34 of vErrors){if(!err34.emUsed){emErrs3.push(err34);}}vErrors = emErrs3;errors = emErrs3.length;}}}else {const err35 = {keyword:\"type\",dataPath:dataPath+\"/groups\",schemaPath:\"#/allOf/0/properties/groups/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}}if(data.documentationRef !== undefined){let data15 = data.documentationRef;if(typeof data15 === \"string\"){if(!pattern2.test(data15)){const err36 = {keyword:\"pattern\",dataPath:dataPath+\"/documentationRef\",schemaPath:\"#/allOf/0/properties/documentationRef/pattern\",params:{pattern: \"^(https|http)://.*\"},message:\"should match pattern \\\"\"+\"^(https|http)://.*\"+\"\\\"\"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}}else {const err37 = {keyword:\"type\",dataPath:dataPath+\"/documentationRef\",schemaPath:\"#/allOf/0/properties/documentationRef/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}if(errors > 0){const emErrors4 = {\"pattern\":[]};const templates4 = {};for(const err38 of vErrors){if((((((err38.keyword !== \"errorMessage\") && (!err38.emUsed)) && (err38.dataPath === dataPath+\"/documentationRef\")) && (err38.keyword in emErrors4)) && (err38.schemaPath.indexOf(\"#/allOf/0/properties/documentationRef\") === 0)) && (/^\\/[^\\/]*$/.test(err38.schemaPath.slice(37)))){emErrors4[err38.keyword].push(err38);err38.emUsed = true;}}for(const key4 in emErrors4){if(emErrors4[key4].length){const err39 = {keyword:\"errorMessage\",dataPath:dataPath+\"/documentationRef\",schemaPath:\"#/allOf/0/properties/documentationRef/errorMessage\",params:{errors: emErrors4[key4]},message:key4 in templates4 ? templates4[key4]() : schema17.allOf[0].properties.documentationRef.errorMessage[key4]};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}}const emErrs4 = [];for(const err40 of vErrors){if(!err40.emUsed){emErrs4.push(err40);}}vErrors = emErrs4;errors = emErrs4.length;}}}if(errors > 0){const emErrors5 = {\"required\":{\"name\":[],\"id\":[],\"appliesTo\":[],\"properties\":[]}};const templates5 = {required:{}};let emPropParams2;let emParamsErrors2;for(const err41 of vErrors){if((((((err41.keyword !== \"errorMessage\") && (!err41.emUsed)) && (err41.dataPath === dataPath)) && (err41.keyword in emErrors5)) && (err41.schemaPath.indexOf(\"#/allOf/0\") === 0)) && (/^\\/[^\\/]*$/.test(err41.schemaPath.slice(9)))){emPropParams2 = obj0[err41.keyword];emParamsErrors2 = emErrors5[err41.keyword][err41.params[emPropParams2]];if(emParamsErrors2){emParamsErrors2.push(err41);err41.emUsed = true;}}}for(const key5 in emErrors5){for(const keyProp2 in emErrors5[key5]){emParamsErrors2 = emErrors5[key5][keyProp2];if(emParamsErrors2.length){const tmpl2 = templates5[key5] && templates5[key5][keyProp2];const err42 = {keyword:\"errorMessage\",dataPath,schemaPath:\"#/allOf/0/errorMessage\",params:{errors: emParamsErrors2},message:tmpl2 ? tmpl2() : schema17.allOf[0].errorMessage[key5][keyProp2]};if(vErrors === null){vErrors = [err42];}else {vErrors.push(err42);}errors++;}}}const emErrs5 = [];for(const err43 of vErrors){if(!err43.emUsed){emErrs5.push(err43);}}vErrors = emErrs5;errors = emErrs5.length;}if(data && typeof data == \"object\" && !Array.isArray(data)){if(data.properties !== undefined){let data16 = data.properties;if(Array.isArray(data16)){const len2 = data16.length;for(let i2=0; i2<len2; i2++){let data17 = data16[i2];const _errs41 = errors;let valid18 = true;const _errs42 = errors;if(data17 && typeof data17 == \"object\" && !Array.isArray(data17)){if((data17.type === undefined) && (\"type\")){const err44 = {};if(vErrors === null){vErrors = [err44];}else {vErrors.push(err44);}errors++;}else {if(data17.type !== undefined){if(!equal(data17.type, \"Dropdown\")){const err45 = {};if(vErrors === null){vErrors = [err45];}else {vErrors.push(err45);}errors++;}}}}var _valid0 = _errs42 === errors;errors = _errs41;if(vErrors !== null){if(_errs41){vErrors.length = _errs41;}else {vErrors = null;}}if(_valid0){const _errs44 = errors;if(data17 && typeof data17 == \"object\" && !Array.isArray(data17)){if(data17.choices === undefined){const err46 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2,schemaPath:\"#/definitions/properties/allOf/0/items/allOf/0/then/required\",params:{missingProperty: \"choices\"},message:\"should have required property '\"+\"choices\"+\"'\"};if(vErrors === null){vErrors = [err46];}else {vErrors.push(err46);}errors++;}}if(errors > 0){const emErrs6 = [];for(const err47 of vErrors){if(((((err47.keyword !== \"errorMessage\") && (!err47.emUsed)) && ((err47.dataPath === dataPath+\"/properties/\" + i2) || ((err47.dataPath.indexOf(dataPath+\"/properties/\" + i2) === 0) && (err47.dataPath[dataPath+\"/properties/\" + i2.length] === \"/\")))) && (err47.schemaPath.indexOf(\"#/definitions/properties/allOf/0/items/allOf/0/then\") === 0)) && (err47.schemaPath[\"#/definitions/properties/allOf/0/items/allOf/0/then\".length] === \"/\")){emErrs6.push(err47);err47.emUsed = true;}}if(emErrs6.length){const err48 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i2,schemaPath:\"#/definitions/properties/allOf/0/items/allOf/0/then/errorMessage\",params:{errors: emErrs6},message:\"must provide choices=[] with \\\"Dropdown\\\" type\"};if(vErrors === null){vErrors = [err48];}else {vErrors.push(err48);}errors++;}const emErrs7 = [];for(const err49 of vErrors){if(!err49.emUsed){emErrs7.push(err49);}}vErrors = emErrs7;errors = emErrs7.length;}var _valid0 = _errs44 === errors;valid18 = _valid0;}if(!valid18){const err50 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i2,schemaPath:\"#/definitions/properties/allOf/0/items/allOf/0/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err50];}else {vErrors.push(err50);}errors++;}if(data17 && typeof data17 == \"object\" && !Array.isArray(data17)){if(data17.id !== undefined){if(typeof data17.id !== \"string\"){const err51 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/id\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/id/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err51];}else {vErrors.push(err51);}errors++;}}if(data17.value !== undefined){let data20 = data17.value;if((typeof data20 !== \"string\") && (typeof data20 !== \"boolean\")){const err52 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/value\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/value/type\",params:{type: schema18.allOf[0].items.properties.value.type},message:\"should be string,boolean\"};if(vErrors === null){vErrors = [err52];}else {vErrors.push(err52);}errors++;}}if(data17.description !== undefined){if(typeof data17.description !== \"string\"){const err53 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/description\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/description/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err53];}else {vErrors.push(err53);}errors++;}}if(data17.label !== undefined){if(typeof data17.label !== \"string\"){const err54 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/label\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/label/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err54];}else {vErrors.push(err54);}errors++;}}if(data17.type !== undefined){if(typeof data17.type !== \"string\"){const err55 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/type\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/type/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err55];}else {vErrors.push(err55);}errors++;}}if(data17.editable !== undefined){if(typeof data17.editable !== \"boolean\"){const err56 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/editable\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/editable/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err56];}else {vErrors.push(err56);}errors++;}}if(data17.choices !== undefined){let data25 = data17.choices;if(Array.isArray(data25)){const len3 = data25.length;for(let i3=0; i3<len3; i3++){let data26 = data25[i3];if(data26 && typeof data26 == \"object\" && !Array.isArray(data26)){if(data26.value === undefined){const err57 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/required\",params:{missingProperty: \"value\"},message:\"should have required property '\"+\"value\"+\"'\"};if(vErrors === null){vErrors = [err57];}else {vErrors.push(err57);}errors++;}if(data26.name === undefined){const err58 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/required\",params:{missingProperty: \"name\"},message:\"should have required property '\"+\"name\"+\"'\"};if(vErrors === null){vErrors = [err58];}else {vErrors.push(err58);}errors++;}if(data26.name !== undefined){if(typeof data26.name !== \"string\"){const err59 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3+\"/name\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/properties/name/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err59];}else {vErrors.push(err59);}errors++;}}if(data26.value !== undefined){if(typeof data26.value !== \"string\"){const err60 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3+\"/value\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/properties/value/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err60];}else {vErrors.push(err60);}errors++;}}}else {const err61 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err61];}else {vErrors.push(err61);}errors++;}if(errors > 0){const emErrors6 = {\"required\":[]};const templates6 = {};for(const err62 of vErrors){if((((((err62.keyword !== \"errorMessage\") && (!err62.emUsed)) && (err62.dataPath === dataPath+\"/properties/\" + i2+\"/choices/\" + i3)) && (err62.keyword in emErrors6)) && (err62.schemaPath.indexOf(\"#/definitions/properties/allOf/0/items/properties/choices/items\") === 0)) && (/^\\/[^\\/]*$/.test(err62.schemaPath.slice(63)))){emErrors6[err62.keyword].push(err62);err62.emUsed = true;}}for(const key6 in emErrors6){if(emErrors6[key6].length){const err63 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i2+\"/choices/\" + i3,schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/items/errorMessage\",params:{errors: emErrors6[key6]},message:key6 in templates6 ? templates6[key6]() : schema18.allOf[0].items.properties.choices.items.errorMessage[key6]};if(vErrors === null){vErrors = [err63];}else {vErrors.push(err63);}errors++;}}const emErrs8 = [];for(const err64 of vErrors){if(!err64.emUsed){emErrs8.push(err64);}}vErrors = emErrs8;errors = emErrs8.length;}}}else {const err65 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/choices\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/choices/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err65];}else {vErrors.push(err65);}errors++;}}if(data17.constraints !== undefined){let data29 = data17.constraints;if(data29 && typeof data29 == \"object\" && !Array.isArray(data29)){if(data29.notEmpty !== undefined){if(typeof data29.notEmpty !== \"boolean\"){const err66 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/notEmpty\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/notEmpty/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err66];}else {vErrors.push(err66);}errors++;}}if(data29.minLength !== undefined){if(!(typeof data29.minLength == \"number\")){const err67 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/minLength\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/minLength/type\",params:{type: \"number\"},message:\"should be number\"};if(vErrors === null){vErrors = [err67];}else {vErrors.push(err67);}errors++;}}if(data29.maxLength !== undefined){if(!(typeof data29.maxLength == \"number\")){const err68 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/maxLength\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/maxLength/type\",params:{type: \"number\"},message:\"should be number\"};if(vErrors === null){vErrors = [err68];}else {vErrors.push(err68);}errors++;}}if(data29.pattern !== undefined){let data33 = data29.pattern;const _errs74 = errors;let valid26 = false;let passing0 = null;const _errs75 = errors;if(data33 && typeof data33 == \"object\" && !Array.isArray(data33)){if(data33.value !== undefined){if(typeof data33.value !== \"string\"){const err69 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/pattern/value\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/0/properties/value/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err69];}else {vErrors.push(err69);}errors++;}}if(data33.message !== undefined){if(typeof data33.message !== \"string\"){const err70 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/pattern/message\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/0/properties/message/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err70];}else {vErrors.push(err70);}errors++;}}}else {const err71 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/pattern\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/0/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err71];}else {vErrors.push(err71);}errors++;}var _valid1 = _errs75 === errors;if(_valid1){valid26 = true;passing0 = 0;}const _errs81 = errors;if(typeof data33 !== \"string\"){const err72 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/pattern\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf/1/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err72];}else {vErrors.push(err72);}errors++;}var _valid1 = _errs81 === errors;if(_valid1 && valid26){valid26 = false;passing0 = [passing0, 1];}else {if(_valid1){valid26 = true;passing0 = 1;}}if(!valid26){const err73 = {keyword:\"oneOf\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints/pattern\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/properties/pattern/oneOf\",params:{passingSchemas: passing0},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err73];}else {vErrors.push(err73);}errors++;}else {errors = _errs74;if(vErrors !== null){if(_errs74){vErrors.length = _errs74;}else {vErrors = null;}}}}}else {const err74 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/constraints\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/constraints/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err74];}else {vErrors.push(err74);}errors++;}}if(data17.group !== undefined){if(typeof data17.group !== \"string\"){const err75 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/group\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/group/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err75];}else {vErrors.push(err75);}errors++;}}if(data17.condition !== undefined){let data37 = data17.condition;const _errs87 = errors;let valid28 = false;let passing1 = null;const _errs88 = errors;if(data37 && typeof data37 == \"object\" && !Array.isArray(data37)){if(data37.equals === undefined){const err76 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/0/required\",params:{missingProperty: \"equals\"},message:\"should have required property '\"+\"equals\"+\"'\"};if(vErrors === null){vErrors = [err76];}else {vErrors.push(err76);}errors++;}if(data37.equals !== undefined){let data38 = data37.equals;if(((typeof data38 !== \"string\") && (!(typeof data38 == \"number\"))) && (typeof data38 !== \"boolean\")){const err77 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/condition/equals\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/0/properties/equals/type\",params:{type: schema18.allOf[0].items.properties.condition.oneOf[0].properties.equals.type},message:\"should be string,number,boolean\"};if(vErrors === null){vErrors = [err77];}else {vErrors.push(err77);}errors++;}}}var _valid2 = _errs88 === errors;if(_valid2){valid28 = true;passing1 = 0;}const _errs91 = errors;if(data37 && typeof data37 == \"object\" && !Array.isArray(data37)){if(data37.oneOf === undefined){const err78 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/1/required\",params:{missingProperty: \"oneOf\"},message:\"should have required property '\"+\"oneOf\"+\"'\"};if(vErrors === null){vErrors = [err78];}else {vErrors.push(err78);}errors++;}if(data37.oneOf !== undefined){let data39 = data37.oneOf;if(Array.isArray(data39)){const len4 = data39.length;for(let i4=0; i4<len4; i4++){let data40 = data39[i4];if((typeof data40 !== \"string\") && (!(typeof data40 == \"number\"))){const err79 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/condition/oneOf/\" + i4,schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/1/properties/oneOf/items/type\",params:{type: schema18.allOf[0].items.properties.condition.oneOf[1].properties.oneOf.items.type},message:\"should be string,number\"};if(vErrors === null){vErrors = [err79];}else {vErrors.push(err79);}errors++;}}}else {const err80 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/condition/oneOf\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf/1/properties/oneOf/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err80];}else {vErrors.push(err80);}errors++;}}}var _valid2 = _errs91 === errors;if(_valid2 && valid28){valid28 = false;passing1 = [passing1, 1];}else {if(_valid2){valid28 = true;passing1 = 1;}}if(!valid28){const err81 = {keyword:\"oneOf\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/oneOf\",params:{passingSchemas: passing1},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err81];}else {vErrors.push(err81);}errors++;}else {errors = _errs87;if(vErrors !== null){if(_errs87){vErrors.length = _errs87;}else {vErrors = null;}}}if(data37 && typeof data37 == \"object\" && !Array.isArray(data37)){if(data37.property === undefined){const err82 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/required\",params:{missingProperty: \"property\"},message:\"should have required property '\"+\"property\"+\"'\"};if(vErrors === null){vErrors = [err82];}else {vErrors.push(err82);}errors++;}if(data37.type !== undefined){if(!equal(data37.type, \"simple\")){const err83 = {keyword:\"const\",dataPath:dataPath+\"/properties/\" + i2+\"/condition/type\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/properties/type/const\",params:{allowedValue: \"simple\"},message:\"should be equal to constant\"};if(vErrors === null){vErrors = [err83];}else {vErrors.push(err83);}errors++;}}if(data37.property !== undefined){if(typeof data37.property !== \"string\"){const err84 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/condition/property\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/properties/property/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err84];}else {vErrors.push(err84);}errors++;}}}else {const err85 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err85];}else {vErrors.push(err85);}errors++;}if(errors > 0){const emErrors7 = {\"required\":{\"property\":[]}};const templates7 = {required:{}};let emPropParams3;let emParamsErrors3;for(const err86 of vErrors){if((((((err86.keyword !== \"errorMessage\") && (!err86.emUsed)) && (err86.dataPath === dataPath+\"/properties/\" + i2+\"/condition\")) && (err86.keyword in emErrors7)) && (err86.schemaPath.indexOf(\"#/definitions/properties/allOf/0/items/properties/condition\") === 0)) && (/^\\/[^\\/]*$/.test(err86.schemaPath.slice(59)))){emPropParams3 = obj0[err86.keyword];emParamsErrors3 = emErrors7[err86.keyword][err86.params[emPropParams3]];if(emParamsErrors3){emParamsErrors3.push(err86);err86.emUsed = true;}}}for(const key7 in emErrors7){for(const keyProp3 in emErrors7[key7]){emParamsErrors3 = emErrors7[key7][keyProp3];if(emParamsErrors3.length){const tmpl3 = templates7[key7] && templates7[key7][keyProp3];const err87 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i2+\"/condition\",schemaPath:\"#/definitions/properties/allOf/0/items/properties/condition/errorMessage\",params:{errors: emParamsErrors3},message:tmpl3 ? tmpl3() : schema18.allOf[0].items.properties.condition.errorMessage[key7][keyProp3]};if(vErrors === null){vErrors = [err87];}else {vErrors.push(err87);}errors++;}}}const emErrs9 = [];for(const err88 of vErrors){if(!err88.emUsed){emErrs9.push(err88);}}vErrors = emErrs9;errors = emErrs9.length;}}}else {const err89 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i2,schemaPath:\"#/definitions/properties/allOf/0/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err89];}else {vErrors.push(err89);}errors++;}}}else {const err90 = {keyword:\"type\",dataPath:dataPath+\"/properties\",schemaPath:\"#/definitions/properties/allOf/0/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err90];}else {vErrors.push(err90);}errors++;}if(Array.isArray(data16)){const len5 = data16.length;for(let i5=0; i5<len5; i5++){let data43 = data16[i5];const _errs104 = errors;let valid38 = true;const _errs105 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if((data43.binding === undefined) && (\"binding\")){const err91 = {};if(vErrors === null){vErrors = [err91];}else {vErrors.push(err91);}errors++;}else {if(data43.binding !== undefined){let data44 = data43.binding;if(data44 && typeof data44 == \"object\" && !Array.isArray(data44)){if((data44.type === undefined) && (\"type\")){const err92 = {};if(vErrors === null){vErrors = [err92];}else {vErrors.push(err92);}errors++;}else {if(data44.type !== undefined){if(!equal(data44.type, \"property\")){const err93 = {};if(vErrors === null){vErrors = [err93];}else {vErrors.push(err93);}errors++;}}}}}}}var _valid3 = _errs105 === errors;errors = _errs104;if(vErrors !== null){if(_errs104){vErrors.length = _errs104;}else {vErrors = null;}}if(_valid3){const _errs108 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.type !== undefined){let data46 = data43.type;if(!(((((data46 === \"String\") || (data46 === \"Text\")) || (data46 === \"Hidden\")) || (data46 === \"Dropdown\")) || (data46 === \"Boolean\"))){const err94 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type/enum\",params:{allowedValues: schema18.allOf[1].items.allOf[0].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err94];}else {vErrors.push(err94);}errors++;}if(errors > 0){const emErrs10 = [];for(const err95 of vErrors){if(((((err95.keyword !== \"errorMessage\") && (!err95.emUsed)) && ((err95.dataPath === dataPath+\"/properties/\" + i5+\"/type\") || ((err95.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/type\") === 0) && (err95.dataPath[dataPath+\"/properties/\" + i5+\"/type\".length] === \"/\")))) && (err95.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type\") === 0)) && (err95.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type\".length] === \"/\")){emErrs10.push(err95);err95.emUsed = true;}}if(emErrs10.length){const err96 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/0/then/properties/type/errorMessage\",params:{errors: emErrs10},message:\"invalid property type \" + JSON.stringify(data46) + \" for binding type \\\"property\\\"; must be any of { String, Text, Hidden, Dropdown, Boolean }\"};if(vErrors === null){vErrors = [err96];}else {vErrors.push(err96);}errors++;}const emErrs11 = [];for(const err97 of vErrors){if(!err97.emUsed){emErrs11.push(err97);}}vErrors = emErrs11;errors = emErrs11.length;}}}var _valid3 = _errs108 === errors;valid38 = _valid3;}if(!valid38){const err98 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/0/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err98];}else {vErrors.push(err98);}errors++;}const _errs111 = errors;let valid42 = true;const _errs112 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if((data43.binding === undefined) && (\"binding\")){const err99 = {};if(vErrors === null){vErrors = [err99];}else {vErrors.push(err99);}errors++;}else {if(data43.binding !== undefined){let data47 = data43.binding;if(data47 && typeof data47 == \"object\" && !Array.isArray(data47)){if((data47.type === undefined) && (\"type\")){const err100 = {};if(vErrors === null){vErrors = [err100];}else {vErrors.push(err100);}errors++;}else {if(data47.type !== undefined){let data48 = data47.type;if(!((((data48 === \"zeebe:input\") || (data48 === \"zeebe:output\")) || (data48 === \"zeebe:taskHeader\")) || (data48 === \"zeebe:taskDefinition:type\"))){const err101 = {};if(vErrors === null){vErrors = [err101];}else {vErrors.push(err101);}errors++;}}}}}}}var _valid4 = _errs112 === errors;errors = _errs111;if(vErrors !== null){if(_errs111){vErrors.length = _errs111;}else {vErrors = null;}}if(_valid4){const _errs115 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.type !== undefined){let data49 = data43.type;if(!((((data49 === \"String\") || (data49 === \"Text\")) || (data49 === \"Hidden\")) || (data49 === \"Dropdown\"))){const err102 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type/enum\",params:{allowedValues: schema18.allOf[1].items.allOf[1].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err102];}else {vErrors.push(err102);}errors++;}if(errors > 0){const emErrs12 = [];for(const err103 of vErrors){if(((((err103.keyword !== \"errorMessage\") && (!err103.emUsed)) && ((err103.dataPath === dataPath+\"/properties/\" + i5+\"/type\") || ((err103.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/type\") === 0) && (err103.dataPath[dataPath+\"/properties/\" + i5+\"/type\".length] === \"/\")))) && (err103.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type\") === 0)) && (err103.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type\".length] === \"/\")){emErrs12.push(err103);err103.emUsed = true;}}if(emErrs12.length){const err104 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/1/then/properties/type/errorMessage\",params:{errors: emErrs12},message:\"invalid property type \" + JSON.stringify(data49) + \" for binding type \" + JSON.stringify(data43 && data43.binding && data43.binding.type) + \"; must be any of { String, Text, Hidden, Dropdown }\"};if(vErrors === null){vErrors = [err104];}else {vErrors.push(err104);}errors++;}const emErrs13 = [];for(const err105 of vErrors){if(!err105.emUsed){emErrs13.push(err105);}}vErrors = emErrs13;errors = emErrs13.length;}}}var _valid4 = _errs115 === errors;valid42 = _valid4;}if(!valid42){const err106 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/1/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err106];}else {vErrors.push(err106);}errors++;}const _errs118 = errors;let valid46 = true;const _errs119 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if((data43.optional === undefined) && (\"optional\")){const err107 = {};if(vErrors === null){vErrors = [err107];}else {vErrors.push(err107);}errors++;}else {if(data43.optional !== undefined){if(!equal(data43.optional, true)){const err108 = {};if(vErrors === null){vErrors = [err108];}else {vErrors.push(err108);}errors++;}}}}var _valid5 = _errs119 === errors;errors = _errs118;if(vErrors !== null){if(_errs118){vErrors.length = _errs118;}else {vErrors = null;}}if(_valid5){const _errs121 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.binding !== undefined){let data51 = data43.binding;if(data51 && typeof data51 == \"object\" && !Array.isArray(data51)){if(data51.type === undefined){const err109 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/binding/required\",params:{missingProperty: \"type\"},message:\"should have required property '\"+\"type\"+\"'\"};if(vErrors === null){vErrors = [err109];}else {vErrors.push(err109);}errors++;}if(data51.type !== undefined){let data52 = data51.type;if(!((data52 === \"zeebe:input\") || (data52 === \"zeebe:output\"))){const err110 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/binding/properties/type/enum\",params:{allowedValues: schema18.allOf[1].items.allOf[2].then.properties.binding.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err110];}else {vErrors.push(err110);}errors++;}if(errors > 0){const emErrs14 = [];for(const err111 of vErrors){if(((((err111.keyword !== \"errorMessage\") && (!err111.emUsed)) && ((err111.dataPath === dataPath+\"/properties/\" + i5+\"/binding/type\") || ((err111.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding/type\") === 0) && (err111.dataPath[dataPath+\"/properties/\" + i5+\"/binding/type\".length] === \"/\")))) && (err111.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/binding/properties/type\") === 0)) && (err111.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/binding/properties/type\".length] === \"/\")){emErrs14.push(err111);err111.emUsed = true;}}if(emErrs14.length){const err112 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/2/then/properties/binding/properties/type/errorMessage\",params:{errors: emErrs14},message:\"optional is not supported for binding type \" + JSON.stringify(data52) + \"; must be any of { zeebe:input, zeebe:output }\"};if(vErrors === null){vErrors = [err112];}else {vErrors.push(err112);}errors++;}const emErrs15 = [];for(const err113 of vErrors){if(!err113.emUsed){emErrs15.push(err113);}}vErrors = emErrs15;errors = emErrs15.length;}}}}}var _valid5 = _errs121 === errors;valid46 = _valid5;}if(!valid46){const err114 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/2/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err114];}else {vErrors.push(err114);}errors++;}const _errs125 = errors;let valid50 = true;const _errs126 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if((data43.optional === undefined) && (\"optional\")){const err115 = {};if(vErrors === null){vErrors = [err115];}else {vErrors.push(err115);}errors++;}else {if(data43.optional !== undefined){if(!equal(data43.optional, true)){const err116 = {};if(vErrors === null){vErrors = [err116];}else {vErrors.push(err116);}errors++;}}}}var _valid6 = _errs126 === errors;errors = _errs125;if(vErrors !== null){if(_errs125){vErrors.length = _errs125;}else {vErrors = null;}}if(_valid6){const _errs128 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.constraints !== undefined){let data54 = data43.constraints;if(data54 && typeof data54 == \"object\" && !Array.isArray(data54)){if(data54.notEmpty === undefined){const err117 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/constraints\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/constraints/required\",params:{missingProperty: \"notEmpty\"},message:\"should have required property '\"+\"notEmpty\"+\"'\"};if(vErrors === null){vErrors = [err117];}else {vErrors.push(err117);}errors++;}if(data54.notEmpty !== undefined){if(!equal(data54.notEmpty, false)){const err118 = {keyword:\"const\",dataPath:dataPath+\"/properties/\" + i5+\"/constraints/notEmpty\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/constraints/properties/notEmpty/const\",params:{allowedValue: false},message:\"should be equal to constant\"};if(vErrors === null){vErrors = [err118];}else {vErrors.push(err118);}errors++;}if(errors > 0){const emErrs16 = [];for(const err119 of vErrors){if(((((err119.keyword !== \"errorMessage\") && (!err119.emUsed)) && ((err119.dataPath === dataPath+\"/properties/\" + i5+\"/constraints/notEmpty\") || ((err119.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/constraints/notEmpty\") === 0) && (err119.dataPath[dataPath+\"/properties/\" + i5+\"/constraints/notEmpty\".length] === \"/\")))) && (err119.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/constraints/properties/notEmpty\") === 0)) && (err119.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/constraints/properties/notEmpty\".length] === \"/\")){emErrs16.push(err119);err119.emUsed = true;}}if(emErrs16.length){const err120 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/constraints/notEmpty\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/3/then/properties/constraints/properties/notEmpty/errorMessage\",params:{errors: emErrs16},message:\"optional is not allowed for truthy \\\"notEmpty\\\" constraint\"};if(vErrors === null){vErrors = [err120];}else {vErrors.push(err120);}errors++;}const emErrs17 = [];for(const err121 of vErrors){if(!err121.emUsed){emErrs17.push(err121);}}vErrors = emErrs17;errors = emErrs17.length;}}}}}var _valid6 = _errs128 === errors;valid50 = _valid6;}if(!valid50){const err122 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/3/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err122];}else {vErrors.push(err122);}errors++;}const _errs132 = errors;let valid54 = true;const _errs133 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if((data43.feel === undefined) && (\"feel\")){const err123 = {};if(vErrors === null){vErrors = [err123];}else {vErrors.push(err123);}errors++;}else {if(data43.feel !== undefined){const _errs135 = errors;const _errs136 = errors;if(!equal(data43.feel, schema18.allOf[1].items.allOf[4].if.properties.feel.not.const)){const err124 = {};if(vErrors === null){vErrors = [err124];}else {vErrors.push(err124);}errors++;}var valid56 = _errs136 === errors;if(!valid56){errors = _errs135;if(vErrors !== null){if(_errs135){vErrors.length = _errs135;}else {vErrors = null;}}}else {const err125 = {};if(vErrors === null){vErrors = [err125];}else {vErrors.push(err125);}errors++;}}}}var _valid7 = _errs133 === errors;errors = _errs132;if(vErrors !== null){if(_errs132){vErrors.length = _errs132;}else {vErrors = null;}}if(_valid7){const _errs137 = errors;if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.type === undefined){const err126 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/4/then/required\",params:{missingProperty: \"type\"},message:\"should have required property '\"+\"type\"+\"'\"};if(vErrors === null){vErrors = [err126];}else {vErrors.push(err126);}errors++;}if(data43.type !== undefined){let data57 = data43.type;if(!((data57 === \"String\") || (data57 === \"Text\"))){const err127 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/4/then/properties/type/enum\",params:{allowedValues: schema18.allOf[1].items.allOf[4].then.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err127];}else {vErrors.push(err127);}errors++;}if(errors > 0){const emErrs18 = [];for(const err128 of vErrors){if(((((err128.keyword !== \"errorMessage\") && (!err128.emUsed)) && ((err128.dataPath === dataPath+\"/properties/\" + i5+\"/type\") || ((err128.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/type\") === 0) && (err128.dataPath[dataPath+\"/properties/\" + i5+\"/type\".length] === \"/\")))) && (err128.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/allOf/4/then/properties/type\") === 0)) && (err128.schemaPath[\"#/definitions/properties/allOf/1/items/allOf/4/then/properties/type\".length] === \"/\")){emErrs18.push(err128);err128.emUsed = true;}}if(emErrs18.length){const err129 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/type\",schemaPath:\"#/definitions/properties/allOf/1/items/allOf/4/then/properties/type/errorMessage\",params:{errors: emErrs18},message:\"feel is only supported for \\\"String\\\" and \\\"Text\\\" type\"};if(vErrors === null){vErrors = [err129];}else {vErrors.push(err129);}errors++;}const emErrs19 = [];for(const err130 of vErrors){if(!err130.emUsed){emErrs19.push(err130);}}vErrors = emErrs19;errors = emErrs19.length;}}}var _valid7 = _errs137 === errors;valid54 = _valid7;}if(!valid54){const err131 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/allOf/4/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err131];}else {vErrors.push(err131);}errors++;}if(data43 && typeof data43 == \"object\" && !Array.isArray(data43)){if(data43.binding === undefined){const err132 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/required\",params:{missingProperty: \"binding\"},message:\"should have required property '\"+\"binding\"+\"'\"};if(vErrors === null){vErrors = [err132];}else {vErrors.push(err132);}errors++;}if(data43.binding !== undefined){let data58 = data43.binding;const _errs142 = errors;let valid60 = true;const _errs143 = errors;if(data58 && typeof data58 == \"object\" && !Array.isArray(data58)){if((data58.type === undefined) && (\"type\")){const err133 = {};if(vErrors === null){vErrors = [err133];}else {vErrors.push(err133);}errors++;}else {if(data58.type !== undefined){let data59 = data58.type;if(!((data59 === \"property\") || (data59 === \"zeebe:input\"))){const err134 = {};if(vErrors === null){vErrors = [err134];}else {vErrors.push(err134);}errors++;}}}}var _valid8 = _errs143 === errors;errors = _errs142;if(vErrors !== null){if(_errs142){vErrors.length = _errs142;}else {vErrors = null;}}if(_valid8){const _errs145 = errors;if(data58 && typeof data58 == \"object\" && !Array.isArray(data58)){if(data58.name === undefined){const err135 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then/required\",params:{missingProperty: \"name\"},message:\"should have required property '\"+\"name\"+\"'\"};if(vErrors === null){vErrors = [err135];}else {vErrors.push(err135);}errors++;}}if(errors > 0){const emErrs20 = [];for(const err136 of vErrors){if(((((err136.keyword !== \"errorMessage\") && (!err136.emUsed)) && ((err136.dataPath === dataPath+\"/properties/\" + i5+\"/binding\") || ((err136.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding\") === 0) && (err136.dataPath[dataPath+\"/properties/\" + i5+\"/binding\".length] === \"/\")))) && (err136.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then\") === 0)) && (err136.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then\".length] === \"/\")){emErrs20.push(err136);err136.emUsed = true;}}if(emErrs20.length){const err137 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/then/errorMessage\",params:{errors: emErrs20},message:\"property.binding \" + JSON.stringify(data58 && data58.type) + \" requires name\"};if(vErrors === null){vErrors = [err137];}else {vErrors.push(err137);}errors++;}const emErrs21 = [];for(const err138 of vErrors){if(!err138.emUsed){emErrs21.push(err138);}}vErrors = emErrs21;errors = emErrs21.length;}var _valid8 = _errs145 === errors;valid60 = _valid8;}if(!valid60){const err139 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/0/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err139];}else {vErrors.push(err139);}errors++;}const _errs147 = errors;let valid62 = true;const _errs148 = errors;if(data58 && typeof data58 == \"object\" && !Array.isArray(data58)){if((data58.type === undefined) && (\"type\")){const err140 = {};if(vErrors === null){vErrors = [err140];}else {vErrors.push(err140);}errors++;}else {if(data58.type !== undefined){if(!equal(data58.type, \"zeebe:output\")){const err141 = {};if(vErrors === null){vErrors = [err141];}else {vErrors.push(err141);}errors++;}}}}var _valid9 = _errs148 === errors;errors = _errs147;if(vErrors !== null){if(_errs147){vErrors.length = _errs147;}else {vErrors = null;}}if(_valid9){const _errs150 = errors;if(data58 && typeof data58 == \"object\" && !Array.isArray(data58)){if(data58.source === undefined){const err142 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then/required\",params:{missingProperty: \"source\"},message:\"should have required property '\"+\"source\"+\"'\"};if(vErrors === null){vErrors = [err142];}else {vErrors.push(err142);}errors++;}}if(errors > 0){const emErrs22 = [];for(const err143 of vErrors){if(((((err143.keyword !== \"errorMessage\") && (!err143.emUsed)) && ((err143.dataPath === dataPath+\"/properties/\" + i5+\"/binding\") || ((err143.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding\") === 0) && (err143.dataPath[dataPath+\"/properties/\" + i5+\"/binding\".length] === \"/\")))) && (err143.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then\") === 0)) && (err143.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then\".length] === \"/\")){emErrs22.push(err143);err143.emUsed = true;}}if(emErrs22.length){const err144 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/then/errorMessage\",params:{errors: emErrs22},message:\"property.binding \" + JSON.stringify(data58 && data58.type) + \" requires source\"};if(vErrors === null){vErrors = [err144];}else {vErrors.push(err144);}errors++;}const emErrs23 = [];for(const err145 of vErrors){if(!err145.emUsed){emErrs23.push(err145);}}vErrors = emErrs23;errors = emErrs23.length;}var _valid9 = _errs150 === errors;valid62 = _valid9;}if(!valid62){const err146 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/1/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err146];}else {vErrors.push(err146);}errors++;}const _errs152 = errors;let valid64 = true;const _errs153 = errors;if(data58 && typeof data58 == \"object\" && !Array.isArray(data58)){if((data58.type === undefined) && (\"type\")){const err147 = {};if(vErrors === null){vErrors = [err147];}else {vErrors.push(err147);}errors++;}else {if(data58.type !== undefined){if(!equal(data58.type, \"zeebe:taskHeader\")){const err148 = {};if(vErrors === null){vErrors = [err148];}else {vErrors.push(err148);}errors++;}}}}var _valid10 = _errs153 === errors;errors = _errs152;if(vErrors !== null){if(_errs152){vErrors.length = _errs152;}else {vErrors = null;}}if(_valid10){const _errs155 = errors;if(data58 && typeof data58 == \"object\" && !Array.isArray(data58)){if(data58.key === undefined){const err149 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then/required\",params:{missingProperty: \"key\"},message:\"should have required property '\"+\"key\"+\"'\"};if(vErrors === null){vErrors = [err149];}else {vErrors.push(err149);}errors++;}}if(errors > 0){const emErrs24 = [];for(const err150 of vErrors){if(((((err150.keyword !== \"errorMessage\") && (!err150.emUsed)) && ((err150.dataPath === dataPath+\"/properties/\" + i5+\"/binding\") || ((err150.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding\") === 0) && (err150.dataPath[dataPath+\"/properties/\" + i5+\"/binding\".length] === \"/\")))) && (err150.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then\") === 0)) && (err150.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then\".length] === \"/\")){emErrs24.push(err150);err150.emUsed = true;}}if(emErrs24.length){const err151 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/then/errorMessage\",params:{errors: emErrs24},message:\"property.binding \" + JSON.stringify(data58 && data58.type) + \" requires key\"};if(vErrors === null){vErrors = [err151];}else {vErrors.push(err151);}errors++;}const emErrs25 = [];for(const err152 of vErrors){if(!err152.emUsed){emErrs25.push(err152);}}vErrors = emErrs25;errors = emErrs25.length;}var _valid10 = _errs155 === errors;valid64 = _valid10;}if(!valid64){const err153 = {keyword:\"if\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/allOf/2/if\",params:{failingKeyword: \"then\"},message:\"should match \\\"then\\\" schema\"};if(vErrors === null){vErrors = [err153];}else {vErrors.push(err153);}errors++;}if(data58 && typeof data58 == \"object\" && !Array.isArray(data58)){if(data58.type === undefined){const err154 = {keyword:\"required\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/required\",params:{missingProperty: \"type\"},message:\"should have required property '\"+\"type\"+\"'\"};if(vErrors === null){vErrors = [err154];}else {vErrors.push(err154);}errors++;}if(data58.type !== undefined){let data62 = data58.type;if(typeof data62 !== \"string\"){const err155 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/type/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err155];}else {vErrors.push(err155);}errors++;}if(!(((((data62 === \"property\") || (data62 === \"zeebe:taskDefinition:type\")) || (data62 === \"zeebe:input\")) || (data62 === \"zeebe:output\")) || (data62 === \"zeebe:taskHeader\"))){const err156 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/type/enum\",params:{allowedValues: schema18.allOf[1].items.properties.binding.properties.type.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err156];}else {vErrors.push(err156);}errors++;}if(errors > 0){const emErrs26 = [];for(const err157 of vErrors){if(((((err157.keyword !== \"errorMessage\") && (!err157.emUsed)) && ((err157.dataPath === dataPath+\"/properties/\" + i5+\"/binding/type\") || ((err157.dataPath.indexOf(dataPath+\"/properties/\" + i5+\"/binding/type\") === 0) && (err157.dataPath[dataPath+\"/properties/\" + i5+\"/binding/type\".length] === \"/\")))) && (err157.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items/properties/binding/properties/type\") === 0)) && (err157.schemaPath[\"#/definitions/properties/allOf/1/items/properties/binding/properties/type\".length] === \"/\")){emErrs26.push(err157);err157.emUsed = true;}}if(emErrs26.length){const err158 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/type\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/type/errorMessage\",params:{errors: emErrs26},message:\"invalid property.binding type \" + JSON.stringify(data62) + \"; must be any of { property, zeebe:taskDefinition:type, zeebe:input, zeebe:output, zeebe:taskHeader }\"};if(vErrors === null){vErrors = [err158];}else {vErrors.push(err158);}errors++;}const emErrs27 = [];for(const err159 of vErrors){if(!err159.emUsed){emErrs27.push(err159);}}vErrors = emErrs27;errors = emErrs27.length;}}if(data58.name !== undefined){if(typeof data58.name !== \"string\"){const err160 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/name\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/name/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err160];}else {vErrors.push(err160);}errors++;}}if(data58.source !== undefined){if(typeof data58.source !== \"string\"){const err161 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/source\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/source/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err161];}else {vErrors.push(err161);}errors++;}}if(data58.key !== undefined){if(typeof data58.key !== \"string\"){const err162 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding/key\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/properties/key/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err162];}else {vErrors.push(err162);}errors++;}}}else {const err163 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/binding\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/binding/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err163];}else {vErrors.push(err163);}errors++;}}if(data43.optional !== undefined){if(typeof data43.optional !== \"boolean\"){const err164 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/optional\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/optional/type\",params:{type: \"boolean\"},message:\"should be boolean\"};if(vErrors === null){vErrors = [err164];}else {vErrors.push(err164);}errors++;}}if(data43.feel !== undefined){let data67 = data43.feel;if(typeof data67 !== \"string\"){const err165 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5+\"/feel\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/feel/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err165];}else {vErrors.push(err165);}errors++;}if(!(((data67 === null) || (data67 === \"optional\")) || (data67 === \"required\"))){const err166 = {keyword:\"enum\",dataPath:dataPath+\"/properties/\" + i5+\"/feel\",schemaPath:\"#/definitions/properties/allOf/1/items/properties/feel/enum\",params:{allowedValues: schema18.allOf[1].items.properties.feel.enum},message:\"should be equal to one of the allowed values\"};if(vErrors === null){vErrors = [err166];}else {vErrors.push(err166);}errors++;}}}else {const err167 = {keyword:\"type\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err167];}else {vErrors.push(err167);}errors++;}if(errors > 0){const emErrors8 = {\"required\":{\"binding\":[]}};const templates8 = {required:{binding:function(){return \"missing binding for property \\\"\" + JSON.stringify(i5) + \"\\\"\"}}};let emPropParams4;let emParamsErrors4;for(const err168 of vErrors){if((((((err168.keyword !== \"errorMessage\") && (!err168.emUsed)) && (err168.dataPath === dataPath+\"/properties/\" + i5)) && (err168.keyword in emErrors8)) && (err168.schemaPath.indexOf(\"#/definitions/properties/allOf/1/items\") === 0)) && (/^\\/[^\\/]*$/.test(err168.schemaPath.slice(38)))){emPropParams4 = obj0[err168.keyword];emParamsErrors4 = emErrors8[err168.keyword][err168.params[emPropParams4]];if(emParamsErrors4){emParamsErrors4.push(err168);err168.emUsed = true;}}}for(const key8 in emErrors8){for(const keyProp4 in emErrors8[key8]){emParamsErrors4 = emErrors8[key8][keyProp4];if(emParamsErrors4.length){const tmpl4 = templates8[key8] && templates8[key8][keyProp4];const err169 = {keyword:\"errorMessage\",dataPath:dataPath+\"/properties/\" + i5,schemaPath:\"#/definitions/properties/allOf/1/items/errorMessage\",params:{errors: emParamsErrors4},message:tmpl4 ? tmpl4() : schema18.allOf[1].items.errorMessage[key8][keyProp4]};if(vErrors === null){vErrors = [err169];}else {vErrors.push(err169);}errors++;}}}const emErrs28 = [];for(const err170 of vErrors){if(!err170.emUsed){emErrs28.push(err170);}}vErrors = emErrs28;errors = emErrs28.length;}}}else {const err171 = {keyword:\"type\",dataPath:dataPath+\"/properties\",schemaPath:\"#/definitions/properties/allOf/1/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err171];}else {vErrors.push(err171);}errors++;}}if(data.icon !== undefined){let data68 = data.icon;if(data68 && typeof data68 == \"object\" && !Array.isArray(data68)){if(data68.contents === undefined){const err172 = {keyword:\"required\",dataPath:dataPath+\"/icon\",schemaPath:\"#/properties/icon/required\",params:{missingProperty: \"contents\"},message:\"should have required property '\"+\"contents\"+\"'\"};if(vErrors === null){vErrors = [err172];}else {vErrors.push(err172);}errors++;}if(data68.contents !== undefined){let data69 = data68.contents;if(typeof data69 === \"string\"){if(!pattern3.test(data69)){const err173 = {keyword:\"pattern\",dataPath:dataPath+\"/icon/contents\",schemaPath:\"#/properties/icon/properties/contents/pattern\",params:{pattern: \"^(https?|data):.*\"},message:\"should match pattern \\\"\"+\"^(https?|data):.*\"+\"\\\"\"};if(vErrors === null){vErrors = [err173];}else {vErrors.push(err173);}errors++;}}else {const err174 = {keyword:\"type\",dataPath:dataPath+\"/icon/contents\",schemaPath:\"#/properties/icon/properties/contents/type\",params:{type: \"string\"},message:\"should be string\"};if(vErrors === null){vErrors = [err174];}else {vErrors.push(err174);}errors++;}if(errors > 0){const emErrors9 = {\"pattern\":[]};const templates9 = {};for(const err175 of vErrors){if((((((err175.keyword !== \"errorMessage\") && (!err175.emUsed)) && (err175.dataPath === dataPath+\"/icon/contents\")) && (err175.keyword in emErrors9)) && (err175.schemaPath.indexOf(\"#/properties/icon/properties/contents\") === 0)) && (/^\\/[^\\/]*$/.test(err175.schemaPath.slice(37)))){emErrors9[err175.keyword].push(err175);err175.emUsed = true;}}for(const key9 in emErrors9){if(emErrors9[key9].length){const err176 = {keyword:\"errorMessage\",dataPath:dataPath+\"/icon/contents\",schemaPath:\"#/properties/icon/properties/contents/errorMessage\",params:{errors: emErrors9[key9]},message:key9 in templates9 ? templates9[key9]() : schema17.properties.icon.properties.contents.errorMessage[key9]};if(vErrors === null){vErrors = [err176];}else {vErrors.push(err176);}errors++;}}const emErrs29 = [];for(const err177 of vErrors){if(!err177.emUsed){emErrs29.push(err177);}}vErrors = emErrs29;errors = emErrs29.length;}}}else {const err178 = {keyword:\"type\",dataPath:dataPath+\"/icon\",schemaPath:\"#/properties/icon/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err178];}else {vErrors.push(err178);}errors++;}if(errors > 0){const emErrors10 = {\"required\":{\"contents\":[]}};const templates10 = {required:{}};let emPropParams5;let emParamsErrors5;for(const err179 of vErrors){if((((((err179.keyword !== \"errorMessage\") && (!err179.emUsed)) && (err179.dataPath === dataPath+\"/icon\")) && (err179.keyword in emErrors10)) && (err179.schemaPath.indexOf(\"#/properties/icon\") === 0)) && (/^\\/[^\\/]*$/.test(err179.schemaPath.slice(17)))){emPropParams5 = obj0[err179.keyword];emParamsErrors5 = emErrors10[err179.keyword][err179.params[emPropParams5]];if(emParamsErrors5){emParamsErrors5.push(err179);err179.emUsed = true;}}}for(const key10 in emErrors10){for(const keyProp5 in emErrors10[key10]){emParamsErrors5 = emErrors10[key10][keyProp5];if(emParamsErrors5.length){const tmpl5 = templates10[key10] && templates10[key10][keyProp5];const err180 = {keyword:\"errorMessage\",dataPath:dataPath+\"/icon\",schemaPath:\"#/properties/icon/errorMessage\",params:{errors: emParamsErrors5},message:tmpl5 ? tmpl5() : schema17.properties.icon.errorMessage[key10][keyProp5]};if(vErrors === null){vErrors = [err180];}else {vErrors.push(err180);}errors++;}}}const emErrs30 = [];for(const err181 of vErrors){if(!err181.emUsed){emErrs30.push(err181);}}vErrors = emErrs30;errors = emErrs30.length;}}}else {const err182 = {keyword:\"type\",dataPath,schemaPath:\"#/type\",params:{type: \"object\"},message:\"should be object\"};if(vErrors === null){vErrors = [err182];}else {vErrors.push(err182);}errors++;}validate15.errors = vErrors;return errors === 0;}function validate14(data, {dataPath=\"\", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs0 = errors;let valid0 = false;let passing0 = null;const _errs1 = errors;if(!(validate15(data, {dataPath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var _valid0 = _errs1 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs2 = errors;if(Array.isArray(data)){const len0 = data.length;for(let i0=0; i0<len0; i0++){if(!(validate15(data[i0], {dataPath:dataPath+\"/\" + i0,parentData:data,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}}}else {const err0 = {keyword:\"type\",dataPath,schemaPath:\"#/oneOf/1/type\",params:{type: \"array\"},message:\"should be array\"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}var _valid0 = _errs2 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}}if(!valid0){const err1 = {keyword:\"oneOf\",dataPath,schemaPath:\"#/oneOf\",params:{passingSchemas: passing0},message:\"should match exactly one schema in oneOf\"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}else {errors = _errs0;if(vErrors !== null){if(_errs0){vErrors.length = _errs0;}else {vErrors = null;}}}validate14.errors = vErrors;return errors === 0;}\nstandaloneZeebeValidator.default = _default;\n\nfunction getZeebeSchemaPackage() {\n  return name;\n}\n\nfunction getZeebeSchemaVersion() {\n  return version;\n}\n\n/**\n * Validate a single object.\n *\n * @param {Object} object\n * @return {Object} single object validation result\n */\nfunction validateZeebe(object) {\n  return _validate(object, standaloneZeebeValidator);\n}\n\n/**\n * Validate a list of objects\n *\n * @param  {Object[]} objects\n * @return {Object} list validation result\n */\nfunction validateAllZeebe(objects) {\n  return _validateAll(objects, validateZeebe);\n}\n\nexport { getSchemaPackage, getSchemaVersion, getZeebeSchemaPackage, getZeebeSchemaVersion, validate, validateAll, validateAllZeebe, validateZeebe };\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar minDash = require('min-dash');\n\n/**\n * Get a inputOutput from the business object\n *\n * @param {ModdleElement} element\n *\n * @return {ModdleElement} the inputOutput object\n */\nfunction getInputOutput(element) {\n  return (getElements(element, 'camunda:InputOutput') || [])[0];\n}\n\n/**\n * Return all input parameters existing in the business object, and\n * an empty array if none exist.\n *\n * @param  {ModdleElement} element\n *\n * @return {Array<ModdleElement>} a list of input parameter objects\n */\nfunction getInputParameters(element) {\n  return getParameters(element, 'inputParameters');\n}\n\n/**\n * Return all output parameters existing in the business object, and\n * an empty array if none exist.\n *\n * @param  {ModdleElement} element\n * @param  {boolean} insideConnector\n *\n * @return {Array<ModdleElement>} a list of output parameter objects\n */\nfunction getOutputParameters(element) {\n  return getParameters(element, 'outputParameters');\n}\n\n/**\n * Return all form fields existing in the business object, and\n * an empty array if none exist.\n *\n * @param {ModdleElement} element\n *\n * @return {Array<ModdleElement>} a list of form fields\n */\nfunction getFormFields(element) {\n  var formData = getFormData(element);\n  return (formData && formData.get('fields')) || [];\n}\n\n/**\n * Return form data existing in the business object\n *\n * @param {ModdleElement} element\n *\n * @return {ModdleElement}\n */\nfunction getFormData(element) {\n  return getElements(element, 'camunda:FormData')[0];\n}\n\n/**\n * Return out mappings existing in the business object\n *\n * @param {ModdleElement} element\n *\n * @return {Array<ModdleElement>}\n */\nfunction getOutMappings(element) {\n  return getElements(element, 'camunda:Out');\n}\n\n\n// helpers //////////\n\nfunction getElements(element, type, property) {\n  var elements = getExtensionElements(element, type);\n\n  return !property ? elements : (elements[0] || {})[property] || [];\n}\n\nfunction getParameters(element, property) {\n  var inputOutput = getInputOutput(element);\n\n  return (inputOutput && inputOutput.get(property)) || [];\n}\n\nfunction getExtensionElements(element, type) {\n  var elements = [];\n  var extensionElements = element.get('extensionElements');\n\n  if (typeof extensionElements !== 'undefined') {\n    var extensionValues = extensionElements.get('values');\n\n    if (typeof extensionValues !== 'undefined') {\n      elements = minDash.filter(extensionValues, function(value) {\n        return is(value, type);\n      });\n    }\n  }\n\n  return elements;\n}\n\nfunction is(element, type) {\n  return (\n    element &&\n    typeof element.$instanceOf === 'function' &&\n    element.$instanceOf(type)\n  );\n}\n\n/**\n * Get all parent elements for a given element.\n *\n * @param {ModdleElement|string} element\n *\n * @returns {Array<ModdleElement>}\n */\nfunction getParents(element) {\n  var parents = [];\n  var current = element;\n\n  while (current.$parent) {\n    parents.push(current.$parent);\n    current = current.$parent;\n  }\n\n  return parents;\n}\n\n/**\n * Iterate over each element in a collection, calling the iterator function `fn`\n * with (element, index, recursionDepth).\n *\n * Recurse into all elements that are returned by `fn`.\n *\n * @param  {Object|Array<Object>} elements\n * @param  {Function} fn iterator function called with (element, index, recursionDepth)\n * @param  {number} [depth] maximum recursion depth\n */\nfunction eachElement(elements, fn, depth) {\n  depth = depth || 0;\n\n  if (!minDash.isArray(elements)) {\n    elements = [elements];\n  }\n\n  minDash.forEach(elements, function(s, i) {\n    var filter = fn(s, i, depth);\n\n    if (minDash.isArray(filter) && filter.length) {\n      eachElement(filter, fn, depth + 1);\n    }\n  });\n}\n\n/**\n * Adds an element to a collection and returns true if the\n * element was added.\n *\n * @param {Array<Object>} elements\n * @param {Object} e\n * @param {boolean} unique\n */\nfunction add(elements, e, unique) {\n  var canAdd = !unique || elements.indexOf(e) === -1;\n\n  if (canAdd) {\n    elements.push(e);\n  }\n\n  return canAdd;\n}\n\n/**\n * Collects self + flow elements up to a given depth from a list of elements.\n *\n * @param  {ModdleElement|Array<ModdleElement>} elements the elements to select the flowElements from\n * @param  {boolean} unique whether to return a unique result set (no duplicates)\n * @param  {number} maxDepth the depth to search through or -1 for infinite\n *\n * @return {Array<ModdleElement>} found elements\n */\nfunction selfAndFlowElements(elements, unique, maxDepth) {\n  var result = [],\n      processedFlowElements = [];\n\n  eachElement(elements, function(element, i, depth) {\n    add(result, element, unique);\n\n    var flowElements = element.flowElements;\n\n    // max traversal depth not reached yet\n    if (maxDepth === -1 || depth < maxDepth) {\n\n      // flowElements exist && flowElements not yet processed\n      if (flowElements && add(processedFlowElements, flowElements, unique)) {\n        return flowElements;\n      }\n    }\n  });\n\n  return result;\n}\n\n/**\n * Return self + ALL flowElements for a number of elements\n *\n * @param  {Array<ModdleElement>} elements to query\n * @param  {boolean} allowDuplicates to allow duplicates in the result set\n *\n * @return {Array<ModdleElement>} the collected elements\n */\nfunction selfAndAllFlowElements(elements, allowDuplicates) {\n  return selfAndFlowElements(elements, !allowDuplicates, -1);\n}\n\n/**\n * Return full moddle element for given element id\n *\n * @param {string} elementId\n * @param {ModdleElement} rootElement\n *\n * @returns {ModdleElement}\n */\nfunction getElement(elementId, rootElement) {\n  var allElements = selfAndAllFlowElements(rootElement);\n\n  return minDash.find(allElements, function(element) {\n    return element.id === elementId;\n  });\n}\n\nfunction addVariableToList(variablesList, newVariable) {\n  var foundIdx = minDash.findIndex(variablesList, function(variable) {\n    return (\n      variable.name === newVariable.name && variable.scope === newVariable.scope\n    );\n  });\n\n  if (foundIdx >= 0) {\n    variablesList[foundIdx].origin = combineArrays(\n      variablesList[foundIdx].origin,\n      newVariable.origin\n    );\n  } else {\n    variablesList.push(newVariable);\n  }\n}\n\n/**\n * Creates new process variable definition object\n * Identifies correct (highest) scope, in which variable is available\n *\n * @param {ModdleElement} flowElement\n * @param {String} name\n * @param {ModdleElement} defaultScope\n *\n * @returns {ProcessVariable}\n */\nfunction createProcessVariable(flowElement, name, defaultScope) {\n  var scope = getScope(flowElement, defaultScope, name);\n\n  return {\n    name: name,\n    origin: [flowElement],\n    scope: scope,\n  };\n}\n\n\n// helpers ////////////////////\n\n/**\n * Set parent container if it defines it's own scope for the variable, so\n * when it defines an input mapping for it. Otherwise returns the default global scope\n */\nfunction getScope(element, globalScope, variableName) {\n  var parents = getParents(element);\n\n  var scopedParent = minDash.find(parents, function(parent) {\n    return (\n      is$1(parent, 'bpmn:SubProcess') && hasInputParameter(parent, variableName)\n    );\n  });\n\n  return scopedParent ? scopedParent : globalScope;\n}\n\nfunction is$1(element, type) {\n  return (\n    element &&\n      typeof element.$instanceOf === 'function' &&\n      element.$instanceOf(type)\n  );\n}\n\nfunction hasInputParameter(element, name) {\n  return minDash.find(getInputParameters(element), function(input) {\n    return input.name === name;\n  });\n}\n\nfunction combineArrays(a, b) {\n  return a.concat(b);\n}\n\n/**\n * Retrieves process variables defined in output parameters, e.g.\n *\n * <camunda:inputOutput>\n *   <camunda:outputParameter name=\"variable1\">200</camunda:outputParameter>\n *   <camunda:outputParameter name=\"variable2\">${myLocalVar + 20}</camunda:outputParameter>\n * </camunda:inputOutput>\n *\n * => Adds two variables \"variable1\" & \"variable2\" to the list.\n *\n */\nfunction extractOutputParameters(options) {\n  var elements = options.elements,\n      containerElement = options.containerElement,\n      processVariables = options.processVariables;\n\n  if (!minDash.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  minDash.forEach(elements, function(element) {\n\n    // variables are created by output parameters\n    var outputParameters = getOutputParameters(element);\n\n    // extract all variables with correct scope\n    minDash.forEach(outputParameters, function(parameter) {\n      var newVariable = createProcessVariable(\n        element,\n        parameter.name,\n        containerElement\n      );\n\n      addVariableToList(processVariables, newVariable);\n    });\n  });\n\n  return processVariables;\n}\n\n/**\n * Retrieves process variables defined in result variables, e.g.\n *\n * <bpmn:sendTask\n *   id=\"SendTask_1\"\n *   camunda:expression=\"${myBean.ready}\"\n *   camunda:resultVariable=\"variable1\"\n * />\n *\n * => Adds one variable \"variable1\"to the list.\n *\n */\nfunction extractResultVariables(options) {\n  var elements = options.elements,\n      containerElement = options.containerElement,\n      processVariables = options.processVariables;\n\n  if (!minDash.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  minDash.forEach(elements, function(element) {\n\n    var resultVariable = getResultVariable(element);\n\n    if (resultVariable) {\n      var newVariable = createProcessVariable(\n        element,\n        resultVariable,\n        containerElement\n      );\n\n      addVariableToList(processVariables, newVariable);\n    }\n  });\n\n  return processVariables;\n}\n\n\n// helpers ///////////////////////\n\nfunction getResultVariable(element) {\n  return element.get('camunda:resultVariable');\n}\n\n/**\n * Retrieves process variables defined in form fields, e.g.\n *\n * <camunda:formData>\n *   <camunda:formField id=\"variable1\" />\n *   <camunda:formField id=\"variable2\" />\n * </camunda:formData>\n *\n * => Adds two variables \"variable1\" & \"variable2\" to the list.\n *\n */\nfunction extractFormFields(options) {\n  var elements = options.elements,\n      containerElement = options.containerElement,\n      processVariables = options.processVariables;\n\n  if (!minDash.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  minDash.forEach(elements, function(element) {\n\n    var formFields = getFormFields(element);\n\n    // extract all variables with correct scope\n    minDash.forEach(formFields, function(field) {\n      var newVariable = createProcessVariable(\n        element,\n        field.id,\n        containerElement\n      );\n\n      addVariableToList(processVariables, newVariable);\n    });\n  });\n\n  return processVariables;\n}\n\n/**\n * Retrieves process variables defined in output mappings and\n * ignores local variables, e.g.\n *\n * <bpmn:extensionElements>\n *   <camunda:out sourceExpression=\"${myBean.ready}\" target=\"variable1\" />\n *   <camunda:out source=\"foo\" target=\"variableLocal\" local=\"true\" />\n * </bpmn:extensionElements>\n *\n * => Adds one variable \"variable1\" to the list.\n *\n */\nfunction extractOutMappings(options) {\n  var elements = options.elements,\n      containerElement = options.containerElement,\n      processVariables = options.processVariables;\n\n  if (!minDash.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  minDash.forEach(elements, function(element) {\n\n    var outMappings = getOutMappings(element);\n\n    // extract all variables with correct scope\n    minDash.forEach(outMappings, function(mapping) {\n\n      // do not use variables marked as <local>\n      if (mapping.local) {\n        return;\n      }\n\n      var newVariable = createProcessVariable(\n        element,\n        mapping.target,\n        containerElement\n      );\n\n      addVariableToList(processVariables, newVariable);\n    });\n  });\n\n  return processVariables;\n}\n\n/**\n *\n * @param {ModdleElement} element\n * @param {string} [type] - optional\n *\n * @return {Array<ModdleElement>|undefined} collection of event definitions or none\n */\nfunction getEventDefinitions(element, type) {\n  var eventDefinitions = element.eventDefinitions;\n\n  if (!eventDefinitions || !type) {\n    return eventDefinitions;\n  }\n\n  return minDash.filter(eventDefinitions, function(definition) {\n    return is$2(definition, type);\n  });\n}\n\n/**\n * Returns error event definitions for a given element.\n *\n * @param {ModdleElement} element\n *\n * @return {Array<ModdleElement>} collection of error event definitions\n */\nfunction getErrorEventDefinitions(element) {\n  return getEventDefinitions(element, 'bpmn:ErrorEventDefinition');\n}\n\n/**\n * Returns escalation event definitions for a given element.\n *\n * @param {ModdleElement} element\n *\n * @return {Array<ModdleElement>} collection of escalation event definitions\n */\nfunction getEscalationEventDefinitions(element) {\n  return getEventDefinitions(element, 'bpmn:EscalationEventDefinition');\n}\n\n\n// helper ////////////////\n\nfunction is$2(element, type) {\n  return (\n    element &&\n    typeof element.$instanceOf === 'function' &&\n    element.$instanceOf(type)\n  );\n}\n\n/**\n * Retrieves process variables defined in event definitions, e.g.\n *\n * <bpmn:escalationEventDefinition\n *   id=\"EscalationEventDefinition_1\"\n *   escalationRef=\"Escalation_1\"\n *   camunda:escalationCodeVariable=\"variable1\"\n * />\n *\n * => Adds one variable \"variable1\" to the list.\n *\n * <bpmn:errorEventDefinition\n *   id=\"ErrorEventDefinition_1\"\n *   errorRef=\"Error_1\"\n *   camunda:errorCodeVariable=\"variable2\"\n *   camunda:errorMessageVariable=\"variable3\"\n * />\n *\n * => Adds two variables \"variable2\" & \"variable3\" to the list.\n *\n */\nfunction extractEventDefinitionVariables(options) {\n  var elements = options.elements,\n      containerElement = options.containerElement,\n      processVariables = options.processVariables;\n\n  var addVariable = function(element, name) {\n    var newVariable = createProcessVariable(\n      element,\n      name,\n      containerElement\n    );\n\n    addVariableToList(processVariables, newVariable);\n  };\n\n  if (!minDash.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  minDash.forEach(elements, function(element) {\n\n    // (1) error event code + message variable\n    var errorEventDefinitions = getErrorEventDefinitions(element);\n\n    minDash.forEach(errorEventDefinitions, function(definition) {\n\n      var errorCodeVariable = definition.get('errorCodeVariable'),\n          errorMessageVariable = definition.get('errorMessageVariable');\n\n      if (errorCodeVariable) {\n        addVariable(element, errorCodeVariable);\n      }\n\n      if (errorMessageVariable) {\n        addVariable(element, errorMessageVariable);\n      }\n    });\n\n    // (2) escalation code variable\n    var escalationEventDefinitions = getEscalationEventDefinitions(element);\n\n    minDash.forEach(escalationEventDefinitions, function(definition) {\n\n      var escalationCodeVariable = definition.get('escalationCodeVariable');\n\n      if (escalationCodeVariable) {\n        addVariable(element, escalationCodeVariable);\n      }\n    });\n\n  });\n\n  return processVariables;\n}\n\nvar extractors = [\n  extractOutputParameters,\n  extractResultVariables,\n  extractFormFields,\n  extractOutMappings,\n  extractEventDefinitionVariables\n];\n\n/**\n * @typedef {Object} ProcessVariable\n * @property {string} name\n * @property {Array<ModdleElement>} origin\n * @property {ModdleElement} scope\n */\n\n// api /////////////////////////\n\n/**\n * Retrieves all process variables for a given container element.\n * @param {ModdleElement} containerElement\n *\n * @returns {Array<ProcessVariable>}\n */\nfunction getProcessVariables(containerElement) {\n  var processVariables = [];\n\n  // (1) extract all flow elements inside the container\n  var elements = selfAndAllFlowElements([containerElement], false);\n\n  // (2) extract all variables from the extractors\n  minDash.forEach(extractors, function(extractor) {\n    extractor({\n      elements: elements,\n      containerElement: containerElement,\n      processVariables: processVariables\n    });\n  });\n\n  return processVariables;\n}\n\n/**\n * Retrieves all variables which are available in the given scope\n *\n * * Exclude variables which are only available in other scopes\n * * Exclude variables which are produced by the given element\n * * Include variables which are available in parent scopes\n *\n * @param {string} scope\n * @param {ModdleElement} rootElement element from where to extract all variables\n *\n * @returns {Array<ProcessVariable>}\n */\nfunction getVariablesForScope(scope, rootElement) {\n\n  var allVariables = getProcessVariables(rootElement);\n\n  var scopeElement = getElement(scope, rootElement);\n\n  // (1) get variables for given scope\n  var scopeVariables = minDash.filter(allVariables, function(variable) {\n    return variable.scope.id === scopeElement.id;\n  });\n\n  // (2) get variables for parent scopes\n  var parents = getParents(scopeElement);\n\n  var parentsScopeVariables = minDash.filter(allVariables, function(variable) {\n    return minDash.find(parents, function(parent) {\n      return parent.id === variable.scope.id;\n    });\n  });\n\n  return combineArrays$1(scopeVariables, parentsScopeVariables);\n}\n\n// helpers ////////////////////\n\nfunction combineArrays$1(a, b) {\n  return a.concat(b);\n}\n\nexports.getProcessVariables = getProcessVariables;\nexports.getVariablesForScope = getVariablesForScope;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar minDash = require('min-dash');\n\n/**\n * Get a inputOutput from the business object\n *\n * @param {ModdleElement} element\n *\n * @return {ModdleElement} the inputOutput object\n */\nfunction getInputOutput(element) {\n  return (getElements(element, 'zeebe:IoMapping') || [])[0];\n}\n\n/**\n * Return all input parameters existing in the business object, and\n * an empty array if none exist.\n *\n * @param  {ModdleElement} element\n *\n * @return {Array<ModdleElement>} a list of input parameter objects\n */\nfunction getInputParameters(element) {\n  return getParameters(element, 'inputParameters');\n}\n\n/**\n * Return out mappings existing in the business object\n *\n * @param {ModdleElement} element\n *\n * @return {Array<ModdleElement>}\n */\nfunction getOutMappings(element) {\n  return (getInputOutput(element) || {}).outputParameters;\n}\n\n/**\n * Return out mappings existing in the business object\n *\n * @param {ModdleElement} element\n *\n * @return {Array<ModdleElement>}\n */\nfunction getInMappings(element) {\n  return (getInputOutput(element) || {}).inputParameters;\n}\n\n/**\n * Get the inputElement name from a loopCharacteristics\n *\n * @param {MoodleElement} loopCharacteristics\n * @returns {String} outputCollection\n */\nfunction getInputElement(loopCharacteristics) {\n  const extensionElement = getElements(loopCharacteristics, 'zeebe:LoopCharacteristics')[0];\n  return extensionElement && extensionElement.inputElement;\n}\n\n/**\n * Get the outputCollection name from a loopCharacteristics\n *\n * @param {MoodleElement} loopCharacteristics\n * @returns {String} outputCollection\n */\nfunction getOutputCollection(loopCharacteristics) {\n  const extensionElement = getElements(loopCharacteristics, 'zeebe:LoopCharacteristics')[0];\n  return extensionElement && extensionElement.outputCollection;\n\n}\n\n/**\n * Get a calledDecision from the business object\n *\n * @param {MoodleElement} element\n * @returns {MoodleElement} the calledDecision object\n */\nfunction getCalledDecision(element) {\n  return (getElements(element, 'zeebe:CalledDecision') || [])[0];\n}\n\n\n// helpers //////////\n\nfunction getElements(element, type, property) {\n  var elements = getExtensionElements(element, type);\n\n  return !property ? elements : (elements[0] || {})[property] || [];\n}\n\nfunction getParameters(element, property) {\n  var inputOutput = getInputOutput(element);\n\n  return (inputOutput && inputOutput.get(property)) || [];\n}\n\nfunction getExtensionElements(element, type) {\n  var elements = [];\n  var extensionElements = element.get('extensionElements');\n\n  if (typeof extensionElements !== 'undefined') {\n    var extensionValues = extensionElements.get('values');\n\n    if (typeof extensionValues !== 'undefined') {\n      elements = minDash.filter(extensionValues, function(value) {\n        return is(value, type);\n      });\n    }\n  }\n\n  return elements;\n}\n\nfunction is(element, type) {\n  return (\n    element &&\n    typeof element.$instanceOf === 'function' &&\n    element.$instanceOf(type)\n  );\n}\n\n/**\n * Get all parent elements for a given element.\n *\n * @param {ModdleElement|string} element\n *\n * @returns {Array<ModdleElement>}\n */\nfunction getParents(element) {\n  var parents = [];\n  var current = element;\n\n  while (current.$parent) {\n    parents.push(current.$parent);\n    current = current.$parent;\n  }\n\n  return parents;\n}\n\n/**\n * Iterate over each element in a collection, calling the iterator function `fn`\n * with (element, index, recursionDepth).\n *\n * Recurse into all elements that are returned by `fn`.\n *\n * @param  {Object|Array<Object>} elements\n * @param  {Function} fn iterator function called with (element, index, recursionDepth)\n * @param  {number} [depth] maximum recursion depth\n */\nfunction eachElement(elements, fn, depth) {\n  depth = depth || 0;\n\n  if (!minDash.isArray(elements)) {\n    elements = [elements];\n  }\n\n  minDash.forEach(elements, function(s, i) {\n    var filter = fn(s, i, depth);\n\n    if (minDash.isArray(filter) && filter.length) {\n      eachElement(filter, fn, depth + 1);\n    }\n  });\n}\n\n/**\n * Adds an element to a collection and returns true if the\n * element was added.\n *\n * @param {Array<Object>} elements\n * @param {Object} e\n * @param {boolean} unique\n */\nfunction add(elements, e, unique) {\n  var canAdd = !unique || elements.indexOf(e) === -1;\n\n  if (canAdd) {\n    elements.push(e);\n  }\n\n  return canAdd;\n}\n\n/**\n * Collects self + flow elements up to a given depth from a list of elements.\n *\n * @param  {ModdleElement|Array<ModdleElement>} elements the elements to select the flowElements from\n * @param  {boolean} unique whether to return a unique result set (no duplicates)\n * @param  {number} maxDepth the depth to search through or -1 for infinite\n *\n * @return {Array<ModdleElement>} found elements\n */\nfunction selfAndFlowElements(elements, unique, maxDepth) {\n  var result = [],\n      processedFlowElements = [];\n\n  eachElement(elements, function(element, i, depth) {\n    add(result, element, unique);\n\n    var flowElements = element.flowElements;\n\n    // max traversal depth not reached yet\n    if (maxDepth === -1 || depth < maxDepth) {\n\n      // flowElements exist && flowElements not yet processed\n      if (flowElements && add(processedFlowElements, flowElements, unique)) {\n        return flowElements;\n      }\n    }\n  });\n\n  return result;\n}\n\n/**\n * Return self + ALL flowElements for a number of elements\n *\n * @param  {Array<ModdleElement>} elements to query\n * @param  {boolean} allowDuplicates to allow duplicates in the result set\n *\n * @return {Array<ModdleElement>} the collected elements\n */\nfunction selfAndAllFlowElements(elements, allowDuplicates) {\n  return selfAndFlowElements(elements, !allowDuplicates, -1);\n}\n\n/**\n * Return full moddle element for given element id\n *\n * @param {string} elementId\n * @param {ModdleElement} rootElement\n *\n * @returns {ModdleElement}\n */\nfunction getElement(elementId, rootElement) {\n  var allElements = selfAndAllFlowElements(rootElement);\n\n  return minDash.find(allElements, function(element) {\n    return element.id === elementId;\n  });\n}\n\nfunction addVariableToList(variablesList, newVariable) {\n  var foundIdx = minDash.findIndex(variablesList, function(variable) {\n    return (\n      variable.name === newVariable.name && variable.scope === newVariable.scope\n    );\n  });\n\n  if (foundIdx >= 0) {\n    variablesList[foundIdx].origin = combineArrays(\n      variablesList[foundIdx].origin,\n      newVariable.origin\n    );\n  } else {\n    variablesList.push(newVariable);\n  }\n}\n\n/**\n * Creates new process variable definition object\n * Identifies correct (highest) scope, in which variable is available\n *\n * @param {ModdleElement} flowElement\n * @param {String} name\n * @param {ModdleElement} defaultScope\n *\n * @returns {ProcessVariable}\n */\nfunction createProcessVariable(flowElement, name, defaultScope) {\n  var scope = getScope(flowElement, defaultScope, name);\n\n  return {\n    name: name,\n    origin: [flowElement],\n    scope: scope\n  };\n}\n\n\n// helpers ////////////////////\n\n/**\n * Set parent container if it defines it's own scope for the variable, so\n * when it defines an input mapping for it. Otherwise returns the default global scope\n */\nfunction getScope(element, globalScope, variableName) {\n  var parents = getParents(element);\n\n  var scopedParent = minDash.find(parents, function(parent) {\n    return (\n      is$1(parent, 'bpmn:SubProcess') && hasInputParameter(parent, variableName)\n    );\n  });\n\n  return scopedParent ? scopedParent : globalScope;\n}\n\nfunction is$1(element, type) {\n  return (\n    element &&\n      typeof element.$instanceOf === 'function' &&\n      element.$instanceOf(type)\n  );\n}\n\nfunction hasInputParameter(element, name) {\n  return minDash.find(getInputParameters(element), function(input) {\n    return input.target === name;\n  });\n}\n\nfunction combineArrays(a, b) {\n  return a.concat(b);\n}\n\n/**\n * Retrieves process variables defined in output mappings, e.g.\n *\n * <bpmn:serviceTask id=\"ServiceTask\">\n *   <bpmn:extensionElements>\n *     <zeebe:ioMapping>\n *       <zeebe:input source=\"= source\" target=\"variable1\" />\n *     </zeebe:ioMapping>\n *   </bpmn:extensionElements>\n * </bpmn:serviceTask>\n *\n * => Adds one variable \"variable1\" to the list.\n *\n */\nfunction extractInMappings(options) {\n  var elements = options.elements,\n      processVariables = options.processVariables;\n\n  if (!minDash.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  minDash.forEach(elements, function(element) {\n\n    var inMappings = getInMappings(element);\n\n    // extract all variables with correct scope\n    minDash.forEach(inMappings, function(mapping) {\n\n      var newVariable = createProcessVariable(\n        element,\n        mapping.target,\n        element\n      );\n\n      addVariableToList(processVariables, newVariable);\n    });\n  });\n\n  return processVariables;\n}\n\n/**\n * Retrieves process variables defined in result variables, e.g.\n *\n * <bpmn:serviceTask id=\"ServiceTask\">\n *   <bpmn:multiInstanceLoopCharacteristics>\n *     <bpmn:extensionElements>\n *       <zeebe:loopCharacteristics inputElement=\"inputElement\" outputCollection=\"outputCollection\" />\n *     </bpmn:extensionElements>\n *   </bpmn:multiInstanceLoopCharacteristics>\n * </bpmn:serviceTask>\n *\n * => Adds one variable \"inputElement\"to the list.\n *\n */\nfunction extractInputElement(options) {\n  var elements = options.elements,\n      processVariables = options.processVariables;\n\n  if (!minDash.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  minDash.forEach(elements, function(element) {\n\n    var loopCharacteristics = element.loopCharacteristics;\n\n    var inputElement = loopCharacteristics && getInputElement(loopCharacteristics);\n\n    if (inputElement) {\n      var newVariable = createProcessVariable(\n        element,\n        inputElement,\n        element\n      );\n\n      addVariableToList(processVariables, newVariable);\n    }\n  });\n\n  return processVariables;\n}\n\n/**\n * Retrieves process variables defined in output mappings, e.g.\n *\n * <bpmn:serviceTask id=\"ServiceTask\">\n *   <bpmn:extensionElements>\n *     <zeebe:ioMapping>\n *       <zeebe:output source=\"= source\" target=\"variable1\" />\n *     </zeebe:ioMapping>\n *   </bpmn:extensionElements>\n * </bpmn:serviceTask>\n *\n * => Adds one variable \"variable1\" to the list.\n *\n */\nfunction extractOutMappings(options) {\n  var elements = options.elements,\n      containerElement = options.containerElement,\n      processVariables = options.processVariables;\n\n  if (!minDash.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  minDash.forEach(elements, function(element) {\n\n    var outMappings = getOutMappings(element);\n\n    // extract all variables with correct scope\n    minDash.forEach(outMappings, function(mapping) {\n      var newVariable = createProcessVariable(\n        element,\n        mapping.target,\n        containerElement\n      );\n\n      addVariableToList(processVariables, newVariable);\n    });\n  });\n\n  return processVariables;\n}\n\n/**\n * Retrieves process variables defined in output collection, e.g.\n *\n * <bpmn:serviceTask id=\"ServiceTask\">\n *   <bpmn:multiInstanceLoopCharacteristics>\n *     <bpmn:extensionElements>\n *       <zeebe:loopCharacteristics inputElement=\"inputElement\" outputCollection=\"outputCollection\" />\n *     </bpmn:extensionElements>\n *   </bpmn:multiInstanceLoopCharacteristics>\n * </bpmn:serviceTask>\n *\n * => Adds one variable \"outputCollection\"to the list.\n *\n */\nfunction extractOutputCollections(options) {\n  var elements = options.elements,\n      containerElement = options.containerElement,\n      processVariables = options.processVariables;\n\n  if (!minDash.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  minDash.forEach(elements, function(element) {\n\n    var loopCharacteristics = element.loopCharacteristics;\n\n    var outputCollection = loopCharacteristics && getOutputCollection(loopCharacteristics);\n\n    if (outputCollection) {\n      var newVariable = createProcessVariable(\n        element,\n        outputCollection,\n        containerElement\n      );\n\n      addVariableToList(processVariables, newVariable);\n    }\n  });\n\n  return processVariables;\n}\n\n/**\n * Retrieves process variables defined in result variables, e.g.\n *\n *   <bpmn:businessRuleTask id=\"Activity_1\">\n *     <bpmn:extensionElements>\n *       <zeebe:calledDecision resultVariable=\"variable1\" />\n *     </bpmn:extensionElements>\n *   </bpmn:businessRuleTask>\n *\n *\n * => Adds one variable \"variable1\"to the list.\n *\n */\nfunction extractResultVariables(options) {\n  var elements = options.elements,\n      containerElement = options.containerElement,\n      processVariables = options.processVariables;\n\n  if (!minDash.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  minDash.forEach(elements, function(element) {\n\n    var calledDecision = getCalledDecision(element);\n\n    if (!calledDecision) {\n      return;\n    }\n\n    var resultVariable = calledDecision.resultVariable;\n\n    if (resultVariable) {\n      var newVariable = createProcessVariable(\n        element,\n        resultVariable,\n        containerElement\n      );\n\n      addVariableToList(processVariables, newVariable);\n    }\n  });\n\n  return processVariables;\n}\n\nvar extractors = [\n  extractInMappings,\n  extractInputElement,\n  extractOutMappings,\n  extractOutputCollections,\n  extractResultVariables\n];\n\n/**\n * @typedef {Object} ProcessVariable\n * @property {string} name\n * @property {Array<ModdleElement>} origin\n * @property {ModdleElement} scope\n */\n\n// api /////////////////////////\n\n/**\n * Retrieves all process variables for a given container element.\n * @param {ModdleElement} containerElement\n *\n * @returns {Array<ProcessVariable>}\n */\nfunction getProcessVariables(containerElement) {\n  var processVariables = [];\n\n  // (1) extract all flow elements inside the container\n  var elements = selfAndAllFlowElements([containerElement], false);\n\n  // (2) extract all variables from the extractors\n  minDash.forEach(extractors, function(extractor) {\n    extractor({\n      elements: elements,\n      containerElement: containerElement,\n      processVariables: processVariables\n    });\n  });\n\n  return processVariables;\n}\n\n/**\n * Retrieves all variables which are available in the given scope\n *\n * * Exclude variables which are only available in other scopes\n * * Exclude variables which are produced by the given element\n * * Include variables which are available in parent scopes\n *\n * @param {string} scope\n * @param {ModdleElement} rootElement element from where to extract all variables\n *\n * @returns {Array<ProcessVariable>}\n */\nfunction getVariablesForScope(scope, rootElement) {\n\n  var allVariables = getProcessVariables(rootElement);\n\n  var scopeElement = getElement(scope, rootElement);\n\n  // (1) get variables for given scope\n  var scopeVariables = minDash.filter(allVariables, function(variable) {\n    return variable.scope.id === scopeElement.id;\n  });\n\n  // (2) get variables for parent scopes\n  var parents = getParents(scopeElement);\n\n  var parentsScopeVariables = minDash.filter(allVariables, function(variable) {\n    return minDash.find(parents, function(parent) {\n      return parent.id === variable.scope.id;\n    });\n  });\n\n  return combineArrays$1(scopeVariables, parentsScopeVariables);\n}\n\n\nfunction getVariablesForElement(element) {\n  return getVariablesForScope(getScope$1(element), getRootElement(element));\n}\n\nfunction getScope$1(element) {\n  const bo = getBusinessObject(element);\n\n  if (is$2(element, 'bpmn:Participant')) {\n    return bo.processRef.id;\n  }\n\n  return bo.id;\n}\n\nfunction getRootElement(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (is$2(businessObject, 'bpmn:Participant')) {\n    return businessObject.processRef;\n  }\n\n  if (is$2(businessObject, 'bpmn:Process')) {\n    return businessObject;\n  }\n\n  let parent = businessObject;\n\n  while (parent.$parent && !is$2(parent, 'bpmn:Process')) {\n    parent = parent.$parent;\n  }\n\n  return parent;\n}\n\n\n// helpers ////////////////////\n\nfunction combineArrays$1(a, b) {\n  return a.concat(b);\n}\n\n\nfunction getBusinessObject(element) {\n  return (element && element.businessObject) || element;\n}\n\n\nfunction is$2(element, type) {\n  var bo = getBusinessObject(element);\n\n  return bo && (typeof bo.$instanceOf === 'function') && bo.$instanceOf(type);\n}\n\nexports.getProcessVariables = getProcessVariables;\nexports.getVariablesForElement = getVariablesForElement;\nexports.getVariablesForScope = getVariablesForScope;\n","import { useContext, useRef, useEffect, useMemo, useState, useCallback } from '../preact/hooks';\nimport { isFunction, isArray, get, assign, set, sortBy, find as find$1, isNumber, debounce } from 'min-dash';\nimport classnames from 'classnames';\nimport { forwardRef } from '../preact/compat';\nimport { jsx, jsxs } from '../preact/jsx-runtime';\nimport { query } from 'min-dom';\nimport { createContext, createElement } from '../preact';\n\nvar ArrowIcon = function ArrowIcon(props) {\n  return jsx(\"svg\", { ...props,\n    children: jsx(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"m11.657 8-4.95 4.95a1 1 0 0 1-1.414-1.414L8.828 8 5.293 4.464A1 1 0 1 1 6.707 3.05L11.657 8z\"\n    })\n  });\n};\n\nArrowIcon.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"16\",\n  height: \"16\"\n};\n\nvar CreateIcon = function CreateIcon(props) {\n  return jsx(\"svg\", { ...props,\n    children: jsx(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M9 13V9h4a1 1 0 0 0 0-2H9V3a1 1 0 1 0-2 0v4H3a1 1 0 1 0 0 2h4v4a1 1 0 0 0 2 0z\"\n    })\n  });\n};\n\nCreateIcon.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"16\",\n  height: \"16\"\n};\n\nvar DeleteIcon = function DeleteIcon(props) {\n  return jsx(\"svg\", { ...props,\n    children: jsx(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M12 6v7c0 1.1-.4 1.55-1.5 1.55h-5C4.4 14.55 4 14.1 4 13V6h8zm-1.5 1.5h-5v4.3c0 .66.5 1.2 1.111 1.2H9.39c.611 0 1.111-.54 1.111-1.2V7.5zM13 3h-2l-1-1H6L5 3H3v1.5h10V3z\"\n    })\n  });\n};\n\nDeleteIcon.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"16\",\n  height: \"16\"\n};\n\nvar ExternalLinkIcon = function ExternalLinkIcon(props) {\n  return jsx(\"svg\", { ...props,\n    children: jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M12.637 12.637v-4.72h1.362v4.721c0 .36-.137.676-.411.95-.275.275-.591.412-.95.412H3.362c-.38 0-.703-.132-.967-.396A1.315 1.315 0 0 1 2 12.638V3.362c0-.38.132-.703.396-.967S2.982 2 3.363 2h4.553v1.363H3.363v9.274h9.274zM14 2H9.28l-.001 1.362h2.408L5.065 9.984l.95.95 6.622-6.622v2.409H14V2z\",\n      fill: \"#818798\"\n    })\n  });\n};\n\nExternalLinkIcon.defaultProps = {\n  width: \"16\",\n  height: \"16\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\n\nvar FeelRequiredIcon = function FeelRequiredIcon(props) {\n  return jsxs(\"svg\", { ...props,\n    children: [jsx(\"path\", {\n      d: \"M5.8 7.06V5.95h4.307v1.11H5.8zm0 3.071v-1.11h4.307v1.11H5.8z\",\n      fill: \"currentColor\"\n    }), jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M8 3.268A4.732 4.732 0 1 0 12.732 8H14a6 6 0 1 1-6-6v1.268z\",\n      fill: \"currentColor\"\n    }), jsx(\"path\", {\n      d: \"m11.28 6.072-.832-.56 1.016-1.224L10 3.848l.312-.912 1.392.584L11.632 2h1.032l-.072 1.52 1.392-.584.312.912-1.464.44 1.008 1.224-.832.552-.864-1.296-.864 1.304z\",\n      fill: \"currentColor\"\n    })]\n  });\n};\n\nFeelRequiredIcon.defaultProps = {\n  viewBox: \"0 0 16 16\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\n\nvar FeelOptionalIcon = function FeelOptionalIcon(props) {\n  return jsxs(\"svg\", { ...props,\n    children: [jsx(\"path\", {\n      d: \"M5.845 7.04V5.93h4.307v1.11H5.845zm0 3.07V9h4.307v1.11H5.845z\",\n      fill: \"currentColor\"\n    }), jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M3.286 8a4.714 4.714 0 1 0 9.428 0 4.714 4.714 0 0 0-9.428 0zM8 2a6 6 0 1 0 0 12A6 6 0 0 0 8 2z\",\n      fill: \"currentColor\"\n    })]\n  });\n};\n\nFeelOptionalIcon.defaultProps = {\n  viewBox: \"0 0 16 16\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\n\nfunction Header(props) {\n  const {\n    element,\n    headerProvider\n  } = props;\n  const {\n    getElementIcon,\n    getDocumentationRef,\n    getElementLabel,\n    getTypeLabel\n  } = headerProvider;\n  const label = getElementLabel(element);\n  const type = getTypeLabel(element);\n  const documentationRef = getDocumentationRef && getDocumentationRef(element);\n  const ElementIcon = getElementIcon(element);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-header\",\n    children: [jsx(\"div\", {\n      class: \"bio-properties-panel-header-icon\",\n      children: ElementIcon && jsx(ElementIcon, {\n        width: \"32\",\n        height: \"32\",\n        viewBox: \"0 0 32 32\"\n      })\n    }), jsxs(\"div\", {\n      class: \"bio-properties-panel-header-labels\",\n      children: [jsx(\"div\", {\n        title: type,\n        class: \"bio-properties-panel-header-type\",\n        children: type\n      }), label ? jsx(\"div\", {\n        title: label,\n        class: \"bio-properties-panel-header-label\",\n        children: label\n      }) : null]\n    }), jsx(\"div\", {\n      class: \"bio-properties-panel-header-actions\",\n      children: documentationRef ? jsx(\"a\", {\n        rel: \"noopener\",\n        class: \"bio-properties-panel-header-link\",\n        href: documentationRef,\n        title: \"Open documentation\",\n        target: \"_blank\",\n        children: jsx(ExternalLinkIcon, {})\n      }) : null\n    })]\n  });\n}\n\nconst DescriptionContext = createContext({\n  description: {},\n  getDescriptionForId: () => {}\n});\n\nconst ErrorsContext = createContext({\n  errors: {}\n});\n\n/**\n * @typedef {Function} <propertiesPanel.showEntry> callback\n *\n * @example\n *\n * useEvent('propertiesPanel.showEntry', ({ focus = false, ...rest }) => {\n *   // ...\n * });\n *\n * @param {Object} context\n * @param {boolean} [context.focus]\n *\n * @returns void\n */\nconst EventContext = createContext({\n  eventBus: null\n});\n\nconst LayoutContext = createContext({\n  layout: {},\n  setLayout: () => {},\n  getLayoutForKey: () => {},\n  setLayoutForKey: () => {}\n});\n\n/**\n * Accesses the global DescriptionContext and returns a description for a given id and element.\n *\n * @example\n * ```jsx\n * function TextField(props) {\n *   const description = useDescriptionContext('input1', element);\n * }\n * ```\n *\n * @param {string} id\n * @param {object} element\n *\n * @returns {string}\n */\n\nfunction useDescriptionContext(id, element) {\n  const {\n    getDescriptionForId\n  } = useContext(DescriptionContext);\n  return getDescriptionForId(id, element);\n}\n\nfunction useError(id) {\n  const {\n    errors\n  } = useContext(ErrorsContext);\n  return errors[id];\n}\n\n/**\n * Subscribe to an event immediately. Update subscription after inputs changed.\n *\n * @param {string} event\n * @param {Function} callback\n */\n\nfunction useEvent(event, callback, eventBus) {\n  const eventContext = useContext(EventContext);\n\n  if (!eventBus) {\n    ({\n      eventBus\n    } = eventContext);\n  }\n\n  const didMount = useRef(false); // (1) subscribe immediately\n\n  if (eventBus && !didMount.current) {\n    eventBus.on(event, callback);\n  } // (2) update subscription after inputs changed\n\n\n  useEffect(() => {\n    if (eventBus && didMount.current) {\n      eventBus.on(event, callback);\n    }\n\n    didMount.current = true;\n    return () => {\n      if (eventBus) {\n        eventBus.off(event, callback);\n      }\n    };\n  }, [callback, event, eventBus]);\n}\n\nconst HIGH_PRIORITY = 10000;\n/**\n * Buffer events and re-fire during passive effect phase.\n *\n * @param {string[]} bufferedEvents\n * @param {Object} [eventBus]\n */\n\nfunction useEventBuffer(bufferedEvents, eventBus) {\n  const buffer = useRef([]),\n        buffering = useRef(true);\n\n  const createCallback = event => data => {\n    if (buffering.current === true) {\n      buffer.current.unshift([event, data]);\n    }\n  }; // (1) buffer events\n\n\n  useEffect(() => {\n    if (!eventBus) {\n      return;\n    }\n\n    const listeners = bufferedEvents.map(event => {\n      return [event, createCallback(event)];\n    });\n    listeners.forEach(([event, callback]) => {\n      eventBus.on(event, HIGH_PRIORITY, callback);\n    });\n    return () => {\n      listeners.forEach(([event, callback]) => {\n        eventBus.off(event, callback);\n      });\n    };\n  }, [bufferedEvents, eventBus]); // (2) re-fire events\n\n  useEffect(() => {\n    if (!eventBus) {\n      return;\n    }\n\n    buffering.current = false;\n\n    while (buffer.current.length) {\n      const [event, data] = buffer.current.pop();\n      eventBus.fire(event, data);\n    }\n\n    buffering.current = true;\n  });\n}\n\nconst KEY_LENGTH = 6;\n/**\n * Create a persistent key factory for plain objects without id.\n *\n * @example\n * ```jsx\n * function List({ objects }) {\n *   const getKey = useKeyFactory();\n *   return (<ol>{\n *     objects.map(obj => {\n *       const key = getKey(obj);\n *       return <li key={key}>obj.name</li>\n *     })\n *   }</ol>);\n * }\n * ```\n *\n * @param {any[]} dependencies\n * @returns {(element: object) => string}\n */\n\nfunction useKeyFactory(dependencies = []) {\n  const map = useMemo(() => new Map(), dependencies);\n\n  const getKey = el => {\n    let key = map.get(el);\n\n    if (!key) {\n      key = Math.random().toString().slice(-KEY_LENGTH);\n      map.set(el, key);\n    }\n\n    return key;\n  };\n\n  return getKey;\n}\n\n/**\n * Creates a state that persists in the global LayoutContext.\n *\n * @example\n * ```jsx\n * function Group(props) {\n *   const [ open, setOpen ] = useLayoutState([ 'groups', 'foo', 'open' ], false);\n * }\n * ```\n *\n * @param {(string|number)[]} path\n * @param {any} [defaultValue]\n *\n * @returns {[ any, Function ]}\n */\n\nfunction useLayoutState(path, defaultValue) {\n  const {\n    getLayoutForKey,\n    setLayoutForKey\n  } = useContext(LayoutContext);\n  const layoutForKey = getLayoutForKey(path, defaultValue);\n  const [value, set] = useState(layoutForKey);\n\n  const setState = newValue => {\n    // (1) set component state\n    set(newValue); // (2) set context\n\n    setLayoutForKey(path, newValue);\n  };\n\n  return [value, setState];\n}\n\n/**\n * @pinussilvestrus: we need to introduce our own hook to persist the previous\n * state on updates.\n *\n * cf. https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n/**\n * Subscribe to `propertiesPanel.showEntry`.\n *\n * @param {string} id\n *\n * @returns {import('preact').Ref}\n */\n\nfunction useShowEntryEvent(id) {\n  const {\n    onShow\n  } = useContext(LayoutContext);\n  const ref = useRef();\n  const focus = useRef(false);\n  const onShowEntry = useCallback(event => {\n    if (event.id === id) {\n      onShow();\n\n      if (!focus.current) {\n        focus.current = true;\n      }\n    }\n  }, [id]);\n  useEffect(() => {\n    if (focus.current && ref.current) {\n      if (isFunction(ref.current.focus)) {\n        ref.current.focus();\n      }\n\n      if (isFunction(ref.current.select)) {\n        ref.current.select();\n      }\n\n      focus.current = false;\n    }\n  });\n  useEvent('propertiesPanel.showEntry', onShowEntry);\n  return ref;\n}\n\n/**\n * @callback setSticky\n * @param {boolean} value\n */\n\n/**\n * Use IntersectionObserver to identify when DOM element is in sticky mode.\n * If sticky is observered setSticky(true) will be called.\n * If sticky mode is left, setSticky(false) will be called.\n *\n *\n * @param {Object} ref\n * @param {string} scrollContainerSelector\n * @param {setSticky} setSticky\n */\n\nfunction useStickyIntersectionObserver(ref, scrollContainerSelector, setSticky) {\n  useEffect(() => {\n    const Observer = IntersectionObserver; // return early if IntersectionObserver is not available\n\n    if (!Observer) {\n      return;\n    }\n\n    let observer;\n\n    if (ref.current) {\n      const scrollContainer = query(scrollContainerSelector);\n      observer = new Observer(entries => {\n        entries.forEach(entry => {\n          if (entry.intersectionRatio < 1) {\n            setSticky(true);\n          } else if (entry.intersectionRatio === 1) {\n            setSticky(false);\n          }\n        });\n      }, {\n        root: scrollContainer,\n        rootMargin: '0px 0px 999999% 0px',\n        // Use bottom margin to avoid stickyness when scrolling out to bottom\n        threshold: [1]\n      });\n      observer.observe(ref.current);\n    } // Unobserve if unmounted\n\n\n    return () => {\n      if (ref.current && observer) {\n        observer.unobserve(ref.current);\n      }\n    };\n  }, [ref, scrollContainerSelector, setSticky]);\n}\n\n/**\n * Creates a static function reference with changing body.\n * This is necessary when external libraries require a callback function\n * that has references to state variables.\n *\n * Usage:\n * const callback = useStaticCallback((val) => {val === currentState});\n *\n * The `callback` reference is static and can be safely used in external\n * libraries or as a prop that does not cause rerendering of children.\n *\n * @param {Function} callback function with changing reference\n * @returns {Function} static function reference\n */\n\nfunction useStaticCallback(callback) {\n  const callbackRef = useRef(callback);\n  callbackRef.current = callback;\n  return useCallback((...args) => callbackRef.current(...args), []);\n}\n\nfunction Group(props) {\n  const {\n    element,\n    entries = [],\n    id,\n    label,\n    shouldOpen = false\n  } = props;\n  const groupRef = useRef(null);\n  const [open, setOpen] = useLayoutState(['groups', id, 'open'], shouldOpen);\n  const onShow = useCallback(() => setOpen(true), [setOpen]);\n\n  const toggleOpen = () => setOpen(!open);\n\n  const [edited, setEdited] = useState(false);\n  const [sticky, setSticky] = useState(false); // set edited state depending on all entries\n\n  useEffect(() => {\n    const hasOneEditedEntry = entries.find(entry => {\n      const {\n        id,\n        isEdited\n      } = entry;\n      const entryNode = query(`[data-entry-id=\"${id}\"]`);\n\n      if (!isFunction(isEdited) || !entryNode) {\n        return false;\n      }\n\n      const inputNode = query('.bio-properties-panel-input', entryNode);\n      return isEdited(inputNode);\n    });\n    setEdited(hasOneEditedEntry);\n  }, [entries]); // set css class when group is sticky to top\n\n  useStickyIntersectionObserver(groupRef, 'div.bio-properties-panel-scroll-container', setSticky);\n  const propertiesPanelContext = { ...useContext(LayoutContext),\n    onShow\n  };\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-group\",\n    \"data-group-id\": 'group-' + id,\n    ref: groupRef,\n    children: [jsxs(\"div\", {\n      class: classnames('bio-properties-panel-group-header', edited ? '' : 'empty', open ? 'open' : '', sticky && open ? 'sticky' : ''),\n      onClick: toggleOpen,\n      children: [jsx(\"div\", {\n        title: label,\n        class: \"bio-properties-panel-group-header-title\",\n        children: label\n      }), jsxs(\"div\", {\n        class: \"bio-properties-panel-group-header-buttons\",\n        children: [edited && jsx(DataMarker, {}), jsx(\"button\", {\n          title: \"Toggle section\",\n          class: \"bio-properties-panel-group-header-button bio-properties-panel-arrow\",\n          children: jsx(ArrowIcon, {\n            class: open ? 'bio-properties-panel-arrow-down' : 'bio-properties-panel-arrow-right'\n          })\n        })]\n      })]\n    }), jsx(\"div\", {\n      class: classnames('bio-properties-panel-group-entries', open ? 'open' : ''),\n      children: jsx(LayoutContext.Provider, {\n        value: propertiesPanelContext,\n        children: entries.map(entry => {\n          const {\n            component: Component,\n            id\n          } = entry;\n          return createElement(Component, { ...entry,\n            element: element,\n            key: id\n          });\n        })\n      })\n    })]\n  });\n}\n\nfunction DataMarker() {\n  return jsx(\"div\", {\n    title: \"Section contains data\",\n    class: \"bio-properties-panel-dot\"\n  });\n}\n\n/**\n * @typedef { {\n *  text: (element: object) => string,\n *  icon?: (element: Object) => import('preact').Component\n * } } PlaceholderDefinition\n *\n * @param { PlaceholderDefinition } props\n */\nfunction Placeholder(props) {\n  const {\n    text,\n    icon: Icon\n  } = props;\n  return jsx(\"div\", {\n    class: \"bio-properties-panel open\",\n    children: jsxs(\"section\", {\n      class: \"bio-properties-panel-placeholder\",\n      children: [Icon && jsx(Icon, {\n        class: \"bio-properties-panel-placeholder-icon\"\n      }), jsx(\"p\", {\n        class: \"bio-properties-panel-placeholder-text\",\n        children: text\n      })]\n    })\n  });\n}\n\nconst DEFAULT_LAYOUT = {\n  open: true\n};\nconst DEFAULT_DESCRIPTION = {};\nconst bufferedEvents = ['propertiesPanel.showEntry', 'propertiesPanel.setErrors'];\n/**\n * @typedef { {\n *    component: import('preact').Component,\n *    id: String,\n *    isEdited?: Function\n * } } EntryDefinition\n *\n * @typedef { {\n *    autoFocusEntry: String,\n *    autoOpen?: Boolean,\n *    entries: Array<EntryDefinition>,\n *    id: String,\n *    label: String,\n *    remove: (event: MouseEvent) => void\n * } } ListItemDefinition\n *\n * @typedef { {\n *    add: (event: MouseEvent) => void,\n *    component: import('preact').Component,\n *    element: Object,\n *    id: String,\n *    items: Array<ListItemDefinition>,\n *    label: String,\n *    shouldSort?: Boolean,\n *    shouldOpen?: Boolean\n * } } ListGroupDefinition\n *\n * @typedef { {\n *    component?: import('preact').Component,\n *    entries: Array<EntryDefinition>,\n *    id: String,\n *    label: String,\n *    shouldOpen?: Boolean\n * } } GroupDefinition\n *\n *  @typedef { {\n *    [id: String]: GetDescriptionFunction\n * } } DescriptionConfig\n *\n * @callback { {\n * @param {string} id\n * @param {Object} element\n * @returns {string}\n * } } GetDescriptionFunction\n *\n * @typedef { {\n *  getEmpty: (element: object) => import('./components/Placeholder').PlaceholderDefinition,\n *  getMultiple: (element: Object) => import('./components/Placeholder').PlaceholderDefinition\n * } } PlaceholderProvider\n *\n */\n\n/**\n * A basic properties panel component. Describes *how* content will be rendered, accepts\n * data from implementor to describe *what* will be rendered.\n *\n * @param {Object} props\n * @param {Object|Array} props.element\n * @param {import('./components/Header').HeaderProvider} props.headerProvider\n * @param {PlaceholderProvider} [props.placeholderProvider]\n * @param {Array<GroupDefinition|ListGroupDefinition>} props.groups\n * @param {Object} [props.layoutConfig]\n * @param {Function} [props.layoutChanged]\n * @param {DescriptionConfig} [props.descriptionConfig]\n * @param {Function} [props.descriptionLoaded]\n * @param {Object} [props.eventBus]\n */\n\nfunction PropertiesPanel(props) {\n  const {\n    element,\n    headerProvider,\n    placeholderProvider,\n    groups,\n    layoutConfig = {},\n    layoutChanged,\n    descriptionConfig = {},\n    descriptionLoaded,\n    eventBus\n  } = props; // set-up layout context\n\n  const [layout, setLayout] = useState(createLayout(layoutConfig));\n  useEffect(() => {\n    if (typeof layoutChanged === 'function') {\n      layoutChanged(layout);\n    }\n  }, [layout, layoutChanged]);\n\n  const getLayoutForKey = (key, defaultValue) => {\n    return get(layout, key, defaultValue);\n  };\n\n  const setLayoutForKey = (key, config) => {\n    const newLayout = assign({}, layout);\n    set(newLayout, key, config);\n    setLayout(newLayout);\n  };\n\n  const layoutContext = {\n    layout,\n    setLayout,\n    getLayoutForKey,\n    setLayoutForKey\n  }; // set-up description context\n\n  const description = createDescriptionContext(descriptionConfig);\n\n  if (typeof descriptionLoaded === 'function') {\n    descriptionLoaded(description);\n  }\n\n  const getDescriptionForId = (id, element) => {\n    return description[id] && description[id](element);\n  };\n\n  const descriptionContext = {\n    description,\n    getDescriptionForId\n  };\n  useEventBuffer(bufferedEvents, eventBus);\n  const [errors, setErrors] = useState({});\n\n  const onSetErrors = ({\n    errors\n  }) => setErrors(errors);\n\n  useEvent('propertiesPanel.setErrors', onSetErrors, eventBus);\n  const errorsContext = {\n    errors\n  };\n  const eventContext = {\n    eventBus\n  };\n  const propertiesPanelContext = {\n    element\n  }; // empty state\n\n  if (placeholderProvider && !element) {\n    return jsx(Placeholder, { ...placeholderProvider.getEmpty()\n    });\n  } // multiple state\n\n\n  if (placeholderProvider && isArray(element)) {\n    return jsx(Placeholder, { ...placeholderProvider.getMultiple()\n    });\n  }\n\n  return jsx(LayoutContext.Provider, {\n    value: propertiesPanelContext,\n    children: jsx(ErrorsContext.Provider, {\n      value: errorsContext,\n      children: jsx(DescriptionContext.Provider, {\n        value: descriptionContext,\n        children: jsx(LayoutContext.Provider, {\n          value: layoutContext,\n          children: jsx(EventContext.Provider, {\n            value: eventContext,\n            children: jsxs(\"div\", {\n              class: classnames('bio-properties-panel', layout.open ? 'open' : ''),\n              children: [jsx(Header, {\n                element: element,\n                headerProvider: headerProvider\n              }), jsx(\"div\", {\n                class: \"bio-properties-panel-scroll-container\",\n                children: groups.map(group => {\n                  const {\n                    component: Component = Group,\n                    id\n                  } = group;\n                  return createElement(Component, { ...group,\n                    key: id,\n                    element: element\n                  });\n                })\n              })]\n            })\n          })\n        })\n      })\n    })\n  });\n} // helpers //////////////////\n\nfunction createLayout(overrides) {\n  return { ...DEFAULT_LAYOUT,\n    ...overrides\n  };\n}\n\nfunction createDescriptionContext(overrides) {\n  return { ...DEFAULT_DESCRIPTION,\n    ...overrides\n  };\n}\n\nfunction DropdownButton(props) {\n  const {\n    class: className,\n    children,\n    menuItems = []\n  } = props;\n  const dropdownRef = useRef(null);\n  const menuRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const close = () => setOpen(false);\n\n  function onDropdownToggle(event) {\n    if (menuRef.current && menuRef.current.contains(event.target)) {\n      return;\n    }\n\n    event.stopPropagation();\n    setOpen(open => !open);\n  }\n\n  function onActionClick(event, action) {\n    event.stopPropagation();\n    close();\n    action();\n  }\n\n  useGlobalClick([dropdownRef.current], () => close());\n  return jsxs(\"div\", {\n    class: classnames('bio-properties-panel-dropdown-button', {\n      open\n    }, className),\n    onClick: onDropdownToggle,\n    ref: dropdownRef,\n    children: [children, jsx(\"div\", {\n      class: \"bio-properties-panel-dropdown-button__menu\",\n      ref: menuRef,\n      children: menuItems.map((item, index) => jsx(MenuItem, {\n        onClick: onActionClick,\n        item: item\n      }, index))\n    })]\n  });\n}\n\nfunction MenuItem({\n  item,\n  onClick\n}) {\n  if (item.separator) {\n    return jsx(\"div\", {\n      class: \"bio-properties-panel-dropdown-button__menu-item bio-properties-panel-dropdown-button__menu-item--separator\"\n    });\n  }\n\n  if (item.action) {\n    return jsx(\"button\", {\n      class: \"bio-properties-panel-dropdown-button__menu-item bio-properties-panel-dropdown-button__menu-item--actionable\",\n      onClick: event => onClick(event, item.action),\n      children: item.entry\n    });\n  }\n\n  return jsx(\"div\", {\n    class: \"bio-properties-panel-dropdown-button__menu-item\",\n    children: item.entry\n  });\n}\n/**\n *\n * @param {Array<null | Element>} ignoredElements\n * @param {Function} callback\n */\n\n\nfunction useGlobalClick(ignoredElements, callback) {\n  useEffect(() => {\n    /**\n     * @param {MouseEvent} event\n     */\n    function listener(event) {\n      if (ignoredElements.some(element => element && element.contains(event.target))) {\n        return;\n      }\n\n      callback();\n    }\n\n    document.addEventListener('click', listener, {\n      capture: true\n    });\n    return () => document.removeEventListener('click', listener, {\n      capture: true\n    });\n  }, [...ignoredElements, callback]);\n}\n\nfunction HeaderButton(props) {\n  const {\n    children = null,\n    class: classname,\n    onClick = () => {},\n    ...otherProps\n  } = props;\n  return jsx(\"button\", { ...otherProps,\n    onClick: onClick,\n    class: classnames('bio-properties-panel-group-header-button', classname),\n    children: children\n  });\n}\n\nfunction CollapsibleEntry(props) {\n  const {\n    element,\n    entries = [],\n    id,\n    label,\n    open: shouldOpen,\n    remove\n  } = props;\n  const [open, setOpen] = useState(shouldOpen);\n\n  const toggleOpen = () => setOpen(!open);\n\n  const {\n    onShow\n  } = useContext(LayoutContext);\n  const propertiesPanelContext = { ...useContext(LayoutContext),\n    onShow: useCallback(() => {\n      setOpen(true);\n\n      if (isFunction(onShow)) {\n        onShow();\n      }\n    }, [onShow, setOpen])\n  }; // todo(pinussilvestrus): translate once we have a translate mechanism for the core\n\n  const placeholderLabel = '<empty>';\n  return jsxs(\"div\", {\n    \"data-entry-id\": id,\n    class: classnames('bio-properties-panel-collapsible-entry', open ? 'open' : ''),\n    children: [jsxs(\"div\", {\n      class: \"bio-properties-panel-collapsible-entry-header\",\n      onClick: toggleOpen,\n      children: [jsx(\"div\", {\n        title: label || placeholderLabel,\n        class: classnames('bio-properties-panel-collapsible-entry-header-title', !label && 'empty'),\n        children: label || placeholderLabel\n      }), jsx(\"button\", {\n        title: \"Toggle list item\",\n        class: \"bio-properties-panel-arrow  bio-properties-panel-collapsible-entry-arrow\",\n        children: jsx(ArrowIcon, {\n          class: open ? 'bio-properties-panel-arrow-down' : 'bio-properties-panel-arrow-right'\n        })\n      }), remove ? jsx(\"button\", {\n        title: \"Delete item\",\n        class: \"bio-properties-panel-remove-entry\",\n        onClick: remove,\n        children: jsx(DeleteIcon, {})\n      }) : null]\n    }), jsx(\"div\", {\n      class: classnames('bio-properties-panel-collapsible-entry-entries', open ? 'open' : ''),\n      children: jsx(LayoutContext.Provider, {\n        value: propertiesPanelContext,\n        children: entries.map(entry => {\n          const {\n            component: Component,\n            id\n          } = entry;\n          return createElement(Component, { ...entry,\n            element: element,\n            key: id\n          });\n        })\n      })\n    })]\n  });\n}\n\nfunction ListItem(props) {\n  const {\n    autoFocusEntry,\n    autoOpen\n  } = props; // focus specified entry on auto open\n\n  useEffect(() => {\n    if (autoOpen && autoFocusEntry) {\n      const entry = query(`[data-entry-id=\"${autoFocusEntry}\"]`);\n      const focusableInput = query('.bio-properties-panel-input', entry);\n\n      if (focusableInput) {\n        if (isFunction(focusableInput.select)) {\n          focusableInput.select();\n        } else if (isFunction(focusableInput.focus)) {\n          focusableInput.focus();\n        }\n      }\n    }\n  }, [autoOpen, autoFocusEntry]);\n  return jsx(\"div\", {\n    class: \"bio-properties-panel-list-item\",\n    children: jsx(CollapsibleEntry, { ...props,\n      open: autoOpen\n    })\n  });\n}\n\nconst noop$2 = () => {};\n/**\n * @param {import('../PropertiesPanel').ListGroupDefinition} props\n */\n\n\nfunction ListGroup(props) {\n  const {\n    add,\n    element,\n    id,\n    items,\n    label,\n    shouldOpen = true,\n    shouldSort = true\n  } = props;\n  const groupRef = useRef(null);\n  const [open, setOpen] = useLayoutState(['groups', id, 'open'], false);\n  const [sticky, setSticky] = useState(false);\n  const onShow = useCallback(() => setOpen(true), [setOpen]);\n  const [ordering, setOrdering] = useState([]);\n  const [newItemAdded, setNewItemAdded] = useState(false);\n  const prevItems = usePrevious(items);\n  const prevElement = usePrevious(element);\n  const elementChanged = element !== prevElement;\n  const shouldHandleEffects = !elementChanged && (shouldSort || shouldOpen); // reset initial ordering when element changes (before first render)\n\n  if (elementChanged) {\n    setOrdering(createOrdering(shouldSort ? sortItems(items) : items));\n  } // keep ordering in sync to items - and open changes\n  // (0) set initial ordering from given items\n\n\n  useEffect(() => {\n    if (!prevItems || !shouldSort) {\n      setOrdering(createOrdering(items));\n    }\n  }, [items, element]); // (1) items were added\n\n  useEffect(() => {\n    if (shouldHandleEffects && prevItems && items.length > prevItems.length) {\n      let add = [];\n      items.forEach(item => {\n        if (!ordering.includes(item.id)) {\n          add.push(item.id);\n        }\n      });\n      let newOrdering = ordering; // open if not open and configured\n\n      if (!open && shouldOpen) {\n        toggleOpen(); // if I opened and I should sort, then sort items\n\n        if (shouldSort) {\n          newOrdering = createOrdering(sortItems(items));\n        }\n      } // add new items on top or bottom depending on sorting behavior\n\n\n      newOrdering = newOrdering.filter(item => !add.includes(item));\n\n      if (shouldSort) {\n        newOrdering.unshift(...add);\n      } else {\n        newOrdering.push(...add);\n      }\n\n      setOrdering(newOrdering);\n      setNewItemAdded(true);\n    } else {\n      setNewItemAdded(false);\n    }\n  }, [items, open, shouldHandleEffects]); // (2) sort items on open if shouldSort is set\n\n  useEffect(() => {\n    if (shouldSort && open && !newItemAdded) {\n      setOrdering(createOrdering(sortItems(items)));\n    }\n  }, [open, shouldSort]); // (3) items were deleted\n\n  useEffect(() => {\n    if (shouldHandleEffects && prevItems && items.length < prevItems.length) {\n      let keep = [];\n      ordering.forEach(o => {\n        if (getItem(items, o)) {\n          keep.push(o);\n        }\n      });\n      setOrdering(keep);\n    }\n  }, [items, shouldHandleEffects]); // set css class when group is sticky to top\n\n  useStickyIntersectionObserver(groupRef, 'div.bio-properties-panel-scroll-container', setSticky);\n\n  const toggleOpen = () => setOpen(!open);\n\n  const hasItems = !!items.length;\n  const propertiesPanelContext = { ...useContext(LayoutContext),\n    onShow\n  };\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-group\",\n    \"data-group-id\": 'group-' + id,\n    ref: groupRef,\n    children: [jsxs(\"div\", {\n      class: classnames('bio-properties-panel-group-header', hasItems ? '' : 'empty', hasItems && open ? 'open' : '', sticky && open ? 'sticky' : ''),\n      onClick: hasItems ? toggleOpen : noop$2,\n      children: [jsx(\"div\", {\n        title: label,\n        class: \"bio-properties-panel-group-header-title\",\n        children: label\n      }), jsxs(\"div\", {\n        class: \"bio-properties-panel-group-header-buttons\",\n        children: [add ? jsxs(\"button\", {\n          title: \"Create new list item\",\n          class: \"bio-properties-panel-group-header-button bio-properties-panel-add-entry\",\n          onClick: add,\n          children: [jsx(CreateIcon, {}), !hasItems ? jsx(\"span\", {\n            class: \"bio-properties-panel-add-entry-label\",\n            children: \"Create\"\n          }) : null]\n        }) : null, hasItems ? jsx(\"div\", {\n          title: `List contains ${items.length} item${items.length != 1 ? 's' : ''}`,\n          class: \"bio-properties-panel-list-badge\",\n          children: items.length\n        }) : null, hasItems ? jsx(\"button\", {\n          title: \"Toggle section\",\n          class: \"bio-properties-panel-group-header-button bio-properties-panel-arrow\",\n          children: jsx(ArrowIcon, {\n            class: open ? 'bio-properties-panel-arrow-down' : 'bio-properties-panel-arrow-right'\n          })\n        }) : null]\n      })]\n    }), jsx(\"div\", {\n      class: classnames('bio-properties-panel-list', open && hasItems ? 'open' : ''),\n      children: jsx(LayoutContext.Provider, {\n        value: propertiesPanelContext,\n        children: ordering.map((o, index) => {\n          const item = getItem(items, o);\n\n          if (!item) {\n            return;\n          }\n\n          const {\n            id\n          } = item; // if item was added, open first or last item based on ordering\n\n          const autoOpen = newItemAdded && (shouldSort ? index === 0 : index === ordering.length - 1);\n          return createElement(ListItem, { ...item,\n            autoOpen: autoOpen,\n            element: element,\n            index: index,\n            key: id\n          });\n        })\n      })\n    })]\n  });\n} // helpers ////////////////////\n\n/**\n * Sorts given items alphanumeric by label\n */\n\nfunction sortItems(items) {\n  return sortBy(items, i => i.label.toLowerCase());\n}\n\nfunction getItem(items, id) {\n  return find$1(items, i => i.id === id);\n}\n\nfunction createOrdering(items) {\n  return items.map(i => i.id);\n}\n\nfunction Description(props) {\n  const {\n    element,\n    forId,\n    value\n  } = props;\n  const contextDescription = useDescriptionContext(forId, element);\n  const description = value || contextDescription;\n\n  if (description) {\n    return jsx(\"div\", {\n      class: \"bio-properties-panel-description\",\n      children: description\n    });\n  }\n}\n\nfunction Checkbox(props) {\n  const {\n    id,\n    label,\n    onChange,\n    disabled,\n    value = false\n  } = props;\n  const [localValue, setLocalValue] = useState(value);\n\n  const handleChangeCallback = ({\n    target\n  }) => {\n    onChange(target.checked);\n  };\n\n  const handleChange = e => {\n    handleChangeCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [value]);\n  const ref = useShowEntryEvent(id);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-checkbox\",\n    children: [jsx(\"input\", {\n      ref: ref,\n      id: prefixId$7(id),\n      name: id,\n      type: \"checkbox\",\n      class: \"bio-properties-panel-input\",\n      onChange: handleChange,\n      checked: localValue,\n      disabled: disabled\n    }), jsx(\"label\", {\n      for: prefixId$7(id),\n      class: \"bio-properties-panel-label\",\n      children: label\n    })]\n  });\n}\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.id\n * @param {String} props.description\n * @param {String} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {boolean} [props.disabled]\n */\n\n\nfunction CheckboxEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    label,\n    getValue,\n    setValue,\n    disabled\n  } = props;\n  const value = getValue(element);\n  const error = useError(id);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-entry bio-properties-panel-checkbox-entry\",\n    \"data-entry-id\": id,\n    children: [jsx(Checkbox, {\n      disabled: disabled,\n      id: id,\n      label: label,\n      onChange: setValue,\n      value: value\n    }, element), error && jsx(\"div\", {\n      class: \"bio-properties-panel-error\",\n      children: error\n    }), jsx(Description, {\n      forId: id,\n      element: element,\n      value: description\n    })]\n  });\n}\nfunction isEdited$7(node) {\n  return node && !!node.checked;\n} // helpers /////////////////\n\nfunction prefixId$7(id) {\n  return `bio-properties-panel-${id}`;\n}\n\n/**\nThe data structure for documents. @nonabstract\n*/class Text{/**\n    @internal\n    */constructor(){}/**\n    Get the line description around the given position.\n    */lineAt(pos){if(pos<0||pos>this.length)throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);return this.lineInner(pos,false,1,0);}/**\n    Get the description for the given (1-based) line number.\n    */line(n){if(n<1||n>this.lines)throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);return this.lineInner(n,true,1,0);}/**\n    Replace a range of the text with the given content.\n    */replace(from,to,text){let parts=[];this.decompose(0,from,parts,2/* To */);if(text.length)text.decompose(0,text.length,parts,1/* From */|2/* To */);this.decompose(to,this.length,parts,1/* From */);return TextNode.from(parts,this.length-(to-from)+text.length);}/**\n    Append another document to this one.\n    */append(other){return this.replace(this.length,this.length,other);}/**\n    Retrieve the text between the given points.\n    */slice(from,to=this.length){let parts=[];this.decompose(from,to,parts,0);return TextNode.from(parts,to-from);}/**\n    Test whether this text is equal to another instance.\n    */eq(other){if(other==this)return true;if(other.length!=this.length||other.lines!=this.lines)return false;let start=this.scanIdentical(other,1),end=this.length-this.scanIdentical(other,-1);let a=new RawTextCursor(this),b=new RawTextCursor(other);for(let skip=start,pos=start;;){a.next(skip);b.next(skip);skip=0;if(a.lineBreak!=b.lineBreak||a.done!=b.done||a.value!=b.value)return false;pos+=a.value.length;if(a.done||pos>=end)return true;}}/**\n    Iterate over the text. When `dir` is `-1`, iteration happens\n    from end to start. This will return lines and the breaks between\n    them as separate strings.\n    */iter(dir=1){return new RawTextCursor(this,dir);}/**\n    Iterate over a range of the text. When `from` > `to`, the\n    iterator will run in reverse.\n    */iterRange(from,to=this.length){return new PartialTextCursor(this,from,to);}/**\n    Return a cursor that iterates over the given range of lines,\n    _without_ returning the line breaks between, and yielding empty\n    strings for empty lines.\n    \n    When `from` and `to` are given, they should be 1-based line numbers.\n    */iterLines(from,to){let inner;if(from==null){inner=this.iter();}else {if(to==null)to=this.lines+1;let start=this.line(from).from;inner=this.iterRange(start,Math.max(start,to==this.lines+1?this.length:to<=1?0:this.line(to-1).to));}return new LineCursor(inner);}/**\n    @internal\n    */toString(){return this.sliceString(0);}/**\n    Convert the document to an array of lines (which can be\n    deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).\n    */toJSON(){let lines=[];this.flatten(lines);return lines;}/**\n    Create a `Text` instance for the given array of lines.\n    */static of(text){if(text.length==0)throw new RangeError(\"A document must have at least one line\");if(text.length==1&&!text[0])return Text.empty;return text.length<=32/* Branch */?new TextLeaf(text):TextNode.from(TextLeaf.split(text,[]));}}// Leaves store an array of line strings. There are always line breaks\n// between these strings. Leaves are limited in size and have to be\n// contained in TextNode instances for bigger documents.\nclass TextLeaf extends Text{constructor(text,length=textLength(text)){super();this.text=text;this.length=length;}get lines(){return this.text.length;}get children(){return null;}lineInner(target,isLine,line,offset){for(let i=0;;i++){let string=this.text[i],end=offset+string.length;if((isLine?line:end)>=target)return new Line(offset,end,line,string);offset=end+1;line++;}}decompose(from,to,target,open){let text=from<=0&&to>=this.length?this:new TextLeaf(sliceText(this.text,from,to),Math.min(to,this.length)-Math.max(0,from));if(open&1/* From */){let prev=target.pop();let joined=appendText(text.text,prev.text.slice(),0,text.length);if(joined.length<=32/* Branch */){target.push(new TextLeaf(joined,prev.length+text.length));}else {let mid=joined.length>>1;target.push(new TextLeaf(joined.slice(0,mid)),new TextLeaf(joined.slice(mid)));}}else {target.push(text);}}replace(from,to,text){if(!(text instanceof TextLeaf))return super.replace(from,to,text);let lines=appendText(this.text,appendText(text.text,sliceText(this.text,0,from)),to);let newLen=this.length+text.length-(to-from);if(lines.length<=32/* Branch */)return new TextLeaf(lines,newLen);return TextNode.from(TextLeaf.split(lines,[]),newLen);}sliceString(from,to=this.length,lineSep=\"\\n\"){let result=\"\";for(let pos=0,i=0;pos<=to&&i<this.text.length;i++){let line=this.text[i],end=pos+line.length;if(pos>from&&i)result+=lineSep;if(from<end&&to>pos)result+=line.slice(Math.max(0,from-pos),to-pos);pos=end+1;}return result;}flatten(target){for(let line of this.text)target.push(line);}scanIdentical(){return 0;}static split(text,target){let part=[],len=-1;for(let line of text){part.push(line);len+=line.length+1;if(part.length==32/* Branch */){target.push(new TextLeaf(part,len));part=[];len=-1;}}if(len>-1)target.push(new TextLeaf(part,len));return target;}}// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance themselves\n// on changes. There are implied line breaks _between_ the children of\n// a node (but not before the first or after the last child).\nclass TextNode extends Text{constructor(children,length){super();this.children=children;this.length=length;this.lines=0;for(let child of children)this.lines+=child.lines;}lineInner(target,isLine,line,offset){for(let i=0;;i++){let child=this.children[i],end=offset+child.length,endLine=line+child.lines-1;if((isLine?endLine:end)>=target)return child.lineInner(target,isLine,line,offset);offset=end+1;line=endLine+1;}}decompose(from,to,target,open){for(let i=0,pos=0;pos<=to&&i<this.children.length;i++){let child=this.children[i],end=pos+child.length;if(from<=end&&to>=pos){let childOpen=open&((pos<=from?1/* From */:0)|(end>=to?2/* To */:0));if(pos>=from&&end<=to&&!childOpen)target.push(child);else child.decompose(from-pos,to-pos,target,childOpen);}pos=end+1;}}replace(from,to,text){if(text.lines<this.lines)for(let i=0,pos=0;i<this.children.length;i++){let child=this.children[i],end=pos+child.length;// Fast path: if the change only affects one child and the\n// child's size remains in the acceptable range, only update\n// that child\nif(from>=pos&&to<=end){let updated=child.replace(from-pos,to-pos,text);let totalLines=this.lines-child.lines+updated.lines;if(updated.lines<totalLines>>5/* BranchShift */-1&&updated.lines>totalLines>>5/* BranchShift */+1){let copy=this.children.slice();copy[i]=updated;return new TextNode(copy,this.length-(to-from)+text.length);}return super.replace(pos,end,updated);}pos=end+1;}return super.replace(from,to,text);}sliceString(from,to=this.length,lineSep=\"\\n\"){let result=\"\";for(let i=0,pos=0;i<this.children.length&&pos<=to;i++){let child=this.children[i],end=pos+child.length;if(pos>from&&i)result+=lineSep;if(from<end&&to>pos)result+=child.sliceString(from-pos,to-pos,lineSep);pos=end+1;}return result;}flatten(target){for(let child of this.children)child.flatten(target);}scanIdentical(other,dir){if(!(other instanceof TextNode))return 0;let length=0;let[iA,iB,eA,eB]=dir>0?[0,0,this.children.length,other.children.length]:[this.children.length-1,other.children.length-1,-1,-1];for(;;iA+=dir,iB+=dir){if(iA==eA||iB==eB)return length;let chA=this.children[iA],chB=other.children[iB];if(chA!=chB)return length+chA.scanIdentical(chB,dir);length+=chA.length+1;}}static from(children,length=children.reduce((l,ch)=>l+ch.length+1,-1)){let lines=0;for(let ch of children)lines+=ch.lines;if(lines<32/* Branch */){let flat=[];for(let ch of children)ch.flatten(flat);return new TextLeaf(flat,length);}let chunk=Math.max(32/* Branch */,lines>>5/* BranchShift */),maxChunk=chunk<<1,minChunk=chunk>>1;let chunked=[],currentLines=0,currentLen=-1,currentChunk=[];function add(child){let last;if(child.lines>maxChunk&&child instanceof TextNode){for(let node of child.children)add(node);}else if(child.lines>minChunk&&(currentLines>minChunk||!currentLines)){flush();chunked.push(child);}else if(child instanceof TextLeaf&&currentLines&&(last=currentChunk[currentChunk.length-1])instanceof TextLeaf&&child.lines+last.lines<=32/* Branch */){currentLines+=child.lines;currentLen+=child.length+1;currentChunk[currentChunk.length-1]=new TextLeaf(last.text.concat(child.text),last.length+1+child.length);}else {if(currentLines+child.lines>chunk)flush();currentLines+=child.lines;currentLen+=child.length+1;currentChunk.push(child);}}function flush(){if(currentLines==0)return;chunked.push(currentChunk.length==1?currentChunk[0]:TextNode.from(currentChunk,currentLen));currentLen=-1;currentLines=currentChunk.length=0;}for(let child of children)add(child);flush();return chunked.length==1?chunked[0]:new TextNode(chunked,length);}}Text.empty=/*@__PURE__*/new TextLeaf([\"\"],0);function textLength(text){let length=-1;for(let line of text)length+=line.length+1;return length;}function appendText(text,target,from=0,to=1e9){for(let pos=0,i=0,first=true;i<text.length&&pos<=to;i++){let line=text[i],end=pos+line.length;if(end>=from){if(end>to)line=line.slice(0,to-pos);if(pos<from)line=line.slice(from-pos);if(first){target[target.length-1]+=line;first=false;}else target.push(line);}pos=end+1;}return target;}function sliceText(text,from,to){return appendText(text,[\"\"],from,to);}class RawTextCursor{constructor(text,dir=1){this.dir=dir;this.done=false;this.lineBreak=false;this.value=\"\";this.nodes=[text];this.offsets=[dir>0?1:(text instanceof TextLeaf?text.text.length:text.children.length)<<1];}nextInner(skip,dir){this.done=this.lineBreak=false;for(;;){let last=this.nodes.length-1;let top=this.nodes[last],offsetValue=this.offsets[last],offset=offsetValue>>1;let size=top instanceof TextLeaf?top.text.length:top.children.length;if(offset==(dir>0?size:0)){if(last==0){this.done=true;this.value=\"\";return this;}if(dir>0)this.offsets[last-1]++;this.nodes.pop();this.offsets.pop();}else if((offsetValue&1)==(dir>0?0:1)){this.offsets[last]+=dir;if(skip==0){this.lineBreak=true;this.value=\"\\n\";return this;}skip--;}else if(top instanceof TextLeaf){// Move to the next string\nlet next=top.text[offset+(dir<0?-1:0)];this.offsets[last]+=dir;if(next.length>Math.max(0,skip)){this.value=skip==0?next:dir>0?next.slice(skip):next.slice(0,next.length-skip);return this;}skip-=next.length;}else {let next=top.children[offset+(dir<0?-1:0)];if(skip>next.length){skip-=next.length;this.offsets[last]+=dir;}else {if(dir<0)this.offsets[last]--;this.nodes.push(next);this.offsets.push(dir>0?1:(next instanceof TextLeaf?next.text.length:next.children.length)<<1);}}}}next(skip=0){if(skip<0){this.nextInner(-skip,-this.dir);skip=this.value.length;}return this.nextInner(skip,this.dir);}}class PartialTextCursor{constructor(text,start,end){this.value=\"\";this.done=false;this.cursor=new RawTextCursor(text,start>end?-1:1);this.pos=start>end?text.length:0;this.from=Math.min(start,end);this.to=Math.max(start,end);}nextInner(skip,dir){if(dir<0?this.pos<=this.from:this.pos>=this.to){this.value=\"\";this.done=true;return this;}skip+=Math.max(0,dir<0?this.pos-this.to:this.from-this.pos);let limit=dir<0?this.pos-this.from:this.to-this.pos;if(skip>limit)skip=limit;limit-=skip;let{value}=this.cursor.next(skip);this.pos+=(value.length+skip)*dir;this.value=value.length<=limit?value:dir<0?value.slice(value.length-limit):value.slice(0,limit);this.done=!this.value;return this;}next(skip=0){if(skip<0)skip=Math.max(skip,this.from-this.pos);else if(skip>0)skip=Math.min(skip,this.to-this.pos);return this.nextInner(skip,this.cursor.dir);}get lineBreak(){return this.cursor.lineBreak&&this.value!=\"\";}}class LineCursor{constructor(inner){this.inner=inner;this.afterBreak=true;this.value=\"\";this.done=false;}next(skip=0){let{done,lineBreak,value}=this.inner.next(skip);if(done){this.done=true;this.value=\"\";}else if(lineBreak){if(this.afterBreak){this.value=\"\";}else {this.afterBreak=true;this.next();}}else {this.value=value;this.afterBreak=false;}return this;}get lineBreak(){return false;}}if(typeof Symbol!=\"undefined\"){Text.prototype[Symbol.iterator]=function(){return this.iter();};RawTextCursor.prototype[Symbol.iterator]=PartialTextCursor.prototype[Symbol.iterator]=LineCursor.prototype[Symbol.iterator]=function(){return this;};}/**\nThis type describes a line in the document. It is created\non-demand when lines are [queried](https://codemirror.net/6/docs/ref/#state.Text.lineAt).\n*/class Line{/**\n    @internal\n    */constructor(/**\n    The position of the start of the line.\n    */from,/**\n    The position at the end of the line (_before_ the line break,\n    or at the end of document for the last line).\n    */to,/**\n    This line's line number (1-based).\n    */number,/**\n    The line's content.\n    */text){this.from=from;this.to=to;this.number=number;this.text=text;}/**\n    The length of the line (not including any line break after it).\n    */get length(){return this.to-this.from;}}// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend=/*@__PURE__*/\"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s=>s?parseInt(s,36):1);// Convert offsets into absolute values\nfor(let i=1;i<extend.length;i++)extend[i]+=extend[i-1];function isExtendingChar(code){for(let i=1;i<extend.length;i+=2)if(extend[i]>code)return extend[i-1]<=code;return false;}function isRegionalIndicator(code){return code>=0x1F1E6&&code<=0x1F1FF;}const ZWJ=0x200d;/**\nReturns a next grapheme cluster break _after_ (not equal to)\n`pos`, if `forward` is true, or before otherwise. Returns `pos`\nitself if no further cluster break is available in the string.\nMoves across surrogate pairs, extending characters (when\n`includeExtending` is true), characters joined with zero-width\njoiners, and flag emoji.\n*/function findClusterBreak(str,pos,forward=true,includeExtending=true){return (forward?nextClusterBreak:prevClusterBreak)(str,pos,includeExtending);}function nextClusterBreak(str,pos,includeExtending){if(pos==str.length)return pos;// If pos is in the middle of a surrogate pair, move to its start\nif(pos&&surrogateLow(str.charCodeAt(pos))&&surrogateHigh(str.charCodeAt(pos-1)))pos--;let prev=codePointAt(str,pos);pos+=codePointSize(prev);while(pos<str.length){let next=codePointAt(str,pos);if(prev==ZWJ||next==ZWJ||includeExtending&&isExtendingChar(next)){pos+=codePointSize(next);prev=next;}else if(isRegionalIndicator(next)){let countBefore=0,i=pos-2;while(i>=0&&isRegionalIndicator(codePointAt(str,i))){countBefore++;i-=2;}if(countBefore%2==0)break;else pos+=2;}else {break;}}return pos;}function prevClusterBreak(str,pos,includeExtending){while(pos>0){let found=nextClusterBreak(str,pos-2,includeExtending);if(found<pos)return found;pos--;}return 0;}function surrogateLow(ch){return ch>=0xDC00&&ch<0xE000;}function surrogateHigh(ch){return ch>=0xD800&&ch<0xDC00;}/**\nFind the code point at the given position in a string (like the\n[`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\nstring method).\n*/function codePointAt(str,pos){let code0=str.charCodeAt(pos);if(!surrogateHigh(code0)||pos+1==str.length)return code0;let code1=str.charCodeAt(pos+1);if(!surrogateLow(code1))return code0;return (code0-0xd800<<10)+(code1-0xdc00)+0x10000;}/**\nGiven a Unicode codepoint, return the JavaScript string that\nrespresents it (like\n[`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)).\n*/function fromCodePoint(code){if(code<=0xffff)return String.fromCharCode(code);code-=0x10000;return String.fromCharCode((code>>10)+0xd800,(code&1023)+0xdc00);}/**\nThe amount of positions a character takes up a JavaScript string.\n*/function codePointSize(code){return code<0x10000?1:2;}const DefaultSplit=/\\r\\n?|\\n/;/**\nDistinguishes different ways in which positions can be mapped.\n*/var MapMode=/*@__PURE__*/function(MapMode){/**\n    Map a position to a valid new position, even when its context\n    was deleted.\n    */MapMode[MapMode[\"Simple\"]=0]=\"Simple\";/**\n    Return null if deletion happens across the position.\n    */MapMode[MapMode[\"TrackDel\"]=1]=\"TrackDel\";/**\n    Return null if the character _before_ the position is deleted.\n    */MapMode[MapMode[\"TrackBefore\"]=2]=\"TrackBefore\";/**\n    Return null if the character _after_ the position is deleted.\n    */MapMode[MapMode[\"TrackAfter\"]=3]=\"TrackAfter\";return MapMode;}(MapMode||(MapMode={}));/**\nA change description is a variant of [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet)\nthat doesn't store the inserted text. As such, it can't be\napplied, but is cheaper to store and manipulate.\n*/class ChangeDesc{// Sections are encoded as pairs of integers. The first is the\n// length in the current document, and the second is -1 for\n// unaffected sections, and the length of the replacement content\n// otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n// 0), and a replacement two positive numbers.\n/**\n    @internal\n    */constructor(/**\n    @internal\n    */sections){this.sections=sections;}/**\n    The length of the document before the change.\n    */get length(){let result=0;for(let i=0;i<this.sections.length;i+=2)result+=this.sections[i];return result;}/**\n    The length of the document after the change.\n    */get newLength(){let result=0;for(let i=0;i<this.sections.length;i+=2){let ins=this.sections[i+1];result+=ins<0?this.sections[i]:ins;}return result;}/**\n    False when there are actual changes in this set.\n    */get empty(){return this.sections.length==0||this.sections.length==2&&this.sections[1]<0;}/**\n    Iterate over the unchanged parts left by these changes. `posA`\n    provides the position of the range in the old document, `posB`\n    the new position in the changed document.\n    */iterGaps(f){for(let i=0,posA=0,posB=0;i<this.sections.length;){let len=this.sections[i++],ins=this.sections[i++];if(ins<0){f(posA,posB,len);posB+=len;}else {posB+=ins;}posA+=len;}}/**\n    Iterate over the ranges changed by these changes. (See\n    [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a\n    variant that also provides you with the inserted text.)\n    `fromA`/`toA` provides the extent of the change in the starting\n    document, `fromB`/`toB` the extent of the replacement in the\n    changed document.\n    \n    When `individual` is true, adjacent changes (which are kept\n    separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are\n    reported separately.\n    */iterChangedRanges(f,individual=false){iterChanges(this,f,individual);}/**\n    Get a description of the inverted form of these changes.\n    */get invertedDesc(){let sections=[];for(let i=0;i<this.sections.length;){let len=this.sections[i++],ins=this.sections[i++];if(ins<0)sections.push(len,ins);else sections.push(ins,len);}return new ChangeDesc(sections);}/**\n    Compute the combined effect of applying another set of changes\n    after this one. The length of the document after this set should\n    match the length before `other`.\n    */composeDesc(other){return this.empty?other:other.empty?this:composeSets(this,other);}/**\n    Map this description, which should start with the same document\n    as `other`, over another set of changes, so that it can be\n    applied after it. When `before` is true, map as if the changes\n    in `other` happened before the ones in `this`.\n    */mapDesc(other,before=false){return other.empty?this:mapSet(this,other,before);}mapPos(pos,assoc=-1,mode=MapMode.Simple){let posA=0,posB=0;for(let i=0;i<this.sections.length;){let len=this.sections[i++],ins=this.sections[i++],endA=posA+len;if(ins<0){if(endA>pos)return posB+(pos-posA);posB+=len;}else {if(mode!=MapMode.Simple&&endA>=pos&&(mode==MapMode.TrackDel&&posA<pos&&endA>pos||mode==MapMode.TrackBefore&&posA<pos||mode==MapMode.TrackAfter&&endA>pos))return null;if(endA>pos||endA==pos&&assoc<0&&!len)return pos==posA||assoc<0?posB:posB+ins;posB+=ins;}posA=endA;}if(pos>posA)throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);return posB;}/**\n    Check whether these changes touch a given range. When one of the\n    changes entirely covers the range, the string `\"cover\"` is\n    returned.\n    */touchesRange(from,to=from){for(let i=0,pos=0;i<this.sections.length&&pos<=to;){let len=this.sections[i++],ins=this.sections[i++],end=pos+len;if(ins>=0&&pos<=to&&end>=from)return pos<from&&end>to?\"cover\":true;pos=end;}return false;}/**\n    @internal\n    */toString(){let result=\"\";for(let i=0;i<this.sections.length;){let len=this.sections[i++],ins=this.sections[i++];result+=(result?\" \":\"\")+len+(ins>=0?\":\"+ins:\"\");}return result;}/**\n    Serialize this change desc to a JSON-representable value.\n    */toJSON(){return this.sections;}/**\n    Create a change desc from its JSON representation (as produced\n    by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).\n    */static fromJSON(json){if(!Array.isArray(json)||json.length%2||json.some(a=>typeof a!=\"number\"))throw new RangeError(\"Invalid JSON representation of ChangeDesc\");return new ChangeDesc(json);}/**\n    @internal\n    */static create(sections){return new ChangeDesc(sections);}}/**\nA change set represents a group of modifications to a document. It\nstores the document length, and can only be applied to documents\nwith exactly that length.\n*/class ChangeSet extends ChangeDesc{constructor(sections,/**\n    @internal\n    */inserted){super(sections);this.inserted=inserted;}/**\n    Apply the changes to a document, returning the modified\n    document.\n    */apply(doc){if(this.length!=doc.length)throw new RangeError(\"Applying change set to a document with the wrong length\");iterChanges(this,(fromA,toA,fromB,_toB,text)=>doc=doc.replace(fromB,fromB+(toA-fromA),text),false);return doc;}mapDesc(other,before=false){return mapSet(this,other,before,true);}/**\n    Given the document as it existed _before_ the changes, return a\n    change set that represents the inverse of this set, which could\n    be used to go from the document created by the changes back to\n    the document as it existed before the changes.\n    */invert(doc){let sections=this.sections.slice(),inserted=[];for(let i=0,pos=0;i<sections.length;i+=2){let len=sections[i],ins=sections[i+1];if(ins>=0){sections[i]=ins;sections[i+1]=len;let index=i>>1;while(inserted.length<index)inserted.push(Text.empty);inserted.push(len?doc.slice(pos,pos+len):Text.empty);}pos+=len;}return new ChangeSet(sections,inserted);}/**\n    Combine two subsequent change sets into a single set. `other`\n    must start in the document produced by `this`. If `this` goes\n    `docA` → `docB` and `other` represents `docB` → `docC`, the\n    returned value will represent the change `docA` → `docC`.\n    */compose(other){return this.empty?other:other.empty?this:composeSets(this,other,true);}/**\n    Given another change set starting in the same document, maps this\n    change set over the other, producing a new change set that can be\n    applied to the document produced by applying `other`. When\n    `before` is `true`, order changes as if `this` comes before\n    `other`, otherwise (the default) treat `other` as coming first.\n    \n    Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    `B.compose(A.map(B, true))` will produce the same document. This\n    provides a basic form of [operational\n    transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    and can be used for collaborative editing.\n    */map(other,before=false){return other.empty?this:mapSet(this,other,before,true);}/**\n    Iterate over the changed ranges in the document, calling `f` for\n    each, with the range in the original document (`fromA`-`toA`)\n    and the range that replaces it in the new document\n    (`fromB`-`toB`).\n    \n    When `individual` is true, adjacent changes are reported\n    separately.\n    */iterChanges(f,individual=false){iterChanges(this,f,individual);}/**\n    Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change\n    set.\n    */get desc(){return ChangeDesc.create(this.sections);}/**\n    @internal\n    */filter(ranges){let resultSections=[],resultInserted=[],filteredSections=[];let iter=new SectionIter(this);done:for(let i=0,pos=0;;){let next=i==ranges.length?1e9:ranges[i++];while(pos<next||pos==next&&iter.len==0){if(iter.done)break done;let len=Math.min(iter.len,next-pos);addSection(filteredSections,len,-1);let ins=iter.ins==-1?-1:iter.off==0?iter.ins:0;addSection(resultSections,len,ins);if(ins>0)addInsert(resultInserted,resultSections,iter.text);iter.forward(len);pos+=len;}let end=ranges[i++];while(pos<end){if(iter.done)break done;let len=Math.min(iter.len,end-pos);addSection(resultSections,len,-1);addSection(filteredSections,len,iter.ins==-1?-1:iter.off==0?iter.ins:0);iter.forward(len);pos+=len;}}return {changes:new ChangeSet(resultSections,resultInserted),filtered:ChangeDesc.create(filteredSections)};}/**\n    Serialize this change set to a JSON-representable value.\n    */toJSON(){let parts=[];for(let i=0;i<this.sections.length;i+=2){let len=this.sections[i],ins=this.sections[i+1];if(ins<0)parts.push(len);else if(ins==0)parts.push([len]);else parts.push([len].concat(this.inserted[i>>1].toJSON()));}return parts;}/**\n    Create a change set for the given changes, for a document of the\n    given length, using `lineSep` as line separator.\n    */static of(changes,length,lineSep){let sections=[],inserted=[],pos=0;let total=null;function flush(force=false){if(!force&&!sections.length)return;if(pos<length)addSection(sections,length-pos,-1);let set=new ChangeSet(sections,inserted);total=total?total.compose(set.map(total)):set;sections=[];inserted=[];pos=0;}function process(spec){if(Array.isArray(spec)){for(let sub of spec)process(sub);}else if(spec instanceof ChangeSet){if(spec.length!=length)throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);flush();total=total?total.compose(spec.map(total)):spec;}else {let{from,to=from,insert}=spec;if(from>to||from<0||to>length)throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);let insText=!insert?Text.empty:typeof insert==\"string\"?Text.of(insert.split(lineSep||DefaultSplit)):insert;let insLen=insText.length;if(from==to&&insLen==0)return;if(from<pos)flush();if(from>pos)addSection(sections,from-pos,-1);addSection(sections,to-from,insLen);addInsert(inserted,sections,insText);pos=to;}}process(changes);flush(!total);return total;}/**\n    Create an empty changeset of the given length.\n    */static empty(length){return new ChangeSet(length?[length,-1]:[],[]);}/**\n    Create a changeset from its JSON representation (as produced by\n    [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).\n    */static fromJSON(json){if(!Array.isArray(json))throw new RangeError(\"Invalid JSON representation of ChangeSet\");let sections=[],inserted=[];for(let i=0;i<json.length;i++){let part=json[i];if(typeof part==\"number\"){sections.push(part,-1);}else if(!Array.isArray(part)||typeof part[0]!=\"number\"||part.some((e,i)=>i&&typeof e!=\"string\")){throw new RangeError(\"Invalid JSON representation of ChangeSet\");}else if(part.length==1){sections.push(part[0],0);}else {while(inserted.length<i)inserted.push(Text.empty);inserted[i]=Text.of(part.slice(1));sections.push(part[0],inserted[i].length);}}return new ChangeSet(sections,inserted);}/**\n    @internal\n    */static createSet(sections,inserted){return new ChangeSet(sections,inserted);}}function addSection(sections,len,ins,forceJoin=false){if(len==0&&ins<=0)return;let last=sections.length-2;if(last>=0&&ins<=0&&ins==sections[last+1])sections[last]+=len;else if(len==0&&sections[last]==0)sections[last+1]+=ins;else if(forceJoin){sections[last]+=len;sections[last+1]+=ins;}else sections.push(len,ins);}function addInsert(values,sections,value){if(value.length==0)return;let index=sections.length-2>>1;if(index<values.length){values[values.length-1]=values[values.length-1].append(value);}else {while(values.length<index)values.push(Text.empty);values.push(value);}}function iterChanges(desc,f,individual){let inserted=desc.inserted;for(let posA=0,posB=0,i=0;i<desc.sections.length;){let len=desc.sections[i++],ins=desc.sections[i++];if(ins<0){posA+=len;posB+=len;}else {let endA=posA,endB=posB,text=Text.empty;for(;;){endA+=len;endB+=ins;if(ins&&inserted)text=text.append(inserted[i-2>>1]);if(individual||i==desc.sections.length||desc.sections[i+1]<0)break;len=desc.sections[i++];ins=desc.sections[i++];}f(posA,endA,posB,endB,text);posA=endA;posB=endB;}}}function mapSet(setA,setB,before,mkSet=false){let sections=[],insert=mkSet?[]:null;let a=new SectionIter(setA),b=new SectionIter(setB);for(let posA=0,posB=0;;){if(a.ins==-1){posA+=a.len;a.next();}else if(b.ins==-1&&posB<posA){let skip=Math.min(b.len,posA-posB);b.forward(skip);addSection(sections,skip,-1);posB+=skip;}else if(b.ins>=0&&(a.done||posB<posA||posB==posA&&(b.len<a.len||b.len==a.len&&!before))){addSection(sections,b.ins,-1);while(posA>posB&&!a.done&&posA+a.len<posB+b.len){posA+=a.len;a.next();}posB+=b.len;b.next();}else if(a.ins>=0){let len=0,end=posA+a.len;for(;;){if(b.ins>=0&&posB>posA&&posB+b.len<end){len+=b.ins;posB+=b.len;b.next();}else if(b.ins==-1&&posB<end){let skip=Math.min(b.len,end-posB);len+=skip;b.forward(skip);posB+=skip;}else {break;}}addSection(sections,len,a.ins);if(insert)addInsert(insert,sections,a.text);posA=end;a.next();}else if(a.done&&b.done){return insert?ChangeSet.createSet(sections,insert):ChangeDesc.create(sections);}else {throw new Error(\"Mismatched change set lengths\");}}}function composeSets(setA,setB,mkSet=false){let sections=[];let insert=mkSet?[]:null;let a=new SectionIter(setA),b=new SectionIter(setB);for(let open=false;;){if(a.done&&b.done){return insert?ChangeSet.createSet(sections,insert):ChangeDesc.create(sections);}else if(a.ins==0){// Deletion in A\naddSection(sections,a.len,0,open);a.next();}else if(b.len==0&&!b.done){// Insertion in B\naddSection(sections,0,b.ins,open);if(insert)addInsert(insert,sections,b.text);b.next();}else if(a.done||b.done){throw new Error(\"Mismatched change set lengths\");}else {let len=Math.min(a.len2,b.len),sectionLen=sections.length;if(a.ins==-1){let insB=b.ins==-1?-1:b.off?0:b.ins;addSection(sections,len,insB,open);if(insert&&insB)addInsert(insert,sections,b.text);}else if(b.ins==-1){addSection(sections,a.off?0:a.len,len,open);if(insert)addInsert(insert,sections,a.textBit(len));}else {addSection(sections,a.off?0:a.len,b.off?0:b.ins,open);if(insert&&!b.off)addInsert(insert,sections,b.text);}open=(a.ins>len||b.ins>=0&&b.len>len)&&(open||sections.length>sectionLen);a.forward2(len);b.forward(len);}}}class SectionIter{constructor(set){this.set=set;this.i=0;this.next();}next(){let{sections}=this.set;if(this.i<sections.length){this.len=sections[this.i++];this.ins=sections[this.i++];}else {this.len=0;this.ins=-2;}this.off=0;}get done(){return this.ins==-2;}get len2(){return this.ins<0?this.len:this.ins;}get text(){let{inserted}=this.set,index=this.i-2>>1;return index>=inserted.length?Text.empty:inserted[index];}textBit(len){let{inserted}=this.set,index=this.i-2>>1;return index>=inserted.length&&!len?Text.empty:inserted[index].slice(this.off,len==null?undefined:this.off+len);}forward(len){if(len==this.len)this.next();else {this.len-=len;this.off+=len;}}forward2(len){if(this.ins==-1)this.forward(len);else if(len==this.ins)this.next();else {this.ins-=len;this.off+=len;}}}/**\nA single selection range. When\n[`allowMultipleSelections`](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\nis enabled, a [selection](https://codemirror.net/6/docs/ref/#state.EditorSelection) may hold\nmultiple ranges. By default, selections hold exactly one range.\n*/class SelectionRange{constructor(/**\n    The lower boundary of the range.\n    */from,/**\n    The upper boundary of the range.\n    */to,flags){this.from=from;this.to=to;this.flags=flags;}/**\n    The anchor of the range—the side that doesn't move when you\n    extend it.\n    */get anchor(){return this.flags&16/* Inverted */?this.to:this.from;}/**\n    The head of the range, which is moved when the range is\n    [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).\n    */get head(){return this.flags&16/* Inverted */?this.from:this.to;}/**\n    True when `anchor` and `head` are at the same position.\n    */get empty(){return this.from==this.to;}/**\n    If this is a cursor that is explicitly associated with the\n    character on one of its sides, this returns the side. -1 means\n    the character before its position, 1 the character after, and 0\n    means no association.\n    */get assoc(){return this.flags&4/* AssocBefore */?-1:this.flags&8/* AssocAfter */?1:0;}/**\n    The bidirectional text level associated with this cursor, if\n    any.\n    */get bidiLevel(){let level=this.flags&3/* BidiLevelMask */;return level==3?null:level;}/**\n    The goal column (stored vertical offset) associated with a\n    cursor. This is used to preserve the vertical position when\n    [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across\n    lines of different length.\n    */get goalColumn(){let value=this.flags>>5/* GoalColumnOffset */;return value==33554431/* NoGoalColumn */?undefined:value;}/**\n    Map this range through a change, producing a valid range in the\n    updated document.\n    */map(change,assoc=-1){let from,to;if(this.empty){from=to=change.mapPos(this.from,assoc);}else {from=change.mapPos(this.from,1);to=change.mapPos(this.to,-1);}return from==this.from&&to==this.to?this:new SelectionRange(from,to,this.flags);}/**\n    Extend this range to cover at least `from` to `to`.\n    */extend(from,to=from){if(from<=this.anchor&&to>=this.anchor)return EditorSelection.range(from,to);let head=Math.abs(from-this.anchor)>Math.abs(to-this.anchor)?from:to;return EditorSelection.range(this.anchor,head);}/**\n    Compare this range to another range.\n    */eq(other){return this.anchor==other.anchor&&this.head==other.head;}/**\n    Return a JSON-serializable object representing the range.\n    */toJSON(){return {anchor:this.anchor,head:this.head};}/**\n    Convert a JSON representation of a range to a `SelectionRange`\n    instance.\n    */static fromJSON(json){if(!json||typeof json.anchor!=\"number\"||typeof json.head!=\"number\")throw new RangeError(\"Invalid JSON representation for SelectionRange\");return EditorSelection.range(json.anchor,json.head);}/**\n    @internal\n    */static create(from,to,flags){return new SelectionRange(from,to,flags);}}/**\nAn editor selection holds one or more selection ranges.\n*/class EditorSelection{constructor(/**\n    The ranges in the selection, sorted by position. Ranges cannot\n    overlap (but they may touch, if they aren't empty).\n    */ranges,/**\n    The index of the _main_ range in the selection (which is\n    usually the range that was added last).\n    */mainIndex){this.ranges=ranges;this.mainIndex=mainIndex;}/**\n    Map a selection through a change. Used to adjust the selection\n    position for changes.\n    */map(change,assoc=-1){if(change.empty)return this;return EditorSelection.create(this.ranges.map(r=>r.map(change,assoc)),this.mainIndex);}/**\n    Compare this selection to another selection.\n    */eq(other){if(this.ranges.length!=other.ranges.length||this.mainIndex!=other.mainIndex)return false;for(let i=0;i<this.ranges.length;i++)if(!this.ranges[i].eq(other.ranges[i]))return false;return true;}/**\n    Get the primary selection range. Usually, you should make sure\n    your code applies to _all_ ranges, by using methods like\n    [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).\n    */get main(){return this.ranges[this.mainIndex];}/**\n    Make sure the selection only has one range. Returns a selection\n    holding only the main range from this selection.\n    */asSingle(){return this.ranges.length==1?this:new EditorSelection([this.main],0);}/**\n    Extend this selection with an extra range.\n    */addRange(range,main=true){return EditorSelection.create([range].concat(this.ranges),main?0:this.mainIndex+1);}/**\n    Replace a given range with another range, and then normalize the\n    selection to merge and sort ranges if necessary.\n    */replaceRange(range,which=this.mainIndex){let ranges=this.ranges.slice();ranges[which]=range;return EditorSelection.create(ranges,this.mainIndex);}/**\n    Convert this selection to an object that can be serialized to\n    JSON.\n    */toJSON(){return {ranges:this.ranges.map(r=>r.toJSON()),main:this.mainIndex};}/**\n    Create a selection from a JSON representation.\n    */static fromJSON(json){if(!json||!Array.isArray(json.ranges)||typeof json.main!=\"number\"||json.main>=json.ranges.length)throw new RangeError(\"Invalid JSON representation for EditorSelection\");return new EditorSelection(json.ranges.map(r=>SelectionRange.fromJSON(r)),json.main);}/**\n    Create a selection holding a single range.\n    */static single(anchor,head=anchor){return new EditorSelection([EditorSelection.range(anchor,head)],0);}/**\n    Sort and merge the given set of ranges, creating a valid\n    selection.\n    */static create(ranges,mainIndex=0){if(ranges.length==0)throw new RangeError(\"A selection needs at least one range\");for(let pos=0,i=0;i<ranges.length;i++){let range=ranges[i];if(range.empty?range.from<=pos:range.from<pos)return EditorSelection.normalized(ranges.slice(),mainIndex);pos=range.to;}return new EditorSelection(ranges,mainIndex);}/**\n    Create a cursor selection range at the given position. You can\n    safely ignore the optional arguments in most situations.\n    */static cursor(pos,assoc=0,bidiLevel,goalColumn){return SelectionRange.create(pos,pos,(assoc==0?0:assoc<0?4/* AssocBefore */:8/* AssocAfter */)|(bidiLevel==null?3:Math.min(2,bidiLevel))|(goalColumn!==null&&goalColumn!==void 0?goalColumn:33554431/* NoGoalColumn */)<<5/* GoalColumnOffset */);}/**\n    Create a selection range.\n    */static range(anchor,head,goalColumn){let goal=(goalColumn!==null&&goalColumn!==void 0?goalColumn:33554431/* NoGoalColumn */)<<5/* GoalColumnOffset */;return head<anchor?SelectionRange.create(head,anchor,16/* Inverted */|goal|8/* AssocAfter */):SelectionRange.create(anchor,head,goal|(head>anchor?4/* AssocBefore */:0));}/**\n    @internal\n    */static normalized(ranges,mainIndex=0){let main=ranges[mainIndex];ranges.sort((a,b)=>a.from-b.from);mainIndex=ranges.indexOf(main);for(let i=1;i<ranges.length;i++){let range=ranges[i],prev=ranges[i-1];if(range.empty?range.from<=prev.to:range.from<prev.to){let from=prev.from,to=Math.max(range.to,prev.to);if(i<=mainIndex)mainIndex--;ranges.splice(--i,2,range.anchor>range.head?EditorSelection.range(to,from):EditorSelection.range(from,to));}}return new EditorSelection(ranges,mainIndex);}}function checkSelection(selection,docLength){for(let range of selection.ranges)if(range.to>docLength)throw new RangeError(\"Selection points outside of document\");}let nextID=0;/**\nA facet is a labeled value that is associated with an editor\nstate. It takes inputs from any number of extensions, and combines\nthose into a single output value.\n\nExamples of uses of facets are the [tab\nsize](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize), [editor\nattributes](https://codemirror.net/6/docs/ref/#view.EditorView^editorAttributes), and [update\nlisteners](https://codemirror.net/6/docs/ref/#view.EditorView^updateListener).\n*/class Facet{constructor(/**\n    @internal\n    */combine,/**\n    @internal\n    */compareInput,/**\n    @internal\n    */compare,isStatic,/**\n    @internal\n    */extensions){this.combine=combine;this.compareInput=compareInput;this.compare=compare;this.isStatic=isStatic;this.extensions=extensions;/**\n        @internal\n        */this.id=nextID++;this.default=combine([]);}/**\n    Define a new facet.\n    */static define(config={}){return new Facet(config.combine||(a=>a),config.compareInput||((a,b)=>a===b),config.compare||(!config.combine?sameArray$1:(a,b)=>a===b),!!config.static,config.enables);}/**\n    Returns an extension that adds the given value to this facet.\n    */of(value){return new FacetProvider([],this,0/* Static */,value);}/**\n    Create an extension that computes a value for the facet from a\n    state. You must take care to declare the parts of the state that\n    this value depends on, since your function is only called again\n    for a new state when one of those parts changed.\n    \n    In cases where your value depends only on a single field, you'll\n    want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.\n    */compute(deps,get){if(this.isStatic)throw new Error(\"Can't compute a static facet\");return new FacetProvider(deps,this,1/* Single */,get);}/**\n    Create an extension that computes zero or more values for this\n    facet from a state.\n    */computeN(deps,get){if(this.isStatic)throw new Error(\"Can't compute a static facet\");return new FacetProvider(deps,this,2/* Multi */,get);}from(field,get){if(!get)get=x=>x;return this.compute([field],state=>get(state.field(field)));}}function sameArray$1(a,b){return a==b||a.length==b.length&&a.every((e,i)=>e===b[i]);}class FacetProvider{constructor(dependencies,facet,type,value){this.dependencies=dependencies;this.facet=facet;this.type=type;this.value=value;this.id=nextID++;}dynamicSlot(addresses){var _a;let getter=this.value;let compare=this.facet.compareInput;let id=this.id,idx=addresses[id]>>1,multi=this.type==2/* Multi */;let depDoc=false,depSel=false,depAddrs=[];for(let dep of this.dependencies){if(dep==\"doc\")depDoc=true;else if(dep==\"selection\")depSel=true;else if((((_a=addresses[dep.id])!==null&&_a!==void 0?_a:1)&1)==0)depAddrs.push(addresses[dep.id]);}return {create(state){state.values[idx]=getter(state);return 1/* Changed */;},update(state,tr){if(depDoc&&tr.docChanged||depSel&&(tr.docChanged||tr.selection)||ensureAll(state,depAddrs)){let newVal=getter(state);if(multi?!compareArray(newVal,state.values[idx],compare):!compare(newVal,state.values[idx])){state.values[idx]=newVal;return 1/* Changed */;}}return 0;},reconfigure:(state,oldState)=>{let newVal=getter(state);let oldAddr=oldState.config.address[id];if(oldAddr!=null){let oldVal=getAddr(oldState,oldAddr);if(this.dependencies.every(dep=>{return dep instanceof Facet?oldState.facet(dep)===state.facet(dep):dep instanceof StateField?oldState.field(dep,false)==state.field(dep,false):true;})||(multi?compareArray(newVal,oldVal,compare):compare(newVal,oldVal))){state.values[idx]=oldVal;return 0;}}state.values[idx]=newVal;return 1/* Changed */;}};}}function compareArray(a,b,compare){if(a.length!=b.length)return false;for(let i=0;i<a.length;i++)if(!compare(a[i],b[i]))return false;return true;}function ensureAll(state,addrs){let changed=false;for(let addr of addrs)if(ensureAddr(state,addr)&1/* Changed */)changed=true;return changed;}function dynamicFacetSlot(addresses,facet,providers){let providerAddrs=providers.map(p=>addresses[p.id]);let providerTypes=providers.map(p=>p.type);let dynamic=providerAddrs.filter(p=>!(p&1));let idx=addresses[facet.id]>>1;function get(state){let values=[];for(let i=0;i<providerAddrs.length;i++){let value=getAddr(state,providerAddrs[i]);if(providerTypes[i]==2/* Multi */)for(let val of value)values.push(val);else values.push(value);}return facet.combine(values);}return {create(state){for(let addr of providerAddrs)ensureAddr(state,addr);state.values[idx]=get(state);return 1/* Changed */;},update(state,tr){if(!ensureAll(state,dynamic))return 0;let value=get(state);if(facet.compare(value,state.values[idx]))return 0;state.values[idx]=value;return 1/* Changed */;},reconfigure(state,oldState){let depChanged=ensureAll(state,providerAddrs);let oldProviders=oldState.config.facets[facet.id],oldValue=oldState.facet(facet);if(oldProviders&&!depChanged&&sameArray$1(providers,oldProviders)){state.values[idx]=oldValue;return 0;}let value=get(state);if(facet.compare(value,oldValue)){state.values[idx]=oldValue;return 0;}state.values[idx]=value;return 1/* Changed */;}};}const initField=/*@__PURE__*/Facet.define({static:true});/**\nFields can store additional information in an editor state, and\nkeep it in sync with the rest of the state.\n*/class StateField{constructor(/**\n    @internal\n    */id,createF,updateF,compareF,/**\n    @internal\n    */spec){this.id=id;this.createF=createF;this.updateF=updateF;this.compareF=compareF;this.spec=spec;/**\n        @internal\n        */this.provides=undefined;}/**\n    Define a state field.\n    */static define(config){let field=new StateField(nextID++,config.create,config.update,config.compare||((a,b)=>a===b),config);if(config.provide)field.provides=config.provide(field);return field;}create(state){let init=state.facet(initField).find(i=>i.field==this);return ((init===null||init===void 0?void 0:init.create)||this.createF)(state);}/**\n    @internal\n    */slot(addresses){let idx=addresses[this.id]>>1;return {create:state=>{state.values[idx]=this.create(state);return 1/* Changed */;},update:(state,tr)=>{let oldVal=state.values[idx];let value=this.updateF(oldVal,tr);if(this.compareF(oldVal,value))return 0;state.values[idx]=value;return 1/* Changed */;},reconfigure:(state,oldState)=>{if(oldState.config.address[this.id]!=null){state.values[idx]=oldState.field(this);return 0;}state.values[idx]=this.create(state);return 1/* Changed */;}};}/**\n    Returns an extension that enables this field and overrides the\n    way it is initialized. Can be useful when you need to provide a\n    non-default starting value for the field.\n    */init(create){return [this,initField.of({field:this,create})];}/**\n    State field instances can be used as\n    [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a\n    given state.\n    */get extension(){return this;}}const Prec_={lowest:4,low:3,default:2,high:1,highest:0};function prec(value){return ext=>new PrecExtension(ext,value);}/**\nBy default extensions are registered in the order they are found\nin the flattened form of nested array that was provided.\nIndividual extension values can be assigned a precedence to\noverride this. Extensions that do not have a precedence set get\nthe precedence of the nearest parent with a precedence, or\n[`default`](https://codemirror.net/6/docs/ref/#state.Prec.default) if there is no such parent. The\nfinal ordering of extensions is determined by first sorting by\nprecedence and then by order within each precedence.\n*/const Prec={/**\n    The highest precedence level, for extensions that should end up\n    near the start of the precedence ordering.\n    */highest:/*@__PURE__*/prec(Prec_.highest),/**\n    A higher-than-default precedence, for extensions that should\n    come before those with default precedence.\n    */high:/*@__PURE__*/prec(Prec_.high),/**\n    The default precedence, which is also used for extensions\n    without an explicit precedence.\n    */default:/*@__PURE__*/prec(Prec_.default),/**\n    A lower-than-default precedence.\n    */low:/*@__PURE__*/prec(Prec_.low),/**\n    The lowest precedence level. Meant for things that should end up\n    near the end of the extension order.\n    */lowest:/*@__PURE__*/prec(Prec_.lowest)};class PrecExtension{constructor(inner,prec){this.inner=inner;this.prec=prec;}}/**\nExtension compartments can be used to make a configuration\ndynamic. By [wrapping](https://codemirror.net/6/docs/ref/#state.Compartment.of) part of your\nconfiguration in a compartment, you can later\n[replace](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure) that part through a\ntransaction.\n*/class Compartment{/**\n    Create an instance of this compartment to add to your [state\n    configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).\n    */of(ext){return new CompartmentInstance(this,ext);}/**\n    Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that\n    reconfigures this compartment.\n    */reconfigure(content){return Compartment.reconfigure.of({compartment:this,extension:content});}/**\n    Get the current content of the compartment in the state, or\n    `undefined` if it isn't present.\n    */get(state){return state.config.compartments.get(this);}}class CompartmentInstance{constructor(compartment,inner){this.compartment=compartment;this.inner=inner;}}class Configuration{constructor(base,compartments,dynamicSlots,address,staticValues,facets){this.base=base;this.compartments=compartments;this.dynamicSlots=dynamicSlots;this.address=address;this.staticValues=staticValues;this.facets=facets;this.statusTemplate=[];while(this.statusTemplate.length<dynamicSlots.length)this.statusTemplate.push(0/* Unresolved */);}staticFacet(facet){let addr=this.address[facet.id];return addr==null?facet.default:this.staticValues[addr>>1];}static resolve(base,compartments,oldState){let fields=[];let facets=Object.create(null);let newCompartments=new Map();for(let ext of flatten(base,compartments,newCompartments)){if(ext instanceof StateField)fields.push(ext);else (facets[ext.facet.id]||(facets[ext.facet.id]=[])).push(ext);}let address=Object.create(null);let staticValues=[];let dynamicSlots=[];for(let field of fields){address[field.id]=dynamicSlots.length<<1;dynamicSlots.push(a=>field.slot(a));}let oldFacets=oldState===null||oldState===void 0?void 0:oldState.config.facets;for(let id in facets){let providers=facets[id],facet=providers[0].facet;let oldProviders=oldFacets&&oldFacets[id]||[];if(providers.every(p=>p.type==0/* Static */)){address[facet.id]=staticValues.length<<1|1;if(sameArray$1(oldProviders,providers)){staticValues.push(oldState.facet(facet));}else {let value=facet.combine(providers.map(p=>p.value));staticValues.push(oldState&&facet.compare(value,oldState.facet(facet))?oldState.facet(facet):value);}}else {for(let p of providers){if(p.type==0/* Static */){address[p.id]=staticValues.length<<1|1;staticValues.push(p.value);}else {address[p.id]=dynamicSlots.length<<1;dynamicSlots.push(a=>p.dynamicSlot(a));}}address[facet.id]=dynamicSlots.length<<1;dynamicSlots.push(a=>dynamicFacetSlot(a,facet,providers));}}let dynamic=dynamicSlots.map(f=>f(address));return new Configuration(base,newCompartments,dynamic,address,staticValues,facets);}}function flatten(extension,compartments,newCompartments){let result=[[],[],[],[],[]];let seen=new Map();function inner(ext,prec){let known=seen.get(ext);if(known!=null){if(known<=prec)return;let found=result[known].indexOf(ext);if(found>-1)result[known].splice(found,1);if(ext instanceof CompartmentInstance)newCompartments.delete(ext.compartment);}seen.set(ext,prec);if(Array.isArray(ext)){for(let e of ext)inner(e,prec);}else if(ext instanceof CompartmentInstance){if(newCompartments.has(ext.compartment))throw new RangeError(`Duplicate use of compartment in extensions`);let content=compartments.get(ext.compartment)||ext.inner;newCompartments.set(ext.compartment,content);inner(content,prec);}else if(ext instanceof PrecExtension){inner(ext.inner,ext.prec);}else if(ext instanceof StateField){result[prec].push(ext);if(ext.provides)inner(ext.provides,prec);}else if(ext instanceof FacetProvider){result[prec].push(ext);if(ext.facet.extensions)inner(ext.facet.extensions,prec);}else {let content=ext.extension;if(!content)throw new Error(`Unrecognized extension value in extension set (${ext}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);inner(content,prec);}}inner(extension,Prec_.default);return result.reduce((a,b)=>a.concat(b));}function ensureAddr(state,addr){if(addr&1)return 2/* Computed */;let idx=addr>>1;let status=state.status[idx];if(status==4/* Computing */)throw new Error(\"Cyclic dependency between fields and/or facets\");if(status&2/* Computed */)return status;state.status[idx]=4/* Computing */;let changed=state.computeSlot(state,state.config.dynamicSlots[idx]);return state.status[idx]=2/* Computed */|changed;}function getAddr(state,addr){return addr&1?state.config.staticValues[addr>>1]:state.values[addr>>1];}const languageData=/*@__PURE__*/Facet.define();const allowMultipleSelections=/*@__PURE__*/Facet.define({combine:values=>values.some(v=>v),static:true});const lineSeparator=/*@__PURE__*/Facet.define({combine:values=>values.length?values[0]:undefined,static:true});const changeFilter=/*@__PURE__*/Facet.define();const transactionFilter=/*@__PURE__*/Facet.define();const transactionExtender=/*@__PURE__*/Facet.define();const readOnly=/*@__PURE__*/Facet.define({combine:values=>values.length?values[0]:false});/**\nAnnotations are tagged values that are used to add metadata to\ntransactions in an extensible way. They should be used to model\nthings that effect the entire transaction (such as its [time\nstamp](https://codemirror.net/6/docs/ref/#state.Transaction^time) or information about its\n[origin](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent)). For effects that happen\n_alongside_ the other changes made by the transaction, [state\neffects](https://codemirror.net/6/docs/ref/#state.StateEffect) are more appropriate.\n*/class Annotation{/**\n    @internal\n    */constructor(/**\n    The annotation type.\n    */type,/**\n    The value of this annotation.\n    */value){this.type=type;this.value=value;}/**\n    Define a new type of annotation.\n    */static define(){return new AnnotationType();}}/**\nMarker that identifies a type of [annotation](https://codemirror.net/6/docs/ref/#state.Annotation).\n*/class AnnotationType{/**\n    Create an instance of this annotation.\n    */of(value){return new Annotation(this,value);}}/**\nRepresentation of a type of state effect. Defined with\n[`StateEffect.define`](https://codemirror.net/6/docs/ref/#state.StateEffect^define).\n*/class StateEffectType{/**\n    @internal\n    */constructor(// The `any` types in these function types are there to work\n// around TypeScript issue #37631, where the type guard on\n// `StateEffect.is` mysteriously stops working when these properly\n// have type `Value`.\n/**\n    @internal\n    */map){this.map=map;}/**\n    Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this\n    type.\n    */of(value){return new StateEffect(this,value);}}/**\nState effects can be used to represent additional effects\nassociated with a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction.effects). They\nare often useful to model changes to custom [state\nfields](https://codemirror.net/6/docs/ref/#state.StateField), when those changes aren't implicit in\ndocument or selection changes.\n*/class StateEffect{/**\n    @internal\n    */constructor(/**\n    @internal\n    */type,/**\n    The value of this effect.\n    */value){this.type=type;this.value=value;}/**\n    Map this effect through a position mapping. Will return\n    `undefined` when that ends up deleting the effect.\n    */map(mapping){let mapped=this.type.map(this.value,mapping);return mapped===undefined?undefined:mapped==this.value?this:new StateEffect(this.type,mapped);}/**\n    Tells you whether this effect object is of a given\n    [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).\n    */is(type){return this.type==type;}/**\n    Define a new effect type. The type parameter indicates the type\n    of values that his effect holds.\n    */static define(spec={}){return new StateEffectType(spec.map||(v=>v));}/**\n    Map an array of effects through a change set.\n    */static mapEffects(effects,mapping){if(!effects.length)return effects;let result=[];for(let effect of effects){let mapped=effect.map(mapping);if(mapped)result.push(mapped);}return result;}}/**\nThis effect can be used to reconfigure the root extensions of\nthe editor. Doing this will discard any extensions\n[appended](https://codemirror.net/6/docs/ref/#state.StateEffect^appendConfig), but does not reset\nthe content of [reconfigured](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure)\ncompartments.\n*/StateEffect.reconfigure=/*@__PURE__*/StateEffect.define();/**\nAppend extensions to the top-level configuration of the editor.\n*/StateEffect.appendConfig=/*@__PURE__*/StateEffect.define();/**\nChanges to the editor state are grouped into transactions.\nTypically, a user action creates a single transaction, which may\ncontain any number of document changes, may change the selection,\nor have other effects. Create a transaction by calling\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update), or immediately\ndispatch one by calling\n[`EditorView.dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch).\n*/class Transaction{constructor(/**\n    The state from which the transaction starts.\n    */startState,/**\n    The document changes made by this transaction.\n    */changes,/**\n    The selection set by this transaction, or undefined if it\n    doesn't explicitly set a selection.\n    */selection,/**\n    The effects added to the transaction.\n    */effects,/**\n    @internal\n    */annotations,/**\n    Whether the selection should be scrolled into view after this\n    transaction is dispatched.\n    */scrollIntoView){this.startState=startState;this.changes=changes;this.selection=selection;this.effects=effects;this.annotations=annotations;this.scrollIntoView=scrollIntoView;/**\n        @internal\n        */this._doc=null;/**\n        @internal\n        */this._state=null;if(selection)checkSelection(selection,changes.newLength);if(!annotations.some(a=>a.type==Transaction.time))this.annotations=annotations.concat(Transaction.time.of(Date.now()));}/**\n    @internal\n    */static create(startState,changes,selection,effects,annotations,scrollIntoView){return new Transaction(startState,changes,selection,effects,annotations,scrollIntoView);}/**\n    The new document produced by the transaction. Contrary to\n    [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't\n    force the entire new state to be computed right away, so it is\n    recommended that [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter\n    when they need to look at the new document.\n    */get newDoc(){return this._doc||(this._doc=this.changes.apply(this.startState.doc));}/**\n    The new selection produced by the transaction. If\n    [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,\n    this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's\n    current selection through the changes made by the transaction.\n    */get newSelection(){return this.selection||this.startState.selection.map(this.changes);}/**\n    The new state created by the transaction. Computed on demand\n    (but retained for subsequent access), so it is recommended not to\n    access it in [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.\n    */get state(){if(!this._state)this.startState.applyTransaction(this);return this._state;}/**\n    Get the value of the given annotation type, if any.\n    */annotation(type){for(let ann of this.annotations)if(ann.type==type)return ann.value;return undefined;}/**\n    Indicates whether the transaction changed the document.\n    */get docChanged(){return !this.changes.empty;}/**\n    Indicates whether this transaction reconfigures the state\n    (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or\n    with a top-level configuration\n    [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).\n    */get reconfigured(){return this.startState.config!=this.state.config;}/**\n    Returns true if the transaction has a [user\n    event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to\n    or more specific than `event`. For example, if the transaction\n    has `\"select.pointer\"` as user event, `\"select\"` and\n    `\"select.pointer\"` will match it.\n    */isUserEvent(event){let e=this.annotation(Transaction.userEvent);return !!(e&&(e==event||e.length>event.length&&e.slice(0,event.length)==event&&e[event.length]==\".\"));}}/**\nAnnotation used to store transaction timestamps. Automatically\nadded to every transaction, holding `Date.now()`.\n*/Transaction.time=/*@__PURE__*/Annotation.define();/**\nAnnotation used to associate a transaction with a user interface\nevent. Holds a string identifying the event, using a\ndot-separated format to support attaching more specific\ninformation. The events used by the core libraries are:\n\n - `\"input\"` when content is entered\n   - `\"input.type\"` for typed input\n     - `\"input.type.compose\"` for composition\n   - `\"input.paste\"` for pasted input\n   - `\"input.drop\"` when adding content with drag-and-drop\n   - `\"input.complete\"` when autocompleting\n - `\"delete\"` when the user deletes content\n   - `\"delete.selection\"` when deleting the selection\n   - `\"delete.forward\"` when deleting forward from the selection\n   - `\"delete.backward\"` when deleting backward from the selection\n   - `\"delete.cut\"` when cutting to the clipboard\n - `\"move\"` when content is moved\n   - `\"move.drop\"` when content is moved within the editor through drag-and-drop\n - `\"select\"` when explicitly changing the selection\n   - `\"select.pointer\"` when selecting with a mouse or other pointing device\n - `\"undo\"` and `\"redo\"` for history actions\n\nUse [`isUserEvent`](https://codemirror.net/6/docs/ref/#state.Transaction.isUserEvent) to check\nwhether the annotation matches a given event.\n*/Transaction.userEvent=/*@__PURE__*/Annotation.define();/**\nAnnotation indicating whether a transaction should be added to\nthe undo history or not.\n*/Transaction.addToHistory=/*@__PURE__*/Annotation.define();/**\nAnnotation indicating (when present and true) that a transaction\nrepresents a change made by some other actor, not the user. This\nis used, for example, to tag other people's changes in\ncollaborative editing.\n*/Transaction.remote=/*@__PURE__*/Annotation.define();function joinRanges(a,b){let result=[];for(let iA=0,iB=0;;){let from,to;if(iA<a.length&&(iB==b.length||b[iB]>=a[iA])){from=a[iA++];to=a[iA++];}else if(iB<b.length){from=b[iB++];to=b[iB++];}else return result;if(!result.length||result[result.length-1]<from)result.push(from,to);else if(result[result.length-1]<to)result[result.length-1]=to;}}function mergeTransaction(a,b,sequential){var _a;let mapForA,mapForB,changes;if(sequential){mapForA=b.changes;mapForB=ChangeSet.empty(b.changes.length);changes=a.changes.compose(b.changes);}else {mapForA=b.changes.map(a.changes);mapForB=a.changes.mapDesc(b.changes,true);changes=a.changes.compose(mapForA);}return {changes,selection:b.selection?b.selection.map(mapForB):(_a=a.selection)===null||_a===void 0?void 0:_a.map(mapForA),effects:StateEffect.mapEffects(a.effects,mapForA).concat(StateEffect.mapEffects(b.effects,mapForB)),annotations:a.annotations.length?a.annotations.concat(b.annotations):b.annotations,scrollIntoView:a.scrollIntoView||b.scrollIntoView};}function resolveTransactionInner(state,spec,docSize){let sel=spec.selection,annotations=asArray(spec.annotations);if(spec.userEvent)annotations=annotations.concat(Transaction.userEvent.of(spec.userEvent));return {changes:spec.changes instanceof ChangeSet?spec.changes:ChangeSet.of(spec.changes||[],docSize,state.facet(lineSeparator)),selection:sel&&(sel instanceof EditorSelection?sel:EditorSelection.single(sel.anchor,sel.head)),effects:asArray(spec.effects),annotations,scrollIntoView:!!spec.scrollIntoView};}function resolveTransaction(state,specs,filter){let s=resolveTransactionInner(state,specs.length?specs[0]:{},state.doc.length);if(specs.length&&specs[0].filter===false)filter=false;for(let i=1;i<specs.length;i++){if(specs[i].filter===false)filter=false;let seq=!!specs[i].sequential;s=mergeTransaction(s,resolveTransactionInner(state,specs[i],seq?s.changes.newLength:state.doc.length),seq);}let tr=Transaction.create(state,s.changes,s.selection,s.effects,s.annotations,s.scrollIntoView);return extendTransaction(filter?filterTransaction(tr):tr);}// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr){let state=tr.startState;// Change filters\nlet result=true;for(let filter of state.facet(changeFilter)){let value=filter(tr);if(value===false){result=false;break;}if(Array.isArray(value))result=result===true?value:joinRanges(result,value);}if(result!==true){let changes,back;if(result===false){back=tr.changes.invertedDesc;changes=ChangeSet.empty(state.doc.length);}else {let filtered=tr.changes.filter(result);changes=filtered.changes;back=filtered.filtered.invertedDesc;}tr=Transaction.create(state,changes,tr.selection&&tr.selection.map(back),StateEffect.mapEffects(tr.effects,back),tr.annotations,tr.scrollIntoView);}// Transaction filters\nlet filters=state.facet(transactionFilter);for(let i=filters.length-1;i>=0;i--){let filtered=filters[i](tr);if(filtered instanceof Transaction)tr=filtered;else if(Array.isArray(filtered)&&filtered.length==1&&filtered[0]instanceof Transaction)tr=filtered[0];else tr=resolveTransaction(state,asArray(filtered),false);}return tr;}function extendTransaction(tr){let state=tr.startState,extenders=state.facet(transactionExtender),spec=tr;for(let i=extenders.length-1;i>=0;i--){let extension=extenders[i](tr);if(extension&&Object.keys(extension).length)spec=mergeTransaction(tr,resolveTransactionInner(state,extension,tr.changes.newLength),true);}return spec==tr?tr:Transaction.create(state,tr.changes,tr.selection,spec.effects,spec.annotations,spec.scrollIntoView);}const none$1=[];function asArray(value){return value==null?none$1:Array.isArray(value)?value:[value];}/**\nThe categories produced by a [character\ncategorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer). These are used\ndo things like selecting by word.\n*/var CharCategory=/*@__PURE__*/function(CharCategory){/**\n    Word characters.\n    */CharCategory[CharCategory[\"Word\"]=0]=\"Word\";/**\n    Whitespace.\n    */CharCategory[CharCategory[\"Space\"]=1]=\"Space\";/**\n    Anything else.\n    */CharCategory[CharCategory[\"Other\"]=2]=\"Other\";return CharCategory;}(CharCategory||(CharCategory={}));const nonASCIISingleCaseWordChar=/[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;let wordChar;try{wordChar=/*@__PURE__*/new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\",\"u\");}catch(_){}function hasWordChar(str){if(wordChar)return wordChar.test(str);for(let i=0;i<str.length;i++){let ch=str[i];if(/\\w/.test(ch)||ch>\"\\x80\"&&(ch.toUpperCase()!=ch.toLowerCase()||nonASCIISingleCaseWordChar.test(ch)))return true;}return false;}function makeCategorizer(wordChars){return char=>{if(!/\\S/.test(char))return CharCategory.Space;if(hasWordChar(char))return CharCategory.Word;for(let i=0;i<wordChars.length;i++)if(char.indexOf(wordChars[i])>-1)return CharCategory.Word;return CharCategory.Other;};}/**\nThe editor state class is a persistent (immutable) data structure.\nTo update a state, you [create](https://codemirror.net/6/docs/ref/#state.EditorState.update) a\n[transaction](https://codemirror.net/6/docs/ref/#state.Transaction), which produces a _new_ state\ninstance, without modifying the original object.\n\nAs such, _never_ mutate properties of a state directly. That'll\njust break things.\n*/class EditorState{constructor(/**\n    @internal\n    */config,/**\n    The current document.\n    */doc,/**\n    The current selection.\n    */selection,/**\n    @internal\n    */values,computeSlot,tr){this.config=config;this.doc=doc;this.selection=selection;this.values=values;this.status=config.statusTemplate.slice();this.computeSlot=computeSlot;// Fill in the computed state immediately, so that further queries\n// for it made during the update return this state\nif(tr)tr._state=this;for(let i=0;i<this.config.dynamicSlots.length;i++)ensureAddr(this,i<<1);this.computeSlot=null;}field(field,require=true){let addr=this.config.address[field.id];if(addr==null){if(require)throw new RangeError(\"Field is not present in this state\");return undefined;}ensureAddr(this,addr);return getAddr(this,addr);}/**\n    Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this\n    state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)\n    can be passed. Unless\n    [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the\n    [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec\n    are assumed to start in the _current_ document (not the document\n    produced by previous specs), and its\n    [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and\n    [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer\n    to the document created by its _own_ changes. The resulting\n    transaction contains the combined effect of all the different\n    specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later\n    specs take precedence over earlier ones.\n    */update(...specs){return resolveTransaction(this,specs,true);}/**\n    @internal\n    */applyTransaction(tr){let conf=this.config,{base,compartments}=conf;for(let effect of tr.effects){if(effect.is(Compartment.reconfigure)){if(conf){compartments=new Map();conf.compartments.forEach((val,key)=>compartments.set(key,val));conf=null;}compartments.set(effect.value.compartment,effect.value.extension);}else if(effect.is(StateEffect.reconfigure)){conf=null;base=effect.value;}else if(effect.is(StateEffect.appendConfig)){conf=null;base=asArray(base).concat(effect.value);}}let startValues;if(!conf){conf=Configuration.resolve(base,compartments,this);let intermediateState=new EditorState(conf,this.doc,this.selection,conf.dynamicSlots.map(()=>null),(state,slot)=>slot.reconfigure(state,this),null);startValues=intermediateState.values;}else {startValues=tr.startState.values.slice();}new EditorState(conf,tr.newDoc,tr.newSelection,startValues,(state,slot)=>slot.update(state,tr),tr);}/**\n    Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that\n    replaces every selection range with the given content.\n    */replaceSelection(text){if(typeof text==\"string\")text=this.toText(text);return this.changeByRange(range=>({changes:{from:range.from,to:range.to,insert:text},range:EditorSelection.cursor(range.from+text.length)}));}/**\n    Create a set of changes and a new selection by running the given\n    function for each range in the active selection. The function\n    can return an optional set of changes (in the coordinate space\n    of the start document), plus an updated range (in the coordinate\n    space of the document produced by the call's own changes). This\n    method will merge all the changes and ranges into a single\n    changeset and selection, and return it as a [transaction\n    spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to\n    [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n    */changeByRange(f){let sel=this.selection;let result1=f(sel.ranges[0]);let changes=this.changes(result1.changes),ranges=[result1.range];let effects=asArray(result1.effects);for(let i=1;i<sel.ranges.length;i++){let result=f(sel.ranges[i]);let newChanges=this.changes(result.changes),newMapped=newChanges.map(changes);for(let j=0;j<i;j++)ranges[j]=ranges[j].map(newMapped);let mapBy=changes.mapDesc(newChanges,true);ranges.push(result.range.map(mapBy));changes=changes.compose(newMapped);effects=StateEffect.mapEffects(effects,newMapped).concat(StateEffect.mapEffects(asArray(result.effects),mapBy));}return {changes,selection:EditorSelection.create(ranges,sel.mainIndex),effects};}/**\n    Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change\n    description, taking the state's document length and line\n    separator into account.\n    */changes(spec=[]){if(spec instanceof ChangeSet)return spec;return ChangeSet.of(spec,this.doc.length,this.facet(EditorState.lineSeparator));}/**\n    Using the state's [line\n    separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a\n    [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.\n    */toText(string){return Text.of(string.split(this.facet(EditorState.lineSeparator)||DefaultSplit));}/**\n    Return the given range of the document as a string.\n    */sliceDoc(from=0,to=this.doc.length){return this.doc.sliceString(from,to,this.lineBreak);}/**\n    Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).\n    */facet(facet){let addr=this.config.address[facet.id];if(addr==null)return facet.default;ensureAddr(this,addr);return getAddr(this,addr);}/**\n    Convert this state to a JSON-serializable object. When custom\n    fields should be serialized, you can pass them in as an object\n    mapping property names (in the resulting object, which should\n    not use `doc` or `selection`) to fields.\n    */toJSON(fields){let result={doc:this.sliceDoc(),selection:this.selection.toJSON()};if(fields)for(let prop in fields){let value=fields[prop];if(value instanceof StateField)result[prop]=value.spec.toJSON(this.field(fields[prop]),this);}return result;}/**\n    Deserialize a state from its JSON representation. When custom\n    fields should be deserialized, pass the same object you passed\n    to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as\n    third argument.\n    */static fromJSON(json,config={},fields){if(!json||typeof json.doc!=\"string\")throw new RangeError(\"Invalid JSON representation for EditorState\");let fieldInit=[];if(fields)for(let prop in fields){let field=fields[prop],value=json[prop];fieldInit.push(field.init(state=>field.spec.fromJSON(value,state)));}return EditorState.create({doc:json.doc,selection:EditorSelection.fromJSON(json.selection),extensions:config.extensions?fieldInit.concat([config.extensions]):fieldInit});}/**\n    Create a new state. You'll usually only need this when\n    initializing an editor—updated states are created by applying\n    transactions.\n    */static create(config={}){let configuration=Configuration.resolve(config.extensions||[],new Map());let doc=config.doc instanceof Text?config.doc:Text.of((config.doc||\"\").split(configuration.staticFacet(EditorState.lineSeparator)||DefaultSplit));let selection=!config.selection?EditorSelection.single(0):config.selection instanceof EditorSelection?config.selection:EditorSelection.single(config.selection.anchor,config.selection.head);checkSelection(selection,doc.length);if(!configuration.staticFacet(allowMultipleSelections))selection=selection.asSingle();return new EditorState(configuration,doc,selection,configuration.dynamicSlots.map(()=>null),(state,slot)=>slot.create(state),null);}/**\n    The size (in columns) of a tab in the document, determined by\n    the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.\n    */get tabSize(){return this.facet(EditorState.tabSize);}/**\n    Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)\n    string for this state.\n    */get lineBreak(){return this.facet(EditorState.lineSeparator)||\"\\n\";}/**\n    Returns true when the editor is\n    [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.\n    */get readOnly(){return this.facet(readOnly);}/**\n    Look up a translation for the given phrase (via the\n    [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the\n    original string if no translation is found.\n    \n    If additional arguments are passed, they will be inserted in\n    place of markers like `$1` (for the first value) and `$2`, etc.\n    A single `$` is equivalent to `$1`, and `$$` will produce a\n    literal dollar sign.\n    */phrase(phrase,...insert){for(let map of this.facet(EditorState.phrases))if(Object.prototype.hasOwnProperty.call(map,phrase)){phrase=map[phrase];break;}if(insert.length)phrase=phrase.replace(/\\$(\\$|\\d*)/g,(m,i)=>{if(i==\"$\")return \"$\";let n=+(i||1);return n>insert.length?m:insert[n-1];});return phrase;}/**\n    Find the values for a given language data field, provided by the\n    the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.\n    */languageDataAt(name,pos,side=-1){let values=[];for(let provider of this.facet(languageData)){for(let result of provider(this,pos,side)){if(Object.prototype.hasOwnProperty.call(result,name))values.push(result[name]);}}return values;}/**\n    Return a function that can categorize strings (expected to\n    represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))\n    into one of:\n    \n     - Word (contains an alphanumeric character or a character\n       explicitly listed in the local language's `\"wordChars\"`\n       language data, which should be a string)\n     - Space (contains only whitespace)\n     - Other (anything else)\n    */charCategorizer(at){return makeCategorizer(this.languageDataAt(\"wordChars\",at).join(\"\"));}/**\n    Find the word at the given position, meaning the range\n    containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters\n    around it. If no word characters are adjacent to the position,\n    this returns null.\n    */wordAt(pos){let{text,from,length}=this.doc.lineAt(pos);let cat=this.charCategorizer(pos);let start=pos-from,end=pos-from;while(start>0){let prev=findClusterBreak(text,start,false);if(cat(text.slice(prev,start))!=CharCategory.Word)break;start=prev;}while(end<length){let next=findClusterBreak(text,end);if(cat(text.slice(end,next))!=CharCategory.Word)break;end=next;}return start==end?null:EditorSelection.range(start+from,end+from);}}/**\nA facet that, when enabled, causes the editor to allow multiple\nranges to be selected. Be careful though, because by default the\neditor relies on the native DOM selection, which cannot handle\nmultiple selections. An extension like\n[`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) can be used to make\nsecondary selections visible to the user.\n*/EditorState.allowMultipleSelections=allowMultipleSelections;/**\nConfigures the tab size to use in this state. The first\n(highest-precedence) value of the facet is used. If no value is\ngiven, this defaults to 4.\n*/EditorState.tabSize=/*@__PURE__*/Facet.define({combine:values=>values.length?values[0]:4});/**\nThe line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\nand `\"\\r\"` is treated as a separator when splitting lines, and\nlines are joined with `\"\\n\"`.\n\nWhen you configure a value here, only that precise separator\nwill be used, allowing you to round-trip documents through the\neditor without normalizing line separators.\n*/EditorState.lineSeparator=lineSeparator;/**\nThis facet controls the value of the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) getter, which is\nconsulted by commands and extensions that implement editing\nfunctionality to determine whether they should apply. It\ndefaults to false, but when its highest-precedence value is\n`true`, such functionality disables itself.\n\nNot to be confused with\n[`EditorView.editable`](https://codemirror.net/6/docs/ref/#view.EditorView^editable), which\ncontrols whether the editor's DOM is set to be editable (and\nthus focusable).\n*/EditorState.readOnly=readOnly;/**\nRegisters translation phrases. The\n[`phrase`](https://codemirror.net/6/docs/ref/#state.EditorState.phrase) method will look through\nall objects registered with this facet to find translations for\nits argument.\n*/EditorState.phrases=/*@__PURE__*/Facet.define({compare(a,b){let kA=Object.keys(a),kB=Object.keys(b);return kA.length==kB.length&&kA.every(k=>a[k]==b[k]);}});/**\nA facet used to register [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) providers.\n*/EditorState.languageData=languageData;/**\nFacet used to register change filters, which are called for each\ntransaction (unless explicitly\n[disabled](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter)), and can suppress\npart of the transaction's changes.\n\nSuch a function can return `true` to indicate that it doesn't\nwant to do anything, `false` to completely stop the changes in\nthe transaction, or a set of ranges in which changes should be\nsuppressed. Such ranges are represented as an array of numbers,\nwith each pair of two numbers indicating the start and end of a\nrange. So for example `[10, 20, 100, 110]` suppresses changes\nbetween 10 and 20, and between 100 and 110.\n*/EditorState.changeFilter=changeFilter;/**\nFacet used to register a hook that gets a chance to update or\nreplace transaction specs before they are applied. This will\nonly be applied for transactions that don't have\n[`filter`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter) set to `false`. You\ncan either return a single transaction spec (possibly the input\ntransaction), or an array of specs (which will be combined in\nthe same way as the arguments to\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update)).\n\nWhen possible, it is recommended to avoid accessing\n[`Transaction.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state) in a filter,\nsince it will force creation of a state that will then be\ndiscarded again, if the transaction is actually filtered.\n\n(This functionality should be used with care. Indiscriminately\nmodifying transaction is likely to break something or degrade\nthe user experience.)\n*/EditorState.transactionFilter=transactionFilter;/**\nThis is a more limited form of\n[`transactionFilter`](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter),\nwhich can only add\n[annotations](https://codemirror.net/6/docs/ref/#state.TransactionSpec.annotations) and\n[effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects). _But_, this type\nof filter runs even if the transaction has disabled regular\n[filtering](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter), making it suitable\nfor effects that don't need to touch the changes or selection,\nbut do want to process every transaction.\n\nExtenders run _after_ filters, when both are present.\n*/EditorState.transactionExtender=transactionExtender;Compartment.reconfigure=/*@__PURE__*/StateEffect.define();/**\nUtility function for combining behaviors to fill in a config\nobject from an array of provided configs. `defaults` should hold\ndefault values for all optional fields in `Config`.\n\nThe function will, by default, error\nwhen a field gets two values that aren't `===`-equal, but you can\nprovide combine functions per field to do something else.\n*/function combineConfig(configs,defaults,// Should hold only the optional properties of Config, but I haven't managed to express that\ncombine={}){let result={};for(let config of configs)for(let key of Object.keys(config)){let value=config[key],current=result[key];if(current===undefined)result[key]=value;else if(current===value||value===undefined);// No conflict\nelse if(Object.hasOwnProperty.call(combine,key))result[key]=combine[key](current,value);else throw new Error(\"Config merge conflict for field \"+key);}for(let key in defaults)if(result[key]===undefined)result[key]=defaults[key];return result;}/**\nEach range is associated with a value, which must inherit from\nthis class.\n*/class RangeValue{/**\n    Compare this value with another value. Used when comparing\n    rangesets. The default implementation compares by identity.\n    Unless you are only creating a fixed number of unique instances\n    of your value type, it is a good idea to implement this\n    properly.\n    */eq(other){return this==other;}/**\n    Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.\n    */range(from,to=from){return Range$2.create(from,to,this);}}RangeValue.prototype.startSide=RangeValue.prototype.endSide=0;RangeValue.prototype.point=false;RangeValue.prototype.mapMode=MapMode.TrackDel;/**\nA range associates a value with a range of positions.\n*/class Range$2{constructor(/**\n    The range's start position.\n    */from,/**\n    Its end position.\n    */to,/**\n    The value associated with this range.\n    */value){this.from=from;this.to=to;this.value=value;}/**\n    @internal\n    */static create(from,to,value){return new Range$2(from,to,value);}}function cmpRange(a,b){return a.from-b.from||a.value.startSide-b.value.startSide;}class Chunk{constructor(from,to,value,// Chunks are marked with the largest point that occurs\n// in them (or -1 for no points), so that scans that are\n// only interested in points (such as the\n// heightmap-related logic) can skip range-only chunks.\nmaxPoint){this.from=from;this.to=to;this.value=value;this.maxPoint=maxPoint;}get length(){return this.to[this.to.length-1];}// Find the index of the given position and side. Use the ranges'\n// `from` pos when `end == false`, `to` when `end == true`.\nfindIndex(pos,side,end,startAt=0){let arr=end?this.to:this.from;for(let lo=startAt,hi=arr.length;;){if(lo==hi)return lo;let mid=lo+hi>>1;let diff=arr[mid]-pos||(end?this.value[mid].endSide:this.value[mid].startSide)-side;if(mid==lo)return diff>=0?lo:hi;if(diff>=0)hi=mid;else lo=mid+1;}}between(offset,from,to,f){for(let i=this.findIndex(from,-1000000000/* Far */,true),e=this.findIndex(to,1000000000/* Far */,false,i);i<e;i++)if(f(this.from[i]+offset,this.to[i]+offset,this.value[i])===false)return false;}map(offset,changes){let value=[],from=[],to=[],newPos=-1,maxPoint=-1;for(let i=0;i<this.value.length;i++){let val=this.value[i],curFrom=this.from[i]+offset,curTo=this.to[i]+offset,newFrom,newTo;if(curFrom==curTo){let mapped=changes.mapPos(curFrom,val.startSide,val.mapMode);if(mapped==null)continue;newFrom=newTo=mapped;if(val.startSide!=val.endSide){newTo=changes.mapPos(curFrom,val.endSide);if(newTo<newFrom)continue;}}else {newFrom=changes.mapPos(curFrom,val.startSide);newTo=changes.mapPos(curTo,val.endSide);if(newFrom>newTo||newFrom==newTo&&val.startSide>0&&val.endSide<=0)continue;}if((newTo-newFrom||val.endSide-val.startSide)<0)continue;if(newPos<0)newPos=newFrom;if(val.point)maxPoint=Math.max(maxPoint,newTo-newFrom);value.push(val);from.push(newFrom-newPos);to.push(newTo-newPos);}return {mapped:value.length?new Chunk(from,to,value,maxPoint):null,pos:newPos};}}/**\nA range set stores a collection of [ranges](https://codemirror.net/6/docs/ref/#state.Range) in a\nway that makes them efficient to [map](https://codemirror.net/6/docs/ref/#state.RangeSet.map) and\n[update](https://codemirror.net/6/docs/ref/#state.RangeSet.update). This is an immutable data\nstructure.\n*/class RangeSet{constructor(/**\n    @internal\n    */chunkPos,/**\n    @internal\n    */chunk,/**\n    @internal\n    */nextLayer,/**\n    @internal\n    */maxPoint){this.chunkPos=chunkPos;this.chunk=chunk;this.nextLayer=nextLayer;this.maxPoint=maxPoint;}/**\n    @internal\n    */static create(chunkPos,chunk,nextLayer,maxPoint){return new RangeSet(chunkPos,chunk,nextLayer,maxPoint);}/**\n    @internal\n    */get length(){let last=this.chunk.length-1;return last<0?0:Math.max(this.chunkEnd(last),this.nextLayer.length);}/**\n    The number of ranges in the set.\n    */get size(){if(this.isEmpty)return 0;let size=this.nextLayer.size;for(let chunk of this.chunk)size+=chunk.value.length;return size;}/**\n    @internal\n    */chunkEnd(index){return this.chunkPos[index]+this.chunk[index].length;}/**\n    Update the range set, optionally adding new ranges or filtering\n    out existing ones.\n    \n    (Note: The type parameter is just there as a kludge to work\n    around TypeScript variance issues that prevented `RangeSet<X>`\n    from being a subtype of `RangeSet<Y>` when `X` is a subtype of\n    `Y`.)\n    */update(updateSpec){let{add=[],sort=false,filterFrom=0,filterTo=this.length}=updateSpec;let filter=updateSpec.filter;if(add.length==0&&!filter)return this;if(sort)add=add.slice().sort(cmpRange);if(this.isEmpty)return add.length?RangeSet.of(add):this;let cur=new LayerCursor(this,null,-1).goto(0),i=0,spill=[];let builder=new RangeSetBuilder();while(cur.value||i<add.length){if(i<add.length&&(cur.from-add[i].from||cur.startSide-add[i].value.startSide)>=0){let range=add[i++];if(!builder.addInner(range.from,range.to,range.value))spill.push(range);}else if(cur.rangeIndex==1&&cur.chunkIndex<this.chunk.length&&(i==add.length||this.chunkEnd(cur.chunkIndex)<add[i].from)&&(!filter||filterFrom>this.chunkEnd(cur.chunkIndex)||filterTo<this.chunkPos[cur.chunkIndex])&&builder.addChunk(this.chunkPos[cur.chunkIndex],this.chunk[cur.chunkIndex])){cur.nextChunk();}else {if(!filter||filterFrom>cur.to||filterTo<cur.from||filter(cur.from,cur.to,cur.value)){if(!builder.addInner(cur.from,cur.to,cur.value))spill.push(Range$2.create(cur.from,cur.to,cur.value));}cur.next();}}return builder.finishInner(this.nextLayer.isEmpty&&!spill.length?RangeSet.empty:this.nextLayer.update({add:spill,filter,filterFrom,filterTo}));}/**\n    Map this range set through a set of changes, return the new set.\n    */map(changes){if(changes.empty||this.isEmpty)return this;let chunks=[],chunkPos=[],maxPoint=-1;for(let i=0;i<this.chunk.length;i++){let start=this.chunkPos[i],chunk=this.chunk[i];let touch=changes.touchesRange(start,start+chunk.length);if(touch===false){maxPoint=Math.max(maxPoint,chunk.maxPoint);chunks.push(chunk);chunkPos.push(changes.mapPos(start));}else if(touch===true){let{mapped,pos}=chunk.map(start,changes);if(mapped){maxPoint=Math.max(maxPoint,mapped.maxPoint);chunks.push(mapped);chunkPos.push(pos);}}}let next=this.nextLayer.map(changes);return chunks.length==0?next:new RangeSet(chunkPos,chunks,next||RangeSet.empty,maxPoint);}/**\n    Iterate over the ranges that touch the region `from` to `to`,\n    calling `f` for each. There is no guarantee that the ranges will\n    be reported in any specific order. When the callback returns\n    `false`, iteration stops.\n    */between(from,to,f){if(this.isEmpty)return;for(let i=0;i<this.chunk.length;i++){let start=this.chunkPos[i],chunk=this.chunk[i];if(to>=start&&from<=start+chunk.length&&chunk.between(start,from-start,to-start,f)===false)return;}this.nextLayer.between(from,to,f);}/**\n    Iterate over the ranges in this set, in order, including all\n    ranges that end at or after `from`.\n    */iter(from=0){return HeapCursor.from([this]).goto(from);}/**\n    @internal\n    */get isEmpty(){return this.nextLayer==this;}/**\n    Iterate over the ranges in a collection of sets, in order,\n    starting from `from`.\n    */static iter(sets,from=0){return HeapCursor.from(sets).goto(from);}/**\n    Iterate over two groups of sets, calling methods on `comparator`\n    to notify it of possible differences.\n    */static compare(oldSets,newSets,/**\n    This indicates how the underlying data changed between these\n    ranges, and is needed to synchronize the iteration. `from` and\n    `to` are coordinates in the _new_ space, after these changes.\n    */textDiff,comparator,/**\n    Can be used to ignore all non-point ranges, and points below\n    the given size. When -1, all ranges are compared.\n    */minPointSize=-1){let a=oldSets.filter(set=>set.maxPoint>0||!set.isEmpty&&set.maxPoint>=minPointSize);let b=newSets.filter(set=>set.maxPoint>0||!set.isEmpty&&set.maxPoint>=minPointSize);let sharedChunks=findSharedChunks(a,b,textDiff);let sideA=new SpanCursor(a,sharedChunks,minPointSize);let sideB=new SpanCursor(b,sharedChunks,minPointSize);textDiff.iterGaps((fromA,fromB,length)=>compare(sideA,fromA,sideB,fromB,length,comparator));if(textDiff.empty&&textDiff.length==0)compare(sideA,0,sideB,0,0,comparator);}/**\n    Compare the contents of two groups of range sets, returning true\n    if they are equivalent in the given range.\n    */static eq(oldSets,newSets,from=0,to){if(to==null)to=1000000000/* Far */;let a=oldSets.filter(set=>!set.isEmpty&&newSets.indexOf(set)<0);let b=newSets.filter(set=>!set.isEmpty&&oldSets.indexOf(set)<0);if(a.length!=b.length)return false;if(!a.length)return true;let sharedChunks=findSharedChunks(a,b);let sideA=new SpanCursor(a,sharedChunks,0).goto(from),sideB=new SpanCursor(b,sharedChunks,0).goto(from);for(;;){if(sideA.to!=sideB.to||!sameValues(sideA.active,sideB.active)||sideA.point&&(!sideB.point||!sideA.point.eq(sideB.point)))return false;if(sideA.to>to)return true;sideA.next();sideB.next();}}/**\n    Iterate over a group of range sets at the same time, notifying\n    the iterator about the ranges covering every given piece of\n    content. Returns the open count (see\n    [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end\n    of the iteration.\n    */static spans(sets,from,to,iterator,/**\n    When given and greater than -1, only points of at least this\n    size are taken into account.\n    */minPointSize=-1){let cursor=new SpanCursor(sets,null,minPointSize).goto(from),pos=from;let open=cursor.openStart;for(;;){let curTo=Math.min(cursor.to,to);if(cursor.point){iterator.point(pos,curTo,cursor.point,cursor.activeForPoint(cursor.to),open,cursor.pointRank);open=cursor.openEnd(curTo)+(cursor.to>curTo?1:0);}else if(curTo>pos){iterator.span(pos,curTo,cursor.active,open);open=cursor.openEnd(curTo);}if(cursor.to>to)break;pos=cursor.to;cursor.next();}return open;}/**\n    Create a range set for the given range or array of ranges. By\n    default, this expects the ranges to be _sorted_ (by start\n    position and, if two start at the same position,\n    `value.startSide`). You can pass `true` as second argument to\n    cause the method to sort them.\n    */static of(ranges,sort=false){let build=new RangeSetBuilder();for(let range of ranges instanceof Range$2?[ranges]:sort?lazySort(ranges):ranges)build.add(range.from,range.to,range.value);return build.finish();}}/**\nThe empty set of ranges.\n*/RangeSet.empty=/*@__PURE__*/new RangeSet([],[],null,-1);function lazySort(ranges){if(ranges.length>1)for(let prev=ranges[0],i=1;i<ranges.length;i++){let cur=ranges[i];if(cmpRange(prev,cur)>0)return ranges.slice().sort(cmpRange);prev=cur;}return ranges;}RangeSet.empty.nextLayer=RangeSet.empty;/**\nA range set builder is a data structure that helps build up a\n[range set](https://codemirror.net/6/docs/ref/#state.RangeSet) directly, without first allocating\nan array of [`Range`](https://codemirror.net/6/docs/ref/#state.Range) objects.\n*/class RangeSetBuilder{/**\n    Create an empty builder.\n    */constructor(){this.chunks=[];this.chunkPos=[];this.chunkStart=-1;this.last=null;this.lastFrom=-1000000000/* Far */;this.lastTo=-1000000000/* Far */;this.from=[];this.to=[];this.value=[];this.maxPoint=-1;this.setMaxPoint=-1;this.nextLayer=null;}finishChunk(newArrays){this.chunks.push(new Chunk(this.from,this.to,this.value,this.maxPoint));this.chunkPos.push(this.chunkStart);this.chunkStart=-1;this.setMaxPoint=Math.max(this.setMaxPoint,this.maxPoint);this.maxPoint=-1;if(newArrays){this.from=[];this.to=[];this.value=[];}}/**\n    Add a range. Ranges should be added in sorted (by `from` and\n    `value.startSide`) order.\n    */add(from,to,value){if(!this.addInner(from,to,value))(this.nextLayer||(this.nextLayer=new RangeSetBuilder())).add(from,to,value);}/**\n    @internal\n    */addInner(from,to,value){let diff=from-this.lastTo||value.startSide-this.last.endSide;if(diff<=0&&(from-this.lastFrom||value.startSide-this.last.startSide)<0)throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");if(diff<0)return false;if(this.from.length==250/* ChunkSize */)this.finishChunk(true);if(this.chunkStart<0)this.chunkStart=from;this.from.push(from-this.chunkStart);this.to.push(to-this.chunkStart);this.last=value;this.lastFrom=from;this.lastTo=to;this.value.push(value);if(value.point)this.maxPoint=Math.max(this.maxPoint,to-from);return true;}/**\n    @internal\n    */addChunk(from,chunk){if((from-this.lastTo||chunk.value[0].startSide-this.last.endSide)<0)return false;if(this.from.length)this.finishChunk(true);this.setMaxPoint=Math.max(this.setMaxPoint,chunk.maxPoint);this.chunks.push(chunk);this.chunkPos.push(from);let last=chunk.value.length-1;this.last=chunk.value[last];this.lastFrom=chunk.from[last]+from;this.lastTo=chunk.to[last]+from;return true;}/**\n    Finish the range set. Returns the new set. The builder can't be\n    used anymore after this has been called.\n    */finish(){return this.finishInner(RangeSet.empty);}/**\n    @internal\n    */finishInner(next){if(this.from.length)this.finishChunk(false);if(this.chunks.length==0)return next;let result=RangeSet.create(this.chunkPos,this.chunks,this.nextLayer?this.nextLayer.finishInner(next):next,this.setMaxPoint);this.from=null;// Make sure further `add` calls produce errors\nreturn result;}}function findSharedChunks(a,b,textDiff){let inA=new Map();for(let set of a)for(let i=0;i<set.chunk.length;i++)if(set.chunk[i].maxPoint<=0)inA.set(set.chunk[i],set.chunkPos[i]);let shared=new Set();for(let set of b)for(let i=0;i<set.chunk.length;i++){let known=inA.get(set.chunk[i]);if(known!=null&&(textDiff?textDiff.mapPos(known):known)==set.chunkPos[i]&&!(textDiff===null||textDiff===void 0?void 0:textDiff.touchesRange(known,known+set.chunk[i].length)))shared.add(set.chunk[i]);}return shared;}class LayerCursor{constructor(layer,skip,minPoint,rank=0){this.layer=layer;this.skip=skip;this.minPoint=minPoint;this.rank=rank;}get startSide(){return this.value?this.value.startSide:0;}get endSide(){return this.value?this.value.endSide:0;}goto(pos,side=-1000000000/* Far */){this.chunkIndex=this.rangeIndex=0;this.gotoInner(pos,side,false);return this;}gotoInner(pos,side,forward){while(this.chunkIndex<this.layer.chunk.length){let next=this.layer.chunk[this.chunkIndex];if(!(this.skip&&this.skip.has(next)||this.layer.chunkEnd(this.chunkIndex)<pos||next.maxPoint<this.minPoint))break;this.chunkIndex++;forward=false;}if(this.chunkIndex<this.layer.chunk.length){let rangeIndex=this.layer.chunk[this.chunkIndex].findIndex(pos-this.layer.chunkPos[this.chunkIndex],side,true);if(!forward||this.rangeIndex<rangeIndex)this.setRangeIndex(rangeIndex);}this.next();}forward(pos,side){if((this.to-pos||this.endSide-side)<0)this.gotoInner(pos,side,true);}next(){for(;;){if(this.chunkIndex==this.layer.chunk.length){this.from=this.to=1000000000/* Far */;this.value=null;break;}else {let chunkPos=this.layer.chunkPos[this.chunkIndex],chunk=this.layer.chunk[this.chunkIndex];let from=chunkPos+chunk.from[this.rangeIndex];this.from=from;this.to=chunkPos+chunk.to[this.rangeIndex];this.value=chunk.value[this.rangeIndex];this.setRangeIndex(this.rangeIndex+1);if(this.minPoint<0||this.value.point&&this.to-this.from>=this.minPoint)break;}}}setRangeIndex(index){if(index==this.layer.chunk[this.chunkIndex].value.length){this.chunkIndex++;if(this.skip){while(this.chunkIndex<this.layer.chunk.length&&this.skip.has(this.layer.chunk[this.chunkIndex]))this.chunkIndex++;}this.rangeIndex=0;}else {this.rangeIndex=index;}}nextChunk(){this.chunkIndex++;this.rangeIndex=0;this.next();}compare(other){return this.from-other.from||this.startSide-other.startSide||this.rank-other.rank||this.to-other.to||this.endSide-other.endSide;}}class HeapCursor{constructor(heap){this.heap=heap;}static from(sets,skip=null,minPoint=-1){let heap=[];for(let i=0;i<sets.length;i++){for(let cur=sets[i];!cur.isEmpty;cur=cur.nextLayer){if(cur.maxPoint>=minPoint)heap.push(new LayerCursor(cur,skip,minPoint,i));}}return heap.length==1?heap[0]:new HeapCursor(heap);}get startSide(){return this.value?this.value.startSide:0;}goto(pos,side=-1000000000/* Far */){for(let cur of this.heap)cur.goto(pos,side);for(let i=this.heap.length>>1;i>=0;i--)heapBubble(this.heap,i);this.next();return this;}forward(pos,side){for(let cur of this.heap)cur.forward(pos,side);for(let i=this.heap.length>>1;i>=0;i--)heapBubble(this.heap,i);if((this.to-pos||this.value.endSide-side)<0)this.next();}next(){if(this.heap.length==0){this.from=this.to=1000000000/* Far */;this.value=null;this.rank=-1;}else {let top=this.heap[0];this.from=top.from;this.to=top.to;this.value=top.value;this.rank=top.rank;if(top.value)top.next();heapBubble(this.heap,0);}}}function heapBubble(heap,index){for(let cur=heap[index];;){let childIndex=(index<<1)+1;if(childIndex>=heap.length)break;let child=heap[childIndex];if(childIndex+1<heap.length&&child.compare(heap[childIndex+1])>=0){child=heap[childIndex+1];childIndex++;}if(cur.compare(child)<0)break;heap[childIndex]=cur;heap[index]=child;index=childIndex;}}class SpanCursor{constructor(sets,skip,minPoint){this.minPoint=minPoint;this.active=[];this.activeTo=[];this.activeRank=[];this.minActive=-1;// A currently active point range, if any\nthis.point=null;this.pointFrom=0;this.pointRank=0;this.to=-1000000000/* Far */;this.endSide=0;this.openStart=-1;this.cursor=HeapCursor.from(sets,skip,minPoint);}goto(pos,side=-1000000000/* Far */){this.cursor.goto(pos,side);this.active.length=this.activeTo.length=this.activeRank.length=0;this.minActive=-1;this.to=pos;this.endSide=side;this.openStart=-1;this.next();return this;}forward(pos,side){while(this.minActive>-1&&(this.activeTo[this.minActive]-pos||this.active[this.minActive].endSide-side)<0)this.removeActive(this.minActive);this.cursor.forward(pos,side);}removeActive(index){remove(this.active,index);remove(this.activeTo,index);remove(this.activeRank,index);this.minActive=findMinIndex(this.active,this.activeTo);}addActive(trackOpen){let i=0,{value,to,rank}=this.cursor;while(i<this.activeRank.length&&this.activeRank[i]<=rank)i++;insert(this.active,i,value);insert(this.activeTo,i,to);insert(this.activeRank,i,rank);if(trackOpen)insert(trackOpen,i,this.cursor.from);this.minActive=findMinIndex(this.active,this.activeTo);}// After calling this, if `this.point` != null, the next range is a\n// point. Otherwise, it's a regular range, covered by `this.active`.\nnext(){let from=this.to,wasPoint=this.point;this.point=null;let trackOpen=this.openStart<0?[]:null,trackExtra=0;for(;;){let a=this.minActive;if(a>-1&&(this.activeTo[a]-this.cursor.from||this.active[a].endSide-this.cursor.startSide)<0){if(this.activeTo[a]>from){this.to=this.activeTo[a];this.endSide=this.active[a].endSide;break;}this.removeActive(a);if(trackOpen)remove(trackOpen,a);}else if(!this.cursor.value){this.to=this.endSide=1000000000/* Far */;break;}else if(this.cursor.from>from){this.to=this.cursor.from;this.endSide=this.cursor.startSide;break;}else {let nextVal=this.cursor.value;if(!nextVal.point){// Opening a range\nthis.addActive(trackOpen);this.cursor.next();}else if(wasPoint&&this.cursor.to==this.to&&this.cursor.from<this.cursor.to){// Ignore any non-empty points that end precisely at the end of the prev point\nthis.cursor.next();}else {// New point\nthis.point=nextVal;this.pointFrom=this.cursor.from;this.pointRank=this.cursor.rank;this.to=this.cursor.to;this.endSide=nextVal.endSide;if(this.cursor.from<from)trackExtra=1;this.cursor.next();this.forward(this.to,this.endSide);break;}}}if(trackOpen){let openStart=0;while(openStart<trackOpen.length&&trackOpen[openStart]<from)openStart++;this.openStart=openStart+trackExtra;}}activeForPoint(to){if(!this.active.length)return this.active;let active=[];for(let i=this.active.length-1;i>=0;i--){if(this.activeRank[i]<this.pointRank)break;if(this.activeTo[i]>to||this.activeTo[i]==to&&this.active[i].endSide>=this.point.endSide)active.push(this.active[i]);}return active.reverse();}openEnd(to){let open=0;for(let i=this.activeTo.length-1;i>=0&&this.activeTo[i]>to;i--)open++;return open;}}function compare(a,startA,b,startB,length,comparator){a.goto(startA);b.goto(startB);let endB=startB+length;let pos=startB,dPos=startB-startA;for(;;){let diff=a.to+dPos-b.to||a.endSide-b.endSide;let end=diff<0?a.to+dPos:b.to,clipEnd=Math.min(end,endB);if(a.point||b.point){if(!(a.point&&b.point&&(a.point==b.point||a.point.eq(b.point))&&sameValues(a.activeForPoint(a.to+dPos),b.activeForPoint(b.to))))comparator.comparePoint(pos,clipEnd,a.point,b.point);}else {if(clipEnd>pos&&!sameValues(a.active,b.active))comparator.compareRange(pos,clipEnd,a.active,b.active);}if(end>endB)break;pos=end;if(diff<=0)a.next();if(diff>=0)b.next();}}function sameValues(a,b){if(a.length!=b.length)return false;for(let i=0;i<a.length;i++)if(a[i]!=b[i]&&!a[i].eq(b[i]))return false;return true;}function remove(array,index){for(let i=index,e=array.length-1;i<e;i++)array[i]=array[i+1];array.pop();}function insert(array,index,value){for(let i=array.length-1;i>=index;i--)array[i+1]=array[i];array[index]=value;}function findMinIndex(value,array){let found=-1,foundPos=1000000000/* Far */;for(let i=0;i<array.length;i++)if((array[i]-foundPos||value[i].endSide-value[found].endSide)<0){found=i;foundPos=array[i];}return found;}/**\nCount the column position at the given offset into the string,\ntaking extending characters and tab size into account.\n*/function countColumn(string,tabSize,to=string.length){let n=0;for(let i=0;i<to;){if(string.charCodeAt(i)==9){n+=tabSize-n%tabSize;i++;}else {n++;i=findClusterBreak(string,i);}}return n;}/**\nFind the offset that corresponds to the given column position in a\nstring, taking extending characters and tab size into account. By\ndefault, the string length is returned when it is too short to\nreach the column. Pass `strict` true to make it return -1 in that\nsituation.\n*/function findColumn(string,col,tabSize,strict){for(let i=0,n=0;;){if(n>=col)return i;if(i==string.length)break;n+=string.charCodeAt(i)==9?tabSize-n%tabSize:1;i=findClusterBreak(string,i);}return strict===true?-1:string.length;}const C=\"\\u037c\";const COUNT=typeof Symbol==\"undefined\"?\"__\"+C:Symbol.for(C);const SET=typeof Symbol==\"undefined\"?\"__styleSet\"+Math.floor(Math.random()*1e8):Symbol(\"styleSet\");const top=typeof globalThis!=\"undefined\"?globalThis:typeof window!=\"undefined\"?window:{};// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nclass StyleModule{// :: (Object<Style>, ?{finish: ?(string) → string})\n// Create a style module from the given spec.\n//\n// When `finish` is given, it is called on regular (non-`@`)\n// selectors (after `&` expansion) to compute the final selector.\nconstructor(spec,options){this.rules=[];let{finish}=options||{};function splitSelector(selector){return /^@/.test(selector)?[selector]:selector.split(/,\\s*/);}function render(selectors,spec,target,isKeyframes){let local=[],isAt=/^@(\\w+)\\b/.exec(selectors[0]),keyframes=isAt&&isAt[1]==\"keyframes\";if(isAt&&spec==null)return target.push(selectors[0]+\";\");for(let prop in spec){let value=spec[prop];if(/&/.test(prop)){render(prop.split(/,\\s*/).map(part=>selectors.map(sel=>part.replace(/&/,sel))).reduce((a,b)=>a.concat(b)),value,target);}else if(value&&typeof value==\"object\"){if(!isAt)throw new RangeError(\"The value of a property (\"+prop+\") should be a primitive value.\");render(splitSelector(prop),value,local,keyframes);}else if(value!=null){local.push(prop.replace(/_.*/,\"\").replace(/[A-Z]/g,l=>\"-\"+l.toLowerCase())+\": \"+value+\";\");}}if(local.length||keyframes){target.push((finish&&!isAt&&!isKeyframes?selectors.map(finish):selectors).join(\", \")+\" {\"+local.join(\" \")+\"}\");}}for(let prop in spec)render(splitSelector(prop),spec[prop],this.rules);}// :: () → string\n// Returns a string containing the module's CSS rules.\ngetRules(){return this.rules.join(\"\\n\");}// :: () → string\n// Generate a new unique CSS class name.\nstatic newName(){let id=top[COUNT]||1;top[COUNT]=id+1;return C+id.toString(36);}// :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>)\n//\n// Mount the given set of modules in the given DOM root, which ensures\n// that the CSS rules defined by the module are available in that\n// context.\n//\n// Rules are only added to the document once per root.\n//\n// Rule order will follow the order of the modules, so that rules from\n// modules later in the array take precedence of those from earlier\n// modules. If you call this function multiple times for the same root\n// in a way that changes the order of already mounted modules, the old\n// order will be changed.\nstatic mount(root,modules){(root[SET]||new StyleSet(root)).mount(Array.isArray(modules)?modules:[modules]);}}let adoptedSet=null;class StyleSet{constructor(root){if(!root.head&&root.adoptedStyleSheets&&typeof CSSStyleSheet!=\"undefined\"){if(adoptedSet){root.adoptedStyleSheets=[adoptedSet.sheet].concat(root.adoptedStyleSheets);return root[SET]=adoptedSet;}this.sheet=new CSSStyleSheet();root.adoptedStyleSheets=[this.sheet].concat(root.adoptedStyleSheets);adoptedSet=this;}else {this.styleTag=(root.ownerDocument||root).createElement(\"style\");let target=root.head||root;target.insertBefore(this.styleTag,target.firstChild);}this.modules=[];root[SET]=this;}mount(modules){let sheet=this.sheet;let pos=0/* Current rule offset */,j=0;/* Index into this.modules */for(let i=0;i<modules.length;i++){let mod=modules[i],index=this.modules.indexOf(mod);if(index<j&&index>-1){// Ordering conflict\nthis.modules.splice(index,1);j--;index=-1;}if(index==-1){this.modules.splice(j++,0,mod);if(sheet)for(let k=0;k<mod.rules.length;k++)sheet.insertRule(mod.rules[k],pos++);}else {while(j<index)pos+=this.modules[j++].rules.length;pos+=mod.rules.length;j++;}}if(!sheet){let text=\"\";for(let i=0;i<this.modules.length;i++)text+=this.modules[i].getRules()+\"\\n\";this.styleTag.textContent=text;}}}// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\nvar base={8:\"Backspace\",9:\"Tab\",10:\"Enter\",12:\"NumLock\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",44:\"PrintScreen\",45:\"Insert\",46:\"Delete\",59:\";\",61:\"=\",91:\"Meta\",92:\"Meta\",106:\"*\",107:\"+\",108:\",\",109:\"-\",110:\".\",111:\"/\",144:\"NumLock\",145:\"ScrollLock\",160:\"Shift\",161:\"Shift\",162:\"Control\",163:\"Control\",164:\"Alt\",165:\"Alt\",173:\"-\",186:\";\",187:\"=\",188:\",\",189:\"-\",190:\".\",191:\"/\",192:\"`\",219:\"[\",220:\"\\\\\",221:\"]\",222:\"'\",229:\"q\"};var shift={48:\")\",49:\"!\",50:\"@\",51:\"#\",52:\"$\",53:\"%\",54:\"^\",55:\"&\",56:\"*\",57:\"(\",59:\":\",61:\"+\",173:\"_\",186:\":\",187:\"+\",188:\"<\",189:\"_\",190:\">\",191:\"?\",192:\"~\",219:\"{\",220:\"|\",221:\"}\",222:\"\\\"\",229:\"Q\"};var chrome$1=typeof navigator!=\"undefined\"&&/Chrome\\/(\\d+)/.exec(navigator.userAgent);var safari$1=typeof navigator!=\"undefined\"&&/Apple Computer/.test(navigator.vendor);var gecko$1=typeof navigator!=\"undefined\"&&/Gecko\\/\\d+/.test(navigator.userAgent);var mac=typeof navigator!=\"undefined\"&&/Mac/.test(navigator.platform);var ie$1=typeof navigator!=\"undefined\"&&/MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent);var brokenModifierNames=chrome$1&&(mac||+chrome$1[1]<57)||gecko$1&&mac;// Fill in the digit keys\nfor(var i=0;i<10;i++)base[48+i]=base[96+i]=String(i);// The function keys\nfor(var i=1;i<=24;i++)base[i+111]=\"F\"+i;// And the alphabetic keys\nfor(var i=65;i<=90;i++){base[i]=String.fromCharCode(i+32);shift[i]=String.fromCharCode(i);}// For each code that doesn't have a shift-equivalent, copy the base name\nfor(var code in base)if(!shift.hasOwnProperty(code))shift[code]=base[code];function keyName(event){// Don't trust event.key in Chrome when there are modifiers until\n// they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\nvar ignoreKey=brokenModifierNames&&(event.ctrlKey||event.altKey||event.metaKey)||(safari$1||ie$1)&&event.shiftKey&&event.key&&event.key.length==1;var name=!ignoreKey&&event.key||(event.shiftKey?shift:base)[event.keyCode]||event.key||\"Unidentified\";// Edge sometimes produces wrong names (Issue #3)\nif(name==\"Esc\")name=\"Escape\";if(name==\"Del\")name=\"Delete\";// https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\nif(name==\"Left\")name=\"ArrowLeft\";if(name==\"Up\")name=\"ArrowUp\";if(name==\"Right\")name=\"ArrowRight\";if(name==\"Down\")name=\"ArrowDown\";return name;}function getSelection(root){let target;// Browsers differ on whether shadow roots have a getSelection\n// method. If it exists, use that, otherwise, call it on the\n// document.\nif(root.nodeType==11){// Shadow root\ntarget=root.getSelection?root:root.ownerDocument;}else {target=root;}return target.getSelection();}function contains(dom,node){return node?dom==node||dom.contains(node.nodeType!=1?node.parentNode:node):false;}function deepActiveElement(){let elt=document.activeElement;while(elt&&elt.shadowRoot)elt=elt.shadowRoot.activeElement;return elt;}function hasSelection(dom,selection){if(!selection.anchorNode)return false;try{// Firefox will raise 'permission denied' errors when accessing\n// properties of `sel.anchorNode` when it's in a generated CSS\n// element.\nreturn contains(dom,selection.anchorNode);}catch(_){return false;}}function clientRectsFor(dom){if(dom.nodeType==3)return textRange(dom,0,dom.nodeValue.length).getClientRects();else if(dom.nodeType==1)return dom.getClientRects();else return [];}// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node,off,targetNode,targetOff){return targetNode?scanFor(node,off,targetNode,targetOff,-1)||scanFor(node,off,targetNode,targetOff,1):false;}function domIndex(node){for(var index=0;;index++){node=node.previousSibling;if(!node)return index;}}function scanFor(node,off,targetNode,targetOff,dir){for(;;){if(node==targetNode&&off==targetOff)return true;if(off==(dir<0?0:maxOffset(node))){if(node.nodeName==\"DIV\")return false;let parent=node.parentNode;if(!parent||parent.nodeType!=1)return false;off=domIndex(node)+(dir<0?0:1);node=parent;}else if(node.nodeType==1){node=node.childNodes[off+(dir<0?-1:0)];if(node.nodeType==1&&node.contentEditable==\"false\")return false;off=dir<0?maxOffset(node):0;}else {return false;}}}function maxOffset(node){return node.nodeType==3?node.nodeValue.length:node.childNodes.length;}const Rect0={left:0,right:0,top:0,bottom:0};function flattenRect(rect,left){let x=left?rect.left:rect.right;return {left:x,right:x,top:rect.top,bottom:rect.bottom};}function windowRect(win){return {left:0,right:win.innerWidth,top:0,bottom:win.innerHeight};}function scrollRectIntoView(dom,rect,side,x,y,xMargin,yMargin,ltr){let doc=dom.ownerDocument,win=doc.defaultView;for(let cur=dom;cur;){if(cur.nodeType==1){// Element\nlet bounding,top=cur==doc.body;if(top){bounding=windowRect(win);}else {if(cur.scrollHeight<=cur.clientHeight&&cur.scrollWidth<=cur.clientWidth){cur=cur.parentNode;continue;}let rect=cur.getBoundingClientRect();// Make sure scrollbar width isn't included in the rectangle\nbounding={left:rect.left,right:rect.left+cur.clientWidth,top:rect.top,bottom:rect.top+cur.clientHeight};}let moveX=0,moveY=0;if(y==\"nearest\"){if(rect.top<bounding.top){moveY=-(bounding.top-rect.top+yMargin);if(side>0&&rect.bottom>bounding.bottom+moveY)moveY=rect.bottom-bounding.bottom+moveY+yMargin;}else if(rect.bottom>bounding.bottom){moveY=rect.bottom-bounding.bottom+yMargin;if(side<0&&rect.top-moveY<bounding.top)moveY=-(bounding.top+moveY-rect.top+yMargin);}}else {let rectHeight=rect.bottom-rect.top,boundingHeight=bounding.bottom-bounding.top;let targetTop=y==\"center\"&&rectHeight<=boundingHeight?rect.top+rectHeight/2-boundingHeight/2:y==\"start\"||y==\"center\"&&side<0?rect.top-yMargin:rect.bottom-boundingHeight+yMargin;moveY=targetTop-bounding.top;}if(x==\"nearest\"){if(rect.left<bounding.left){moveX=-(bounding.left-rect.left+xMargin);if(side>0&&rect.right>bounding.right+moveX)moveX=rect.right-bounding.right+moveX+xMargin;}else if(rect.right>bounding.right){moveX=rect.right-bounding.right+xMargin;if(side<0&&rect.left<bounding.left+moveX)moveX=-(bounding.left+moveX-rect.left+xMargin);}}else {let targetLeft=x==\"center\"?rect.left+(rect.right-rect.left)/2-(bounding.right-bounding.left)/2:x==\"start\"==ltr?rect.left-xMargin:rect.right-(bounding.right-bounding.left)+xMargin;moveX=targetLeft-bounding.left;}if(moveX||moveY){if(top){win.scrollBy(moveX,moveY);}else {if(moveY){let start=cur.scrollTop;cur.scrollTop+=moveY;moveY=cur.scrollTop-start;}if(moveX){let start=cur.scrollLeft;cur.scrollLeft+=moveX;moveX=cur.scrollLeft-start;}rect={left:rect.left-moveX,top:rect.top-moveY,right:rect.right-moveX,bottom:rect.bottom-moveY};}}if(top)break;cur=cur.assignedSlot||cur.parentNode;x=y=\"nearest\";}else if(cur.nodeType==11){// A shadow root\ncur=cur.host;}else {break;}}}class DOMSelectionState{constructor(){this.anchorNode=null;this.anchorOffset=0;this.focusNode=null;this.focusOffset=0;}eq(domSel){return this.anchorNode==domSel.anchorNode&&this.anchorOffset==domSel.anchorOffset&&this.focusNode==domSel.focusNode&&this.focusOffset==domSel.focusOffset;}setRange(range){this.set(range.anchorNode,range.anchorOffset,range.focusNode,range.focusOffset);}set(anchorNode,anchorOffset,focusNode,focusOffset){this.anchorNode=anchorNode;this.anchorOffset=anchorOffset;this.focusNode=focusNode;this.focusOffset=focusOffset;}}let preventScrollSupported=null;// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom){if(dom.setActive)return dom.setActive();// in IE\nif(preventScrollSupported)return dom.focus(preventScrollSupported);let stack=[];for(let cur=dom;cur;cur=cur.parentNode){stack.push(cur,cur.scrollTop,cur.scrollLeft);if(cur==cur.ownerDocument)break;}dom.focus(preventScrollSupported==null?{get preventScroll(){preventScrollSupported={preventScroll:true};return true;}}:undefined);if(!preventScrollSupported){preventScrollSupported=false;for(let i=0;i<stack.length;){let elt=stack[i++],top=stack[i++],left=stack[i++];if(elt.scrollTop!=top)elt.scrollTop=top;if(elt.scrollLeft!=left)elt.scrollLeft=left;}}}let scratchRange;function textRange(node,from,to=from){let range=scratchRange||(scratchRange=document.createRange());range.setEnd(node,to);range.setStart(node,from);return range;}function dispatchKey(elt,name,code){let options={key:name,code:name,keyCode:code,which:code,cancelable:true};let down=new KeyboardEvent(\"keydown\",options);down.synthetic=true;elt.dispatchEvent(down);let up=new KeyboardEvent(\"keyup\",options);up.synthetic=true;elt.dispatchEvent(up);return down.defaultPrevented||up.defaultPrevented;}function getRoot(node){while(node){if(node&&(node.nodeType==9||node.nodeType==11&&node.host))return node;node=node.assignedSlot||node.parentNode;}return null;}function clearAttributes(node){while(node.attributes.length)node.removeAttributeNode(node.attributes[0]);}class DOMPos{constructor(node,offset,precise=true){this.node=node;this.offset=offset;this.precise=precise;}static before(dom,precise){return new DOMPos(dom.parentNode,domIndex(dom),precise);}static after(dom,precise){return new DOMPos(dom.parentNode,domIndex(dom)+1,precise);}}const noChildren=[];class ContentView{constructor(){this.parent=null;this.dom=null;this.dirty=2/* Node */;}get editorView(){if(!this.parent)throw new Error(\"Accessing view in orphan content view\");return this.parent.editorView;}get overrideDOMText(){return null;}get posAtStart(){return this.parent?this.parent.posBefore(this):0;}get posAtEnd(){return this.posAtStart+this.length;}posBefore(view){let pos=this.posAtStart;for(let child of this.children){if(child==view)return pos;pos+=child.length+child.breakAfter;}throw new RangeError(\"Invalid child in posBefore\");}posAfter(view){return this.posBefore(view)+view.length;}// Will return a rectangle directly before (when side < 0), after\n// (side > 0) or directly on (when the browser supports it) the\n// given position.\ncoordsAt(_pos,_side){return null;}sync(track){if(this.dirty&2/* Node */){let parent=this.dom;let prev=null,next;for(let child of this.children){if(child.dirty){if(!child.dom&&(next=prev?prev.nextSibling:parent.firstChild)){let contentView=ContentView.get(next);if(!contentView||!contentView.parent&&contentView.constructor==child.constructor)child.reuseDOM(next);}child.sync(track);child.dirty=0/* Not */;}next=prev?prev.nextSibling:parent.firstChild;if(track&&!track.written&&track.node==parent&&next!=child.dom)track.written=true;if(child.dom.parentNode==parent){while(next&&next!=child.dom)next=rm$1(next);}else {parent.insertBefore(child.dom,next);}prev=child.dom;}next=prev?prev.nextSibling:parent.firstChild;if(next&&track&&track.node==parent)track.written=true;while(next)next=rm$1(next);}else if(this.dirty&1/* Child */){for(let child of this.children)if(child.dirty){child.sync(track);child.dirty=0/* Not */;}}}reuseDOM(_dom){}localPosFromDOM(node,offset){let after;if(node==this.dom){after=this.dom.childNodes[offset];}else {let bias=maxOffset(node)==0?0:offset==0?-1:1;for(;;){let parent=node.parentNode;if(parent==this.dom)break;if(bias==0&&parent.firstChild!=parent.lastChild){if(node==parent.firstChild)bias=-1;else bias=1;}node=parent;}if(bias<0)after=node;else after=node.nextSibling;}if(after==this.dom.firstChild)return 0;while(after&&!ContentView.get(after))after=after.nextSibling;if(!after)return this.length;for(let i=0,pos=0;;i++){let child=this.children[i];if(child.dom==after)return pos;pos+=child.length+child.breakAfter;}}domBoundsAround(from,to,offset=0){let fromI=-1,fromStart=-1,toI=-1,toEnd=-1;for(let i=0,pos=offset,prevEnd=offset;i<this.children.length;i++){let child=this.children[i],end=pos+child.length;if(pos<from&&end>to)return child.domBoundsAround(from,to,pos);if(end>=from&&fromI==-1){fromI=i;fromStart=pos;}if(pos>to&&child.dom.parentNode==this.dom){toI=i;toEnd=prevEnd;break;}prevEnd=end;pos=end+child.breakAfter;}return {from:fromStart,to:toEnd<0?offset+this.length:toEnd,startDOM:(fromI?this.children[fromI-1].dom.nextSibling:null)||this.dom.firstChild,endDOM:toI<this.children.length&&toI>=0?this.children[toI].dom:null};}markDirty(andParent=false){this.dirty|=2/* Node */;this.markParentsDirty(andParent);}markParentsDirty(childList){for(let parent=this.parent;parent;parent=parent.parent){if(childList)parent.dirty|=2/* Node */;if(parent.dirty&1/* Child */)return;parent.dirty|=1/* Child */;childList=false;}}setParent(parent){if(this.parent!=parent){this.parent=parent;if(this.dirty)this.markParentsDirty(true);}}setDOM(dom){if(this.dom)this.dom.cmView=null;this.dom=dom;dom.cmView=this;}get rootView(){for(let v=this;;){let parent=v.parent;if(!parent)return v;v=parent;}}replaceChildren(from,to,children=noChildren){this.markDirty();for(let i=from;i<to;i++){let child=this.children[i];if(child.parent==this)child.destroy();}this.children.splice(from,to-from,...children);for(let i=0;i<children.length;i++)children[i].setParent(this);}ignoreMutation(_rec){return false;}ignoreEvent(_event){return false;}childCursor(pos=this.length){return new ChildCursor(this.children,pos,this.children.length);}childPos(pos,bias=1){return this.childCursor().findPos(pos,bias);}toString(){let name=this.constructor.name.replace(\"View\",\"\");return name+(this.children.length?\"(\"+this.children.join()+\")\":this.length?\"[\"+(name==\"Text\"?this.text:this.length)+\"]\":\"\")+(this.breakAfter?\"#\":\"\");}static get(node){return node.cmView;}get isEditable(){return true;}merge(from,to,source,hasStart,openStart,openEnd){return false;}become(other){return false;}// When this is a zero-length view with a side, this should return a\n// number <= 0 to indicate it is before its position, or a\n// number > 0 when after its position.\ngetSide(){return 0;}destroy(){this.parent=null;}}ContentView.prototype.breakAfter=0;// Remove a DOM node and return its next sibling.\nfunction rm$1(dom){let next=dom.nextSibling;dom.parentNode.removeChild(dom);return next;}class ChildCursor{constructor(children,pos,i){this.children=children;this.pos=pos;this.i=i;this.off=0;}findPos(pos,bias=1){for(;;){if(pos>this.pos||pos==this.pos&&(bias>0||this.i==0||this.children[this.i-1].breakAfter)){this.off=pos-this.pos;return this;}let next=this.children[--this.i];this.pos-=next.length+next.breakAfter;}}}function replaceRange(parent,fromI,fromOff,toI,toOff,insert,breakAtStart,openStart,openEnd){let{children}=parent;let before=children.length?children[fromI]:null;let last=insert.length?insert[insert.length-1]:null;let breakAtEnd=last?last.breakAfter:breakAtStart;// Change within a single child\nif(fromI==toI&&before&&!breakAtStart&&!breakAtEnd&&insert.length<2&&before.merge(fromOff,toOff,insert.length?last:null,fromOff==0,openStart,openEnd))return;if(toI<children.length){let after=children[toI];// Make sure the end of the child after the update is preserved in `after`\nif(after&&toOff<after.length){// If we're splitting a child, separate part of it to avoid that\n// being mangled when updating the child before the update.\nif(fromI==toI){after=after.split(toOff);toOff=0;}// If the element after the replacement should be merged with\n// the last replacing element, update `content`\nif(!breakAtEnd&&last&&after.merge(0,toOff,last,true,0,openEnd)){insert[insert.length-1]=after;}else {// Remove the start of the after element, if necessary, and\n// add it to `content`.\nif(toOff)after.merge(0,toOff,null,false,0,openEnd);insert.push(after);}}else if(after===null||after===void 0?void 0:after.breakAfter){// The element at `toI` is entirely covered by this range.\n// Preserve its line break, if any.\nif(last)last.breakAfter=1;else breakAtStart=1;}// Since we've handled the next element from the current elements\n// now, make sure `toI` points after that.\ntoI++;}if(before){before.breakAfter=breakAtStart;if(fromOff>0){if(!breakAtStart&&insert.length&&before.merge(fromOff,before.length,insert[0],false,openStart,0)){before.breakAfter=insert.shift().breakAfter;}else if(fromOff<before.length||before.children.length&&before.children[before.children.length-1].length==0){before.merge(fromOff,before.length,null,false,openStart,0);}fromI++;}}// Try to merge widgets on the boundaries of the replacement\nwhile(fromI<toI&&insert.length){if(children[toI-1].become(insert[insert.length-1])){toI--;insert.pop();openEnd=insert.length?0:openStart;}else if(children[fromI].become(insert[0])){fromI++;insert.shift();openStart=insert.length?0:openEnd;}else {break;}}if(!insert.length&&fromI&&toI<children.length&&!children[fromI-1].breakAfter&&children[toI].merge(0,0,children[fromI-1],false,openStart,openEnd))fromI--;if(fromI<toI||insert.length)parent.replaceChildren(fromI,toI,insert);}function mergeChildrenInto(parent,from,to,insert,openStart,openEnd){let cur=parent.childCursor();let{i:toI,off:toOff}=cur.findPos(to,1);let{i:fromI,off:fromOff}=cur.findPos(from,-1);let dLen=from-to;for(let view of insert)dLen+=view.length;parent.length+=dLen;replaceRange(parent,fromI,fromOff,toI,toOff,insert,0,openStart,openEnd);}let nav=typeof navigator!=\"undefined\"?navigator:{userAgent:\"\",vendor:\"\",platform:\"\"};let doc=typeof document!=\"undefined\"?document:{documentElement:{style:{}}};const ie_edge=/*@__PURE__*/ /Edge\\/(\\d+)/.exec(nav.userAgent);const ie_upto10=/*@__PURE__*/ /MSIE \\d/.test(nav.userAgent);const ie_11up=/*@__PURE__*/ /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);const ie=!!(ie_upto10||ie_11up||ie_edge);const gecko=!ie&&/*@__PURE__*/ /gecko\\/(\\d+)/i.test(nav.userAgent);const chrome=!ie&&/*@__PURE__*/ /Chrome\\/(\\d+)/.exec(nav.userAgent);const webkit=(\"webkitFontSmoothing\"in doc.documentElement.style);const safari=!ie&&/*@__PURE__*/ /Apple Computer/.test(nav.vendor);const ios=safari&&(/*@__PURE__*/ /Mobile\\/\\w+/.test(nav.userAgent)||nav.maxTouchPoints>2);var browser={mac:ios||/*@__PURE__*/ /Mac/.test(nav.platform),windows:/*@__PURE__*/ /Win/.test(nav.platform),linux:/*@__PURE__*/ /Linux|X11/.test(nav.platform),ie,ie_version:ie_upto10?doc.documentMode||6:ie_11up?+ie_11up[1]:ie_edge?+ie_edge[1]:0,gecko,gecko_version:gecko?+(/*@__PURE__*/ /Firefox\\/(\\d+)/.exec(nav.userAgent)||[0,0])[1]:0,chrome:!!chrome,chrome_version:chrome?+chrome[1]:0,ios,android:/*@__PURE__*/ /Android\\b/.test(nav.userAgent),webkit,safari,webkit_version:webkit?+(/*@__PURE__*/ /\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent)||[0,0])[1]:0,tabSize:doc.documentElement.style.tabSize!=null?\"tab-size\":\"-moz-tab-size\"};const MaxJoinLen=256;class TextView extends ContentView{constructor(text){super();this.text=text;}get length(){return this.text.length;}createDOM(textDOM){this.setDOM(textDOM||document.createTextNode(this.text));}sync(track){if(!this.dom)this.createDOM();if(this.dom.nodeValue!=this.text){if(track&&track.node==this.dom)track.written=true;this.dom.nodeValue=this.text;}}reuseDOM(dom){if(dom.nodeType==3)this.createDOM(dom);}merge(from,to,source){if(source&&(!(source instanceof TextView)||this.length-(to-from)+source.length>MaxJoinLen))return false;this.text=this.text.slice(0,from)+(source?source.text:\"\")+this.text.slice(to);this.markDirty();return true;}split(from){let result=new TextView(this.text.slice(from));this.text=this.text.slice(0,from);this.markDirty();return result;}localPosFromDOM(node,offset){return node==this.dom?offset:offset?this.text.length:0;}domAtPos(pos){return new DOMPos(this.dom,pos);}domBoundsAround(_from,_to,offset){return {from:offset,to:offset+this.length,startDOM:this.dom,endDOM:this.dom.nextSibling};}coordsAt(pos,side){return textCoords(this.dom,pos,side);}}class MarkView extends ContentView{constructor(mark,children=[],length=0){super();this.mark=mark;this.children=children;this.length=length;for(let ch of children)ch.setParent(this);}setAttrs(dom){clearAttributes(dom);if(this.mark.class)dom.className=this.mark.class;if(this.mark.attrs)for(let name in this.mark.attrs)dom.setAttribute(name,this.mark.attrs[name]);return dom;}reuseDOM(node){if(node.nodeName==this.mark.tagName.toUpperCase()){this.setDOM(node);this.dirty|=4/* Attrs */|2/* Node */;}}sync(track){if(!this.dom)this.setDOM(this.setAttrs(document.createElement(this.mark.tagName)));else if(this.dirty&4/* Attrs */)this.setAttrs(this.dom);super.sync(track);}merge(from,to,source,_hasStart,openStart,openEnd){if(source&&(!(source instanceof MarkView&&source.mark.eq(this.mark))||from&&openStart<=0||to<this.length&&openEnd<=0))return false;mergeChildrenInto(this,from,to,source?source.children:[],openStart-1,openEnd-1);this.markDirty();return true;}split(from){let result=[],off=0,detachFrom=-1,i=0;for(let elt of this.children){let end=off+elt.length;if(end>from)result.push(off<from?elt.split(from-off):elt);if(detachFrom<0&&off>=from)detachFrom=i;off=end;i++;}let length=this.length-from;this.length=from;if(detachFrom>-1){this.children.length=detachFrom;this.markDirty();}return new MarkView(this.mark,result,length);}domAtPos(pos){return inlineDOMAtPos(this.dom,this.children,pos);}coordsAt(pos,side){return coordsInChildren(this,pos,side);}}function textCoords(text,pos,side){let length=text.nodeValue.length;if(pos>length)pos=length;let from=pos,to=pos,flatten=0;if(pos==0&&side<0||pos==length&&side>=0){if(!(browser.chrome||browser.gecko)){// These browsers reliably return valid rectangles for empty ranges\nif(pos){from--;flatten=1;}// FIXME this is wrong in RTL text\nelse if(to<length){to++;flatten=-1;}}}else {if(side<0)from--;else if(to<length)to++;}let rects=textRange(text,from,to).getClientRects();if(!rects.length)return Rect0;let rect=rects[(flatten?flatten<0:side>=0)?0:rects.length-1];if(browser.safari&&!flatten&&rect.width==0)rect=Array.prototype.find.call(rects,r=>r.width)||rect;return flatten?flattenRect(rect,flatten<0):rect||null;}// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends ContentView{constructor(widget,length,side){super();this.widget=widget;this.length=length;this.side=side;this.prevWidget=null;}static create(widget,length,side){return new(widget.customView||WidgetView)(widget,length,side);}split(from){let result=WidgetView.create(this.widget,this.length-from,this.side);this.length-=from;return result;}sync(){if(!this.dom||!this.widget.updateDOM(this.dom)){if(this.dom&&this.prevWidget)this.prevWidget.destroy(this.dom);this.prevWidget=null;this.setDOM(this.widget.toDOM(this.editorView));this.dom.contentEditable=\"false\";}}getSide(){return this.side;}merge(from,to,source,hasStart,openStart,openEnd){if(source&&(!(source instanceof WidgetView)||!this.widget.compare(source.widget)||from>0&&openStart<=0||to<this.length&&openEnd<=0))return false;this.length=from+(source?source.length:0)+(this.length-to);return true;}become(other){if(other.length==this.length&&other instanceof WidgetView&&other.side==this.side){if(this.widget.constructor==other.widget.constructor){if(!this.widget.eq(other.widget))this.markDirty(true);if(this.dom&&!this.prevWidget)this.prevWidget=this.widget;this.widget=other.widget;return true;}}return false;}ignoreMutation(){return true;}ignoreEvent(event){return this.widget.ignoreEvent(event);}get overrideDOMText(){if(this.length==0)return Text.empty;let top=this;while(top.parent)top=top.parent;let view=top.editorView,text=view&&view.state.doc,start=this.posAtStart;return text?text.slice(start,start+this.length):Text.empty;}domAtPos(pos){return pos==0?DOMPos.before(this.dom):DOMPos.after(this.dom,pos==this.length);}domBoundsAround(){return null;}coordsAt(pos,side){let rects=this.dom.getClientRects(),rect=null;if(!rects.length)return Rect0;for(let i=pos>0?rects.length-1:0;;i+=pos>0?-1:1){rect=rects[i];if(pos>0?i==0:i==rects.length-1||rect.top<rect.bottom)break;}return pos==0&&side>0||pos==this.length&&side<=0?rect:flattenRect(rect,pos==0);}get isEditable(){return false;}destroy(){super.destroy();if(this.dom)this.widget.destroy(this.dom);}}class CompositionView extends WidgetView{domAtPos(pos){let{topView,text}=this.widget;if(!topView)return new DOMPos(text,Math.min(pos,text.nodeValue.length));return scanCompositionTree(pos,0,topView,text,(v,p)=>v.domAtPos(p),p=>new DOMPos(text,Math.min(p,text.nodeValue.length)));}sync(){this.setDOM(this.widget.toDOM());}localPosFromDOM(node,offset){let{topView,text}=this.widget;if(!topView)return Math.min(offset,this.length);return posFromDOMInCompositionTree(node,offset,topView,text);}ignoreMutation(){return false;}get overrideDOMText(){return null;}coordsAt(pos,side){let{topView,text}=this.widget;if(!topView)return textCoords(text,pos,side);return scanCompositionTree(pos,side,topView,text,(v,pos,side)=>v.coordsAt(pos,side),(pos,side)=>textCoords(text,pos,side));}destroy(){var _a;super.destroy();(_a=this.widget.topView)===null||_a===void 0?void 0:_a.destroy();}get isEditable(){return true;}}// Uses the old structure of a chunk of content view frozen for\n// composition to try and find a reasonable DOM location for the given\n// offset.\nfunction scanCompositionTree(pos,side,view,text,enterView,fromText){if(view instanceof MarkView){for(let child of view.children){let hasComp=contains(child.dom,text);let len=hasComp?text.nodeValue.length:child.length;if(pos<len||pos==len&&child.getSide()<=0)return hasComp?scanCompositionTree(pos,side,child,text,enterView,fromText):enterView(child,pos,side);pos-=len;}return enterView(view,view.length,-1);}else if(view.dom==text){return fromText(pos,side);}else {return enterView(view,pos,side);}}function posFromDOMInCompositionTree(node,offset,view,text){if(view instanceof MarkView){for(let child of view.children){let pos=0,hasComp=contains(child.dom,text);if(contains(child.dom,node))return pos+(hasComp?posFromDOMInCompositionTree(node,offset,child,text):child.localPosFromDOM(node,offset));pos+=hasComp?text.nodeValue.length:child.length;}}else if(view.dom==text){return Math.min(offset,text.nodeValue.length);}return view.localPosFromDOM(node,offset);}// These are drawn around uneditable widgets to avoid a number of\n// browser bugs that show up when the cursor is directly next to\n// uneditable inline content.\nclass WidgetBufferView extends ContentView{constructor(side){super();this.side=side;}get length(){return 0;}merge(){return false;}become(other){return other instanceof WidgetBufferView&&other.side==this.side;}split(){return new WidgetBufferView(this.side);}sync(){if(!this.dom){let dom=document.createElement(\"img\");dom.className=\"cm-widgetBuffer\";dom.setAttribute(\"aria-hidden\",\"true\");this.setDOM(dom);}}getSide(){return this.side;}domAtPos(pos){return DOMPos.before(this.dom);}localPosFromDOM(){return 0;}domBoundsAround(){return null;}coordsAt(pos){let imgRect=this.dom.getBoundingClientRect();// Since the <img> height doesn't correspond to text height, try\n// to borrow the height from some sibling node.\nlet siblingRect=inlineSiblingRect(this,this.side>0?-1:1);return siblingRect&&siblingRect.top<imgRect.bottom&&siblingRect.bottom>imgRect.top?{left:imgRect.left,right:imgRect.right,top:siblingRect.top,bottom:siblingRect.bottom}:imgRect;}get overrideDOMText(){return Text.empty;}}TextView.prototype.children=WidgetView.prototype.children=WidgetBufferView.prototype.children=noChildren;function inlineSiblingRect(view,side){let parent=view.parent,index=parent?parent.children.indexOf(view):-1;while(parent&&index>=0){if(side<0?index>0:index<parent.children.length){let next=parent.children[index+side];if(next instanceof TextView){let nextRect=next.coordsAt(side<0?next.length:0,side);if(nextRect)return nextRect;}index+=side;}else if(parent instanceof MarkView&&parent.parent){index=parent.parent.children.indexOf(parent)+(side<0?0:1);parent=parent.parent;}else {let last=parent.dom.lastChild;if(last&&last.nodeName==\"BR\")return last.getClientRects()[0];break;}}return undefined;}function inlineDOMAtPos(dom,children,pos){let i=0;for(let off=0;i<children.length;i++){let child=children[i],end=off+child.length;if(end==off&&child.getSide()<=0)continue;if(pos>off&&pos<end&&child.dom.parentNode==dom)return child.domAtPos(pos-off);if(pos<=off)break;off=end;}for(;i>0;i--){let before=children[i-1].dom;if(before.parentNode==dom)return DOMPos.after(before);}return new DOMPos(dom,0);}// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent,view,open){let last,{children}=parent;if(open>0&&view instanceof MarkView&&children.length&&(last=children[children.length-1])instanceof MarkView&&last.mark.eq(view.mark)){joinInlineInto(last,view.children[0],open-1);}else {children.push(view);view.setParent(parent);}parent.length+=view.length;}function coordsInChildren(view,pos,side){for(let off=0,i=0;i<view.children.length;i++){let child=view.children[i],end=off+child.length,next;if((side<=0||end==view.length||child.getSide()>0?end>=pos:end>pos)&&(pos<end||i+1==view.children.length||(next=view.children[i+1]).length||next.getSide()>0)){let flatten=0;if(end==off){if(child.getSide()<=0)continue;flatten=side=-child.getSide();}let rect=child.coordsAt(Math.max(0,pos-off),side);return flatten&&rect?flattenRect(rect,side<0):rect;}off=end;}let last=view.dom.lastChild;if(!last)return view.dom.getBoundingClientRect();let rects=clientRectsFor(last);return rects[rects.length-1]||null;}function combineAttrs(source,target){for(let name in source){if(name==\"class\"&&target.class)target.class+=\" \"+source.class;else if(name==\"style\"&&target.style)target.style+=\";\"+source.style;else target[name]=source[name];}return target;}function attrsEq(a,b){if(a==b)return true;if(!a||!b)return false;let keysA=Object.keys(a),keysB=Object.keys(b);if(keysA.length!=keysB.length)return false;for(let key of keysA){if(keysB.indexOf(key)==-1||a[key]!==b[key])return false;}return true;}function updateAttrs(dom,prev,attrs){let changed=null;if(prev)for(let name in prev)if(!(attrs&&name in attrs))dom.removeAttribute(changed=name);if(attrs)for(let name in attrs)if(!(prev&&prev[name]==attrs[name]))dom.setAttribute(changed=name,attrs[name]);return !!changed;}/**\nWidgets added to the content are described by subclasses of this\nclass. Using a description object like that makes it possible to\ndelay creating of the DOM structure for a widget until it is\nneeded, and to avoid redrawing widgets even if the decorations\nthat define them are recreated.\n*/class WidgetType{/**\n    Compare this instance to another instance of the same type.\n    (TypeScript can't express this, but only instances of the same\n    specific class will be passed to this method.) This is used to\n    avoid redrawing widgets when they are replaced by a new\n    decoration of the same type. The default implementation just\n    returns `false`, which will cause new instances of the widget to\n    always be redrawn.\n    */eq(widget){return false;}/**\n    Update a DOM element created by a widget of the same type (but\n    different, non-`eq` content) to reflect this widget. May return\n    true to indicate that it could update, false to indicate it\n    couldn't (in which case the widget will be redrawn). The default\n    implementation just returns false.\n    */updateDOM(dom){return false;}/**\n    @internal\n    */compare(other){return this==other||this.constructor==other.constructor&&this.eq(other);}/**\n    The estimated height this widget will have, to be used when\n    estimating the height of content that hasn't been drawn. May\n    return -1 to indicate you don't know. The default implementation\n    returns -1.\n    */get estimatedHeight(){return -1;}/**\n    Can be used to configure which kinds of events inside the widget\n    should be ignored by the editor. The default is to ignore all\n    events.\n    */ignoreEvent(event){return true;}/**\n    @internal\n    */get customView(){return null;}/**\n    This is called when the an instance of the widget is removed\n    from the editor view.\n    */destroy(dom){}}/**\nThe different types of blocks that can occur in an editor view.\n*/var BlockType=/*@__PURE__*/function(BlockType){/**\n    A line of text.\n    */BlockType[BlockType[\"Text\"]=0]=\"Text\";/**\n    A block widget associated with the position after it.\n    */BlockType[BlockType[\"WidgetBefore\"]=1]=\"WidgetBefore\";/**\n    A block widget associated with the position before it.\n    */BlockType[BlockType[\"WidgetAfter\"]=2]=\"WidgetAfter\";/**\n    A block widget [replacing](https://codemirror.net/6/docs/ref/#view.Decoration^replace) a range of content.\n    */BlockType[BlockType[\"WidgetRange\"]=3]=\"WidgetRange\";return BlockType;}(BlockType||(BlockType={}));/**\nA decoration provides information on how to draw or style a piece\nof content. You'll usually use it wrapped in a\n[`Range`](https://codemirror.net/6/docs/ref/#state.Range), which adds a start and end position.\n@nonabstract\n*/class Decoration extends RangeValue{constructor(/**\n    @internal\n    */startSide,/**\n    @internal\n    */endSide,/**\n    @internal\n    */widget,/**\n    The config object used to create this decoration. You can\n    include additional properties in there to store metadata about\n    your decoration.\n    */spec){super();this.startSide=startSide;this.endSide=endSide;this.widget=widget;this.spec=spec;}/**\n    @internal\n    */get heightRelevant(){return false;}/**\n    Create a mark decoration, which influences the styling of the\n    content in its range. Nested mark decorations will cause nested\n    DOM elements to be created. Nesting order is determined by\n    precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with\n    the higher-precedence decorations creating the inner DOM nodes.\n    Such elements are split on line boundaries and on the boundaries\n    of lower-precedence decorations.\n    */static mark(spec){return new MarkDecoration(spec);}/**\n    Create a widget decoration, which displays a DOM element at the\n    given position.\n    */static widget(spec){let side=spec.side||0,block=!!spec.block;side+=block?side>0?300000000/* BlockAfter */:-400000000/* BlockBefore */:side>0?100000000/* InlineAfter */:-100000000/* InlineBefore */;return new PointDecoration(spec,side,side,block,spec.widget||null,false);}/**\n    Create a replace decoration which replaces the given range with\n    a widget, or simply hides it.\n    */static replace(spec){let block=!!spec.block,startSide,endSide;if(spec.isBlockGap){startSide=-500000000/* GapStart */;endSide=400000000/* GapEnd */;}else {let{start,end}=getInclusive(spec,block);startSide=(start?block?-300000000/* BlockIncStart */:-1/* InlineIncStart */:500000000/* NonIncStart */)-1;endSide=(end?block?200000000/* BlockIncEnd */:1/* InlineIncEnd */:-600000000/* NonIncEnd */)+1;}return new PointDecoration(spec,startSide,endSide,block,spec.widget||null,true);}/**\n    Create a line decoration, which can add DOM attributes to the\n    line starting at the given position.\n    */static line(spec){return new LineDecoration(spec);}/**\n    Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given\n    decorated range or ranges. If the ranges aren't already sorted,\n    pass `true` for `sort` to make the library sort them for you.\n    */static set(of,sort=false){return RangeSet.of(of,sort);}/**\n    @internal\n    */hasHeight(){return this.widget?this.widget.estimatedHeight>-1:false;}}/**\nThe empty set of decorations.\n*/Decoration.none=RangeSet.empty;class MarkDecoration extends Decoration{constructor(spec){let{start,end}=getInclusive(spec);super(start?-1/* InlineIncStart */:500000000/* NonIncStart */,end?1/* InlineIncEnd */:-600000000/* NonIncEnd */,null,spec);this.tagName=spec.tagName||\"span\";this.class=spec.class||\"\";this.attrs=spec.attributes||null;}eq(other){return this==other||other instanceof MarkDecoration&&this.tagName==other.tagName&&this.class==other.class&&attrsEq(this.attrs,other.attrs);}range(from,to=from){if(from>=to)throw new RangeError(\"Mark decorations may not be empty\");return super.range(from,to);}}MarkDecoration.prototype.point=false;class LineDecoration extends Decoration{constructor(spec){super(-200000000/* Line */,-200000000/* Line */,null,spec);}eq(other){return other instanceof LineDecoration&&attrsEq(this.spec.attributes,other.spec.attributes);}range(from,to=from){if(to!=from)throw new RangeError(\"Line decoration ranges must be zero-length\");return super.range(from,to);}}LineDecoration.prototype.mapMode=MapMode.TrackBefore;LineDecoration.prototype.point=true;class PointDecoration extends Decoration{constructor(spec,startSide,endSide,block,widget,isReplace){super(startSide,endSide,widget,spec);this.block=block;this.isReplace=isReplace;this.mapMode=!block?MapMode.TrackDel:startSide<=0?MapMode.TrackBefore:MapMode.TrackAfter;}// Only relevant when this.block == true\nget type(){return this.startSide<this.endSide?BlockType.WidgetRange:this.startSide<=0?BlockType.WidgetBefore:BlockType.WidgetAfter;}get heightRelevant(){return this.block||!!this.widget&&this.widget.estimatedHeight>=5;}eq(other){return other instanceof PointDecoration&&widgetsEq(this.widget,other.widget)&&this.block==other.block&&this.startSide==other.startSide&&this.endSide==other.endSide;}range(from,to=from){if(this.isReplace&&(from>to||from==to&&this.startSide>0&&this.endSide<=0))throw new RangeError(\"Invalid range for replacement decoration\");if(!this.isReplace&&to!=from)throw new RangeError(\"Widget decorations can only have zero-length ranges\");return super.range(from,to);}}PointDecoration.prototype.point=true;function getInclusive(spec,block=false){let{inclusiveStart:start,inclusiveEnd:end}=spec;if(start==null)start=spec.inclusive;if(end==null)end=spec.inclusive;return {start:start!==null&&start!==void 0?start:block,end:end!==null&&end!==void 0?end:block};}function widgetsEq(a,b){return a==b||!!(a&&b&&a.compare(b));}function addRange(from,to,ranges,margin=0){let last=ranges.length-1;if(last>=0&&ranges[last]+margin>=from)ranges[last]=Math.max(ranges[last],to);else ranges.push(from,to);}class LineView extends ContentView{constructor(){super(...arguments);this.children=[];this.length=0;this.prevAttrs=undefined;this.attrs=null;this.breakAfter=0;}// Consumes source\nmerge(from,to,source,hasStart,openStart,openEnd){if(source){if(!(source instanceof LineView))return false;if(!this.dom)source.transferDOM(this);// Reuse source.dom when appropriate\n}if(hasStart)this.setDeco(source?source.attrs:null);mergeChildrenInto(this,from,to,source?source.children:[],openStart,openEnd);return true;}split(at){let end=new LineView();end.breakAfter=this.breakAfter;if(this.length==0)return end;let{i,off}=this.childPos(at);if(off){end.append(this.children[i].split(off),0);this.children[i].merge(off,this.children[i].length,null,false,0,0);i++;}for(let j=i;j<this.children.length;j++)end.append(this.children[j],0);while(i>0&&this.children[i-1].length==0)this.children[--i].destroy();this.children.length=i;this.markDirty();this.length=at;return end;}transferDOM(other){if(!this.dom)return;this.markDirty();other.setDOM(this.dom);other.prevAttrs=this.prevAttrs===undefined?this.attrs:this.prevAttrs;this.prevAttrs=undefined;this.dom=null;}setDeco(attrs){if(!attrsEq(this.attrs,attrs)){if(this.dom){this.prevAttrs=this.attrs;this.markDirty();}this.attrs=attrs;}}append(child,openStart){joinInlineInto(this,child,openStart);}// Only called when building a line view in ContentBuilder\naddLineDeco(deco){let attrs=deco.spec.attributes,cls=deco.spec.class;if(attrs)this.attrs=combineAttrs(attrs,this.attrs||{});if(cls)this.attrs=combineAttrs({class:cls},this.attrs||{});}domAtPos(pos){return inlineDOMAtPos(this.dom,this.children,pos);}reuseDOM(node){if(node.nodeName==\"DIV\"){this.setDOM(node);this.dirty|=4/* Attrs */|2/* Node */;}}sync(track){var _a;if(!this.dom){this.setDOM(document.createElement(\"div\"));this.dom.className=\"cm-line\";this.prevAttrs=this.attrs?null:undefined;}else if(this.dirty&4/* Attrs */){clearAttributes(this.dom);this.dom.className=\"cm-line\";this.prevAttrs=this.attrs?null:undefined;}if(this.prevAttrs!==undefined){updateAttrs(this.dom,this.prevAttrs,this.attrs);this.dom.classList.add(\"cm-line\");this.prevAttrs=undefined;}super.sync(track);let last=this.dom.lastChild;while(last&&ContentView.get(last)instanceof MarkView)last=last.lastChild;if(!last||!this.length||last.nodeName!=\"BR\"&&((_a=ContentView.get(last))===null||_a===void 0?void 0:_a.isEditable)==false&&(!browser.ios||!this.children.some(ch=>ch instanceof TextView))){let hack=document.createElement(\"BR\");hack.cmIgnore=true;this.dom.appendChild(hack);}}measureTextSize(){if(this.children.length==0||this.length>20)return null;let totalWidth=0;for(let child of this.children){if(!(child instanceof TextView))return null;let rects=clientRectsFor(child.dom);if(rects.length!=1)return null;totalWidth+=rects[0].width;}return {lineHeight:this.dom.getBoundingClientRect().height,charWidth:totalWidth/this.length};}coordsAt(pos,side){return coordsInChildren(this,pos,side);}become(_other){return false;}get type(){return BlockType.Text;}static find(docView,pos){for(let i=0,off=0;i<docView.children.length;i++){let block=docView.children[i],end=off+block.length;if(end>=pos){if(block instanceof LineView)return block;if(end>pos)break;}off=end+block.breakAfter;}return null;}}class BlockWidgetView extends ContentView{constructor(widget,length,type){super();this.widget=widget;this.length=length;this.type=type;this.breakAfter=0;this.prevWidget=null;}merge(from,to,source,_takeDeco,openStart,openEnd){if(source&&(!(source instanceof BlockWidgetView)||!this.widget.compare(source.widget)||from>0&&openStart<=0||to<this.length&&openEnd<=0))return false;this.length=from+(source?source.length:0)+(this.length-to);return true;}domAtPos(pos){return pos==0?DOMPos.before(this.dom):DOMPos.after(this.dom,pos==this.length);}split(at){let len=this.length-at;this.length=at;let end=new BlockWidgetView(this.widget,len,this.type);end.breakAfter=this.breakAfter;return end;}get children(){return noChildren;}sync(){if(!this.dom||!this.widget.updateDOM(this.dom)){if(this.dom&&this.prevWidget)this.prevWidget.destroy(this.dom);this.prevWidget=null;this.setDOM(this.widget.toDOM(this.editorView));this.dom.contentEditable=\"false\";}}get overrideDOMText(){return this.parent?this.parent.view.state.doc.slice(this.posAtStart,this.posAtEnd):Text.empty;}domBoundsAround(){return null;}become(other){if(other instanceof BlockWidgetView&&other.type==this.type&&other.widget.constructor==this.widget.constructor){if(!other.widget.eq(this.widget))this.markDirty(true);if(this.dom&&!this.prevWidget)this.prevWidget=this.widget;this.widget=other.widget;this.length=other.length;this.breakAfter=other.breakAfter;return true;}return false;}ignoreMutation(){return true;}ignoreEvent(event){return this.widget.ignoreEvent(event);}destroy(){super.destroy();if(this.dom)this.widget.destroy(this.dom);}}class ContentBuilder{constructor(doc,pos,end,disallowBlockEffectsFor){this.doc=doc;this.pos=pos;this.end=end;this.disallowBlockEffectsFor=disallowBlockEffectsFor;this.content=[];this.curLine=null;this.breakAtStart=0;this.pendingBuffer=0/* No */;// Set to false directly after a widget that covers the position after it\nthis.atCursorPos=true;this.openStart=-1;this.openEnd=-1;this.text=\"\";this.textOff=0;this.cursor=doc.iter();this.skip=pos;}posCovered(){if(this.content.length==0)return !this.breakAtStart&&this.doc.lineAt(this.pos).from!=this.pos;let last=this.content[this.content.length-1];return !last.breakAfter&&!(last instanceof BlockWidgetView&&last.type==BlockType.WidgetBefore);}getLine(){if(!this.curLine){this.content.push(this.curLine=new LineView());this.atCursorPos=true;}return this.curLine;}flushBuffer(active){if(this.pendingBuffer){this.curLine.append(wrapMarks(new WidgetBufferView(-1),active),active.length);this.pendingBuffer=0/* No */;}}addBlockWidget(view){this.flushBuffer([]);this.curLine=null;this.content.push(view);}finish(openEnd){if(!openEnd)this.flushBuffer([]);else this.pendingBuffer=0/* No */;if(!this.posCovered())this.getLine();}buildText(length,active,openStart){while(length>0){if(this.textOff==this.text.length){let{value,lineBreak,done}=this.cursor.next(this.skip);this.skip=0;if(done)throw new Error(\"Ran out of text content when drawing inline views\");if(lineBreak){if(!this.posCovered())this.getLine();if(this.content.length)this.content[this.content.length-1].breakAfter=1;else this.breakAtStart=1;this.flushBuffer([]);this.curLine=null;length--;continue;}else {this.text=value;this.textOff=0;}}let take=Math.min(this.text.length-this.textOff,length,512/* Chunk */);this.flushBuffer(active.slice(0,openStart));this.getLine().append(wrapMarks(new TextView(this.text.slice(this.textOff,this.textOff+take)),active),openStart);this.atCursorPos=true;this.textOff+=take;length-=take;openStart=0;}}span(from,to,active,openStart){this.buildText(to-from,active,openStart);this.pos=to;if(this.openStart<0)this.openStart=openStart;}point(from,to,deco,active,openStart,index){if(this.disallowBlockEffectsFor[index]&&deco instanceof PointDecoration){if(deco.block)throw new RangeError(\"Block decorations may not be specified via plugins\");if(to>this.doc.lineAt(this.pos).to)throw new RangeError(\"Decorations that replace line breaks may not be specified via plugins\");}let len=to-from;if(deco instanceof PointDecoration){if(deco.block){let{type}=deco;if(type==BlockType.WidgetAfter&&!this.posCovered())this.getLine();this.addBlockWidget(new BlockWidgetView(deco.widget||new NullWidget(\"div\"),len,type));}else {let view=WidgetView.create(deco.widget||new NullWidget(\"span\"),len,deco.startSide);let cursorBefore=this.atCursorPos&&!view.isEditable&&openStart<=active.length&&(from<to||deco.startSide>0);let cursorAfter=!view.isEditable&&(from<to||deco.startSide<=0);let line=this.getLine();if(this.pendingBuffer==2/* IfCursor */&&!cursorBefore)this.pendingBuffer=0/* No */;this.flushBuffer(active);if(cursorBefore){line.append(wrapMarks(new WidgetBufferView(1),active),openStart);openStart=active.length+Math.max(0,openStart-active.length);}line.append(wrapMarks(view,active),openStart);this.atCursorPos=cursorAfter;this.pendingBuffer=!cursorAfter?0/* No */:from<to?1/* Yes */:2/* IfCursor */;}}else if(this.doc.lineAt(this.pos).from==this.pos){// Line decoration\nthis.getLine().addLineDeco(deco);}if(len){// Advance the iterator past the replaced content\nif(this.textOff+len<=this.text.length){this.textOff+=len;}else {this.skip+=len-(this.text.length-this.textOff);this.text=\"\";this.textOff=0;}this.pos=to;}if(this.openStart<0)this.openStart=openStart;}static build(text,from,to,decorations,dynamicDecorationMap){let builder=new ContentBuilder(text,from,to,dynamicDecorationMap);builder.openEnd=RangeSet.spans(decorations,from,to,builder);if(builder.openStart<0)builder.openStart=builder.openEnd;builder.finish(builder.openEnd);return builder;}}function wrapMarks(view,active){for(let mark of active)view=new MarkView(mark,[view],view.length);return view;}class NullWidget extends WidgetType{constructor(tag){super();this.tag=tag;}eq(other){return other.tag==this.tag;}toDOM(){return document.createElement(this.tag);}updateDOM(elt){return elt.nodeName.toLowerCase()==this.tag;}}const clickAddsSelectionRange=/*@__PURE__*/Facet.define();const dragMovesSelection$1=/*@__PURE__*/Facet.define();const mouseSelectionStyle=/*@__PURE__*/Facet.define();const exceptionSink=/*@__PURE__*/Facet.define();const updateListener=/*@__PURE__*/Facet.define();const inputHandler=/*@__PURE__*/Facet.define();const perLineTextDirection=/*@__PURE__*/Facet.define({combine:values=>values.some(x=>x)});class ScrollTarget{constructor(range,y=\"nearest\",x=\"nearest\",yMargin=5,xMargin=5){this.range=range;this.y=y;this.x=x;this.yMargin=yMargin;this.xMargin=xMargin;}map(changes){return changes.empty?this:new ScrollTarget(this.range.map(changes),this.y,this.x,this.yMargin,this.xMargin);}}const scrollIntoView$1=/*@__PURE__*/StateEffect.define({map:(t,ch)=>t.map(ch)});/**\nLog or report an unhandled exception in client code. Should\nprobably only be used by extension code that allows client code to\nprovide functions, and calls those functions in a context where an\nexception can't be propagated to calling code in a reasonable way\n(for example when in an event handler).\n\nEither calls a handler registered with\n[`EditorView.exceptionSink`](https://codemirror.net/6/docs/ref/#view.EditorView^exceptionSink),\n`window.onerror`, if defined, or `console.error` (in which case\nit'll pass `context`, when given, as first argument).\n*/function logException(state,exception,context){let handler=state.facet(exceptionSink);if(handler.length)handler[0](exception);else if(window.onerror)window.onerror(String(exception),context,undefined,undefined,exception);else if(context)console.error(context+\":\",exception);else console.error(exception);}const editable=/*@__PURE__*/Facet.define({combine:values=>values.length?values[0]:true});let nextPluginID=0;const viewPlugin=/*@__PURE__*/Facet.define();/**\nView plugins associate stateful values with a view. They can\ninfluence the way the content is drawn, and are notified of things\nthat happen in the view.\n*/class ViewPlugin{constructor(/**\n    @internal\n    */id,/**\n    @internal\n    */create,/**\n    @internal\n    */domEventHandlers,buildExtensions){this.id=id;this.create=create;this.domEventHandlers=domEventHandlers;this.extension=buildExtensions(this);}/**\n    Define a plugin from a constructor function that creates the\n    plugin's value, given an editor view.\n    */static define(create,spec){const{eventHandlers,provide,decorations:deco}=spec||{};return new ViewPlugin(nextPluginID++,create,eventHandlers,plugin=>{let ext=[viewPlugin.of(plugin)];if(deco)ext.push(decorations.of(view=>{let pluginInst=view.plugin(plugin);return pluginInst?deco(pluginInst):Decoration.none;}));if(provide)ext.push(provide(plugin));return ext;});}/**\n    Create a plugin for a class whose constructor takes a single\n    editor view as argument.\n    */static fromClass(cls,spec){return ViewPlugin.define(view=>new cls(view),spec);}}class PluginInstance{constructor(spec){this.spec=spec;// When starting an update, all plugins have this field set to the\n// update object, indicating they need to be updated. When finished\n// updating, it is set to `false`. Retrieving a plugin that needs to\n// be updated with `view.plugin` forces an eager update.\nthis.mustUpdate=null;// This is null when the plugin is initially created, but\n// initialized on the first update.\nthis.value=null;}update(view){if(!this.value){if(this.spec){try{this.value=this.spec.create(view);}catch(e){logException(view.state,e,\"CodeMirror plugin crashed\");this.deactivate();}}}else if(this.mustUpdate){let update=this.mustUpdate;this.mustUpdate=null;if(this.value.update){try{this.value.update(update);}catch(e){logException(update.state,e,\"CodeMirror plugin crashed\");if(this.value.destroy)try{this.value.destroy();}catch(_){}this.deactivate();}}}return this;}destroy(view){var _a;if((_a=this.value)===null||_a===void 0?void 0:_a.destroy){try{this.value.destroy();}catch(e){logException(view.state,e,\"CodeMirror plugin crashed\");}}}deactivate(){this.spec=this.value=null;}}const editorAttributes=/*@__PURE__*/Facet.define();const contentAttributes=/*@__PURE__*/Facet.define();// Provide decorations\nconst decorations=/*@__PURE__*/Facet.define();const atomicRanges=/*@__PURE__*/Facet.define();const scrollMargins=/*@__PURE__*/Facet.define();const styleModule=/*@__PURE__*/Facet.define();class ChangedRange{constructor(fromA,toA,fromB,toB){this.fromA=fromA;this.toA=toA;this.fromB=fromB;this.toB=toB;}join(other){return new ChangedRange(Math.min(this.fromA,other.fromA),Math.max(this.toA,other.toA),Math.min(this.fromB,other.fromB),Math.max(this.toB,other.toB));}addToSet(set){let i=set.length,me=this;for(;i>0;i--){let range=set[i-1];if(range.fromA>me.toA)continue;if(range.toA<me.fromA)break;me=me.join(range);set.splice(i-1,1);}set.splice(i,0,me);return set;}static extendWithRanges(diff,ranges){if(ranges.length==0)return diff;let result=[];for(let dI=0,rI=0,posA=0,posB=0;;dI++){let next=dI==diff.length?null:diff[dI],off=posA-posB;let end=next?next.fromB:1e9;while(rI<ranges.length&&ranges[rI]<end){let from=ranges[rI],to=ranges[rI+1];let fromB=Math.max(posB,from),toB=Math.min(end,to);if(fromB<=toB)new ChangedRange(fromB+off,toB+off,fromB,toB).addToSet(result);if(to>end)break;else rI+=2;}if(!next)return result;new ChangedRange(next.fromA,next.toA,next.fromB,next.toB).addToSet(result);posA=next.toA;posB=next.toB;}}}/**\nView [plugins](https://codemirror.net/6/docs/ref/#view.ViewPlugin) are given instances of this\nclass, which describe what happened, whenever the view is updated.\n*/class ViewUpdate{constructor(/**\n    The editor view that the update is associated with.\n    */view,/**\n    The new editor state.\n    */state,/**\n    The transactions involved in the update. May be empty.\n    */transactions){this.view=view;this.state=state;this.transactions=transactions;/**\n        @internal\n        */this.flags=0;this.startState=view.state;this.changes=ChangeSet.empty(this.startState.doc.length);for(let tr of transactions)this.changes=this.changes.compose(tr.changes);let changedRanges=[];this.changes.iterChangedRanges((fromA,toA,fromB,toB)=>changedRanges.push(new ChangedRange(fromA,toA,fromB,toB)));this.changedRanges=changedRanges;let focus=view.hasFocus;if(focus!=view.inputState.notifiedFocused){view.inputState.notifiedFocused=focus;this.flags|=1/* Focus */;}}/**\n    @internal\n    */static create(view,state,transactions){return new ViewUpdate(view,state,transactions);}/**\n    Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or\n    [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this\n    update.\n    */get viewportChanged(){return (this.flags&4/* Viewport */)>0;}/**\n    Indicates whether the height of a block element in the editor\n    changed in this update.\n    */get heightChanged(){return (this.flags&2/* Height */)>0;}/**\n    Returns true when the document was modified or the size of the\n    editor, or elements within the editor, changed.\n    */get geometryChanged(){return this.docChanged||(this.flags&(8/* Geometry */|2/* Height */))>0;}/**\n    True when this update indicates a focus change.\n    */get focusChanged(){return (this.flags&1/* Focus */)>0;}/**\n    Whether the document changed in this update.\n    */get docChanged(){return !this.changes.empty;}/**\n    Whether the selection was explicitly set in this update.\n    */get selectionSet(){return this.transactions.some(tr=>tr.selection);}/**\n    @internal\n    */get empty(){return this.flags==0&&this.transactions.length==0;}}/**\nUsed to indicate [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n*/var Direction=/*@__PURE__*/function(Direction){// (These are chosen to match the base levels, in bidi algorithm\n// terms, of spans in that direction.)\n/**\n    Left-to-right.\n    */Direction[Direction[\"LTR\"]=0]=\"LTR\";/**\n    Right-to-left.\n    */Direction[Direction[\"RTL\"]=1]=\"RTL\";return Direction;}(Direction||(Direction={}));const LTR=Direction.LTR,RTL=Direction.RTL;// Decode a string with each type encoded as log2(type)\nfunction dec(str){let result=[];for(let i=0;i<str.length;i++)result.push(1<<+str[i]);return result;}// Character types for codepoints 0 to 0xf8\nconst LowTypes=/*@__PURE__*/dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes=/*@__PURE__*/dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");const Brackets=/*@__PURE__*/Object.create(null),BracketStack=[];// There's a lot more in\n// https://www.unicode.org/Public/UCD/latest/ucd/BidiBrackets.txt,\n// which are left out to keep code size down.\nfor(let p of [\"()\",\"[]\",\"{}\"]){let l=/*@__PURE__*/p.charCodeAt(0),r=/*@__PURE__*/p.charCodeAt(1);Brackets[l]=r;Brackets[r]=-l;}function charType(ch){return ch<=0xf7?LowTypes[ch]:0x590<=ch&&ch<=0x5f4?2/* R */:0x600<=ch&&ch<=0x6f9?ArabicTypes[ch-0x600]:0x6ee<=ch&&ch<=0x8ac?4/* AL */:0x2000<=ch&&ch<=0x200b?256/* NI */:ch==0x200c?256/* NI */:1/* L */;}const BidiRE=/[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;/**\nRepresents a contiguous range of text that has a single direction\n(as in left-to-right or right-to-left).\n*/class BidiSpan{/**\n    @internal\n    */constructor(/**\n    The start of the span (relative to the start of the line).\n    */from,/**\n    The end of the span.\n    */to,/**\n    The [\"bidi\n    level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    of the span (in this context, 0 means\n    left-to-right, 1 means right-to-left, 2 means left-to-right\n    number inside right-to-left text).\n    */level){this.from=from;this.to=to;this.level=level;}/**\n    The direction of this span.\n    */get dir(){return this.level%2?RTL:LTR;}/**\n    @internal\n    */side(end,dir){return this.dir==dir==end?this.to:this.from;}/**\n    @internal\n    */static find(order,index,level,assoc){let maybe=-1;for(let i=0;i<order.length;i++){let span=order[i];if(span.from<=index&&span.to>=index){if(span.level==level)return i;// When multiple spans match, if assoc != 0, take the one that\n// covers that side, otherwise take the one with the minimum\n// level.\nif(maybe<0||(assoc!=0?assoc<0?span.from<index:span.to>index:order[maybe].level>span.level))maybe=i;}}if(maybe<0)throw new RangeError(\"Index out of range\");return maybe;}}// Reused array of character types\nconst types=[];function computeOrder(line,direction){let len=line.length,outerType=direction==LTR?1/* L */:2/* R */,oppositeType=direction==LTR?2/* R */:1/* L */;if(!line||outerType==1/* L */&&!BidiRE.test(line))return trivialOrder(len);// W1. Examine each non-spacing mark (NSM) in the level run, and\n// change the type of the NSM to the type of the previous\n// character. If the NSM is at the start of the level run, it will\n// get the type of sor.\n// W2. Search backwards from each instance of a European number\n// until the first strong type (R, L, AL, or sor) is found. If an\n// AL is found, change the type of the European number to Arabic\n// number.\n// W3. Change all ALs to R.\n// (Left after this: L, R, EN, AN, ET, CS, NI)\nfor(let i=0,prev=outerType,prevStrong=outerType;i<len;i++){let type=charType(line.charCodeAt(i));if(type==512/* NSM */)type=prev;else if(type==8/* EN */&&prevStrong==4/* AL */)type=16/* AN */;types[i]=type==4/* AL */?2/* R */:type;if(type&7/* Strong */)prevStrong=type;prev=type;}// W5. A sequence of European terminators adjacent to European\n// numbers changes to all European numbers.\n// W6. Otherwise, separators and terminators change to Other\n// Neutral.\n// W7. Search backwards from each instance of a European number\n// until the first strong type (R, L, or sor) is found. If an L is\n// found, then change the type of the European number to L.\n// (Left after this: L, R, EN+AN, NI)\nfor(let i=0,prev=outerType,prevStrong=outerType;i<len;i++){let type=types[i];if(type==128/* CS */){if(i<len-1&&prev==types[i+1]&&prev&24/* Num */)type=types[i]=prev;else types[i]=256/* NI */;}else if(type==64/* ET */){let end=i+1;while(end<len&&types[end]==64/* ET */)end++;let replace=i&&prev==8/* EN */||end<len&&types[end]==8/* EN */?prevStrong==1/* L */?1/* L */:8/* EN */:256/* NI */;for(let j=i;j<end;j++)types[j]=replace;i=end-1;}else if(type==8/* EN */&&prevStrong==1/* L */){types[i]=1/* L */;}prev=type;if(type&7/* Strong */)prevStrong=type;}// N0. Process bracket pairs in an isolating run sequence\n// sequentially in the logical order of the text positions of the\n// opening paired brackets using the logic given below. Within this\n// scope, bidirectional types EN and AN are treated as R.\nfor(let i=0,sI=0,context=0,ch,br,type;i<len;i++){// Keeps [startIndex, type, strongSeen] triples for each open\n// bracket on BracketStack.\nif(br=Brackets[ch=line.charCodeAt(i)]){if(br<0){// Closing bracket\nfor(let sJ=sI-3;sJ>=0;sJ-=3){if(BracketStack[sJ+1]==-br){let flags=BracketStack[sJ+2];let type=flags&2/* EmbedInside */?outerType:!(flags&4/* OppositeInside */)?0:flags&1/* OppositeBefore */?oppositeType:outerType;if(type)types[i]=types[BracketStack[sJ]]=type;sI=sJ;break;}}}else if(BracketStack.length==189/* MaxDepth */){break;}else {BracketStack[sI++]=i;BracketStack[sI++]=ch;BracketStack[sI++]=context;}}else if((type=types[i])==2/* R */||type==1/* L */){let embed=type==outerType;context=embed?0:1/* OppositeBefore */;for(let sJ=sI-3;sJ>=0;sJ-=3){let cur=BracketStack[sJ+2];if(cur&2/* EmbedInside */)break;if(embed){BracketStack[sJ+2]|=2/* EmbedInside */;}else {if(cur&4/* OppositeInside */)break;BracketStack[sJ+2]|=4/* OppositeInside */;}}}}// N1. A sequence of neutrals takes the direction of the\n// surrounding strong text if the text on both sides has the same\n// direction. European and Arabic numbers act as if they were R in\n// terms of their influence on neutrals. Start-of-level-run (sor)\n// and end-of-level-run (eor) are used at level run boundaries.\n// N2. Any remaining neutrals take the embedding direction.\n// (Left after this: L, R, EN+AN)\nfor(let i=0;i<len;i++){if(types[i]==256/* NI */){let end=i+1;while(end<len&&types[end]==256/* NI */)end++;let beforeL=(i?types[i-1]:outerType)==1/* L */;let afterL=(end<len?types[end]:outerType)==1/* L */;let replace=beforeL==afterL?beforeL?1/* L */:2/* R */:outerType;for(let j=i;j<end;j++)types[j]=replace;i=end-1;}}// Here we depart from the documented algorithm, in order to avoid\n// building up an actual levels array. Since there are only three\n// levels (0, 1, 2) in an implementation that doesn't take\n// explicit embedding into account, we can build up the order on\n// the fly, without following the level-based algorithm.\nlet order=[];if(outerType==1/* L */){for(let i=0;i<len;){let start=i,rtl=types[i++]!=1/* L */;while(i<len&&rtl==(types[i]!=1/* L */))i++;if(rtl){for(let j=i;j>start;){let end=j,l=types[--j]!=2/* R */;while(j>start&&l==(types[j-1]!=2/* R */))j--;order.push(new BidiSpan(j,end,l?2:1));}}else {order.push(new BidiSpan(start,i,0));}}}else {for(let i=0;i<len;){let start=i,rtl=types[i++]==2/* R */;while(i<len&&rtl==(types[i]==2/* R */))i++;order.push(new BidiSpan(start,i,rtl?1:2));}}return order;}function trivialOrder(length){return [new BidiSpan(0,length,0)];}let movedOver=\"\";function moveVisually(line,order,dir,start,forward){var _a;let startIndex=start.head-line.from,spanI=-1;if(startIndex==0){if(!forward||!line.length)return null;if(order[0].level!=dir){startIndex=order[0].side(false,dir);spanI=0;}}else if(startIndex==line.length){if(forward)return null;let last=order[order.length-1];if(last.level!=dir){startIndex=last.side(true,dir);spanI=order.length-1;}}if(spanI<0)spanI=BidiSpan.find(order,startIndex,(_a=start.bidiLevel)!==null&&_a!==void 0?_a:-1,start.assoc);let span=order[spanI];// End of span. (But not end of line--that was checked for above.)\nif(startIndex==span.side(forward,dir)){span=order[spanI+=forward?1:-1];startIndex=span.side(!forward,dir);}let indexForward=forward==(span.dir==dir);let nextIndex=findClusterBreak(line.text,startIndex,indexForward);movedOver=line.text.slice(Math.min(startIndex,nextIndex),Math.max(startIndex,nextIndex));if(nextIndex!=span.side(forward,dir))return EditorSelection.cursor(nextIndex+line.from,indexForward?-1:1,span.level);let nextSpan=spanI==(forward?order.length-1:0)?null:order[spanI+(forward?1:-1)];if(!nextSpan&&span.level!=dir)return EditorSelection.cursor(forward?line.to:line.from,forward?-1:1,dir);if(nextSpan&&nextSpan.level<span.level)return EditorSelection.cursor(nextSpan.side(!forward,dir)+line.from,forward?1:-1,nextSpan.level);return EditorSelection.cursor(nextIndex+line.from,forward?-1:1,span.level);}const LineBreakPlaceholder=\"\\uffff\";class DOMReader{constructor(points,state){this.points=points;this.text=\"\";this.lineSeparator=state.facet(EditorState.lineSeparator);}append(text){this.text+=text;}lineBreak(){this.text+=LineBreakPlaceholder;}readRange(start,end){if(!start)return this;let parent=start.parentNode;for(let cur=start;;){this.findPointBefore(parent,cur);this.readNode(cur);let next=cur.nextSibling;if(next==end)break;let view=ContentView.get(cur),nextView=ContentView.get(next);if(view&&nextView?view.breakAfter:(view?view.breakAfter:isBlockElement(cur))||isBlockElement(next)&&(cur.nodeName!=\"BR\"||cur.cmIgnore))this.lineBreak();cur=next;}this.findPointBefore(parent,end);return this;}readTextNode(node){let text=node.nodeValue;for(let point of this.points)if(point.node==node)point.pos=this.text.length+Math.min(point.offset,text.length);for(let off=0,re=this.lineSeparator?null:/\\r\\n?|\\n/g;;){let nextBreak=-1,breakSize=1,m;if(this.lineSeparator){nextBreak=text.indexOf(this.lineSeparator,off);breakSize=this.lineSeparator.length;}else if(m=re.exec(text)){nextBreak=m.index;breakSize=m[0].length;}this.append(text.slice(off,nextBreak<0?text.length:nextBreak));if(nextBreak<0)break;this.lineBreak();if(breakSize>1)for(let point of this.points)if(point.node==node&&point.pos>this.text.length)point.pos-=breakSize-1;off=nextBreak+breakSize;}}readNode(node){if(node.cmIgnore)return;let view=ContentView.get(node);let fromView=view&&view.overrideDOMText;if(fromView!=null){this.findPointInside(node,fromView.length);for(let i=fromView.iter();!i.next().done;){if(i.lineBreak)this.lineBreak();else this.append(i.value);}}else if(node.nodeType==3){this.readTextNode(node);}else if(node.nodeName==\"BR\"){if(node.nextSibling)this.lineBreak();}else if(node.nodeType==1){this.readRange(node.firstChild,null);}}findPointBefore(node,next){for(let point of this.points)if(point.node==node&&node.childNodes[point.offset]==next)point.pos=this.text.length;}findPointInside(node,maxLen){for(let point of this.points)if(node.nodeType==3?point.node==node:node.contains(point.node))point.pos=this.text.length+Math.min(maxLen,point.offset);}}function isBlockElement(node){return node.nodeType==1&&/^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);}class DOMPoint{constructor(node,offset){this.node=node;this.offset=offset;this.pos=-1;}}class DocView extends ContentView{constructor(view){super();this.view=view;this.compositionDeco=Decoration.none;this.decorations=[];this.dynamicDecorationMap=[];// Track a minimum width for the editor. When measuring sizes in\n// measureVisibleLineHeights, this is updated to point at the width\n// of a given element and its extent in the document. When a change\n// happens in that range, these are reset. That way, once we've seen\n// a line/element of a given length, we keep the editor wide enough\n// to fit at least that element, until it is changed, at which point\n// we forget it again.\nthis.minWidth=0;this.minWidthFrom=0;this.minWidthTo=0;// Track whether the DOM selection was set in a lossy way, so that\n// we don't mess it up when reading it back it\nthis.impreciseAnchor=null;this.impreciseHead=null;this.forceSelection=false;// Used by the resize observer to ignore resizes that we caused\n// ourselves\nthis.lastUpdate=Date.now();this.setDOM(view.contentDOM);this.children=[new LineView()];this.children[0].setParent(this);this.updateDeco();this.updateInner([new ChangedRange(0,0,0,view.state.doc.length)],0);}get root(){return this.view.root;}get editorView(){return this.view;}get length(){return this.view.state.doc.length;}// Update the document view to a given state. scrollIntoView can be\n// used as a hint to compute a new viewport that includes that\n// position, if we know the editor is going to scroll that position\n// into view.\nupdate(update){let changedRanges=update.changedRanges;if(this.minWidth>0&&changedRanges.length){if(!changedRanges.every(({fromA,toA})=>toA<this.minWidthFrom||fromA>this.minWidthTo)){this.minWidth=this.minWidthFrom=this.minWidthTo=0;}else {this.minWidthFrom=update.changes.mapPos(this.minWidthFrom,1);this.minWidthTo=update.changes.mapPos(this.minWidthTo,1);}}if(this.view.inputState.composing<0)this.compositionDeco=Decoration.none;else if(update.transactions.length||this.dirty)this.compositionDeco=computeCompositionDeco(this.view,update.changes);// When the DOM nodes around the selection are moved to another\n// parent, Chrome sometimes reports a different selection through\n// getSelection than the one that it actually shows to the user.\n// This forces a selection update when lines are joined to work\n// around that. Issue #54\nif((browser.ie||browser.chrome)&&!this.compositionDeco.size&&update&&update.state.doc.lines!=update.startState.doc.lines)this.forceSelection=true;let prevDeco=this.decorations,deco=this.updateDeco();let decoDiff=findChangedDeco(prevDeco,deco,update.changes);changedRanges=ChangedRange.extendWithRanges(changedRanges,decoDiff);if(this.dirty==0/* Not */&&changedRanges.length==0){return false;}else {this.updateInner(changedRanges,update.startState.doc.length);if(update.transactions.length)this.lastUpdate=Date.now();return true;}}// Used by update and the constructor do perform the actual DOM\n// update\nupdateInner(changes,oldLength){this.view.viewState.mustMeasureContent=true;this.updateChildren(changes,oldLength);let{observer}=this.view;observer.ignore(()=>{// Lock the height during redrawing, since Chrome sometimes\n// messes with the scroll position during DOM mutation (though\n// no relayout is triggered and I cannot imagine how it can\n// recompute the scroll position without a layout)\nthis.dom.style.height=this.view.viewState.contentHeight+\"px\";this.dom.style.flexBasis=this.minWidth?this.minWidth+\"px\":\"\";// Chrome will sometimes, when DOM mutations occur directly\n// around the selection, get confused and report a different\n// selection from the one it displays (issue #218). This tries\n// to detect that situation.\nlet track=browser.chrome||browser.ios?{node:observer.selectionRange.focusNode,written:false}:undefined;this.sync(track);this.dirty=0/* Not */;if(track&&(track.written||observer.selectionRange.focusNode!=track.node))this.forceSelection=true;this.dom.style.height=\"\";});let gaps=[];if(this.view.viewport.from||this.view.viewport.to<this.view.state.doc.length)for(let child of this.children)if(child instanceof BlockWidgetView&&child.widget instanceof BlockGapWidget)gaps.push(child.dom);observer.updateGaps(gaps);}updateChildren(changes,oldLength){let cursor=this.childCursor(oldLength);for(let i=changes.length-1;;i--){let next=i>=0?changes[i]:null;if(!next)break;let{fromA,toA,fromB,toB}=next;let{content,breakAtStart,openStart,openEnd}=ContentBuilder.build(this.view.state.doc,fromB,toB,this.decorations,this.dynamicDecorationMap);let{i:toI,off:toOff}=cursor.findPos(toA,1);let{i:fromI,off:fromOff}=cursor.findPos(fromA,-1);replaceRange(this,fromI,fromOff,toI,toOff,content,breakAtStart,openStart,openEnd);}}// Sync the DOM selection to this.state.selection\nupdateSelection(mustRead=false,fromPointer=false){if(mustRead)this.view.observer.readSelectionRange();if(!(fromPointer||this.mayControlSelection())||browser.ios&&this.view.inputState.rapidCompositionStart)return;let force=this.forceSelection;this.forceSelection=false;let main=this.view.state.selection.main;// FIXME need to handle the case where the selection falls inside a block range\nlet anchor=this.domAtPos(main.anchor);let head=main.empty?anchor:this.domAtPos(main.head);// Always reset on Firefox when next to an uneditable node to\n// avoid invisible cursor bugs (#111)\nif(browser.gecko&&main.empty&&betweenUneditable(anchor)){let dummy=document.createTextNode(\"\");this.view.observer.ignore(()=>anchor.node.insertBefore(dummy,anchor.node.childNodes[anchor.offset]||null));anchor=head=new DOMPos(dummy,0);force=true;}let domSel=this.view.observer.selectionRange;// If the selection is already here, or in an equivalent position, don't touch it\nif(force||!domSel.focusNode||!isEquivalentPosition(anchor.node,anchor.offset,domSel.anchorNode,domSel.anchorOffset)||!isEquivalentPosition(head.node,head.offset,domSel.focusNode,domSel.focusOffset)){this.view.observer.ignore(()=>{// Chrome Android will hide the virtual keyboard when tapping\n// inside an uneditable node, and not bring it back when we\n// move the cursor to its proper position. This tries to\n// restore the keyboard by cycling focus.\nif(browser.android&&browser.chrome&&this.dom.contains(domSel.focusNode)&&inUneditable(domSel.focusNode,this.dom)){this.dom.blur();this.dom.focus({preventScroll:true});}let rawSel=getSelection(this.root);if(main.empty){// Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\nif(browser.gecko){let nextTo=nextToUneditable(anchor.node,anchor.offset);if(nextTo&&nextTo!=(1/* Before */|2/* After */)){let text=nearbyTextNode(anchor.node,anchor.offset,nextTo==1/* Before */?1:-1);if(text)anchor=new DOMPos(text,nextTo==1/* Before */?0:text.nodeValue.length);}}rawSel.collapse(anchor.node,anchor.offset);if(main.bidiLevel!=null&&domSel.cursorBidiLevel!=null)domSel.cursorBidiLevel=main.bidiLevel;}else if(rawSel.extend){// Selection.extend can be used to create an 'inverted' selection\n// (one where the focus is before the anchor), but not all\n// browsers support it yet.\nrawSel.collapse(anchor.node,anchor.offset);rawSel.extend(head.node,head.offset);}else {// Primitive (IE) way\nlet range=document.createRange();if(main.anchor>main.head)[anchor,head]=[head,anchor];range.setEnd(head.node,head.offset);range.setStart(anchor.node,anchor.offset);rawSel.removeAllRanges();rawSel.addRange(range);}});this.view.observer.setSelectionRange(anchor,head);}this.impreciseAnchor=anchor.precise?null:new DOMPos(domSel.anchorNode,domSel.anchorOffset);this.impreciseHead=head.precise?null:new DOMPos(domSel.focusNode,domSel.focusOffset);}enforceCursorAssoc(){if(this.compositionDeco.size)return;let cursor=this.view.state.selection.main;let sel=getSelection(this.root);if(!cursor.empty||!cursor.assoc||!sel.modify)return;let line=LineView.find(this,cursor.head);if(!line)return;let lineStart=line.posAtStart;if(cursor.head==lineStart||cursor.head==lineStart+line.length)return;let before=this.coordsAt(cursor.head,-1),after=this.coordsAt(cursor.head,1);if(!before||!after||before.bottom>after.top)return;let dom=this.domAtPos(cursor.head+cursor.assoc);sel.collapse(dom.node,dom.offset);sel.modify(\"move\",cursor.assoc<0?\"forward\":\"backward\",\"lineboundary\");}mayControlSelection(){return this.view.state.facet(editable)?this.root.activeElement==this.dom:hasSelection(this.dom,this.view.observer.selectionRange);}nearest(dom){for(let cur=dom;cur;){let domView=ContentView.get(cur);if(domView&&domView.rootView==this)return domView;cur=cur.parentNode;}return null;}posFromDOM(node,offset){let view=this.nearest(node);if(!view)throw new RangeError(\"Trying to find position for a DOM position outside of the document\");return view.localPosFromDOM(node,offset)+view.posAtStart;}domAtPos(pos){let{i,off}=this.childCursor().findPos(pos,-1);for(;i<this.children.length-1;){let child=this.children[i];if(off<child.length||child instanceof LineView)break;i++;off=0;}return this.children[i].domAtPos(off);}coordsAt(pos,side){for(let off=this.length,i=this.children.length-1;;i--){let child=this.children[i],start=off-child.breakAfter-child.length;if(pos>start||pos==start&&child.type!=BlockType.WidgetBefore&&child.type!=BlockType.WidgetAfter&&(!i||side==2||this.children[i-1].breakAfter||this.children[i-1].type==BlockType.WidgetBefore&&side>-2))return child.coordsAt(pos-start,side);off=start;}}measureVisibleLineHeights(viewport){let result=[],{from,to}=viewport;let contentWidth=this.view.contentDOM.clientWidth;let isWider=contentWidth>Math.max(this.view.scrollDOM.clientWidth,this.minWidth)+1;let widest=-1,ltr=this.view.textDirection==Direction.LTR;for(let pos=0,i=0;i<this.children.length;i++){let child=this.children[i],end=pos+child.length;if(end>to)break;if(pos>=from){let childRect=child.dom.getBoundingClientRect();result.push(childRect.height);if(isWider){let last=child.dom.lastChild;let rects=last?clientRectsFor(last):[];if(rects.length){let rect=rects[rects.length-1];let width=ltr?rect.right-childRect.left:childRect.right-rect.left;if(width>widest){widest=width;this.minWidth=contentWidth;this.minWidthFrom=pos;this.minWidthTo=end;}}}}pos=end+child.breakAfter;}return result;}textDirectionAt(pos){let{i}=this.childPos(pos,1);return getComputedStyle(this.children[i].dom).direction==\"rtl\"?Direction.RTL:Direction.LTR;}measureTextSize(){for(let child of this.children){if(child instanceof LineView){let measure=child.measureTextSize();if(measure)return measure;}}// If no workable line exists, force a layout of a measurable element\nlet dummy=document.createElement(\"div\"),lineHeight,charWidth;dummy.className=\"cm-line\";dummy.textContent=\"abc def ghi jkl mno pqr stu\";this.view.observer.ignore(()=>{this.dom.appendChild(dummy);let rect=clientRectsFor(dummy.firstChild)[0];lineHeight=dummy.getBoundingClientRect().height;charWidth=rect?rect.width/27:7;dummy.remove();});return {lineHeight,charWidth};}childCursor(pos=this.length){// Move back to start of last element when possible, so that\n// `ChildCursor.findPos` doesn't have to deal with the edge case\n// of being after the last element.\nlet i=this.children.length;if(i)pos-=this.children[--i].length;return new ChildCursor(this.children,pos,i);}computeBlockGapDeco(){let deco=[],vs=this.view.viewState;for(let pos=0,i=0;;i++){let next=i==vs.viewports.length?null:vs.viewports[i];let end=next?next.from-1:this.length;if(end>pos){let height=vs.lineBlockAt(end).bottom-vs.lineBlockAt(pos).top;deco.push(Decoration.replace({widget:new BlockGapWidget(height),block:true,inclusive:true,isBlockGap:true}).range(pos,end));}if(!next)break;pos=next.to+1;}return Decoration.set(deco);}updateDeco(){let allDeco=this.view.state.facet(decorations).map((d,i)=>{let dynamic=this.dynamicDecorationMap[i]=typeof d==\"function\";return dynamic?d(this.view):d;});for(let i=allDeco.length;i<allDeco.length+3;i++)this.dynamicDecorationMap[i]=false;return this.decorations=[...allDeco,this.compositionDeco,this.computeBlockGapDeco(),this.view.viewState.lineGapDeco];}scrollIntoView(target){let{range}=target;let rect=this.coordsAt(range.head,range.empty?range.assoc:range.head>range.anchor?-1:1),other;if(!rect)return;if(!range.empty&&(other=this.coordsAt(range.anchor,range.anchor>range.head?-1:1)))rect={left:Math.min(rect.left,other.left),top:Math.min(rect.top,other.top),right:Math.max(rect.right,other.right),bottom:Math.max(rect.bottom,other.bottom)};let mLeft=0,mRight=0,mTop=0,mBottom=0;for(let margins of this.view.state.facet(scrollMargins).map(f=>f(this.view)))if(margins){let{left,right,top,bottom}=margins;if(left!=null)mLeft=Math.max(mLeft,left);if(right!=null)mRight=Math.max(mRight,right);if(top!=null)mTop=Math.max(mTop,top);if(bottom!=null)mBottom=Math.max(mBottom,bottom);}let targetRect={left:rect.left-mLeft,top:rect.top-mTop,right:rect.right+mRight,bottom:rect.bottom+mBottom};scrollRectIntoView(this.view.scrollDOM,targetRect,range.head<range.anchor?-1:1,target.x,target.y,target.xMargin,target.yMargin,this.view.textDirection==Direction.LTR);}}function betweenUneditable(pos){return pos.node.nodeType==1&&pos.node.firstChild&&(pos.offset==0||pos.node.childNodes[pos.offset-1].contentEditable==\"false\")&&(pos.offset==pos.node.childNodes.length||pos.node.childNodes[pos.offset].contentEditable==\"false\");}class BlockGapWidget extends WidgetType{constructor(height){super();this.height=height;}toDOM(){let elt=document.createElement(\"div\");this.updateDOM(elt);return elt;}eq(other){return other.height==this.height;}updateDOM(elt){elt.style.height=this.height+\"px\";return true;}get estimatedHeight(){return this.height;}}function compositionSurroundingNode(view){let sel=view.observer.selectionRange;let textNode=sel.focusNode&&nearbyTextNode(sel.focusNode,sel.focusOffset,0);if(!textNode)return null;let cView=view.docView.nearest(textNode);if(!cView)return null;if(cView instanceof LineView){let topNode=textNode;while(topNode.parentNode!=cView.dom)topNode=topNode.parentNode;let prev=topNode.previousSibling;while(prev&&!ContentView.get(prev))prev=prev.previousSibling;let pos=prev?ContentView.get(prev).posAtEnd:cView.posAtStart;return {from:pos,to:pos,node:topNode,text:textNode};}else {for(;;){let{parent}=cView;if(!parent)return null;if(parent instanceof LineView)break;cView=parent;}let from=cView.posAtStart;return {from,to:from+cView.length,node:cView.dom,text:textNode};}}function computeCompositionDeco(view,changes){let surrounding=compositionSurroundingNode(view);if(!surrounding)return Decoration.none;let{from,to,node,text:textNode}=surrounding;let newFrom=changes.mapPos(from,1),newTo=Math.max(newFrom,changes.mapPos(to,-1));let{state}=view,text=node.nodeType==3?node.nodeValue:new DOMReader([],state).readRange(node.firstChild,null).text;if(newTo-newFrom<text.length){if(state.doc.sliceString(newFrom,Math.min(state.doc.length,newFrom+text.length),LineBreakPlaceholder)==text)newTo=newFrom+text.length;else if(state.doc.sliceString(Math.max(0,newTo-text.length),newTo,LineBreakPlaceholder)==text)newFrom=newTo-text.length;else return Decoration.none;}else if(state.doc.sliceString(newFrom,newTo,LineBreakPlaceholder)!=text){return Decoration.none;}let topView=ContentView.get(node);if(topView instanceof CompositionView)topView=topView.widget.topView;else if(topView)topView.parent=null;return Decoration.set(Decoration.replace({widget:new CompositionWidget(node,textNode,topView),inclusive:true}).range(newFrom,newTo));}class CompositionWidget extends WidgetType{constructor(top,text,topView){super();this.top=top;this.text=text;this.topView=topView;}eq(other){return this.top==other.top&&this.text==other.text;}toDOM(){return this.top;}ignoreEvent(){return false;}get customView(){return CompositionView;}}function nearbyTextNode(node,offset,side){for(;;){if(node.nodeType==3)return node;if(node.nodeType==1&&offset>0&&side<=0){node=node.childNodes[offset-1];offset=maxOffset(node);}else if(node.nodeType==1&&offset<node.childNodes.length&&side>=0){node=node.childNodes[offset];offset=0;}else {return null;}}}function nextToUneditable(node,offset){if(node.nodeType!=1)return 0;return (offset&&node.childNodes[offset-1].contentEditable==\"false\"?1/* Before */:0)|(offset<node.childNodes.length&&node.childNodes[offset].contentEditable==\"false\"?2/* After */:0);}class DecorationComparator$1{constructor(){this.changes=[];}compareRange(from,to){addRange(from,to,this.changes);}comparePoint(from,to){addRange(from,to,this.changes);}}function findChangedDeco(a,b,diff){let comp=new DecorationComparator$1();RangeSet.compare(a,b,diff,comp);return comp.changes;}function inUneditable(node,inside){for(let cur=node;cur&&cur!=inside;cur=cur.assignedSlot||cur.parentNode){if(cur.nodeType==1&&cur.contentEditable=='false'){return true;}}return false;}function groupAt(state,pos,bias=1){let categorize=state.charCategorizer(pos);let line=state.doc.lineAt(pos),linePos=pos-line.from;if(line.length==0)return EditorSelection.cursor(pos);if(linePos==0)bias=1;else if(linePos==line.length)bias=-1;let from=linePos,to=linePos;if(bias<0)from=findClusterBreak(line.text,linePos,false);else to=findClusterBreak(line.text,linePos);let cat=categorize(line.text.slice(from,to));while(from>0){let prev=findClusterBreak(line.text,from,false);if(categorize(line.text.slice(prev,from))!=cat)break;from=prev;}while(to<line.length){let next=findClusterBreak(line.text,to);if(categorize(line.text.slice(to,next))!=cat)break;to=next;}return EditorSelection.range(from+line.from,to+line.from);}// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\nfunction getdx(x,rect){return rect.left>x?rect.left-x:Math.max(0,x-rect.right);}function getdy(y,rect){return rect.top>y?rect.top-y:Math.max(0,y-rect.bottom);}function yOverlap(a,b){return a.top<b.bottom-1&&a.bottom>b.top+1;}function upTop(rect,top){return top<rect.top?{top,left:rect.left,right:rect.right,bottom:rect.bottom}:rect;}function upBot(rect,bottom){return bottom>rect.bottom?{top:rect.top,left:rect.left,right:rect.right,bottom}:rect;}function domPosAtCoords(parent,x,y){let closest,closestRect,closestX,closestY;let above,below,aboveRect,belowRect;for(let child=parent.firstChild;child;child=child.nextSibling){let rects=clientRectsFor(child);for(let i=0;i<rects.length;i++){let rect=rects[i];if(closestRect&&yOverlap(closestRect,rect))rect=upTop(upBot(rect,closestRect.bottom),closestRect.top);let dx=getdx(x,rect),dy=getdy(y,rect);if(dx==0&&dy==0)return child.nodeType==3?domPosInText(child,x,y):domPosAtCoords(child,x,y);if(!closest||closestY>dy||closestY==dy&&closestX>dx){closest=child;closestRect=rect;closestX=dx;closestY=dy;}if(dx==0){if(y>rect.bottom&&(!aboveRect||aboveRect.bottom<rect.bottom)){above=child;aboveRect=rect;}else if(y<rect.top&&(!belowRect||belowRect.top>rect.top)){below=child;belowRect=rect;}}else if(aboveRect&&yOverlap(aboveRect,rect)){aboveRect=upBot(aboveRect,rect.bottom);}else if(belowRect&&yOverlap(belowRect,rect)){belowRect=upTop(belowRect,rect.top);}}}if(aboveRect&&aboveRect.bottom>=y){closest=above;closestRect=aboveRect;}else if(belowRect&&belowRect.top<=y){closest=below;closestRect=belowRect;}if(!closest)return {node:parent,offset:0};let clipX=Math.max(closestRect.left,Math.min(closestRect.right,x));if(closest.nodeType==3)return domPosInText(closest,clipX,y);if(!closestX&&closest.contentEditable==\"true\")return domPosAtCoords(closest,clipX,y);let offset=Array.prototype.indexOf.call(parent.childNodes,closest)+(x>=(closestRect.left+closestRect.right)/2?1:0);return {node:parent,offset};}function domPosInText(node,x,y){let len=node.nodeValue.length;let closestOffset=-1,closestDY=1e9,generalSide=0;for(let i=0;i<len;i++){let rects=textRange(node,i,i+1).getClientRects();for(let j=0;j<rects.length;j++){let rect=rects[j];if(rect.top==rect.bottom)continue;if(!generalSide)generalSide=x-rect.left;let dy=(rect.top>y?rect.top-y:y-rect.bottom)-1;if(rect.left-1<=x&&rect.right+1>=x&&dy<closestDY){let right=x>=(rect.left+rect.right)/2,after=right;if(browser.chrome||browser.gecko){// Check for RTL on browsers that support getting client\n// rects for empty ranges.\nlet rectBefore=textRange(node,i).getBoundingClientRect();if(rectBefore.left==rect.right)after=!right;}if(dy<=0)return {node,offset:i+(after?1:0)};closestOffset=i+(after?1:0);closestDY=dy;}}}return {node,offset:closestOffset>-1?closestOffset:generalSide>0?node.nodeValue.length:0};}function posAtCoords(view,{x,y},precise,bias=-1){var _a;let content=view.contentDOM.getBoundingClientRect(),docTop=content.top+view.viewState.paddingTop;let block,{docHeight}=view.viewState;let yOffset=y-docTop;if(yOffset<0)return 0;if(yOffset>docHeight)return view.state.doc.length;// Scan for a text block near the queried y position\nfor(let halfLine=view.defaultLineHeight/2,bounced=false;;){block=view.elementAtHeight(yOffset);if(block.type==BlockType.Text)break;for(;;){// Move the y position out of this block\nyOffset=bias>0?block.bottom+halfLine:block.top-halfLine;if(yOffset>=0&&yOffset<=docHeight)break;// If the document consists entirely of replaced widgets, we\n// won't find a text block, so return 0\nif(bounced)return precise?null:0;bounced=true;bias=-bias;}}y=docTop+yOffset;let lineStart=block.from;// If this is outside of the rendered viewport, we can't determine a position\nif(lineStart<view.viewport.from)return view.viewport.from==0?0:precise?null:posAtCoordsImprecise(view,content,block,x,y);if(lineStart>view.viewport.to)return view.viewport.to==view.state.doc.length?view.state.doc.length:precise?null:posAtCoordsImprecise(view,content,block,x,y);// Prefer ShadowRootOrDocument.elementFromPoint if present, fall back to document if not\nlet doc=view.dom.ownerDocument;let root=view.root.elementFromPoint?view.root:doc;let element=root.elementFromPoint(x,y);if(element&&!view.contentDOM.contains(element))element=null;// If the element is unexpected, clip x at the sides of the content area and try again\nif(!element){x=Math.max(content.left+1,Math.min(content.right-1,x));element=root.elementFromPoint(x,y);if(element&&!view.contentDOM.contains(element))element=null;}// There's visible editor content under the point, so we can try\n// using caret(Position|Range)FromPoint as a shortcut\nlet node,offset=-1;if(element&&((_a=view.docView.nearest(element))===null||_a===void 0?void 0:_a.isEditable)!=false){if(doc.caretPositionFromPoint){let pos=doc.caretPositionFromPoint(x,y);if(pos)({offsetNode:node,offset}=pos);}else if(doc.caretRangeFromPoint){let range=doc.caretRangeFromPoint(x,y);if(range){({startContainer:node,startOffset:offset}=range);if(browser.safari&&isSuspiciousCaretResult(node,offset,x))node=undefined;}}}// No luck, do our own (potentially expensive) search\nif(!node||!view.docView.dom.contains(node)){let line=LineView.find(view.docView,lineStart);if(!line)return yOffset>block.top+block.height/2?block.to:block.from;({node,offset}=domPosAtCoords(line.dom,x,y));}return view.docView.posFromDOM(node,offset);}function posAtCoordsImprecise(view,contentRect,block,x,y){let into=Math.round((x-contentRect.left)*view.defaultCharacterWidth);if(view.lineWrapping&&block.height>view.defaultLineHeight*1.5){let line=Math.floor((y-block.top)/view.defaultLineHeight);into+=line*view.viewState.heightOracle.lineLength;}let content=view.state.sliceDoc(block.from,block.to);return block.from+findColumn(content,into,view.state.tabSize);}// In case of a high line height, Safari's caretRangeFromPoint treats\n// the space between lines as belonging to the last character of the\n// line before. This is used to detect such a result so that it can be\n// ignored (issue #401).\nfunction isSuspiciousCaretResult(node,offset,x){let len;if(node.nodeType!=3||offset!=(len=node.nodeValue.length))return false;for(let next=node.nextSibling;next;next=next.nextSibling)if(next.nodeType!=1||next.nodeName!=\"BR\")return false;return textRange(node,len-1,len).getBoundingClientRect().left>x;}function moveToLineBoundary(view,start,forward,includeWrap){let line=view.state.doc.lineAt(start.head);let coords=!includeWrap||!view.lineWrapping?null:view.coordsAtPos(start.assoc<0&&start.head>line.from?start.head-1:start.head);if(coords){let editorRect=view.dom.getBoundingClientRect();let direction=view.textDirectionAt(line.from);let pos=view.posAtCoords({x:forward==(direction==Direction.LTR)?editorRect.right-1:editorRect.left+1,y:(coords.top+coords.bottom)/2});if(pos!=null)return EditorSelection.cursor(pos,forward?-1:1);}let lineView=LineView.find(view.docView,start.head);let end=lineView?forward?lineView.posAtEnd:lineView.posAtStart:forward?line.to:line.from;return EditorSelection.cursor(end,forward?-1:1);}function moveByChar(view,start,forward,by){let line=view.state.doc.lineAt(start.head),spans=view.bidiSpans(line);let direction=view.textDirectionAt(line.from);for(let cur=start,check=null;;){let next=moveVisually(line,spans,direction,cur,forward),char=movedOver;if(!next){if(line.number==(forward?view.state.doc.lines:1))return cur;char=\"\\n\";line=view.state.doc.line(line.number+(forward?1:-1));spans=view.bidiSpans(line);next=EditorSelection.cursor(forward?line.from:line.to);}if(!check){if(!by)return next;check=by(char);}else if(!check(char)){return cur;}cur=next;}}function byGroup(view,pos,start){let categorize=view.state.charCategorizer(pos);let cat=categorize(start);return next=>{let nextCat=categorize(next);if(cat==CharCategory.Space)cat=nextCat;return cat==nextCat;};}function moveVertically(view,start,forward,distance){let startPos=start.head,dir=forward?1:-1;if(startPos==(forward?view.state.doc.length:0))return EditorSelection.cursor(startPos,start.assoc);let goal=start.goalColumn,startY;let rect=view.contentDOM.getBoundingClientRect();let startCoords=view.coordsAtPos(startPos),docTop=view.documentTop;if(startCoords){if(goal==null)goal=startCoords.left-rect.left;startY=dir<0?startCoords.top:startCoords.bottom;}else {let line=view.viewState.lineBlockAt(startPos);if(goal==null)goal=Math.min(rect.right-rect.left,view.defaultCharacterWidth*(startPos-line.from));startY=(dir<0?line.top:line.bottom)+docTop;}let resolvedGoal=rect.left+goal;let dist=distance!==null&&distance!==void 0?distance:view.defaultLineHeight>>1;for(let extra=0;;extra+=10){let curY=startY+(dist+extra)*dir;let pos=posAtCoords(view,{x:resolvedGoal,y:curY},false,dir);if(curY<rect.top||curY>rect.bottom||(dir<0?pos<startPos:pos>startPos))return EditorSelection.cursor(pos,start.assoc,undefined,goal);}}function skipAtoms(view,oldPos,pos){let atoms=view.state.facet(atomicRanges).map(f=>f(view));for(;;){let moved=false;for(let set of atoms){set.between(pos.from-1,pos.from+1,(from,to,value)=>{if(pos.from>from&&pos.from<to){pos=oldPos.from>pos.from?EditorSelection.cursor(from,1):EditorSelection.cursor(to,-1);moved=true;}});}if(!moved)return pos;}}// This will also be where dragging info and such goes\nclass InputState{constructor(view){this.lastKeyCode=0;this.lastKeyTime=0;this.chromeScrollHack=-1;// On iOS, some keys need to have their default behavior happen\n// (after which we retroactively handle them and reset the DOM) to\n// avoid messing up the virtual keyboard state.\nthis.pendingIOSKey=undefined;this.lastSelectionOrigin=null;this.lastSelectionTime=0;this.lastEscPress=0;this.lastContextMenu=0;this.scrollHandlers=[];this.registeredEvents=[];this.customHandlers=[];// -1 means not in a composition. Otherwise, this counts the number\n// of changes made during the composition. The count is used to\n// avoid treating the start state of the composition, before any\n// changes have been made, as part of the composition.\nthis.composing=-1;// Tracks whether the next change should be marked as starting the\n// composition (null means no composition, true means next is the\n// first, false means first has already been marked for this\n// composition)\nthis.compositionFirstChange=null;this.compositionEndedAt=0;this.rapidCompositionStart=false;this.mouseSelection=null;for(let type in handlers){let handler=handlers[type];view.contentDOM.addEventListener(type,event=>{if(!eventBelongsToEditor(view,event)||this.ignoreDuringComposition(event))return;if(type==\"keydown\"&&this.keydown(view,event))return;if(this.mustFlushObserver(event))view.observer.forceFlush();if(this.runCustomHandlers(type,view,event))event.preventDefault();else handler(view,event);});this.registeredEvents.push(type);}if(browser.chrome&&browser.chrome_version>=102){// On Chrome 102, viewport updates somehow stop wheel-based\n// scrolling. Turning off pointer events during the scroll seems\n// to avoid the issue.\nview.scrollDOM.addEventListener(\"wheel\",()=>{if(this.chromeScrollHack<0)view.contentDOM.style.pointerEvents=\"none\";else window.clearTimeout(this.chromeScrollHack);this.chromeScrollHack=setTimeout(()=>{this.chromeScrollHack=-1;view.contentDOM.style.pointerEvents=\"\";},100);},{passive:true});}this.notifiedFocused=view.hasFocus;// On Safari adding an input event handler somehow prevents an\n// issue where the composition vanishes when you press enter.\nif(browser.safari)view.contentDOM.addEventListener(\"input\",()=>null);}setSelectionOrigin(origin){this.lastSelectionOrigin=origin;this.lastSelectionTime=Date.now();}ensureHandlers(view,plugins){var _a;let handlers;this.customHandlers=[];for(let plugin of plugins)if(handlers=(_a=plugin.update(view).spec)===null||_a===void 0?void 0:_a.domEventHandlers){this.customHandlers.push({plugin:plugin.value,handlers});for(let type in handlers)if(this.registeredEvents.indexOf(type)<0&&type!=\"scroll\"){this.registeredEvents.push(type);view.contentDOM.addEventListener(type,event=>{if(!eventBelongsToEditor(view,event))return;if(this.runCustomHandlers(type,view,event))event.preventDefault();});}}}runCustomHandlers(type,view,event){for(let set of this.customHandlers){let handler=set.handlers[type];if(handler){try{if(handler.call(set.plugin,event,view)||event.defaultPrevented)return true;}catch(e){logException(view.state,e);}}}return false;}runScrollHandlers(view,event){for(let set of this.customHandlers){let handler=set.handlers.scroll;if(handler){try{handler.call(set.plugin,event,view);}catch(e){logException(view.state,e);}}}}keydown(view,event){// Must always run, even if a custom handler handled the event\nthis.lastKeyCode=event.keyCode;this.lastKeyTime=Date.now();if(event.keyCode==9&&Date.now()<this.lastEscPress+2000)return true;// Chrome for Android usually doesn't fire proper key events, but\n// occasionally does, usually surrounded by a bunch of complicated\n// composition changes. When an enter or backspace key event is\n// seen, hold off on handling DOM events for a bit, and then\n// dispatch it.\nif(browser.android&&browser.chrome&&!event.synthetic&&(event.keyCode==13||event.keyCode==8)){view.observer.delayAndroidKey(event.key,event.keyCode);return true;}// Prevent the default behavior of Enter on iOS makes the\n// virtual keyboard get stuck in the wrong (lowercase)\n// state. So we let it go through, and then, in\n// applyDOMChange, notify key handlers of it and reset to\n// the state they produce.\nlet pending;if(browser.ios&&(pending=PendingKeys.find(key=>key.keyCode==event.keyCode))&&!(event.ctrlKey||event.altKey||event.metaKey)&&!event.synthetic){this.pendingIOSKey=pending;setTimeout(()=>this.flushIOSKey(view),250);return true;}return false;}flushIOSKey(view){let key=this.pendingIOSKey;if(!key)return false;this.pendingIOSKey=undefined;return dispatchKey(view.contentDOM,key.key,key.keyCode);}ignoreDuringComposition(event){if(!/^key/.test(event.type))return false;if(this.composing>0)return true;// See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n// On some input method editors (IMEs), the Enter key is used to\n// confirm character selection. On Safari, when Enter is pressed,\n// compositionend and keydown events are sometimes emitted in the\n// wrong order. The key event should still be ignored, even when\n// it happens after the compositionend event.\nif(browser.safari&&Date.now()-this.compositionEndedAt<100){this.compositionEndedAt=0;return true;}return false;}mustFlushObserver(event){return event.type==\"keydown\"&&event.keyCode!=229||event.type==\"compositionend\"&&!browser.ios;}startMouseSelection(mouseSelection){if(this.mouseSelection)this.mouseSelection.destroy();this.mouseSelection=mouseSelection;}update(update){if(this.mouseSelection)this.mouseSelection.update(update);if(update.transactions.length)this.lastKeyCode=this.lastSelectionTime=0;}destroy(){if(this.mouseSelection)this.mouseSelection.destroy();}}const PendingKeys=[{key:\"Backspace\",keyCode:8,inputType:\"deleteContentBackward\"},{key:\"Enter\",keyCode:13,inputType:\"insertParagraph\"},{key:\"Delete\",keyCode:46,inputType:\"deleteContentForward\"}];// Key codes for modifier keys\nconst modifierCodes=[16,17,18,20,91,92,224,225];class MouseSelection{constructor(view,startEvent,style,mustSelect){this.view=view;this.style=style;this.mustSelect=mustSelect;this.lastEvent=startEvent;let doc=view.contentDOM.ownerDocument;doc.addEventListener(\"mousemove\",this.move=this.move.bind(this));doc.addEventListener(\"mouseup\",this.up=this.up.bind(this));this.extend=startEvent.shiftKey;this.multiple=view.state.facet(EditorState.allowMultipleSelections)&&addsSelectionRange(view,startEvent);this.dragMove=dragMovesSelection(view,startEvent);this.dragging=isInPrimarySelection(view,startEvent)&&getClickType(startEvent)==1?null:false;// When clicking outside of the selection, immediately apply the\n// effect of starting the selection\nif(this.dragging===false){startEvent.preventDefault();this.select(startEvent);}}move(event){if(event.buttons==0)return this.destroy();if(this.dragging!==false)return;this.select(this.lastEvent=event);}up(event){if(this.dragging==null)this.select(this.lastEvent);if(!this.dragging)event.preventDefault();this.destroy();}destroy(){let doc=this.view.contentDOM.ownerDocument;doc.removeEventListener(\"mousemove\",this.move);doc.removeEventListener(\"mouseup\",this.up);this.view.inputState.mouseSelection=null;}select(event){let selection=this.style.get(event,this.extend,this.multiple);if(this.mustSelect||!selection.eq(this.view.state.selection)||selection.main.assoc!=this.view.state.selection.main.assoc)this.view.dispatch({selection,userEvent:\"select.pointer\",scrollIntoView:true});this.mustSelect=false;}update(update){if(update.docChanged&&this.dragging)this.dragging=this.dragging.map(update.changes);if(this.style.update(update))setTimeout(()=>this.select(this.lastEvent),20);}}function addsSelectionRange(view,event){let facet=view.state.facet(clickAddsSelectionRange);return facet.length?facet[0](event):browser.mac?event.metaKey:event.ctrlKey;}function dragMovesSelection(view,event){let facet=view.state.facet(dragMovesSelection$1);return facet.length?facet[0](event):browser.mac?!event.altKey:!event.ctrlKey;}function isInPrimarySelection(view,event){let{main}=view.state.selection;if(main.empty)return false;// On boundary clicks, check whether the coordinates are inside the\n// selection's client rectangles\nlet sel=getSelection(view.root);if(sel.rangeCount==0)return true;let rects=sel.getRangeAt(0).getClientRects();for(let i=0;i<rects.length;i++){let rect=rects[i];if(rect.left<=event.clientX&&rect.right>=event.clientX&&rect.top<=event.clientY&&rect.bottom>=event.clientY)return true;}return false;}function eventBelongsToEditor(view,event){if(!event.bubbles)return true;if(event.defaultPrevented)return false;for(let node=event.target,cView;node!=view.contentDOM;node=node.parentNode)if(!node||node.nodeType==11||(cView=ContentView.get(node))&&cView.ignoreEvent(event))return false;return true;}const handlers=/*@__PURE__*/Object.create(null);// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI=browser.ie&&browser.ie_version<15||browser.ios&&browser.webkit_version<604;function capturePaste(view){let parent=view.dom.parentNode;if(!parent)return;let target=parent.appendChild(document.createElement(\"textarea\"));target.style.cssText=\"position: fixed; left: -10000px; top: 10px\";target.focus();setTimeout(()=>{view.focus();target.remove();doPaste(view,target.value);},50);}function doPaste(view,input){let{state}=view,changes,i=1,text=state.toText(input);let byLine=text.lines==state.selection.ranges.length;let linewise=lastLinewiseCopy!=null&&state.selection.ranges.every(r=>r.empty)&&lastLinewiseCopy==text.toString();if(linewise){let lastLine=-1;changes=state.changeByRange(range=>{let line=state.doc.lineAt(range.from);if(line.from==lastLine)return {range};lastLine=line.from;let insert=state.toText((byLine?text.line(i++).text:input)+state.lineBreak);return {changes:{from:line.from,insert},range:EditorSelection.cursor(range.from+insert.length)};});}else if(byLine){changes=state.changeByRange(range=>{let line=text.line(i++);return {changes:{from:range.from,to:range.to,insert:line.text},range:EditorSelection.cursor(range.from+line.length)};});}else {changes=state.replaceSelection(text);}view.dispatch(changes,{userEvent:\"input.paste\",scrollIntoView:true});}handlers.keydown=(view,event)=>{view.inputState.setSelectionOrigin(\"select\");if(event.keyCode==27)view.inputState.lastEscPress=Date.now();else if(modifierCodes.indexOf(event.keyCode)<0)view.inputState.lastEscPress=0;};let lastTouch=0;handlers.touchstart=(view,e)=>{lastTouch=Date.now();view.inputState.setSelectionOrigin(\"select.pointer\");};handlers.touchmove=view=>{view.inputState.setSelectionOrigin(\"select.pointer\");};handlers.mousedown=(view,event)=>{view.observer.flush();if(lastTouch>Date.now()-2000&&getClickType(event)==1)return;// Ignore touch interaction\nlet style=null;for(let makeStyle of view.state.facet(mouseSelectionStyle)){style=makeStyle(view,event);if(style)break;}if(!style&&event.button==0)style=basicMouseSelection(view,event);if(style){let mustFocus=view.root.activeElement!=view.contentDOM;if(mustFocus)view.observer.ignore(()=>focusPreventScroll(view.contentDOM));view.inputState.startMouseSelection(new MouseSelection(view,event,style,mustFocus));}};function rangeForClick(view,pos,bias,type){if(type==1){// Single click\nreturn EditorSelection.cursor(pos,bias);}else if(type==2){// Double click\nreturn groupAt(view.state,pos,bias);}else {// Triple click\nlet visual=LineView.find(view.docView,pos),line=view.state.doc.lineAt(visual?visual.posAtEnd:pos);let from=visual?visual.posAtStart:line.from,to=visual?visual.posAtEnd:line.to;if(to<view.state.doc.length&&to==line.to)to++;return EditorSelection.range(from,to);}}let insideY=(y,rect)=>y>=rect.top&&y<=rect.bottom;let inside=(x,y,rect)=>insideY(y,rect)&&x>=rect.left&&x<=rect.right;// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view,pos,x,y){let line=LineView.find(view.docView,pos);if(!line)return 1;let off=pos-line.posAtStart;// Line boundaries point into the line\nif(off==0)return 1;if(off==line.length)return -1;// Positions on top of an element point at that element\nlet before=line.coordsAt(off,-1);if(before&&inside(x,y,before))return -1;let after=line.coordsAt(off,1);if(after&&inside(x,y,after))return 1;// This is probably a line wrap point. Pick before if the point is\n// beside it.\nreturn before&&insideY(y,before)?-1:1;}function queryPos(view,event){let pos=view.posAtCoords({x:event.clientX,y:event.clientY},false);return {pos,bias:findPositionSide(view,pos,event.clientX,event.clientY)};}const BadMouseDetail=browser.ie&&browser.ie_version<=11;let lastMouseDown=null,lastMouseDownCount=0,lastMouseDownTime=0;function getClickType(event){if(!BadMouseDetail)return event.detail;let last=lastMouseDown,lastTime=lastMouseDownTime;lastMouseDown=event;lastMouseDownTime=Date.now();return lastMouseDownCount=!last||lastTime>Date.now()-400&&Math.abs(last.clientX-event.clientX)<2&&Math.abs(last.clientY-event.clientY)<2?(lastMouseDownCount+1)%3:1;}function basicMouseSelection(view,event){let start=queryPos(view,event),type=getClickType(event);let startSel=view.state.selection;let last=start,lastEvent=event;return {update(update){if(update.docChanged){if(start)start.pos=update.changes.mapPos(start.pos);startSel=startSel.map(update.changes);lastEvent=null;}},get(event,extend,multiple){let cur;if(lastEvent&&event.clientX==lastEvent.clientX&&event.clientY==lastEvent.clientY)cur=last;else {cur=last=queryPos(view,event);lastEvent=event;}if(!cur||!start)return startSel;let range=rangeForClick(view,cur.pos,cur.bias,type);if(start.pos!=cur.pos&&!extend){let startRange=rangeForClick(view,start.pos,start.bias,type);let from=Math.min(startRange.from,range.from),to=Math.max(startRange.to,range.to);range=from<range.from?EditorSelection.range(from,to):EditorSelection.range(to,from);}if(extend)return startSel.replaceRange(startSel.main.extend(range.from,range.to));else if(multiple)return startSel.addRange(range);else return EditorSelection.create([range]);}};}handlers.dragstart=(view,event)=>{let{selection:{main}}=view.state;let{mouseSelection}=view.inputState;if(mouseSelection)mouseSelection.dragging=main;if(event.dataTransfer){event.dataTransfer.setData(\"Text\",view.state.sliceDoc(main.from,main.to));event.dataTransfer.effectAllowed=\"copyMove\";}};function dropText(view,event,text,direct){if(!text)return;let dropPos=view.posAtCoords({x:event.clientX,y:event.clientY},false);event.preventDefault();let{mouseSelection}=view.inputState;let del=direct&&mouseSelection&&mouseSelection.dragging&&mouseSelection.dragMove?{from:mouseSelection.dragging.from,to:mouseSelection.dragging.to}:null;let ins={from:dropPos,insert:text};let changes=view.state.changes(del?[del,ins]:ins);view.focus();view.dispatch({changes,selection:{anchor:changes.mapPos(dropPos,-1),head:changes.mapPos(dropPos,1)},userEvent:del?\"move.drop\":\"input.drop\"});}handlers.drop=(view,event)=>{if(!event.dataTransfer)return;if(view.state.readOnly)return event.preventDefault();let files=event.dataTransfer.files;if(files&&files.length){// For a file drop, read the file's text.\nevent.preventDefault();let text=Array(files.length),read=0;let finishFile=()=>{if(++read==files.length)dropText(view,event,text.filter(s=>s!=null).join(view.state.lineBreak),false);};for(let i=0;i<files.length;i++){let reader=new FileReader();reader.onerror=finishFile;reader.onload=()=>{if(!/[\\x00-\\x08\\x0e-\\x1f]{2}/.test(reader.result))text[i]=reader.result;finishFile();};reader.readAsText(files[i]);}}else {dropText(view,event,event.dataTransfer.getData(\"Text\"),true);}};handlers.paste=(view,event)=>{if(view.state.readOnly)return event.preventDefault();view.observer.flush();let data=brokenClipboardAPI?null:event.clipboardData;if(data){doPaste(view,data.getData(\"text/plain\"));event.preventDefault();}else {capturePaste(view);}};function captureCopy(view,text){// The extra wrapper is somehow necessary on IE/Edge to prevent the\n// content from being mangled when it is put onto the clipboard\nlet parent=view.dom.parentNode;if(!parent)return;let target=parent.appendChild(document.createElement(\"textarea\"));target.style.cssText=\"position: fixed; left: -10000px; top: 10px\";target.value=text;target.focus();target.selectionEnd=text.length;target.selectionStart=0;setTimeout(()=>{target.remove();view.focus();},50);}function copiedRange(state){let content=[],ranges=[],linewise=false;for(let range of state.selection.ranges)if(!range.empty){content.push(state.sliceDoc(range.from,range.to));ranges.push(range);}if(!content.length){// Nothing selected, do a line-wise copy\nlet upto=-1;for(let{from}of state.selection.ranges){let line=state.doc.lineAt(from);if(line.number>upto){content.push(line.text);ranges.push({from:line.from,to:Math.min(state.doc.length,line.to+1)});}upto=line.number;}linewise=true;}return {text:content.join(state.lineBreak),ranges,linewise};}let lastLinewiseCopy=null;handlers.copy=handlers.cut=(view,event)=>{let{text,ranges,linewise}=copiedRange(view.state);if(!text&&!linewise)return;lastLinewiseCopy=linewise?text:null;let data=brokenClipboardAPI?null:event.clipboardData;if(data){event.preventDefault();data.clearData();data.setData(\"text/plain\",text);}else {captureCopy(view,text);}if(event.type==\"cut\"&&!view.state.readOnly)view.dispatch({changes:ranges,scrollIntoView:true,userEvent:\"delete.cut\"});};function updateForFocusChange(view){setTimeout(()=>{if(view.hasFocus!=view.inputState.notifiedFocused)view.update([]);},10);}handlers.focus=updateForFocusChange;handlers.blur=view=>{view.observer.clearSelectionRange();updateForFocusChange(view);};function forceClearComposition(view,rapid){if(view.docView.compositionDeco.size){view.inputState.rapidCompositionStart=rapid;try{view.update([]);}finally{view.inputState.rapidCompositionStart=false;}}}handlers.compositionstart=handlers.compositionupdate=view=>{if(view.inputState.compositionFirstChange==null)view.inputState.compositionFirstChange=true;if(view.inputState.composing<0){// FIXME possibly set a timeout to clear it again on Android\nview.inputState.composing=0;if(view.docView.compositionDeco.size){view.observer.flush();forceClearComposition(view,true);}}};handlers.compositionend=view=>{view.inputState.composing=-1;view.inputState.compositionEndedAt=Date.now();view.inputState.compositionFirstChange=null;setTimeout(()=>{if(view.inputState.composing<0)forceClearComposition(view,false);},50);};handlers.contextmenu=view=>{view.inputState.lastContextMenu=Date.now();};handlers.beforeinput=(view,event)=>{var _a;// Because Chrome Android doesn't fire useful key events, use\n// beforeinput to detect backspace (and possibly enter and delete,\n// but those usually don't even seem to fire beforeinput events at\n// the moment) and fake a key event for it.\n//\n// (preventDefault on beforeinput, though supported in the spec,\n// seems to do nothing at all on Chrome).\nlet pending;if(browser.chrome&&browser.android&&(pending=PendingKeys.find(key=>key.inputType==event.inputType))){view.observer.delayAndroidKey(pending.key,pending.keyCode);if(pending.key==\"Backspace\"||pending.key==\"Delete\"){let startViewHeight=((_a=window.visualViewport)===null||_a===void 0?void 0:_a.height)||0;setTimeout(()=>{var _a;// Backspacing near uneditable nodes on Chrome Android sometimes\n// closes the virtual keyboard. This tries to crudely detect\n// that and refocus to get it back.\nif((((_a=window.visualViewport)===null||_a===void 0?void 0:_a.height)||0)>startViewHeight+10&&view.hasFocus){view.contentDOM.blur();view.focus();}},100);}}};const wrappingWhiteSpace=[\"pre-wrap\",\"normal\",\"pre-line\",\"break-spaces\"];class HeightOracle{constructor(){this.doc=Text.empty;this.lineWrapping=false;this.heightSamples={};this.lineHeight=14;this.charWidth=7;this.lineLength=30;// Used to track, during updateHeight, if any actual heights changed\nthis.heightChanged=false;}heightForGap(from,to){let lines=this.doc.lineAt(to).number-this.doc.lineAt(from).number+1;if(this.lineWrapping)lines+=Math.ceil((to-from-lines*this.lineLength*0.5)/this.lineLength);return this.lineHeight*lines;}heightForLine(length){if(!this.lineWrapping)return this.lineHeight;let lines=1+Math.max(0,Math.ceil((length-this.lineLength)/(this.lineLength-5)));return lines*this.lineHeight;}setDoc(doc){this.doc=doc;return this;}mustRefreshForWrapping(whiteSpace){return wrappingWhiteSpace.indexOf(whiteSpace)>-1!=this.lineWrapping;}mustRefreshForHeights(lineHeights){let newHeight=false;for(let i=0;i<lineHeights.length;i++){let h=lineHeights[i];if(h<0){i++;}else if(!this.heightSamples[Math.floor(h*10)]){// Round to .1 pixels\nnewHeight=true;this.heightSamples[Math.floor(h*10)]=true;}}return newHeight;}refresh(whiteSpace,lineHeight,charWidth,lineLength,knownHeights){let lineWrapping=wrappingWhiteSpace.indexOf(whiteSpace)>-1;let changed=Math.round(lineHeight)!=Math.round(this.lineHeight)||this.lineWrapping!=lineWrapping;this.lineWrapping=lineWrapping;this.lineHeight=lineHeight;this.charWidth=charWidth;this.lineLength=lineLength;if(changed){this.heightSamples={};for(let i=0;i<knownHeights.length;i++){let h=knownHeights[i];if(h<0)i++;else this.heightSamples[Math.floor(h*10)]=true;}}return changed;}}// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights{constructor(from,heights){this.from=from;this.heights=heights;this.index=0;}get more(){return this.index<this.heights.length;}}/**\nRecord used to represent information about a block-level element\nin the editor view.\n*/class BlockInfo{/**\n    @internal\n    */constructor(/**\n    The start of the element in the document.\n    */from,/**\n    The length of the element.\n    */length,/**\n    The top position of the element (relative to the top of the\n    document).\n    */top,/**\n    Its height.\n    */height,/**\n    The type of element this is. When querying lines, this may be\n    an array of all the blocks that make up the line.\n    */type){this.from=from;this.length=length;this.top=top;this.height=height;this.type=type;}/**\n    The end of the element as a document position.\n    */get to(){return this.from+this.length;}/**\n    The bottom position of the element.\n    */get bottom(){return this.top+this.height;}/**\n    @internal\n    */join(other){let detail=(Array.isArray(this.type)?this.type:[this]).concat(Array.isArray(other.type)?other.type:[other]);return new BlockInfo(this.from,this.length+other.length,this.top,this.height+other.height,detail);}}var QueryType=/*@__PURE__*/function(QueryType){QueryType[QueryType[\"ByPos\"]=0]=\"ByPos\";QueryType[QueryType[\"ByHeight\"]=1]=\"ByHeight\";QueryType[QueryType[\"ByPosNoHeight\"]=2]=\"ByPosNoHeight\";return QueryType;}(QueryType||(QueryType={}));const Epsilon=1e-3;class HeightMap{constructor(length,// The number of characters covered\nheight,// Height of this part of the document\nflags=2/* Outdated */){this.length=length;this.height=height;this.flags=flags;}get outdated(){return (this.flags&2/* Outdated */)>0;}set outdated(value){this.flags=(value?2/* Outdated */:0)|this.flags&~2/* Outdated */;}setHeight(oracle,height){if(this.height!=height){if(Math.abs(this.height-height)>Epsilon)oracle.heightChanged=true;this.height=height;}}// Base case is to replace a leaf node, which simply builds a tree\n// from the new nodes and returns that (HeightMapBranch and\n// HeightMapGap override this to actually use from/to)\nreplace(_from,_to,nodes){return HeightMap.of(nodes);}// Again, these are base cases, and are overridden for branch and gap nodes.\ndecomposeLeft(_to,result){result.push(this);}decomposeRight(_from,result){result.push(this);}applyChanges(decorations,oldDoc,oracle,changes){let me=this;for(let i=changes.length-1;i>=0;i--){let{fromA,toA,fromB,toB}=changes[i];let start=me.lineAt(fromA,QueryType.ByPosNoHeight,oldDoc,0,0);let end=start.to>=toA?start:me.lineAt(toA,QueryType.ByPosNoHeight,oldDoc,0,0);toB+=end.to-toA;toA=end.to;while(i>0&&start.from<=changes[i-1].toA){fromA=changes[i-1].fromA;fromB=changes[i-1].fromB;i--;if(fromA<start.from)start=me.lineAt(fromA,QueryType.ByPosNoHeight,oldDoc,0,0);}fromB+=start.from-fromA;fromA=start.from;let nodes=NodeBuilder.build(oracle,decorations,fromB,toB);me=me.replace(fromA,toA,nodes);}return me.updateHeight(oracle,0);}static empty(){return new HeightMapText(0,0);}// nodes uses null values to indicate the position of line breaks.\n// There are never line breaks at the start or end of the array, or\n// two line breaks next to each other, and the array isn't allowed\n// to be empty (same restrictions as return value from the builder).\nstatic of(nodes){if(nodes.length==1)return nodes[0];let i=0,j=nodes.length,before=0,after=0;for(;;){if(i==j){if(before>after*2){let split=nodes[i-1];if(split.break)nodes.splice(--i,1,split.left,null,split.right);else nodes.splice(--i,1,split.left,split.right);j+=1+split.break;before-=split.size;}else if(after>before*2){let split=nodes[j];if(split.break)nodes.splice(j,1,split.left,null,split.right);else nodes.splice(j,1,split.left,split.right);j+=2+split.break;after-=split.size;}else {break;}}else if(before<after){let next=nodes[i++];if(next)before+=next.size;}else {let next=nodes[--j];if(next)after+=next.size;}}let brk=0;if(nodes[i-1]==null){brk=1;i--;}else if(nodes[i]==null){brk=1;j++;}return new HeightMapBranch(HeightMap.of(nodes.slice(0,i)),brk,HeightMap.of(nodes.slice(j)));}}HeightMap.prototype.size=1;class HeightMapBlock extends HeightMap{constructor(length,height,type){super(length,height);this.type=type;}blockAt(_height,_doc,top,offset){return new BlockInfo(offset,this.length,top,this.height,this.type);}lineAt(_value,_type,doc,top,offset){return this.blockAt(0,doc,top,offset);}forEachLine(from,to,doc,top,offset,f){if(from<=offset+this.length&&to>=offset)f(this.blockAt(0,doc,top,offset));}updateHeight(oracle,offset=0,_force=false,measured){if(measured&&measured.from<=offset&&measured.more)this.setHeight(oracle,measured.heights[measured.index++]);this.outdated=false;return this;}toString(){return `block(${this.length})`;}}class HeightMapText extends HeightMapBlock{constructor(length,height){super(length,height,BlockType.Text);this.collapsed=0;// Amount of collapsed content in the line\nthis.widgetHeight=0;// Maximum inline widget height\n}replace(_from,_to,nodes){let node=nodes[0];if(nodes.length==1&&(node instanceof HeightMapText||node instanceof HeightMapGap&&node.flags&4/* SingleLine */)&&Math.abs(this.length-node.length)<10){if(node instanceof HeightMapGap)node=new HeightMapText(node.length,this.height);else node.height=this.height;if(!this.outdated)node.outdated=false;return node;}else {return HeightMap.of(nodes);}}updateHeight(oracle,offset=0,force=false,measured){if(measured&&measured.from<=offset&&measured.more)this.setHeight(oracle,measured.heights[measured.index++]);else if(force||this.outdated)this.setHeight(oracle,Math.max(this.widgetHeight,oracle.heightForLine(this.length-this.collapsed)));this.outdated=false;return this;}toString(){return `line(${this.length}${this.collapsed?-this.collapsed:\"\"}${this.widgetHeight?\":\"+this.widgetHeight:\"\"})`;}}class HeightMapGap extends HeightMap{constructor(length){super(length,0);}lines(doc,offset){let firstLine=doc.lineAt(offset).number,lastLine=doc.lineAt(offset+this.length).number;return {firstLine,lastLine,lineHeight:this.height/(lastLine-firstLine+1)};}blockAt(height,doc,top,offset){let{firstLine,lastLine,lineHeight}=this.lines(doc,offset);let line=Math.max(0,Math.min(lastLine-firstLine,Math.floor((height-top)/lineHeight)));let{from,length}=doc.line(firstLine+line);return new BlockInfo(from,length,top+lineHeight*line,lineHeight,BlockType.Text);}lineAt(value,type,doc,top,offset){if(type==QueryType.ByHeight)return this.blockAt(value,doc,top,offset);if(type==QueryType.ByPosNoHeight){let{from,to}=doc.lineAt(value);return new BlockInfo(from,to-from,0,0,BlockType.Text);}let{firstLine,lineHeight}=this.lines(doc,offset);let{from,length,number}=doc.lineAt(value);return new BlockInfo(from,length,top+lineHeight*(number-firstLine),lineHeight,BlockType.Text);}forEachLine(from,to,doc,top,offset,f){let{firstLine,lineHeight}=this.lines(doc,offset);for(let pos=Math.max(from,offset),end=Math.min(offset+this.length,to);pos<=end;){let line=doc.lineAt(pos);if(pos==from)top+=lineHeight*(line.number-firstLine);f(new BlockInfo(line.from,line.length,top,lineHeight,BlockType.Text));top+=lineHeight;pos=line.to+1;}}replace(from,to,nodes){let after=this.length-to;if(after>0){let last=nodes[nodes.length-1];if(last instanceof HeightMapGap)nodes[nodes.length-1]=new HeightMapGap(last.length+after);else nodes.push(null,new HeightMapGap(after-1));}if(from>0){let first=nodes[0];if(first instanceof HeightMapGap)nodes[0]=new HeightMapGap(from+first.length);else nodes.unshift(new HeightMapGap(from-1),null);}return HeightMap.of(nodes);}decomposeLeft(to,result){result.push(new HeightMapGap(to-1),null);}decomposeRight(from,result){result.push(null,new HeightMapGap(this.length-from-1));}updateHeight(oracle,offset=0,force=false,measured){let end=offset+this.length;if(measured&&measured.from<=offset+this.length&&measured.more){// Fill in part of this gap with measured lines. We know there\n// can't be widgets or collapsed ranges in those lines, because\n// they would already have been added to the heightmap (gaps\n// only contain plain text).\nlet nodes=[],pos=Math.max(offset,measured.from),singleHeight=-1;let wasChanged=oracle.heightChanged;if(measured.from>offset)nodes.push(new HeightMapGap(measured.from-offset-1).updateHeight(oracle,offset));while(pos<=end&&measured.more){let len=oracle.doc.lineAt(pos).length;if(nodes.length)nodes.push(null);let height=measured.heights[measured.index++];if(singleHeight==-1)singleHeight=height;else if(Math.abs(height-singleHeight)>=Epsilon)singleHeight=-2;let line=new HeightMapText(len,height);line.outdated=false;nodes.push(line);pos+=len+1;}if(pos<=end)nodes.push(null,new HeightMapGap(end-pos).updateHeight(oracle,pos));let result=HeightMap.of(nodes);oracle.heightChanged=wasChanged||singleHeight<0||Math.abs(result.height-this.height)>=Epsilon||Math.abs(singleHeight-this.lines(oracle.doc,offset).lineHeight)>=Epsilon;return result;}else if(force||this.outdated){this.setHeight(oracle,oracle.heightForGap(offset,offset+this.length));this.outdated=false;}return this;}toString(){return `gap(${this.length})`;}}class HeightMapBranch extends HeightMap{constructor(left,brk,right){super(left.length+brk+right.length,left.height+right.height,brk|(left.outdated||right.outdated?2/* Outdated */:0));this.left=left;this.right=right;this.size=left.size+right.size;}get break(){return this.flags&1/* Break */;}blockAt(height,doc,top,offset){let mid=top+this.left.height;return height<mid?this.left.blockAt(height,doc,top,offset):this.right.blockAt(height,doc,mid,offset+this.left.length+this.break);}lineAt(value,type,doc,top,offset){let rightTop=top+this.left.height,rightOffset=offset+this.left.length+this.break;let left=type==QueryType.ByHeight?value<rightTop:value<rightOffset;let base=left?this.left.lineAt(value,type,doc,top,offset):this.right.lineAt(value,type,doc,rightTop,rightOffset);if(this.break||(left?base.to<rightOffset:base.from>rightOffset))return base;let subQuery=type==QueryType.ByPosNoHeight?QueryType.ByPosNoHeight:QueryType.ByPos;if(left)return base.join(this.right.lineAt(rightOffset,subQuery,doc,rightTop,rightOffset));else return this.left.lineAt(rightOffset,subQuery,doc,top,offset).join(base);}forEachLine(from,to,doc,top,offset,f){let rightTop=top+this.left.height,rightOffset=offset+this.left.length+this.break;if(this.break){if(from<rightOffset)this.left.forEachLine(from,to,doc,top,offset,f);if(to>=rightOffset)this.right.forEachLine(from,to,doc,rightTop,rightOffset,f);}else {let mid=this.lineAt(rightOffset,QueryType.ByPos,doc,top,offset);if(from<mid.from)this.left.forEachLine(from,mid.from-1,doc,top,offset,f);if(mid.to>=from&&mid.from<=to)f(mid);if(to>mid.to)this.right.forEachLine(mid.to+1,to,doc,rightTop,rightOffset,f);}}replace(from,to,nodes){let rightStart=this.left.length+this.break;if(to<rightStart)return this.balanced(this.left.replace(from,to,nodes),this.right);if(from>this.left.length)return this.balanced(this.left,this.right.replace(from-rightStart,to-rightStart,nodes));let result=[];if(from>0)this.decomposeLeft(from,result);let left=result.length;for(let node of nodes)result.push(node);if(from>0)mergeGaps(result,left-1);if(to<this.length){let right=result.length;this.decomposeRight(to,result);mergeGaps(result,right);}return HeightMap.of(result);}decomposeLeft(to,result){let left=this.left.length;if(to<=left)return this.left.decomposeLeft(to,result);result.push(this.left);if(this.break){left++;if(to>=left)result.push(null);}if(to>left)this.right.decomposeLeft(to-left,result);}decomposeRight(from,result){let left=this.left.length,right=left+this.break;if(from>=right)return this.right.decomposeRight(from-right,result);if(from<left)this.left.decomposeRight(from,result);if(this.break&&from<right)result.push(null);result.push(this.right);}balanced(left,right){if(left.size>2*right.size||right.size>2*left.size)return HeightMap.of(this.break?[left,null,right]:[left,right]);this.left=left;this.right=right;this.height=left.height+right.height;this.outdated=left.outdated||right.outdated;this.size=left.size+right.size;this.length=left.length+this.break+right.length;return this;}updateHeight(oracle,offset=0,force=false,measured){let{left,right}=this,rightStart=offset+left.length+this.break,rebalance=null;if(measured&&measured.from<=offset+left.length&&measured.more)rebalance=left=left.updateHeight(oracle,offset,force,measured);else left.updateHeight(oracle,offset,force);if(measured&&measured.from<=rightStart+right.length&&measured.more)rebalance=right=right.updateHeight(oracle,rightStart,force,measured);else right.updateHeight(oracle,rightStart,force);if(rebalance)return this.balanced(left,right);this.height=this.left.height+this.right.height;this.outdated=false;return this;}toString(){return this.left+(this.break?\" \":\"-\")+this.right;}}function mergeGaps(nodes,around){let before,after;if(nodes[around]==null&&(before=nodes[around-1])instanceof HeightMapGap&&(after=nodes[around+1])instanceof HeightMapGap)nodes.splice(around-1,3,new HeightMapGap(before.length+1+after.length));}const relevantWidgetHeight=5;class NodeBuilder{constructor(pos,oracle){this.pos=pos;this.oracle=oracle;this.nodes=[];this.lineStart=-1;this.lineEnd=-1;this.covering=null;this.writtenTo=pos;}get isCovered(){return this.covering&&this.nodes[this.nodes.length-1]==this.covering;}span(_from,to){if(this.lineStart>-1){let end=Math.min(to,this.lineEnd),last=this.nodes[this.nodes.length-1];if(last instanceof HeightMapText)last.length+=end-this.pos;else if(end>this.pos||!this.isCovered)this.nodes.push(new HeightMapText(end-this.pos,-1));this.writtenTo=end;if(to>end){this.nodes.push(null);this.writtenTo++;this.lineStart=-1;}}this.pos=to;}point(from,to,deco){if(from<to||deco.heightRelevant){let height=deco.widget?deco.widget.estimatedHeight:0;if(height<0)height=this.oracle.lineHeight;let len=to-from;if(deco.block){this.addBlock(new HeightMapBlock(len,height,deco.type));}else if(len||height>=relevantWidgetHeight){this.addLineDeco(height,len);}}else if(to>from){this.span(from,to);}if(this.lineEnd>-1&&this.lineEnd<this.pos)this.lineEnd=this.oracle.doc.lineAt(this.pos).to;}enterLine(){if(this.lineStart>-1)return;let{from,to}=this.oracle.doc.lineAt(this.pos);this.lineStart=from;this.lineEnd=to;if(this.writtenTo<from){if(this.writtenTo<from-1||this.nodes[this.nodes.length-1]==null)this.nodes.push(this.blankContent(this.writtenTo,from-1));this.nodes.push(null);}if(this.pos>from)this.nodes.push(new HeightMapText(this.pos-from,-1));this.writtenTo=this.pos;}blankContent(from,to){let gap=new HeightMapGap(to-from);if(this.oracle.doc.lineAt(from).to==to)gap.flags|=4/* SingleLine */;return gap;}ensureLine(){this.enterLine();let last=this.nodes.length?this.nodes[this.nodes.length-1]:null;if(last instanceof HeightMapText)return last;let line=new HeightMapText(0,-1);this.nodes.push(line);return line;}addBlock(block){this.enterLine();if(block.type==BlockType.WidgetAfter&&!this.isCovered)this.ensureLine();this.nodes.push(block);this.writtenTo=this.pos=this.pos+block.length;if(block.type!=BlockType.WidgetBefore)this.covering=block;}addLineDeco(height,length){let line=this.ensureLine();line.length+=length;line.collapsed+=length;line.widgetHeight=Math.max(line.widgetHeight,height);this.writtenTo=this.pos=this.pos+length;}finish(from){let last=this.nodes.length==0?null:this.nodes[this.nodes.length-1];if(this.lineStart>-1&&!(last instanceof HeightMapText)&&!this.isCovered)this.nodes.push(new HeightMapText(0,-1));else if(this.writtenTo<this.pos||last==null)this.nodes.push(this.blankContent(this.writtenTo,this.pos));let pos=from;for(let node of this.nodes){if(node instanceof HeightMapText)node.updateHeight(this.oracle,pos);pos+=node?node.length:1;}return this.nodes;}// Always called with a region that on both sides either stretches\n// to a line break or the end of the document.\n// The returned array uses null to indicate line breaks, but never\n// starts or ends in a line break, or has multiple line breaks next\n// to each other.\nstatic build(oracle,decorations,from,to){let builder=new NodeBuilder(from,oracle);RangeSet.spans(decorations,from,to,builder,0);return builder.finish(from);}}function heightRelevantDecoChanges(a,b,diff){let comp=new DecorationComparator();RangeSet.compare(a,b,diff,comp,0);return comp.changes;}class DecorationComparator{constructor(){this.changes=[];}compareRange(){}comparePoint(from,to,a,b){if(from<to||a&&a.heightRelevant||b&&b.heightRelevant)addRange(from,to,this.changes,5);}}function visiblePixelRange(dom,paddingTop){let rect=dom.getBoundingClientRect();let left=Math.max(0,rect.left),right=Math.min(innerWidth,rect.right);let top=Math.max(0,rect.top),bottom=Math.min(innerHeight,rect.bottom);let body=dom.ownerDocument.body;for(let parent=dom.parentNode;parent&&parent!=body;){if(parent.nodeType==1){let elt=parent;let style=window.getComputedStyle(elt);if((elt.scrollHeight>elt.clientHeight||elt.scrollWidth>elt.clientWidth)&&style.overflow!=\"visible\"){let parentRect=elt.getBoundingClientRect();left=Math.max(left,parentRect.left);right=Math.min(right,parentRect.right);top=Math.max(top,parentRect.top);bottom=Math.min(bottom,parentRect.bottom);}parent=style.position==\"absolute\"||style.position==\"fixed\"?elt.offsetParent:elt.parentNode;}else if(parent.nodeType==11){// Shadow root\nparent=parent.host;}else {break;}}return {left:left-rect.left,right:Math.max(left,right)-rect.left,top:top-(rect.top+paddingTop),bottom:Math.max(top,bottom)-(rect.top+paddingTop)};}function fullPixelRange(dom,paddingTop){let rect=dom.getBoundingClientRect();return {left:0,right:rect.right-rect.left,top:paddingTop,bottom:rect.bottom-(rect.top+paddingTop)};}// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap{constructor(from,to,size){this.from=from;this.to=to;this.size=size;}static same(a,b){if(a.length!=b.length)return false;for(let i=0;i<a.length;i++){let gA=a[i],gB=b[i];if(gA.from!=gB.from||gA.to!=gB.to||gA.size!=gB.size)return false;}return true;}draw(wrapping){return Decoration.replace({widget:new LineGapWidget(this.size,wrapping)}).range(this.from,this.to);}}class LineGapWidget extends WidgetType{constructor(size,vertical){super();this.size=size;this.vertical=vertical;}eq(other){return other.size==this.size&&other.vertical==this.vertical;}toDOM(){let elt=document.createElement(\"div\");if(this.vertical){elt.style.height=this.size+\"px\";}else {elt.style.width=this.size+\"px\";elt.style.height=\"2px\";elt.style.display=\"inline-block\";}return elt;}get estimatedHeight(){return this.vertical?this.size:-1;}}class ViewState{constructor(state){this.state=state;// These are contentDOM-local coordinates\nthis.pixelViewport={left:0,right:window.innerWidth,top:0,bottom:0};this.inView=true;this.paddingTop=0;this.paddingBottom=0;this.contentDOMWidth=0;this.contentDOMHeight=0;this.editorHeight=0;this.editorWidth=0;this.heightOracle=new HeightOracle();// See VP.MaxDOMHeight\nthis.scaler=IdScaler;this.scrollTarget=null;// Briefly set to true when printing, to disable viewport limiting\nthis.printing=false;// Flag set when editor content was redrawn, so that the next\n// measure stage knows it must read DOM layout\nthis.mustMeasureContent=true;this.defaultTextDirection=Direction.RTL;this.visibleRanges=[];// Cursor 'assoc' is only significant when the cursor is on a line\n// wrap point, where it must stick to the character that it is\n// associated with. Since browsers don't provide a reasonable\n// interface to set or query this, when a selection is set that\n// might cause this to be significant, this flag is set. The next\n// measure phase will check whether the cursor is on a line-wrapping\n// boundary and, if so, reset it to make sure it is positioned in\n// the right place.\nthis.mustEnforceCursorAssoc=false;this.stateDeco=state.facet(decorations).filter(d=>typeof d!=\"function\");this.heightMap=HeightMap.empty().applyChanges(this.stateDeco,Text.empty,this.heightOracle.setDoc(state.doc),[new ChangedRange(0,0,0,state.doc.length)]);this.viewport=this.getViewport(0,null);this.updateViewportLines();this.updateForViewport();this.lineGaps=this.ensureLineGaps([]);this.lineGapDeco=Decoration.set(this.lineGaps.map(gap=>gap.draw(false)));this.computeVisibleRanges();}updateForViewport(){let viewports=[this.viewport],{main}=this.state.selection;for(let i=0;i<=1;i++){let pos=i?main.head:main.anchor;if(!viewports.some(({from,to})=>pos>=from&&pos<=to)){let{from,to}=this.lineBlockAt(pos);viewports.push(new Viewport(from,to));}}this.viewports=viewports.sort((a,b)=>a.from-b.from);this.scaler=this.heightMap.height<=7000000/* MaxDOMHeight */?IdScaler:new BigScaler(this.heightOracle.doc,this.heightMap,this.viewports);}updateViewportLines(){this.viewportLines=[];this.heightMap.forEachLine(this.viewport.from,this.viewport.to,this.state.doc,0,0,block=>{this.viewportLines.push(this.scaler.scale==1?block:scaleBlock(block,this.scaler));});}update(update,scrollTarget=null){this.state=update.state;let prevDeco=this.stateDeco;this.stateDeco=this.state.facet(decorations).filter(d=>typeof d!=\"function\");let contentChanges=update.changedRanges;let heightChanges=ChangedRange.extendWithRanges(contentChanges,heightRelevantDecoChanges(prevDeco,this.stateDeco,update?update.changes:ChangeSet.empty(this.state.doc.length)));let prevHeight=this.heightMap.height;this.heightMap=this.heightMap.applyChanges(this.stateDeco,update.startState.doc,this.heightOracle.setDoc(this.state.doc),heightChanges);if(this.heightMap.height!=prevHeight)update.flags|=2/* Height */;let viewport=heightChanges.length?this.mapViewport(this.viewport,update.changes):this.viewport;if(scrollTarget&&(scrollTarget.range.head<viewport.from||scrollTarget.range.head>viewport.to)||!this.viewportIsAppropriate(viewport))viewport=this.getViewport(0,scrollTarget);let updateLines=!update.changes.empty||update.flags&2/* Height */||viewport.from!=this.viewport.from||viewport.to!=this.viewport.to;this.viewport=viewport;this.updateForViewport();if(updateLines)this.updateViewportLines();if(this.lineGaps.length||this.viewport.to-this.viewport.from>4000/* DoubleMargin */)this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps,update.changes)));update.flags|=this.computeVisibleRanges();if(scrollTarget)this.scrollTarget=scrollTarget;if(!this.mustEnforceCursorAssoc&&update.selectionSet&&update.view.lineWrapping&&update.state.selection.main.empty&&update.state.selection.main.assoc)this.mustEnforceCursorAssoc=true;}measure(view){let dom=view.contentDOM,style=window.getComputedStyle(dom);let oracle=this.heightOracle;let whiteSpace=style.whiteSpace;this.defaultTextDirection=style.direction==\"rtl\"?Direction.RTL:Direction.LTR;let refresh=this.heightOracle.mustRefreshForWrapping(whiteSpace);let measureContent=refresh||this.mustMeasureContent||this.contentDOMHeight!=dom.clientHeight;this.contentDOMHeight=dom.clientHeight;this.mustMeasureContent=false;let result=0,bias=0;// Vertical padding\nlet paddingTop=parseInt(style.paddingTop)||0,paddingBottom=parseInt(style.paddingBottom)||0;if(this.paddingTop!=paddingTop||this.paddingBottom!=paddingBottom){this.paddingTop=paddingTop;this.paddingBottom=paddingBottom;result|=8/* Geometry */|2/* Height */;}if(this.editorWidth!=view.scrollDOM.clientWidth){if(oracle.lineWrapping)measureContent=true;this.editorWidth=view.scrollDOM.clientWidth;result|=8/* Geometry */;}// Pixel viewport\nlet pixelViewport=(this.printing?fullPixelRange:visiblePixelRange)(dom,this.paddingTop);let dTop=pixelViewport.top-this.pixelViewport.top,dBottom=pixelViewport.bottom-this.pixelViewport.bottom;this.pixelViewport=pixelViewport;let inView=this.pixelViewport.bottom>this.pixelViewport.top&&this.pixelViewport.right>this.pixelViewport.left;if(inView!=this.inView){this.inView=inView;if(inView)measureContent=true;}if(!this.inView)return 0;let contentWidth=dom.clientWidth;if(this.contentDOMWidth!=contentWidth||this.editorHeight!=view.scrollDOM.clientHeight){this.contentDOMWidth=contentWidth;this.editorHeight=view.scrollDOM.clientHeight;result|=8/* Geometry */;}if(measureContent){let lineHeights=view.docView.measureVisibleLineHeights(this.viewport);if(oracle.mustRefreshForHeights(lineHeights))refresh=true;if(refresh||oracle.lineWrapping&&Math.abs(contentWidth-this.contentDOMWidth)>oracle.charWidth){let{lineHeight,charWidth}=view.docView.measureTextSize();refresh=oracle.refresh(whiteSpace,lineHeight,charWidth,contentWidth/charWidth,lineHeights);if(refresh){view.docView.minWidth=0;result|=8/* Geometry */;}}if(dTop>0&&dBottom>0)bias=Math.max(dTop,dBottom);else if(dTop<0&&dBottom<0)bias=Math.min(dTop,dBottom);oracle.heightChanged=false;for(let vp of this.viewports){let heights=vp.from==this.viewport.from?lineHeights:view.docView.measureVisibleLineHeights(vp);this.heightMap=this.heightMap.updateHeight(oracle,0,refresh,new MeasuredHeights(vp.from,heights));}if(oracle.heightChanged)result|=2/* Height */;}let viewportChange=!this.viewportIsAppropriate(this.viewport,bias)||this.scrollTarget&&(this.scrollTarget.range.head<this.viewport.from||this.scrollTarget.range.head>this.viewport.to);if(viewportChange)this.viewport=this.getViewport(bias,this.scrollTarget);this.updateForViewport();if(result&2/* Height */||viewportChange)this.updateViewportLines();if(this.lineGaps.length||this.viewport.to-this.viewport.from>4000/* DoubleMargin */)this.updateLineGaps(this.ensureLineGaps(refresh?[]:this.lineGaps));result|=this.computeVisibleRanges();if(this.mustEnforceCursorAssoc){this.mustEnforceCursorAssoc=false;// This is done in the read stage, because moving the selection\n// to a line end is going to trigger a layout anyway, so it\n// can't be a pure write. It should be rare that it does any\n// writing.\nview.docView.enforceCursorAssoc();}return result;}get visibleTop(){return this.scaler.fromDOM(this.pixelViewport.top);}get visibleBottom(){return this.scaler.fromDOM(this.pixelViewport.bottom);}getViewport(bias,scrollTarget){// This will divide VP.Margin between the top and the\n// bottom, depending on the bias (the change in viewport position\n// since the last update). It'll hold a number between 0 and 1\nlet marginTop=0.5-Math.max(-0.5,Math.min(0.5,bias/1000/* Margin *//2));let map=this.heightMap,doc=this.state.doc,{visibleTop,visibleBottom}=this;let viewport=new Viewport(map.lineAt(visibleTop-marginTop*1000/* Margin */,QueryType.ByHeight,doc,0,0).from,map.lineAt(visibleBottom+(1-marginTop)*1000/* Margin */,QueryType.ByHeight,doc,0,0).to);// If scrollTarget is given, make sure the viewport includes that position\nif(scrollTarget){let{head}=scrollTarget.range;if(head<viewport.from||head>viewport.to){let viewHeight=Math.min(this.editorHeight,this.pixelViewport.bottom-this.pixelViewport.top);let block=map.lineAt(head,QueryType.ByPos,doc,0,0),topPos;if(scrollTarget.y==\"center\")topPos=(block.top+block.bottom)/2-viewHeight/2;else if(scrollTarget.y==\"start\"||scrollTarget.y==\"nearest\"&&head<viewport.from)topPos=block.top;else topPos=block.bottom-viewHeight;viewport=new Viewport(map.lineAt(topPos-1000/* Margin *//2,QueryType.ByHeight,doc,0,0).from,map.lineAt(topPos+viewHeight+1000/* Margin *//2,QueryType.ByHeight,doc,0,0).to);}}return viewport;}mapViewport(viewport,changes){let from=changes.mapPos(viewport.from,-1),to=changes.mapPos(viewport.to,1);return new Viewport(this.heightMap.lineAt(from,QueryType.ByPos,this.state.doc,0,0).from,this.heightMap.lineAt(to,QueryType.ByPos,this.state.doc,0,0).to);}// Checks if a given viewport covers the visible part of the\n// document and not too much beyond that.\nviewportIsAppropriate({from,to},bias=0){if(!this.inView)return true;let{top}=this.heightMap.lineAt(from,QueryType.ByPos,this.state.doc,0,0);let{bottom}=this.heightMap.lineAt(to,QueryType.ByPos,this.state.doc,0,0);let{visibleTop,visibleBottom}=this;return (from==0||top<=visibleTop-Math.max(10/* MinCoverMargin */,Math.min(-bias,250/* MaxCoverMargin */)))&&(to==this.state.doc.length||bottom>=visibleBottom+Math.max(10/* MinCoverMargin */,Math.min(bias,250/* MaxCoverMargin */)))&&top>visibleTop-2*1000/* Margin */&&bottom<visibleBottom+2*1000/* Margin */;}mapLineGaps(gaps,changes){if(!gaps.length||changes.empty)return gaps;let mapped=[];for(let gap of gaps)if(!changes.touchesRange(gap.from,gap.to))mapped.push(new LineGap(changes.mapPos(gap.from),changes.mapPos(gap.to),gap.size));return mapped;}// Computes positions in the viewport where the start or end of a\n// line should be hidden, trying to reuse existing line gaps when\n// appropriate to avoid unneccesary redraws.\n// Uses crude character-counting for the positioning and sizing,\n// since actual DOM coordinates aren't always available and\n// predictable. Relies on generous margins (see LG.Margin) to hide\n// the artifacts this might produce from the user.\nensureLineGaps(current){let gaps=[];// This won't work at all in predominantly right-to-left text.\nif(this.defaultTextDirection!=Direction.LTR)return gaps;for(let line of this.viewportLines){if(line.length<4000/* DoubleMargin */)continue;let structure=lineStructure(line.from,line.to,this.stateDeco);if(structure.total<4000/* DoubleMargin */)continue;let viewFrom,viewTo;if(this.heightOracle.lineWrapping){let marginHeight=2000/* Margin *//this.heightOracle.lineLength*this.heightOracle.lineHeight;viewFrom=findPosition(structure,(this.visibleTop-line.top-marginHeight)/line.height);viewTo=findPosition(structure,(this.visibleBottom-line.top+marginHeight)/line.height);}else {let totalWidth=structure.total*this.heightOracle.charWidth;let marginWidth=2000/* Margin */*this.heightOracle.charWidth;viewFrom=findPosition(structure,(this.pixelViewport.left-marginWidth)/totalWidth);viewTo=findPosition(structure,(this.pixelViewport.right+marginWidth)/totalWidth);}let outside=[];if(viewFrom>line.from)outside.push({from:line.from,to:viewFrom});if(viewTo<line.to)outside.push({from:viewTo,to:line.to});let sel=this.state.selection.main;// Make sure the gaps don't cover a selection end\nif(sel.from>=line.from&&sel.from<=line.to)cutRange(outside,sel.from-10/* SelectionMargin */,sel.from+10/* SelectionMargin */);if(!sel.empty&&sel.to>=line.from&&sel.to<=line.to)cutRange(outside,sel.to-10/* SelectionMargin */,sel.to+10/* SelectionMargin */);for(let{from,to}of outside)if(to-from>1000/* HalfMargin */){gaps.push(find(current,gap=>gap.from>=line.from&&gap.to<=line.to&&Math.abs(gap.from-from)<1000/* HalfMargin */&&Math.abs(gap.to-to)<1000/* HalfMargin */)||new LineGap(from,to,this.gapSize(line,from,to,structure)));}}return gaps;}gapSize(line,from,to,structure){let fraction=findFraction(structure,to)-findFraction(structure,from);if(this.heightOracle.lineWrapping){return line.height*fraction;}else {return structure.total*this.heightOracle.charWidth*fraction;}}updateLineGaps(gaps){if(!LineGap.same(gaps,this.lineGaps)){this.lineGaps=gaps;this.lineGapDeco=Decoration.set(gaps.map(gap=>gap.draw(this.heightOracle.lineWrapping)));}}computeVisibleRanges(){let deco=this.stateDeco;if(this.lineGaps.length)deco=deco.concat(this.lineGapDeco);let ranges=[];RangeSet.spans(deco,this.viewport.from,this.viewport.to,{span(from,to){ranges.push({from,to});},point(){}},20);let changed=ranges.length!=this.visibleRanges.length||this.visibleRanges.some((r,i)=>r.from!=ranges[i].from||r.to!=ranges[i].to);this.visibleRanges=ranges;return changed?4/* Viewport */:0;}lineBlockAt(pos){return pos>=this.viewport.from&&pos<=this.viewport.to&&this.viewportLines.find(b=>b.from<=pos&&b.to>=pos)||scaleBlock(this.heightMap.lineAt(pos,QueryType.ByPos,this.state.doc,0,0),this.scaler);}lineBlockAtHeight(height){return scaleBlock(this.heightMap.lineAt(this.scaler.fromDOM(height),QueryType.ByHeight,this.state.doc,0,0),this.scaler);}elementAtHeight(height){return scaleBlock(this.heightMap.blockAt(this.scaler.fromDOM(height),this.state.doc,0,0),this.scaler);}get docHeight(){return this.scaler.toDOM(this.heightMap.height);}get contentHeight(){return this.docHeight+this.paddingTop+this.paddingBottom;}}class Viewport{constructor(from,to){this.from=from;this.to=to;}}function lineStructure(from,to,stateDeco){let ranges=[],pos=from,total=0;RangeSet.spans(stateDeco,from,to,{span(){},point(from,to){if(from>pos){ranges.push({from:pos,to:from});total+=from-pos;}pos=to;}},20);// We're only interested in collapsed ranges of a significant size\nif(pos<to){ranges.push({from:pos,to});total+=to-pos;}return {total,ranges};}function findPosition({total,ranges},ratio){if(ratio<=0)return ranges[0].from;if(ratio>=1)return ranges[ranges.length-1].to;let dist=Math.floor(total*ratio);for(let i=0;;i++){let{from,to}=ranges[i],size=to-from;if(dist<=size)return from+dist;dist-=size;}}function findFraction(structure,pos){let counted=0;for(let{from,to}of structure.ranges){if(pos<=to){counted+=pos-from;break;}counted+=to-from;}return counted/structure.total;}function cutRange(ranges,from,to){for(let i=0;i<ranges.length;i++){let r=ranges[i];if(r.from<to&&r.to>from){let pieces=[];if(r.from<from)pieces.push({from:r.from,to:from});if(r.to>to)pieces.push({from:to,to:r.to});ranges.splice(i,1,...pieces);i+=pieces.length-1;}}}function find(array,f){for(let val of array)if(f(val))return val;return undefined;}// Don't scale when the document height is within the range of what\n// the DOM can handle.\nconst IdScaler={toDOM(n){return n;},fromDOM(n){return n;},scale:1};// When the height is too big (> VP.MaxDOMHeight), scale down the\n// regions outside the viewports so that the total height is\n// VP.MaxDOMHeight.\nclass BigScaler{constructor(doc,heightMap,viewports){let vpHeight=0,base=0,domBase=0;this.viewports=viewports.map(({from,to})=>{let top=heightMap.lineAt(from,QueryType.ByPos,doc,0,0).top;let bottom=heightMap.lineAt(to,QueryType.ByPos,doc,0,0).bottom;vpHeight+=bottom-top;return {from,to,top,bottom,domTop:0,domBottom:0};});this.scale=(7000000/* MaxDOMHeight */-vpHeight)/(heightMap.height-vpHeight);for(let obj of this.viewports){obj.domTop=domBase+(obj.top-base)*this.scale;domBase=obj.domBottom=obj.domTop+(obj.bottom-obj.top);base=obj.bottom;}}toDOM(n){for(let i=0,base=0,domBase=0;;i++){let vp=i<this.viewports.length?this.viewports[i]:null;if(!vp||n<vp.top)return domBase+(n-base)*this.scale;if(n<=vp.bottom)return vp.domTop+(n-vp.top);base=vp.bottom;domBase=vp.domBottom;}}fromDOM(n){for(let i=0,base=0,domBase=0;;i++){let vp=i<this.viewports.length?this.viewports[i]:null;if(!vp||n<vp.domTop)return base+(n-domBase)/this.scale;if(n<=vp.domBottom)return vp.top+(n-vp.domTop);base=vp.bottom;domBase=vp.domBottom;}}}function scaleBlock(block,scaler){if(scaler.scale==1)return block;let bTop=scaler.toDOM(block.top),bBottom=scaler.toDOM(block.bottom);return new BlockInfo(block.from,block.length,bTop,bBottom-bTop,Array.isArray(block.type)?block.type.map(b=>scaleBlock(b,scaler)):block.type);}const theme$1=/*@__PURE__*/Facet.define({combine:strs=>strs.join(\" \")});const darkTheme=/*@__PURE__*/Facet.define({combine:values=>values.indexOf(true)>-1});const baseThemeID=/*@__PURE__*/StyleModule.newName(),baseLightID=/*@__PURE__*/StyleModule.newName(),baseDarkID=/*@__PURE__*/StyleModule.newName();const lightDarkIDs={\"&light\":\".\"+baseLightID,\"&dark\":\".\"+baseDarkID};function buildTheme(main,spec,scopes){return new StyleModule(spec,{finish(sel){return /&/.test(sel)?sel.replace(/&\\w*/,m=>{if(m==\"&\")return main;if(!scopes||!scopes[m])throw new RangeError(`Unsupported selector: ${m}`);return scopes[m];}):main+\" \"+sel;}});}const baseTheme$1$1=/*@__PURE__*/buildTheme(\".\"+baseThemeID,{\"&.cm-editor\":{position:\"relative !important\",boxSizing:\"border-box\",\"&.cm-focused\":{// Provide a simple default outline to make sure a focused\n// editor is visually distinct. Can't leave the default behavior\n// because that will apply to the content element, which is\n// inside the scrollable container and doesn't include the\n// gutters. We also can't use an 'auto' outline, since those\n// are, for some reason, drawn behind the element content, which\n// will cause things like the active line background to cover\n// the outline (#297).\noutline:\"1px dotted #212121\"},display:\"flex !important\",flexDirection:\"column\"},\".cm-scroller\":{display:\"flex !important\",alignItems:\"flex-start !important\",fontFamily:\"monospace\",lineHeight:1.4,height:\"100%\",overflowX:\"auto\",position:\"relative\",zIndex:0},\".cm-content\":{margin:0,flexGrow:2,minHeight:\"100%\",display:\"block\",whiteSpace:\"pre\",wordWrap:\"normal\",boxSizing:\"border-box\",padding:\"4px 0\",outline:\"none\",\"&[contenteditable=true]\":{WebkitUserModify:\"read-write-plaintext-only\"}},\".cm-lineWrapping\":{whiteSpace_fallback:\"pre-wrap\",whiteSpace:\"break-spaces\",wordBreak:\"break-word\",overflowWrap:\"anywhere\"},\"&light .cm-content\":{caretColor:\"black\"},\"&dark .cm-content\":{caretColor:\"white\"},\".cm-line\":{display:\"block\",padding:\"0 2px 0 4px\"},\".cm-selectionLayer\":{zIndex:-1,contain:\"size style\"},\".cm-selectionBackground\":{position:\"absolute\"},\"&light .cm-selectionBackground\":{background:\"#d9d9d9\"},\"&dark .cm-selectionBackground\":{background:\"#222\"},\"&light.cm-focused .cm-selectionBackground\":{background:\"#d7d4f0\"},\"&dark.cm-focused .cm-selectionBackground\":{background:\"#233\"},\".cm-cursorLayer\":{zIndex:100,contain:\"size style\",pointerEvents:\"none\"},\"&.cm-focused .cm-cursorLayer\":{animation:\"steps(1) cm-blink 1.2s infinite\"},// Two animations defined so that we can switch between them to\n// restart the animation without forcing another style\n// recomputation.\n\"@keyframes cm-blink\":{\"0%\":{},\"50%\":{visibility:\"hidden\"},\"100%\":{}},\"@keyframes cm-blink2\":{\"0%\":{},\"50%\":{visibility:\"hidden\"},\"100%\":{}},\".cm-cursor, .cm-dropCursor\":{position:\"absolute\",borderLeft:\"1.2px solid black\",marginLeft:\"-0.6px\",pointerEvents:\"none\"},\".cm-cursor\":{display:\"none\"},\"&dark .cm-cursor\":{borderLeftColor:\"#444\"},\"&.cm-focused .cm-cursor\":{display:\"block\"},\"&light .cm-activeLine\":{backgroundColor:\"#f3f9ff\"},\"&dark .cm-activeLine\":{backgroundColor:\"#223039\"},\"&light .cm-specialChar\":{color:\"red\"},\"&dark .cm-specialChar\":{color:\"#f78\"},\".cm-gutters\":{display:\"flex\",height:\"100%\",boxSizing:\"border-box\",left:0,zIndex:200},\"&light .cm-gutters\":{backgroundColor:\"#f5f5f5\",color:\"#6c6c6c\",borderRight:\"1px solid #ddd\"},\"&dark .cm-gutters\":{backgroundColor:\"#333338\",color:\"#ccc\"},\".cm-gutter\":{display:\"flex !important\",flexDirection:\"column\",flexShrink:0,boxSizing:\"border-box\",minHeight:\"100%\",overflow:\"hidden\"},\".cm-gutterElement\":{boxSizing:\"border-box\"},\".cm-lineNumbers .cm-gutterElement\":{padding:\"0 3px 0 5px\",minWidth:\"20px\",textAlign:\"right\",whiteSpace:\"nowrap\"},\"&light .cm-activeLineGutter\":{backgroundColor:\"#e2f2ff\"},\"&dark .cm-activeLineGutter\":{backgroundColor:\"#222227\"},\".cm-panels\":{boxSizing:\"border-box\",position:\"sticky\",left:0,right:0},\"&light .cm-panels\":{backgroundColor:\"#f5f5f5\",color:\"black\"},\"&light .cm-panels-top\":{borderBottom:\"1px solid #ddd\"},\"&light .cm-panels-bottom\":{borderTop:\"1px solid #ddd\"},\"&dark .cm-panels\":{backgroundColor:\"#333338\",color:\"white\"},\".cm-tab\":{display:\"inline-block\",overflow:\"hidden\",verticalAlign:\"bottom\"},\".cm-widgetBuffer\":{verticalAlign:\"text-top\",height:\"1em\",display:\"inline\"},\".cm-placeholder\":{color:\"#888\",display:\"inline-block\",verticalAlign:\"top\"},\".cm-button\":{verticalAlign:\"middle\",color:\"inherit\",fontSize:\"70%\",padding:\".2em 1em\",borderRadius:\"1px\"},\"&light .cm-button\":{backgroundImage:\"linear-gradient(#eff1f5, #d9d9df)\",border:\"1px solid #888\",\"&:active\":{backgroundImage:\"linear-gradient(#b4b4b4, #d0d3d6)\"}},\"&dark .cm-button\":{backgroundImage:\"linear-gradient(#393939, #111)\",border:\"1px solid #888\",\"&:active\":{backgroundImage:\"linear-gradient(#111, #333)\"}},\".cm-textfield\":{verticalAlign:\"middle\",color:\"inherit\",fontSize:\"70%\",border:\"1px solid silver\",padding:\".2em .5em\"},\"&light .cm-textfield\":{backgroundColor:\"white\"},\"&dark .cm-textfield\":{border:\"1px solid #555\",backgroundColor:\"inherit\"}},lightDarkIDs);const observeOptions={childList:true,characterData:true,subtree:true,attributes:true,characterDataOldValue:true};// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData=browser.ie&&browser.ie_version<=11;class DOMObserver{constructor(view,onChange,onScrollChanged){this.view=view;this.onChange=onChange;this.onScrollChanged=onScrollChanged;this.active=false;// The known selection. Kept in our own object, as opposed to just\n// directly accessing the selection because:\n//  - Safari doesn't report the right selection in shadow DOM\n//  - Reading from the selection forces a DOM layout\n//  - This way, we can ignore selectionchange events if we have\n//    already seen the 'new' selection\nthis.selectionRange=new DOMSelectionState();// Set when a selection change is detected, cleared on flush\nthis.selectionChanged=false;this.delayedFlush=-1;this.resizeTimeout=-1;this.queue=[];this.delayedAndroidKey=null;this.scrollTargets=[];this.intersection=null;this.resize=null;this.intersecting=false;this.gapIntersection=null;this.gaps=[];// Timeout for scheduling check of the parents that need scroll handlers\nthis.parentCheck=-1;this.dom=view.contentDOM;this.observer=new MutationObserver(mutations=>{for(let mut of mutations)this.queue.push(mut);// IE11 will sometimes (on typing over a selection or\n// backspacing out a single character text node) call the\n// observer callback before actually updating the DOM.\n//\n// Unrelatedly, iOS Safari will, when ending a composition,\n// sometimes first clear it, deliver the mutations, and then\n// reinsert the finished text. CodeMirror's handling of the\n// deletion will prevent the reinsertion from happening,\n// breaking composition.\nif((browser.ie&&browser.ie_version<=11||browser.ios&&view.composing)&&mutations.some(m=>m.type==\"childList\"&&m.removedNodes.length||m.type==\"characterData\"&&m.oldValue.length>m.target.nodeValue.length))this.flushSoon();else this.flush();});if(useCharData)this.onCharData=event=>{this.queue.push({target:event.target,type:\"characterData\",oldValue:event.prevValue});this.flushSoon();};this.onSelectionChange=this.onSelectionChange.bind(this);window.addEventListener(\"resize\",this.onResize=this.onResize.bind(this));if(typeof ResizeObserver==\"function\"){this.resize=new ResizeObserver(()=>{if(this.view.docView.lastUpdate<Date.now()-75)this.onResize();});this.resize.observe(view.scrollDOM);}window.addEventListener(\"beforeprint\",this.onPrint=this.onPrint.bind(this));this.start();window.addEventListener(\"scroll\",this.onScroll=this.onScroll.bind(this));if(typeof IntersectionObserver==\"function\"){this.intersection=new IntersectionObserver(entries=>{if(this.parentCheck<0)this.parentCheck=setTimeout(this.listenForScroll.bind(this),1000);if(entries.length>0&&entries[entries.length-1].intersectionRatio>0!=this.intersecting){this.intersecting=!this.intersecting;if(this.intersecting!=this.view.inView)this.onScrollChanged(document.createEvent(\"Event\"));}},{});this.intersection.observe(this.dom);this.gapIntersection=new IntersectionObserver(entries=>{if(entries.length>0&&entries[entries.length-1].intersectionRatio>0)this.onScrollChanged(document.createEvent(\"Event\"));},{});}this.listenForScroll();this.readSelectionRange();this.dom.ownerDocument.addEventListener(\"selectionchange\",this.onSelectionChange);}onScroll(e){if(this.intersecting)this.flush(false);this.onScrollChanged(e);}onResize(){if(this.resizeTimeout<0)this.resizeTimeout=setTimeout(()=>{this.resizeTimeout=-1;this.view.requestMeasure();},50);}onPrint(){this.view.viewState.printing=true;this.view.measure();setTimeout(()=>{this.view.viewState.printing=false;this.view.requestMeasure();},500);}updateGaps(gaps){if(this.gapIntersection&&(gaps.length!=this.gaps.length||this.gaps.some((g,i)=>g!=gaps[i]))){this.gapIntersection.disconnect();for(let gap of gaps)this.gapIntersection.observe(gap);this.gaps=gaps;}}onSelectionChange(event){if(!this.readSelectionRange()||this.delayedAndroidKey)return;let{view}=this,sel=this.selectionRange;if(view.state.facet(editable)?view.root.activeElement!=this.dom:!hasSelection(view.dom,sel))return;let context=sel.anchorNode&&view.docView.nearest(sel.anchorNode);if(context&&context.ignoreEvent(event))return;// Deletions on IE11 fire their events in the wrong order, giving\n// us a selection change event before the DOM changes are\n// reported.\n// Chrome Android has a similar issue when backspacing out a\n// selection (#645).\nif((browser.ie&&browser.ie_version<=11||browser.android&&browser.chrome)&&!view.state.selection.main.empty&&// (Selection.isCollapsed isn't reliable on IE)\nsel.focusNode&&isEquivalentPosition(sel.focusNode,sel.focusOffset,sel.anchorNode,sel.anchorOffset))this.flushSoon();else this.flush(false);}readSelectionRange(){let{root}=this.view,domSel=getSelection(root);// The Selection object is broken in shadow roots in Safari. See\n// https://github.com/codemirror/codemirror.next/issues/414\nlet range=browser.safari&&root.nodeType==11&&deepActiveElement()==this.view.contentDOM&&safariSelectionRangeHack(this.view)||domSel;if(this.selectionRange.eq(range))return false;this.selectionRange.setRange(range);return this.selectionChanged=true;}setSelectionRange(anchor,head){this.selectionRange.set(anchor.node,anchor.offset,head.node,head.offset);this.selectionChanged=false;}clearSelectionRange(){this.selectionRange.set(null,0,null,0);}listenForScroll(){this.parentCheck=-1;let i=0,changed=null;for(let dom=this.dom;dom;){if(dom.nodeType==1){if(!changed&&i<this.scrollTargets.length&&this.scrollTargets[i]==dom)i++;else if(!changed)changed=this.scrollTargets.slice(0,i);if(changed)changed.push(dom);dom=dom.assignedSlot||dom.parentNode;}else if(dom.nodeType==11){// Shadow root\ndom=dom.host;}else {break;}}if(i<this.scrollTargets.length&&!changed)changed=this.scrollTargets.slice(0,i);if(changed){for(let dom of this.scrollTargets)dom.removeEventListener(\"scroll\",this.onScroll);for(let dom of this.scrollTargets=changed)dom.addEventListener(\"scroll\",this.onScroll);}}ignore(f){if(!this.active)return f();try{this.stop();return f();}finally{this.start();this.clear();}}start(){if(this.active)return;this.observer.observe(this.dom,observeOptions);if(useCharData)this.dom.addEventListener(\"DOMCharacterDataModified\",this.onCharData);this.active=true;}stop(){if(!this.active)return;this.active=false;this.observer.disconnect();if(useCharData)this.dom.removeEventListener(\"DOMCharacterDataModified\",this.onCharData);}// Throw away any pending changes\nclear(){this.processRecords();this.queue.length=0;this.selectionChanged=false;}// Chrome Android, especially in combination with GBoard, not only\n// doesn't reliably fire regular key events, but also often\n// surrounds the effect of enter or backspace with a bunch of\n// composition events that, when interrupted, cause text duplication\n// or other kinds of corruption. This hack makes the editor back off\n// from handling DOM changes for a moment when such a key is\n// detected (via beforeinput or keydown), and then tries to flush\n// them or, if that has no effect, dispatches the given key.\ndelayAndroidKey(key,keyCode){if(!this.delayedAndroidKey)requestAnimationFrame(()=>{let key=this.delayedAndroidKey;this.delayedAndroidKey=null;this.delayedFlush=-1;if(!this.flush())dispatchKey(this.view.contentDOM,key.key,key.keyCode);});// Since backspace beforeinput is sometimes signalled spuriously,\n// Enter always takes precedence.\nif(!this.delayedAndroidKey||key==\"Enter\")this.delayedAndroidKey={key,keyCode};}flushSoon(){if(this.delayedFlush<0)this.delayedFlush=window.setTimeout(()=>{this.delayedFlush=-1;this.flush();},20);}forceFlush(){if(this.delayedFlush>=0){window.clearTimeout(this.delayedFlush);this.delayedFlush=-1;this.flush();}}processRecords(){let records=this.queue;for(let mut of this.observer.takeRecords())records.push(mut);if(records.length)this.queue=[];let from=-1,to=-1,typeOver=false;for(let record of records){let range=this.readMutation(record);if(!range)continue;if(range.typeOver)typeOver=true;if(from==-1){({from,to}=range);}else {from=Math.min(range.from,from);to=Math.max(range.to,to);}}return {from,to,typeOver};}// Apply pending changes, if any\nflush(readSelection=true){// Completely hold off flushing when pending keys are set—the code\n// managing those will make sure processRecords is called and the\n// view is resynchronized after\nif(this.delayedFlush>=0||this.delayedAndroidKey)return;if(readSelection)this.readSelectionRange();let{from,to,typeOver}=this.processRecords();let newSel=this.selectionChanged&&hasSelection(this.dom,this.selectionRange);if(from<0&&!newSel)return;this.selectionChanged=false;let startState=this.view.state;let handled=this.onChange(from,to,typeOver);// The view wasn't updated\nif(this.view.state==startState)this.view.update([]);return handled;}readMutation(rec){let cView=this.view.docView.nearest(rec.target);if(!cView||cView.ignoreMutation(rec))return null;cView.markDirty(rec.type==\"attributes\");if(rec.type==\"attributes\")cView.dirty|=4/* Attrs */;if(rec.type==\"childList\"){let childBefore=findChild(cView,rec.previousSibling||rec.target.previousSibling,-1);let childAfter=findChild(cView,rec.nextSibling||rec.target.nextSibling,1);return {from:childBefore?cView.posAfter(childBefore):cView.posAtStart,to:childAfter?cView.posBefore(childAfter):cView.posAtEnd,typeOver:false};}else if(rec.type==\"characterData\"){return {from:cView.posAtStart,to:cView.posAtEnd,typeOver:rec.target.nodeValue==rec.oldValue};}else {return null;}}destroy(){var _a,_b,_c;this.stop();(_a=this.intersection)===null||_a===void 0?void 0:_a.disconnect();(_b=this.gapIntersection)===null||_b===void 0?void 0:_b.disconnect();(_c=this.resize)===null||_c===void 0?void 0:_c.disconnect();for(let dom of this.scrollTargets)dom.removeEventListener(\"scroll\",this.onScroll);window.removeEventListener(\"scroll\",this.onScroll);window.removeEventListener(\"resize\",this.onResize);window.removeEventListener(\"beforeprint\",this.onPrint);this.dom.ownerDocument.removeEventListener(\"selectionchange\",this.onSelectionChange);clearTimeout(this.parentCheck);clearTimeout(this.resizeTimeout);}}function findChild(cView,dom,dir){while(dom){let curView=ContentView.get(dom);if(curView&&curView.parent==cView)return curView;let parent=dom.parentNode;dom=parent!=cView.dom?parent:dir>0?dom.nextSibling:dom.previousSibling;}return null;}// Used to work around a Safari Selection/shadow DOM bug (#414)\nfunction safariSelectionRangeHack(view){let found=null;// Because Safari (at least in 2018-2021) doesn't provide regular\n// access to the selection inside a shadowroot, we have to perform a\n// ridiculous hack to get at it—using `execCommand` to trigger a\n// `beforeInput` event so that we can read the target range from the\n// event.\nfunction read(event){event.preventDefault();event.stopImmediatePropagation();found=event.getTargetRanges()[0];}view.contentDOM.addEventListener(\"beforeinput\",read,true);document.execCommand(\"indent\");view.contentDOM.removeEventListener(\"beforeinput\",read,true);if(!found)return null;let anchorNode=found.startContainer,anchorOffset=found.startOffset;let focusNode=found.endContainer,focusOffset=found.endOffset;let curAnchor=view.docView.domAtPos(view.state.selection.main.anchor);// Since such a range doesn't distinguish between anchor and head,\n// use a heuristic that flips it around if its end matches the\n// current anchor.\nif(isEquivalentPosition(curAnchor.node,curAnchor.offset,focusNode,focusOffset))[anchorNode,anchorOffset,focusNode,focusOffset]=[focusNode,focusOffset,anchorNode,anchorOffset];return {anchorNode,anchorOffset,focusNode,focusOffset};}function applyDOMChange(view,start,end,typeOver){let change,newSel;let sel=view.state.selection.main;if(start>-1){let bounds=view.docView.domBoundsAround(start,end,0);if(!bounds||view.state.readOnly)return false;let{from,to}=bounds;let selPoints=view.docView.impreciseHead||view.docView.impreciseAnchor?[]:selectionPoints(view);let reader=new DOMReader(selPoints,view.state);reader.readRange(bounds.startDOM,bounds.endDOM);let preferredPos=sel.from,preferredSide=null;// Prefer anchoring to end when Backspace is pressed (or, on\n// Android, when something was deleted)\nif(view.inputState.lastKeyCode===8&&view.inputState.lastKeyTime>Date.now()-100||browser.android&&reader.text.length<to-from){preferredPos=sel.to;preferredSide=\"end\";}let diff=findDiff(view.state.doc.sliceString(from,to,LineBreakPlaceholder),reader.text,preferredPos-from,preferredSide);if(diff){// Chrome inserts two newlines when pressing shift-enter at the\n// end of a line. This drops one of those.\nif(browser.chrome&&view.inputState.lastKeyCode==13&&diff.toB==diff.from+2&&reader.text.slice(diff.from,diff.toB)==LineBreakPlaceholder+LineBreakPlaceholder)diff.toB--;change={from:from+diff.from,to:from+diff.toA,insert:Text.of(reader.text.slice(diff.from,diff.toB).split(LineBreakPlaceholder))};}newSel=selectionFromPoints(selPoints,from);}else if(view.hasFocus||!view.state.facet(editable)){let domSel=view.observer.selectionRange;let{impreciseHead:iHead,impreciseAnchor:iAnchor}=view.docView;let head=iHead&&iHead.node==domSel.focusNode&&iHead.offset==domSel.focusOffset||!contains(view.contentDOM,domSel.focusNode)?view.state.selection.main.head:view.docView.posFromDOM(domSel.focusNode,domSel.focusOffset);let anchor=iAnchor&&iAnchor.node==domSel.anchorNode&&iAnchor.offset==domSel.anchorOffset||!contains(view.contentDOM,domSel.anchorNode)?view.state.selection.main.anchor:view.docView.posFromDOM(domSel.anchorNode,domSel.anchorOffset);if(head!=sel.head||anchor!=sel.anchor)newSel=EditorSelection.single(anchor,head);}if(!change&&!newSel)return false;// Heuristic to notice typing over a selected character\nif(!change&&typeOver&&!sel.empty&&newSel&&newSel.main.empty)change={from:sel.from,to:sel.to,insert:view.state.doc.slice(sel.from,sel.to)};// If the change is inside the selection and covers most of it,\n// assume it is a selection replace (with identical characters at\n// the start/end not included in the diff)\nelse if(change&&change.from>=sel.from&&change.to<=sel.to&&(change.from!=sel.from||change.to!=sel.to)&&sel.to-sel.from-(change.to-change.from)<=4)change={from:sel.from,to:sel.to,insert:view.state.doc.slice(sel.from,change.from).append(change.insert).append(view.state.doc.slice(change.to,sel.to))};// Detect insert-period-on-double-space Mac behavior, and transform\n// it into a regular space insert.\nelse if((browser.mac||browser.android)&&change&&change.from==change.to&&change.from==sel.head-1&&change.insert.toString()==\".\")change={from:sel.from,to:sel.to,insert:Text.of([\" \"])};if(change){let startState=view.state;if(browser.ios&&view.inputState.flushIOSKey(view))return true;// Android browsers don't fire reasonable key events for enter,\n// backspace, or delete. So this detects changes that look like\n// they're caused by those keys, and reinterprets them as key\n// events. (Some of these keys are also handled by beforeinput\n// events and the pendingAndroidKey mechanism, but that's not\n// reliable in all situations.)\nif(browser.android&&(change.from==sel.from&&change.to==sel.to&&change.insert.length==1&&change.insert.lines==2&&dispatchKey(view.contentDOM,\"Enter\",13)||change.from==sel.from-1&&change.to==sel.to&&change.insert.length==0&&dispatchKey(view.contentDOM,\"Backspace\",8)||change.from==sel.from&&change.to==sel.to+1&&change.insert.length==0&&dispatchKey(view.contentDOM,\"Delete\",46)))return true;let text=change.insert.toString();if(view.state.facet(inputHandler).some(h=>h(view,change.from,change.to,text)))return true;if(view.inputState.composing>=0)view.inputState.composing++;let tr;if(change.from>=sel.from&&change.to<=sel.to&&change.to-change.from>=(sel.to-sel.from)/3&&(!newSel||newSel.main.empty&&newSel.main.from==change.from+change.insert.length)&&view.inputState.composing<0){let before=sel.from<change.from?startState.sliceDoc(sel.from,change.from):\"\";let after=sel.to>change.to?startState.sliceDoc(change.to,sel.to):\"\";tr=startState.replaceSelection(view.state.toText(before+change.insert.sliceString(0,undefined,view.state.lineBreak)+after));}else {let changes=startState.changes(change);let mainSel=newSel&&!startState.selection.main.eq(newSel.main)&&newSel.main.to<=changes.newLength?newSel.main:undefined;// Try to apply a composition change to all cursors\nif(startState.selection.ranges.length>1&&view.inputState.composing>=0&&change.to<=sel.to&&change.to>=sel.to-10){let replaced=view.state.sliceDoc(change.from,change.to);let compositionRange=compositionSurroundingNode(view)||view.state.doc.lineAt(sel.head);let offset=sel.to-change.to,size=sel.to-sel.from;tr=startState.changeByRange(range=>{if(range.from==sel.from&&range.to==sel.to)return {changes,range:mainSel||range.map(changes)};let to=range.to-offset,from=to-replaced.length;if(range.to-range.from!=size||view.state.sliceDoc(from,to)!=replaced||// Unfortunately, there's no way to make multiple\n// changes in the same node work without aborting\n// composition, so cursors in the composition range are\n// ignored.\ncompositionRange&&range.to>=compositionRange.from&&range.from<=compositionRange.to)return {range};let rangeChanges=startState.changes({from,to,insert:change.insert}),selOff=range.to-sel.to;return {changes:rangeChanges,range:!mainSel?range.map(rangeChanges):EditorSelection.range(Math.max(0,mainSel.anchor+selOff),Math.max(0,mainSel.head+selOff))};});}else {tr={changes,selection:mainSel&&startState.selection.replaceRange(mainSel)};}}let userEvent=\"input.type\";if(view.composing){userEvent+=\".compose\";if(view.inputState.compositionFirstChange){userEvent+=\".start\";view.inputState.compositionFirstChange=false;}}view.dispatch(tr,{scrollIntoView:true,userEvent});return true;}else if(newSel&&!newSel.main.eq(sel)){let scrollIntoView=false,userEvent=\"select\";if(view.inputState.lastSelectionTime>Date.now()-50){if(view.inputState.lastSelectionOrigin==\"select\")scrollIntoView=true;userEvent=view.inputState.lastSelectionOrigin;}view.dispatch({selection:newSel,scrollIntoView,userEvent});return true;}else {return false;}}function findDiff(a,b,preferredPos,preferredSide){let minLen=Math.min(a.length,b.length);let from=0;while(from<minLen&&a.charCodeAt(from)==b.charCodeAt(from))from++;if(from==minLen&&a.length==b.length)return null;let toA=a.length,toB=b.length;while(toA>0&&toB>0&&a.charCodeAt(toA-1)==b.charCodeAt(toB-1)){toA--;toB--;}if(preferredSide==\"end\"){let adjust=Math.max(0,from-Math.min(toA,toB));preferredPos-=toA+adjust-from;}if(toA<from&&a.length<b.length){let move=preferredPos<=from&&preferredPos>=toA?from-preferredPos:0;from-=move;toB=from+(toB-toA);toA=from;}else if(toB<from){let move=preferredPos<=from&&preferredPos>=toB?from-preferredPos:0;from-=move;toA=from+(toA-toB);toB=from;}return {from,toA,toB};}function selectionPoints(view){let result=[];if(view.root.activeElement!=view.contentDOM)return result;let{anchorNode,anchorOffset,focusNode,focusOffset}=view.observer.selectionRange;if(anchorNode){result.push(new DOMPoint(anchorNode,anchorOffset));if(focusNode!=anchorNode||focusOffset!=anchorOffset)result.push(new DOMPoint(focusNode,focusOffset));}return result;}function selectionFromPoints(points,base){if(points.length==0)return null;let anchor=points[0].pos,head=points.length==2?points[1].pos:anchor;return anchor>-1&&head>-1?EditorSelection.single(anchor+base,head+base):null;}// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/**\nAn editor view represents the editor's user interface. It holds\nthe editable DOM surface, and possibly other elements such as the\nline number gutter. It handles events and dispatches state\ntransactions for editing actions.\n*/class EditorView{/**\n    Construct a new view. You'll want to either provide a `parent`\n    option, or put `view.dom` into your document after creating a\n    view, so that the user can see the editor.\n    */constructor(config={}){this.plugins=[];this.pluginMap=new Map();this.editorAttrs={};this.contentAttrs={};this.bidiCache=[];this.destroyed=false;/**\n        @internal\n        */this.updateState=2/* Updating */;/**\n        @internal\n        */this.measureScheduled=-1;/**\n        @internal\n        */this.measureRequests=[];this.contentDOM=document.createElement(\"div\");this.scrollDOM=document.createElement(\"div\");this.scrollDOM.tabIndex=-1;this.scrollDOM.className=\"cm-scroller\";this.scrollDOM.appendChild(this.contentDOM);this.announceDOM=document.createElement(\"div\");this.announceDOM.style.cssText=\"position: absolute; top: -10000px\";this.announceDOM.setAttribute(\"aria-live\",\"polite\");this.dom=document.createElement(\"div\");this.dom.appendChild(this.announceDOM);this.dom.appendChild(this.scrollDOM);this._dispatch=config.dispatch||(tr=>this.update([tr]));this.dispatch=this.dispatch.bind(this);this.root=config.root||getRoot(config.parent)||document;this.viewState=new ViewState(config.state||EditorState.create(config));this.plugins=this.state.facet(viewPlugin).map(spec=>new PluginInstance(spec));for(let plugin of this.plugins)plugin.update(this);this.observer=new DOMObserver(this,(from,to,typeOver)=>{return applyDOMChange(this,from,to,typeOver);},event=>{this.inputState.runScrollHandlers(this,event);if(this.observer.intersecting)this.measure();});this.inputState=new InputState(this);this.inputState.ensureHandlers(this,this.plugins);this.docView=new DocView(this);this.mountStyles();this.updateAttrs();this.updateState=0/* Idle */;this.requestMeasure();if(config.parent)config.parent.appendChild(this.dom);}/**\n    The current editor state.\n    */get state(){return this.viewState.state;}/**\n    To be able to display large documents without consuming too much\n    memory or overloading the browser, CodeMirror only draws the\n    code that is visible (plus a margin around it) to the DOM. This\n    property tells you the extent of the current drawn viewport, in\n    document positions.\n    */get viewport(){return this.viewState.viewport;}/**\n    When there are, for example, large collapsed ranges in the\n    viewport, its size can be a lot bigger than the actual visible\n    content. Thus, if you are doing something like styling the\n    content in the viewport, it is preferable to only do so for\n    these ranges, which are the subset of the viewport that is\n    actually drawn.\n    */get visibleRanges(){return this.viewState.visibleRanges;}/**\n    Returns false when the editor is entirely scrolled out of view\n    or otherwise hidden.\n    */get inView(){return this.viewState.inView;}/**\n    Indicates whether the user is currently composing text via\n    [IME](https://en.wikipedia.org/wiki/Input_method), and at least\n    one change has been made in the current composition.\n    */get composing(){return this.inputState.composing>0;}/**\n    Indicates whether the user is currently in composing state. Note\n    that on some platforms, like Android, this will be the case a\n    lot, since just putting the cursor on a word starts a\n    composition there.\n    */get compositionStarted(){return this.inputState.composing>=0;}dispatch(...input){this._dispatch(input.length==1&&input[0]instanceof Transaction?input[0]:this.state.update(...input));}/**\n    Update the view for the given array of transactions. This will\n    update the visible document and selection to match the state\n    produced by the transactions, and notify view plugins of the\n    change. You should usually call\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this\n    as a primitive.\n    */update(transactions){if(this.updateState!=0/* Idle */)throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");let redrawn=false,attrsChanged=false,update;let state=this.state;for(let tr of transactions){if(tr.startState!=state)throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");state=tr.state;}if(this.destroyed){this.viewState.state=state;return;}this.observer.clear();// When the phrases change, redraw the editor\nif(state.facet(EditorState.phrases)!=this.state.facet(EditorState.phrases))return this.setState(state);update=ViewUpdate.create(this,state,transactions);let scrollTarget=this.viewState.scrollTarget;try{this.updateState=2/* Updating */;for(let tr of transactions){if(scrollTarget)scrollTarget=scrollTarget.map(tr.changes);if(tr.scrollIntoView){let{main}=tr.state.selection;scrollTarget=new ScrollTarget(main.empty?main:EditorSelection.cursor(main.head,main.head>main.anchor?-1:1));}for(let e of tr.effects)if(e.is(scrollIntoView$1))scrollTarget=e.value;}this.viewState.update(update,scrollTarget);this.bidiCache=CachedOrder.update(this.bidiCache,update.changes);if(!update.empty){this.updatePlugins(update);this.inputState.update(update);}redrawn=this.docView.update(update);if(this.state.facet(styleModule)!=this.styleModules)this.mountStyles();attrsChanged=this.updateAttrs();this.showAnnouncements(transactions);this.docView.updateSelection(redrawn,transactions.some(tr=>tr.isUserEvent(\"select.pointer\")));}finally{this.updateState=0/* Idle */;}if(update.startState.facet(theme$1)!=update.state.facet(theme$1))this.viewState.mustMeasureContent=true;if(redrawn||attrsChanged||scrollTarget||this.viewState.mustEnforceCursorAssoc||this.viewState.mustMeasureContent)this.requestMeasure();if(!update.empty)for(let listener of this.state.facet(updateListener))listener(update);}/**\n    Reset the view to the given state. (This will cause the entire\n    document to be redrawn and all view plugins to be reinitialized,\n    so you should probably only use it when the new state isn't\n    derived from the old state. Otherwise, use\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)\n    */setState(newState){if(this.updateState!=0/* Idle */)throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");if(this.destroyed){this.viewState.state=newState;return;}this.updateState=2/* Updating */;let hadFocus=this.hasFocus;try{for(let plugin of this.plugins)plugin.destroy(this);this.viewState=new ViewState(newState);this.plugins=newState.facet(viewPlugin).map(spec=>new PluginInstance(spec));this.pluginMap.clear();for(let plugin of this.plugins)plugin.update(this);this.docView=new DocView(this);this.inputState.ensureHandlers(this,this.plugins);this.mountStyles();this.updateAttrs();this.bidiCache=[];}finally{this.updateState=0/* Idle */;}if(hadFocus)this.focus();this.requestMeasure();}updatePlugins(update){let prevSpecs=update.startState.facet(viewPlugin),specs=update.state.facet(viewPlugin);if(prevSpecs!=specs){let newPlugins=[];for(let spec of specs){let found=prevSpecs.indexOf(spec);if(found<0){newPlugins.push(new PluginInstance(spec));}else {let plugin=this.plugins[found];plugin.mustUpdate=update;newPlugins.push(plugin);}}for(let plugin of this.plugins)if(plugin.mustUpdate!=update)plugin.destroy(this);this.plugins=newPlugins;this.pluginMap.clear();this.inputState.ensureHandlers(this,this.plugins);}else {for(let p of this.plugins)p.mustUpdate=update;}for(let i=0;i<this.plugins.length;i++)this.plugins[i].update(this);}/**\n    @internal\n    */measure(flush=true){if(this.destroyed)return;if(this.measureScheduled>-1)cancelAnimationFrame(this.measureScheduled);this.measureScheduled=0;// Prevent requestMeasure calls from scheduling another animation frame\nif(flush)this.observer.flush();let updated=null;try{for(let i=0;;i++){this.updateState=1/* Measuring */;let oldViewport=this.viewport;let changed=this.viewState.measure(this);if(!changed&&!this.measureRequests.length&&this.viewState.scrollTarget==null)break;if(i>5){console.warn(this.measureRequests.length?\"Measure loop restarted more than 5 times\":\"Viewport failed to stabilize\");break;}let measuring=[];// Only run measure requests in this cycle when the viewport didn't change\nif(!(changed&4/* Viewport */))[this.measureRequests,measuring]=[measuring,this.measureRequests];let measured=measuring.map(m=>{try{return m.read(this);}catch(e){logException(this.state,e);return BadMeasure;}});let update=ViewUpdate.create(this,this.state,[]),redrawn=false,scrolled=false;update.flags|=changed;if(!updated)updated=update;else updated.flags|=changed;this.updateState=2/* Updating */;if(!update.empty){this.updatePlugins(update);this.inputState.update(update);this.updateAttrs();redrawn=this.docView.update(update);}for(let i=0;i<measuring.length;i++)if(measured[i]!=BadMeasure){try{let m=measuring[i];if(m.write)m.write(measured[i],this);}catch(e){logException(this.state,e);}}if(this.viewState.scrollTarget){this.docView.scrollIntoView(this.viewState.scrollTarget);this.viewState.scrollTarget=null;scrolled=true;}if(redrawn)this.docView.updateSelection(true);if(this.viewport.from==oldViewport.from&&this.viewport.to==oldViewport.to&&!scrolled&&this.measureRequests.length==0)break;}}finally{this.updateState=0/* Idle */;this.measureScheduled=-1;}if(updated&&!updated.empty)for(let listener of this.state.facet(updateListener))listener(updated);}/**\n    Get the CSS classes for the currently active editor themes.\n    */get themeClasses(){return baseThemeID+\" \"+(this.state.facet(darkTheme)?baseDarkID:baseLightID)+\" \"+this.state.facet(theme$1);}updateAttrs(){let editorAttrs=attrsFromFacet(this,editorAttributes,{class:\"cm-editor\"+(this.hasFocus?\" cm-focused \":\" \")+this.themeClasses});let contentAttrs={spellcheck:\"false\",autocorrect:\"off\",autocapitalize:\"off\",translate:\"no\",contenteditable:!this.state.facet(editable)?\"false\":\"true\",class:\"cm-content\",style:`${browser.tabSize}: ${this.state.tabSize}`,role:\"textbox\",\"aria-multiline\":\"true\"};if(this.state.readOnly)contentAttrs[\"aria-readonly\"]=\"true\";attrsFromFacet(this,contentAttributes,contentAttrs);let changed=this.observer.ignore(()=>{let changedContent=updateAttrs(this.contentDOM,this.contentAttrs,contentAttrs);let changedEditor=updateAttrs(this.dom,this.editorAttrs,editorAttrs);return changedContent||changedEditor;});this.editorAttrs=editorAttrs;this.contentAttrs=contentAttrs;return changed;}showAnnouncements(trs){let first=true;for(let tr of trs)for(let effect of tr.effects)if(effect.is(EditorView.announce)){if(first)this.announceDOM.textContent=\"\";first=false;let div=this.announceDOM.appendChild(document.createElement(\"div\"));div.textContent=effect.value;}}mountStyles(){this.styleModules=this.state.facet(styleModule);StyleModule.mount(this.root,this.styleModules.concat(baseTheme$1$1).reverse());}readMeasured(){if(this.updateState==2/* Updating */)throw new Error(\"Reading the editor layout isn't allowed during an update\");if(this.updateState==0/* Idle */&&this.measureScheduled>-1)this.measure(false);}/**\n    Schedule a layout measurement, optionally providing callbacks to\n    do custom DOM measuring followed by a DOM write phase. Using\n    this is preferable reading DOM layout directly from, for\n    example, an event handler, because it'll make sure measuring and\n    drawing done by other components is synchronized, avoiding\n    unnecessary DOM layout computations.\n    */requestMeasure(request){if(this.measureScheduled<0)this.measureScheduled=requestAnimationFrame(()=>this.measure());if(request){if(request.key!=null)for(let i=0;i<this.measureRequests.length;i++){if(this.measureRequests[i].key===request.key){this.measureRequests[i]=request;return;}}this.measureRequests.push(request);}}/**\n    Get the value of a specific plugin, if present. Note that\n    plugins that crash can be dropped from a view, so even when you\n    know you registered a given plugin, it is recommended to check\n    the return value of this method.\n    */plugin(plugin){let known=this.pluginMap.get(plugin);if(known===undefined||known&&known.spec!=plugin)this.pluginMap.set(plugin,known=this.plugins.find(p=>p.spec==plugin)||null);return known&&known.update(this).value;}/**\n    The top position of the document, in screen coordinates. This\n    may be negative when the editor is scrolled down. Points\n    directly to the top of the first line, not above the padding.\n    */get documentTop(){return this.contentDOM.getBoundingClientRect().top+this.viewState.paddingTop;}/**\n    Reports the padding above and below the document.\n    */get documentPadding(){return {top:this.viewState.paddingTop,bottom:this.viewState.paddingBottom};}/**\n    Find the text line or block widget at the given vertical\n    position (which is interpreted as relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)\n    */elementAtHeight(height){this.readMeasured();return this.viewState.elementAtHeight(height);}/**\n    Find the line block (see\n    [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given\n    height.\n    */lineBlockAtHeight(height){this.readMeasured();return this.viewState.lineBlockAtHeight(height);}/**\n    Get the extent and vertical position of all [line\n    blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions\n    are relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);\n    */get viewportLineBlocks(){return this.viewState.viewportLines;}/**\n    Find the line block around the given document position. A line\n    block is a range delimited on both sides by either a\n    non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line breaks, or the\n    start/end of the document. It will usually just hold a line of\n    text, but may be broken into multiple textblocks by block\n    widgets.\n    */lineBlockAt(pos){return this.viewState.lineBlockAt(pos);}/**\n    The editor's total content height.\n    */get contentHeight(){return this.viewState.contentHeight;}/**\n    Move a cursor position by [grapheme\n    cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether\n    the motion is away from the line start, or towards it. In\n    bidirectional text, the line is traversed in visual order, using\n    the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n    When the start position was the last one on the line, the\n    returned position will be across the line break. If there is no\n    further line, the original position is returned.\n    \n    By default, this method moves over a single cluster. The\n    optional `by` argument can be used to move across more. It will\n    be called with the first cluster as argument, and should return\n    a predicate that determines, for each subsequent cluster,\n    whether it should also be moved over.\n    */moveByChar(start,forward,by){return skipAtoms(this,start,moveByChar(this,start,forward,by));}/**\n    Move a cursor position across the next group of either\n    [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter\n    non-whitespace characters.\n    */moveByGroup(start,forward){return skipAtoms(this,start,moveByChar(this,start,forward,initial=>byGroup(this,start.head,initial)));}/**\n    Move to the next line boundary in the given direction. If\n    `includeWrap` is true, line wrapping is on, and there is a\n    further wrap point on the current line, the wrap point will be\n    returned. Otherwise this function will return the start or end\n    of the line.\n    */moveToLineBoundary(start,forward,includeWrap=true){return moveToLineBoundary(this,start,forward,includeWrap);}/**\n    Move a cursor position vertically. When `distance` isn't given,\n    it defaults to moving to the next line (including wrapped\n    lines). Otherwise, `distance` should provide a positive distance\n    in pixels.\n    \n    When `start` has a\n    [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical\n    motion will use that as a target horizontal position. Otherwise,\n    the cursor's own horizontal position is used. The returned\n    cursor will have its goal column set to whichever column was\n    used.\n    */moveVertically(start,forward,distance){return skipAtoms(this,start,moveVertically(this,start,forward,distance));}/**\n    Find the DOM parent node and offset (child offset if `node` is\n    an element, character offset when it is a text node) at the\n    given document position.\n    \n    Note that for positions that aren't currently in\n    `visibleRanges`, the resulting DOM position isn't necessarily\n    meaningful (it may just point before or after a placeholder\n    element).\n    */domAtPos(pos){return this.docView.domAtPos(pos);}/**\n    Find the document position at the given DOM node. Can be useful\n    for associating positions with DOM events. Will raise an error\n    when `node` isn't part of the editor content.\n    */posAtDOM(node,offset=0){return this.docView.posFromDOM(node,offset);}posAtCoords(coords,precise=true){this.readMeasured();return posAtCoords(this,coords,precise);}/**\n    Get the screen coordinates at the given document position.\n    `side` determines whether the coordinates are based on the\n    element before (-1) or after (1) the position (if no element is\n    available on the given side, the method will transparently use\n    another strategy to get reasonable coordinates).\n    */coordsAtPos(pos,side=1){this.readMeasured();let rect=this.docView.coordsAt(pos,side);if(!rect||rect.left==rect.right)return rect;let line=this.state.doc.lineAt(pos),order=this.bidiSpans(line);let span=order[BidiSpan.find(order,pos-line.from,-1,side)];return flattenRect(rect,span.dir==Direction.LTR==side>0);}/**\n    The default width of a character in the editor. May not\n    accurately reflect the width of all characters (given variable\n    width fonts or styling of invididual ranges).\n    */get defaultCharacterWidth(){return this.viewState.heightOracle.charWidth;}/**\n    The default height of a line in the editor. May not be accurate\n    for all lines.\n    */get defaultLineHeight(){return this.viewState.heightOracle.lineHeight;}/**\n    The text direction\n    ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)\n    CSS property) of the editor's content element.\n    */get textDirection(){return this.viewState.defaultTextDirection;}/**\n    Find the text direction of the block at the given position, as\n    assigned by CSS. If\n    [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)\n    isn't enabled, or the given position is outside of the viewport,\n    this will always return the same as\n    [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that\n    this may trigger a DOM layout.\n    */textDirectionAt(pos){let perLine=this.state.facet(perLineTextDirection);if(!perLine||pos<this.viewport.from||pos>this.viewport.to)return this.textDirection;this.readMeasured();return this.docView.textDirectionAt(pos);}/**\n    Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)\n    (as determined by the\n    [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n    CSS property of its content element).\n    */get lineWrapping(){return this.viewState.heightOracle.lineWrapping;}/**\n    Returns the bidirectional text structure of the given line\n    (which should be in the current document) as an array of span\n    objects. The order of these spans matches the [text\n    direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is\n    left-to-right, the leftmost spans come first, otherwise the\n    rightmost spans come first.\n    */bidiSpans(line){if(line.length>MaxBidiLine)return trivialOrder(line.length);let dir=this.textDirectionAt(line.from);for(let entry of this.bidiCache)if(entry.from==line.from&&entry.dir==dir)return entry.order;let order=computeOrder(line.text,dir);this.bidiCache.push(new CachedOrder(line.from,line.to,dir,order));return order;}/**\n    Check whether the editor has focus.\n    */get hasFocus(){var _a;// Safari return false for hasFocus when the context menu is open\n// or closing, which leads us to ignore selection changes from the\n// context menu because it looks like the editor isn't focused.\n// This kludges around that.\nreturn (document.hasFocus()||browser.safari&&((_a=this.inputState)===null||_a===void 0?void 0:_a.lastContextMenu)>Date.now()-3e4)&&this.root.activeElement==this.contentDOM;}/**\n    Put focus on the editor.\n    */focus(){this.observer.ignore(()=>{focusPreventScroll(this.contentDOM);this.docView.updateSelection();});}/**\n    Clean up this editor view, removing its element from the\n    document, unregistering event handlers, and notifying\n    plugins. The view instance can no longer be used after\n    calling this.\n    */destroy(){for(let plugin of this.plugins)plugin.destroy(this);this.plugins=[];this.inputState.destroy();this.dom.remove();this.observer.destroy();if(this.measureScheduled>-1)cancelAnimationFrame(this.measureScheduled);this.destroyed=true;}/**\n    Returns an effect that can be\n    [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to\n    cause it to scroll the given position or range into view.\n    */static scrollIntoView(pos,options={}){return scrollIntoView$1.of(new ScrollTarget(typeof pos==\"number\"?EditorSelection.cursor(pos):pos,options.y,options.x,options.yMargin,options.xMargin));}/**\n    Returns an extension that can be used to add DOM event handlers.\n    The value should be an object mapping event names to handler\n    functions. For any given event, such functions are ordered by\n    extension precedence, and the first handler to return true will\n    be assumed to have handled that event, and no other handlers or\n    built-in behavior will be activated for it. These are registered\n    on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except\n    for `scroll` handlers, which will be called any time the\n    editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of\n    its parent nodes is scrolled.\n    */static domEventHandlers(handlers){return ViewPlugin.define(()=>({}),{eventHandlers:handlers});}/**\n    Create a theme extension. The first argument can be a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    style spec providing the styles for the theme. These will be\n    prefixed with a generated class for the style.\n    \n    Because the selectors will be prefixed with a scope class, rule\n    that directly match the editor's [wrapper\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be\n    added—need to be explicitly differentiated by adding an `&` to\n    the selector for that element—for example\n    `&.cm-focused`.\n    \n    When `dark` is set to true, the theme will be marked as dark,\n    which will cause the `&dark` rules from [base\n    themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to\n    `&light` when a light theme is active).\n    */static theme(spec,options){let prefix=StyleModule.newName();let result=[theme$1.of(prefix),styleModule.of(buildTheme(`.${prefix}`,spec))];if(options&&options.dark)result.push(darkTheme.of(true));return result;}/**\n    Create an extension that adds styles to the base theme. Like\n    with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the\n    place of the editor wrapper element when directly targeting\n    that. You can also use `&dark` or `&light` instead to only\n    target editors with a dark or light theme.\n    */static baseTheme(spec){return Prec.lowest(styleModule.of(buildTheme(\".\"+baseThemeID,spec,lightDarkIDs)));}/**\n    Retrieve an editor view instance from the view's DOM\n    representation.\n    */static findFromDOM(dom){var _a;let content=dom.querySelector(\".cm-content\");let cView=content&&ContentView.get(content)||ContentView.get(dom);return ((_a=cView===null||cView===void 0?void 0:cView.rootView)===null||_a===void 0?void 0:_a.view)||null;}}/**\nFacet to add a [style\nmodule](https://github.com/marijnh/style-mod#documentation) to\nan editor view. The view will ensure that the module is\nmounted in its [document\nroot](https://codemirror.net/6/docs/ref/#view.EditorView.constructor^config.root).\n*/EditorView.styleModule=styleModule;/**\nAn input handler can override the way changes to the editable\nDOM content are handled. Handlers are passed the document\npositions between which the change was found, and the new\ncontent. When one returns true, no further input handlers are\ncalled and the default behavior is prevented.\n*/EditorView.inputHandler=inputHandler;/**\nBy default, the editor assumes all its content has the same\n[text direction](https://codemirror.net/6/docs/ref/#view.Direction). Configure this with a `true`\nvalue to make it read the text direction of every (rendered)\nline separately.\n*/EditorView.perLineTextDirection=perLineTextDirection;/**\nAllows you to provide a function that should be called when the\nlibrary catches an exception from an extension (mostly from view\nplugins, but may be used by other extensions to route exceptions\nfrom user-code-provided callbacks). This is mostly useful for\ndebugging and logging. See [`logException`](https://codemirror.net/6/docs/ref/#view.logException).\n*/EditorView.exceptionSink=exceptionSink;/**\nA facet that can be used to register a function to be called\nevery time the view updates.\n*/EditorView.updateListener=updateListener;/**\nFacet that controls whether the editor content DOM is editable.\nWhen its highest-precedence value is `false`, the element will\nnot have its `contenteditable` attribute set. (Note that this\ndoesn't affect API calls that change the editor content, even\nwhen those are bound to keys or buttons. See the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) facet for that.)\n*/EditorView.editable=editable;/**\nAllows you to influence the way mouse selection happens. The\nfunctions in this facet will be called for a `mousedown` event\non the editor, and can return an object that overrides the way a\nselection is computed from that mouse click or drag.\n*/EditorView.mouseSelectionStyle=mouseSelectionStyle;/**\nFacet used to configure whether a given selection drag event\nshould move or copy the selection. The given predicate will be\ncalled with the `mousedown` event, and can return `true` when\nthe drag should move the content.\n*/EditorView.dragMovesSelection=dragMovesSelection$1;/**\nFacet used to configure whether a given selecting click adds a\nnew range to the existing selection or replaces it entirely. The\ndefault behavior is to check `event.metaKey` on macOS, and\n`event.ctrlKey` elsewhere.\n*/EditorView.clickAddsSelectionRange=clickAddsSelectionRange;/**\nA facet that determines which [decorations](https://codemirror.net/6/docs/ref/#view.Decoration)\nare shown in the view. Decorations can be provided in two\nways—directly, or via a function that takes an editor view.\n\nOnly decoration sets provided directly are allowed to influence\nthe editor's vertical layout structure. The ones provided as\nfunctions are called _after_ the new viewport has been computed,\nand thus **must not** introduce block widgets or replacing\ndecorations that cover line breaks.\n*/EditorView.decorations=decorations;/**\nUsed to provide ranges that should be treated as atoms as far as\ncursor motion is concerned. This causes methods like\n[`moveByChar`](https://codemirror.net/6/docs/ref/#view.EditorView.moveByChar) and\n[`moveVertically`](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) (and the\ncommands built on top of them) to skip across such regions when\na selection endpoint would enter them. This does _not_ prevent\ndirect programmatic [selection\nupdates](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) from moving into such\nregions.\n*/EditorView.atomicRanges=atomicRanges;/**\nFacet that allows extensions to provide additional scroll\nmargins (space around the sides of the scrolling element that\nshould be considered invisible). This can be useful when the\nplugin introduces elements that cover part of that element (for\nexample a horizontally fixed gutter).\n*/EditorView.scrollMargins=scrollMargins;/**\nThis facet records whether a dark theme is active. The extension\nreturned by [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme) automatically\nincludes an instance of this when the `dark` option is set to\ntrue.\n*/EditorView.darkTheme=darkTheme;/**\nFacet that provides additional DOM attributes for the editor's\neditable DOM element.\n*/EditorView.contentAttributes=contentAttributes;/**\nFacet that provides DOM attributes for the editor's outer\nelement.\n*/EditorView.editorAttributes=editorAttributes;/**\nAn extension that enables line wrapping in the editor (by\nsetting CSS `white-space` to `pre-wrap` in the content).\n*/EditorView.lineWrapping=/*@__PURE__*/EditorView.contentAttributes.of({\"class\":\"cm-lineWrapping\"});/**\nState effect used to include screen reader announcements in a\ntransaction. These will be added to the DOM in a visually hidden\nelement with `aria-live=\"polite\"` set, and should be used to\ndescribe effects that are visually obvious but may not be\nnoticed by screen reader users (such as moving to the next\nsearch match).\n*/EditorView.announce=/*@__PURE__*/StateEffect.define();// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine=4096;const BadMeasure={};class CachedOrder{constructor(from,to,dir,order){this.from=from;this.to=to;this.dir=dir;this.order=order;}static update(cache,changes){if(changes.empty)return cache;let result=[],lastDir=cache.length?cache[cache.length-1].dir:Direction.LTR;for(let i=Math.max(0,cache.length-10);i<cache.length;i++){let entry=cache[i];if(entry.dir==lastDir&&!changes.touchesRange(entry.from,entry.to))result.push(new CachedOrder(changes.mapPos(entry.from,1),changes.mapPos(entry.to,-1),entry.dir,entry.order));}return result;}}function attrsFromFacet(view,facet,base){for(let sources=view.state.facet(facet),i=sources.length-1;i>=0;i--){let source=sources[i],value=typeof source==\"function\"?source(view):source;if(value)combineAttrs(value,base);}return base;}const currentPlatform=browser.mac?\"mac\":browser.windows?\"win\":browser.linux?\"linux\":\"key\";function normalizeKeyName(name,platform){const parts=name.split(/-(?!$)/);let result=parts[parts.length-1];if(result==\"Space\")result=\" \";let alt,ctrl,shift,meta;for(let i=0;i<parts.length-1;++i){const mod=parts[i];if(/^(cmd|meta|m)$/i.test(mod))meta=true;else if(/^a(lt)?$/i.test(mod))alt=true;else if(/^(c|ctrl|control)$/i.test(mod))ctrl=true;else if(/^s(hift)?$/i.test(mod))shift=true;else if(/^mod$/i.test(mod)){if(platform==\"mac\")meta=true;else ctrl=true;}else throw new Error(\"Unrecognized modifier name: \"+mod);}if(alt)result=\"Alt-\"+result;if(ctrl)result=\"Ctrl-\"+result;if(meta)result=\"Meta-\"+result;if(shift)result=\"Shift-\"+result;return result;}function modifiers(name,event,shift){if(event.altKey)name=\"Alt-\"+name;if(event.ctrlKey)name=\"Ctrl-\"+name;if(event.metaKey)name=\"Meta-\"+name;if(shift!==false&&event.shiftKey)name=\"Shift-\"+name;return name;}const handleKeyEvents=/*@__PURE__*/EditorView.domEventHandlers({keydown(event,view){return runHandlers(getKeymap(view.state),event,view,\"editor\");}});/**\nFacet used for registering keymaps.\n\nYou can add multiple keymaps to an editor. Their priorities\ndetermine their precedence (the ones specified early or with high\npriority get checked first). When a handler has returned `true`\nfor a given key, no further handlers are called.\n*/const keymap=/*@__PURE__*/Facet.define({enables:handleKeyEvents});const Keymaps=/*@__PURE__*/new WeakMap();// This is hidden behind an indirection, rather than directly computed\n// by the facet, to keep internal types out of the facet's type.\nfunction getKeymap(state){let bindings=state.facet(keymap);let map=Keymaps.get(bindings);if(!map)Keymaps.set(bindings,map=buildKeymap(bindings.reduce((a,b)=>a.concat(b),[])));return map;}let storedPrefix=null;const PrefixTimeout=4000;function buildKeymap(bindings,platform=currentPlatform){let bound=Object.create(null);let isPrefix=Object.create(null);let checkPrefix=(name,is)=>{let current=isPrefix[name];if(current==null)isPrefix[name]=is;else if(current!=is)throw new Error(\"Key binding \"+name+\" is used both as a regular binding and as a multi-stroke prefix\");};let add=(scope,key,command,preventDefault)=>{let scopeObj=bound[scope]||(bound[scope]=Object.create(null));let parts=key.split(/ (?!$)/).map(k=>normalizeKeyName(k,platform));for(let i=1;i<parts.length;i++){let prefix=parts.slice(0,i).join(\" \");checkPrefix(prefix,true);if(!scopeObj[prefix])scopeObj[prefix]={preventDefault:true,commands:[view=>{let ourObj=storedPrefix={view,prefix,scope};setTimeout(()=>{if(storedPrefix==ourObj)storedPrefix=null;},PrefixTimeout);return true;}]};}let full=parts.join(\" \");checkPrefix(full,false);let binding=scopeObj[full]||(scopeObj[full]={preventDefault:false,commands:[]});binding.commands.push(command);if(preventDefault)binding.preventDefault=true;};for(let b of bindings){let name=b[platform]||b.key;if(!name)continue;for(let scope of b.scope?b.scope.split(\" \"):[\"editor\"]){add(scope,name,b.run,b.preventDefault);if(b.shift)add(scope,\"Shift-\"+name,b.shift,b.preventDefault);}}return bound;}function runHandlers(map,event,view,scope){let name=keyName(event),isChar=name.length==1&&name!=\" \";let prefix=\"\",fallthrough=false;if(storedPrefix&&storedPrefix.view==view&&storedPrefix.scope==scope){prefix=storedPrefix.prefix+\" \";if(fallthrough=modifierCodes.indexOf(event.keyCode)<0)storedPrefix=null;}let runFor=binding=>{if(binding){for(let cmd of binding.commands)if(cmd(view))return true;if(binding.preventDefault)fallthrough=true;}return false;};let scopeObj=map[scope],baseName;if(scopeObj){if(runFor(scopeObj[prefix+modifiers(name,event,!isChar)]))return true;if(isChar&&(event.shiftKey||event.altKey||event.metaKey)&&(baseName=base[event.keyCode])&&baseName!=name){if(runFor(scopeObj[prefix+modifiers(baseName,event,true)]))return true;}else if(isChar&&event.shiftKey){if(runFor(scopeObj[prefix+modifiers(name,event,true)]))return true;}}return fallthrough;}const Outside=\"-10000px\";class TooltipViewManager{constructor(view,facet,createTooltipView){this.facet=facet;this.createTooltipView=createTooltipView;this.input=view.state.facet(facet);this.tooltips=this.input.filter(t=>t);this.tooltipViews=this.tooltips.map(createTooltipView);}update(update){let input=update.state.facet(this.facet);let tooltips=input.filter(x=>x);if(input===this.input){for(let t of this.tooltipViews)if(t.update)t.update(update);return false;}let tooltipViews=[];for(let i=0;i<tooltips.length;i++){let tip=tooltips[i],known=-1;if(!tip)continue;for(let i=0;i<this.tooltips.length;i++){let other=this.tooltips[i];if(other&&other.create==tip.create)known=i;}if(known<0){tooltipViews[i]=this.createTooltipView(tip);}else {let tooltipView=tooltipViews[i]=this.tooltipViews[known];if(tooltipView.update)tooltipView.update(update);}}for(let t of this.tooltipViews)if(tooltipViews.indexOf(t)<0)t.dom.remove();this.input=input;this.tooltips=tooltips;this.tooltipViews=tooltipViews;return true;}}function windowSpace(){return {top:0,left:0,bottom:innerHeight,right:innerWidth};}const tooltipConfig=/*@__PURE__*/Facet.define({combine:values=>{var _a,_b,_c;return {position:browser.ios?\"absolute\":((_a=values.find(conf=>conf.position))===null||_a===void 0?void 0:_a.position)||\"fixed\",parent:((_b=values.find(conf=>conf.parent))===null||_b===void 0?void 0:_b.parent)||null,tooltipSpace:((_c=values.find(conf=>conf.tooltipSpace))===null||_c===void 0?void 0:_c.tooltipSpace)||windowSpace};}});const tooltipPlugin=/*@__PURE__*/ViewPlugin.fromClass(class{constructor(view){var _a;this.view=view;this.inView=true;this.lastTransaction=0;this.measureTimeout=-1;let config=view.state.facet(tooltipConfig);this.position=config.position;this.parent=config.parent;this.classes=view.themeClasses;this.createContainer();this.measureReq={read:this.readMeasure.bind(this),write:this.writeMeasure.bind(this),key:this};this.manager=new TooltipViewManager(view,showTooltip,t=>this.createTooltip(t));this.intersectionObserver=typeof IntersectionObserver==\"function\"?new IntersectionObserver(entries=>{if(Date.now()>this.lastTransaction-50&&entries.length>0&&entries[entries.length-1].intersectionRatio<1)this.measureSoon();},{threshold:[1]}):null;this.observeIntersection();(_a=view.dom.ownerDocument.defaultView)===null||_a===void 0?void 0:_a.addEventListener(\"resize\",this.measureSoon=this.measureSoon.bind(this));this.maybeMeasure();}createContainer(){if(this.parent){this.container=document.createElement(\"div\");this.container.style.position=\"relative\";this.container.className=this.view.themeClasses;this.parent.appendChild(this.container);}else {this.container=this.view.dom;}}observeIntersection(){if(this.intersectionObserver){this.intersectionObserver.disconnect();for(let tooltip of this.manager.tooltipViews)this.intersectionObserver.observe(tooltip.dom);}}measureSoon(){if(this.measureTimeout<0)this.measureTimeout=setTimeout(()=>{this.measureTimeout=-1;this.maybeMeasure();},50);}update(update){if(update.transactions.length)this.lastTransaction=Date.now();let updated=this.manager.update(update);if(updated)this.observeIntersection();let shouldMeasure=updated||update.geometryChanged;let newConfig=update.state.facet(tooltipConfig);if(newConfig.position!=this.position){this.position=newConfig.position;for(let t of this.manager.tooltipViews)t.dom.style.position=this.position;shouldMeasure=true;}if(newConfig.parent!=this.parent){if(this.parent)this.container.remove();this.parent=newConfig.parent;this.createContainer();for(let t of this.manager.tooltipViews)this.container.appendChild(t.dom);shouldMeasure=true;}else if(this.parent&&this.view.themeClasses!=this.classes){this.classes=this.container.className=this.view.themeClasses;}if(shouldMeasure)this.maybeMeasure();}createTooltip(tooltip){let tooltipView=tooltip.create(this.view);tooltipView.dom.classList.add(\"cm-tooltip\");if(tooltip.arrow&&!tooltipView.dom.querySelector(\".cm-tooltip > .cm-tooltip-arrow\")){let arrow=document.createElement(\"div\");arrow.className=\"cm-tooltip-arrow\";tooltipView.dom.appendChild(arrow);}tooltipView.dom.style.position=this.position;tooltipView.dom.style.top=Outside;this.container.appendChild(tooltipView.dom);if(tooltipView.mount)tooltipView.mount(this.view);return tooltipView;}destroy(){var _a,_b;(_a=this.view.dom.ownerDocument.defaultView)===null||_a===void 0?void 0:_a.removeEventListener(\"resize\",this.measureSoon);for(let{dom}of this.manager.tooltipViews)dom.remove();(_b=this.intersectionObserver)===null||_b===void 0?void 0:_b.disconnect();clearTimeout(this.measureTimeout);}readMeasure(){let editor=this.view.dom.getBoundingClientRect();return {editor,parent:this.parent?this.container.getBoundingClientRect():editor,pos:this.manager.tooltips.map((t,i)=>{let tv=this.manager.tooltipViews[i];return tv.getCoords?tv.getCoords(t.pos):this.view.coordsAtPos(t.pos);}),size:this.manager.tooltipViews.map(({dom})=>dom.getBoundingClientRect()),space:this.view.state.facet(tooltipConfig).tooltipSpace(this.view)};}writeMeasure(measured){let{editor,space}=measured;let others=[];for(let i=0;i<this.manager.tooltips.length;i++){let tooltip=this.manager.tooltips[i],tView=this.manager.tooltipViews[i],{dom}=tView;let pos=measured.pos[i],size=measured.size[i];// Hide tooltips that are outside of the editor.\nif(!pos||pos.bottom<=Math.max(editor.top,space.top)||pos.top>=Math.min(editor.bottom,space.bottom)||pos.right<Math.max(editor.left,space.left)-.1||pos.left>Math.min(editor.right,space.right)+.1){dom.style.top=Outside;continue;}let arrow=tooltip.arrow?tView.dom.querySelector(\".cm-tooltip-arrow\"):null;let arrowHeight=arrow?7/* Size */:0;let width=size.right-size.left,height=size.bottom-size.top;let offset=tView.offset||noOffset,ltr=this.view.textDirection==Direction.LTR;let left=size.width>space.right-space.left?ltr?space.left:space.right-size.width:ltr?Math.min(pos.left-(arrow?14/* Offset */:0)+offset.x,space.right-width):Math.max(space.left,pos.left-width+(arrow?14/* Offset */:0)-offset.x);let above=!!tooltip.above;if(!tooltip.strictSide&&(above?pos.top-(size.bottom-size.top)-offset.y<space.top:pos.bottom+(size.bottom-size.top)+offset.y>space.bottom)&&above==space.bottom-pos.bottom>pos.top-space.top)above=!above;let top=above?pos.top-height-arrowHeight-offset.y:pos.bottom+arrowHeight+offset.y;let right=left+width;if(tView.overlap!==true)for(let r of others)if(r.left<right&&r.right>left&&r.top<top+height&&r.bottom>top)top=above?r.top-height-2-arrowHeight:r.bottom+arrowHeight+2;if(this.position==\"absolute\"){dom.style.top=top-measured.parent.top+\"px\";dom.style.left=left-measured.parent.left+\"px\";}else {dom.style.top=top+\"px\";dom.style.left=left+\"px\";}if(arrow)arrow.style.left=`${pos.left+(ltr?offset.x:-offset.x)-(left+14/* Offset */-7/* Size */)}px`;if(tView.overlap!==true)others.push({left,top,right,bottom:top+height});dom.classList.toggle(\"cm-tooltip-above\",above);dom.classList.toggle(\"cm-tooltip-below\",!above);if(tView.positioned)tView.positioned();}}maybeMeasure(){if(this.manager.tooltips.length){if(this.view.inView)this.view.requestMeasure(this.measureReq);if(this.inView!=this.view.inView){this.inView=this.view.inView;if(!this.inView)for(let tv of this.manager.tooltipViews)tv.dom.style.top=Outside;}}}},{eventHandlers:{scroll(){this.maybeMeasure();}}});const baseTheme$3=/*@__PURE__*/EditorView.baseTheme({\".cm-tooltip\":{zIndex:100},\"&light .cm-tooltip\":{border:\"1px solid #bbb\",backgroundColor:\"#f5f5f5\"},\"&light .cm-tooltip-section:not(:first-child)\":{borderTop:\"1px solid #bbb\"},\"&dark .cm-tooltip\":{backgroundColor:\"#333338\",color:\"white\"},\".cm-tooltip-arrow\":{height:`${7/* Size */}px`,width:`${7/* Size */*2}px`,position:\"absolute\",zIndex:-1,overflow:\"hidden\",\"&:before, &:after\":{content:\"''\",position:\"absolute\",width:0,height:0,borderLeft:`${7/* Size */}px solid transparent`,borderRight:`${7/* Size */}px solid transparent`},\".cm-tooltip-above &\":{bottom:`-${7/* Size */}px`,\"&:before\":{borderTop:`${7/* Size */}px solid #bbb`},\"&:after\":{borderTop:`${7/* Size */}px solid #f5f5f5`,bottom:\"1px\"}},\".cm-tooltip-below &\":{top:`-${7/* Size */}px`,\"&:before\":{borderBottom:`${7/* Size */}px solid #bbb`},\"&:after\":{borderBottom:`${7/* Size */}px solid #f5f5f5`,top:\"1px\"}}},\"&dark .cm-tooltip .cm-tooltip-arrow\":{\"&:before\":{borderTopColor:\"#333338\",borderBottomColor:\"#333338\"},\"&:after\":{borderTopColor:\"transparent\",borderBottomColor:\"transparent\"}}});const noOffset={x:0,y:0};/**\nFacet to which an extension can add a value to show a tooltip.\n*/const showTooltip=/*@__PURE__*/Facet.define({enables:[tooltipPlugin,baseTheme$3]});const showHoverTooltip=/*@__PURE__*/Facet.define();class HoverTooltipHost{constructor(view){this.view=view;this.mounted=false;this.dom=document.createElement(\"div\");this.dom.classList.add(\"cm-tooltip-hover\");this.manager=new TooltipViewManager(view,showHoverTooltip,t=>this.createHostedView(t));}// Needs to be static so that host tooltip instances always match\nstatic create(view){return new HoverTooltipHost(view);}createHostedView(tooltip){let hostedView=tooltip.create(this.view);hostedView.dom.classList.add(\"cm-tooltip-section\");this.dom.appendChild(hostedView.dom);if(this.mounted&&hostedView.mount)hostedView.mount(this.view);return hostedView;}mount(view){for(let hostedView of this.manager.tooltipViews){if(hostedView.mount)hostedView.mount(view);}this.mounted=true;}positioned(){for(let hostedView of this.manager.tooltipViews){if(hostedView.positioned)hostedView.positioned();}}update(update){this.manager.update(update);}}const showHoverTooltipHost=/*@__PURE__*/showTooltip.compute([showHoverTooltip],state=>{let tooltips=state.facet(showHoverTooltip).filter(t=>t);if(tooltips.length===0)return null;return {pos:Math.min(...tooltips.map(t=>t.pos)),end:Math.max(...tooltips.filter(t=>t.end!=null).map(t=>t.end)),create:HoverTooltipHost.create,above:tooltips[0].above,arrow:tooltips.some(t=>t.arrow)};});class HoverPlugin{constructor(view,source,field,setHover,hoverTime){this.view=view;this.source=source;this.field=field;this.setHover=setHover;this.hoverTime=hoverTime;this.hoverTimeout=-1;this.restartTimeout=-1;this.pending=null;this.lastMove={x:0,y:0,target:view.dom,time:0};this.checkHover=this.checkHover.bind(this);view.dom.addEventListener(\"mouseleave\",this.mouseleave=this.mouseleave.bind(this));view.dom.addEventListener(\"mousemove\",this.mousemove=this.mousemove.bind(this));}update(){if(this.pending){this.pending=null;clearTimeout(this.restartTimeout);this.restartTimeout=setTimeout(()=>this.startHover(),20);}}get active(){return this.view.state.field(this.field);}checkHover(){this.hoverTimeout=-1;if(this.active)return;let hovered=Date.now()-this.lastMove.time;if(hovered<this.hoverTime)this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime-hovered);else this.startHover();}startHover(){clearTimeout(this.restartTimeout);let{lastMove}=this;let pos=this.view.contentDOM.contains(lastMove.target)?this.view.posAtCoords(lastMove):null;if(pos==null)return;let posCoords=this.view.coordsAtPos(pos);if(posCoords==null||lastMove.y<posCoords.top||lastMove.y>posCoords.bottom||lastMove.x<posCoords.left-this.view.defaultCharacterWidth||lastMove.x>posCoords.right+this.view.defaultCharacterWidth)return;let bidi=this.view.bidiSpans(this.view.state.doc.lineAt(pos)).find(s=>s.from<=pos&&s.to>=pos);let rtl=bidi&&bidi.dir==Direction.RTL?-1:1;let open=this.source(this.view,pos,lastMove.x<posCoords.left?-rtl:rtl);if(open===null||open===void 0?void 0:open.then){let pending=this.pending={pos};open.then(result=>{if(this.pending==pending){this.pending=null;if(result)this.view.dispatch({effects:this.setHover.of(result)});}},e=>logException(this.view.state,e,\"hover tooltip\"));}else if(open){this.view.dispatch({effects:this.setHover.of(open)});}}mousemove(event){var _a;this.lastMove={x:event.clientX,y:event.clientY,target:event.target,time:Date.now()};if(this.hoverTimeout<0)this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime);let tooltip=this.active;if(tooltip&&!isInTooltip(this.lastMove.target)||this.pending){let{pos}=tooltip||this.pending,end=(_a=tooltip===null||tooltip===void 0?void 0:tooltip.end)!==null&&_a!==void 0?_a:pos;if(pos==end?this.view.posAtCoords(this.lastMove)!=pos:!isOverRange(this.view,pos,end,event.clientX,event.clientY,6/* MaxDist */)){this.view.dispatch({effects:this.setHover.of(null)});this.pending=null;}}}mouseleave(){clearTimeout(this.hoverTimeout);this.hoverTimeout=-1;if(this.active)this.view.dispatch({effects:this.setHover.of(null)});}destroy(){clearTimeout(this.hoverTimeout);this.view.dom.removeEventListener(\"mouseleave\",this.mouseleave);this.view.dom.removeEventListener(\"mousemove\",this.mousemove);}}function isInTooltip(elt){for(let cur=elt;cur;cur=cur.parentNode)if(cur.nodeType==1&&cur.classList.contains(\"cm-tooltip\"))return true;return false;}function isOverRange(view,from,to,x,y,margin){let range=document.createRange();let fromDOM=view.domAtPos(from),toDOM=view.domAtPos(to);range.setEnd(toDOM.node,toDOM.offset);range.setStart(fromDOM.node,fromDOM.offset);let rects=range.getClientRects();range.detach();for(let i=0;i<rects.length;i++){let rect=rects[i];let dist=Math.max(rect.top-y,y-rect.bottom,rect.left-x,x-rect.right);if(dist<=margin)return true;}return false;}/**\nSet up a hover tooltip, which shows up when the pointer hovers\nover ranges of text. The callback is called when the mouse hovers\nover the document text. It should, if there is a tooltip\nassociated with position `pos`, return the tooltip description\n(either directly or in a promise). The `side` argument indicates\non which side of the position the pointer is—it will be -1 if the\npointer is before the position, 1 if after the position.\n\nNote that all hover tooltips are hosted within a single tooltip\ncontainer element. This allows multiple tooltips over the same\nrange to be \"merged\" together without overlapping.\n*/function hoverTooltip(source,options={}){let setHover=StateEffect.define();let hoverState=StateField.define({create(){return null;},update(value,tr){if(value&&(options.hideOnChange&&(tr.docChanged||tr.selection)||options.hideOn&&options.hideOn(tr,value)))return null;if(value&&tr.docChanged){let newPos=tr.changes.mapPos(value.pos,-1,MapMode.TrackDel);if(newPos==null)return null;let copy=Object.assign(Object.create(null),value);copy.pos=newPos;if(value.end!=null)copy.end=tr.changes.mapPos(value.end);value=copy;}for(let effect of tr.effects){if(effect.is(setHover))value=effect.value;if(effect.is(closeHoverTooltipEffect))value=null;}return value;},provide:f=>showHoverTooltip.from(f)});return [hoverState,ViewPlugin.define(view=>new HoverPlugin(view,source,hoverState,setHover,options.hoverTime||300/* Time */)),showHoverTooltipHost];}/**\nGet the active tooltip view for a given tooltip, if available.\n*/function getTooltip(view,tooltip){let plugin=view.plugin(tooltipPlugin);if(!plugin)return null;let found=plugin.manager.tooltips.indexOf(tooltip);return found<0?null:plugin.manager.tooltipViews[found];}const closeHoverTooltipEffect=/*@__PURE__*/StateEffect.define();const panelConfig=/*@__PURE__*/Facet.define({combine(configs){let topContainer,bottomContainer;for(let c of configs){topContainer=topContainer||c.topContainer;bottomContainer=bottomContainer||c.bottomContainer;}return {topContainer,bottomContainer};}});const panelPlugin=/*@__PURE__*/ViewPlugin.fromClass(class{constructor(view){this.input=view.state.facet(showPanel);this.specs=this.input.filter(s=>s);this.panels=this.specs.map(spec=>spec(view));let conf=view.state.facet(panelConfig);this.top=new PanelGroup(view,true,conf.topContainer);this.bottom=new PanelGroup(view,false,conf.bottomContainer);this.top.sync(this.panels.filter(p=>p.top));this.bottom.sync(this.panels.filter(p=>!p.top));for(let p of this.panels){p.dom.classList.add(\"cm-panel\");if(p.mount)p.mount();}}update(update){let conf=update.state.facet(panelConfig);if(this.top.container!=conf.topContainer){this.top.sync([]);this.top=new PanelGroup(update.view,true,conf.topContainer);}if(this.bottom.container!=conf.bottomContainer){this.bottom.sync([]);this.bottom=new PanelGroup(update.view,false,conf.bottomContainer);}this.top.syncClasses();this.bottom.syncClasses();let input=update.state.facet(showPanel);if(input!=this.input){let specs=input.filter(x=>x);let panels=[],top=[],bottom=[],mount=[];for(let spec of specs){let known=this.specs.indexOf(spec),panel;if(known<0){panel=spec(update.view);mount.push(panel);}else {panel=this.panels[known];if(panel.update)panel.update(update);}panels.push(panel);(panel.top?top:bottom).push(panel);}this.specs=specs;this.panels=panels;this.top.sync(top);this.bottom.sync(bottom);for(let p of mount){p.dom.classList.add(\"cm-panel\");if(p.mount)p.mount();}}else {for(let p of this.panels)if(p.update)p.update(update);}}destroy(){this.top.sync([]);this.bottom.sync([]);}},{provide:plugin=>EditorView.scrollMargins.of(view=>{let value=view.plugin(plugin);return value&&{top:value.top.scrollMargin(),bottom:value.bottom.scrollMargin()};})});class PanelGroup{constructor(view,top,container){this.view=view;this.top=top;this.container=container;this.dom=undefined;this.classes=\"\";this.panels=[];this.syncClasses();}sync(panels){for(let p of this.panels)if(p.destroy&&panels.indexOf(p)<0)p.destroy();this.panels=panels;this.syncDOM();}syncDOM(){if(this.panels.length==0){if(this.dom){this.dom.remove();this.dom=undefined;}return;}if(!this.dom){this.dom=document.createElement(\"div\");this.dom.className=this.top?\"cm-panels cm-panels-top\":\"cm-panels cm-panels-bottom\";this.dom.style[this.top?\"top\":\"bottom\"]=\"0\";let parent=this.container||this.view.dom;parent.insertBefore(this.dom,this.top?parent.firstChild:null);}let curDOM=this.dom.firstChild;for(let panel of this.panels){if(panel.dom.parentNode==this.dom){while(curDOM!=panel.dom)curDOM=rm(curDOM);curDOM=curDOM.nextSibling;}else {this.dom.insertBefore(panel.dom,curDOM);}}while(curDOM)curDOM=rm(curDOM);}scrollMargin(){return !this.dom||this.container?0:Math.max(0,this.top?this.dom.getBoundingClientRect().bottom-Math.max(0,this.view.scrollDOM.getBoundingClientRect().top):Math.min(innerHeight,this.view.scrollDOM.getBoundingClientRect().bottom)-this.dom.getBoundingClientRect().top);}syncClasses(){if(!this.container||this.classes==this.view.themeClasses)return;for(let cls of this.classes.split(\" \"))if(cls)this.container.classList.remove(cls);for(let cls of (this.classes=this.view.themeClasses).split(\" \"))if(cls)this.container.classList.add(cls);}}function rm(node){let next=node.nextSibling;node.remove();return next;}/**\nOpening a panel is done by providing a constructor function for\nthe panel through this facet. (The panel is closed again when its\nconstructor is no longer provided.) Values of `null` are ignored.\n*/const showPanel=/*@__PURE__*/Facet.define({enables:panelPlugin});/**\nA gutter marker represents a bit of information attached to a line\nin a specific gutter. Your own custom markers have to extend this\nclass.\n*/class GutterMarker extends RangeValue{/**\n    @internal\n    */compare(other){return this==other||this.constructor==other.constructor&&this.eq(other);}/**\n    Compare this marker to another marker of the same type.\n    */eq(other){return false;}/**\n    Called if the marker has a `toDOM` method and its representation\n    was removed from a gutter.\n    */destroy(dom){}}GutterMarker.prototype.elementClass=\"\";GutterMarker.prototype.toDOM=undefined;GutterMarker.prototype.mapMode=MapMode.TrackBefore;GutterMarker.prototype.startSide=GutterMarker.prototype.endSide=-1;GutterMarker.prototype.point=true;// FIXME profile adding a per-Tree TreeNode cache, validating it by\n// parent pointer\n/// The default maximum length of a `TreeBuffer` node.\nconst DefaultBufferLength$1=1024;let nextPropID$1=0;class Range$1{constructor(from,to){this.from=from;this.to=to;}}/// Each [node type](#common.NodeType) or [individual tree](#common.Tree)\n/// can have metadata associated with it in props. Instances of this\n/// class represent prop names.\nclass NodeProp$1{/// Create a new node prop type.\nconstructor(config={}){this.id=nextPropID$1++;this.perNode=!!config.perNode;this.deserialize=config.deserialize||(()=>{throw new Error(\"This node type doesn't define a deserialize function\");});}/// This is meant to be used with\n/// [`NodeSet.extend`](#common.NodeSet.extend) or\n/// [`LRParser.configure`](#lr.ParserConfig.props) to compute\n/// prop values for each node type in the set. Takes a [match\n/// object](#common.NodeType^match) or function that returns undefined\n/// if the node type doesn't get this prop, and the prop's value if\n/// it does.\nadd(match){if(this.perNode)throw new RangeError(\"Can't add per-node props to node types\");if(typeof match!=\"function\")match=NodeType$1.match(match);return type=>{let result=match(type);return result===undefined?null:[this,result];};}}/// Prop that is used to describe matching delimiters. For opening\n/// delimiters, this holds an array of node names (written as a\n/// space-separated string when declaring this prop in a grammar)\n/// for the node types of closing delimiters that match it.\nNodeProp$1.closedBy=new NodeProp$1({deserialize:str=>str.split(\" \")});/// The inverse of [`closedBy`](#common.NodeProp^closedBy). This is\n/// attached to closing delimiters, holding an array of node names\n/// of types of matching opening delimiters.\nNodeProp$1.openedBy=new NodeProp$1({deserialize:str=>str.split(\" \")});/// Used to assign node types to groups (for example, all node\n/// types that represent an expression could be tagged with an\n/// `\"Expression\"` group).\nNodeProp$1.group=new NodeProp$1({deserialize:str=>str.split(\" \")});/// The hash of the [context](#lr.ContextTracker.constructor)\n/// that the node was parsed in, if any. Used to limit reuse of\n/// contextual nodes.\nNodeProp$1.contextHash=new NodeProp$1({perNode:true});/// The distance beyond the end of the node that the tokenizer\n/// looked ahead for any of the tokens inside the node. (The LR\n/// parser only stores this when it is larger than 25, for\n/// efficiency reasons.)\nNodeProp$1.lookAhead=new NodeProp$1({perNode:true});/// This per-node prop is used to replace a given node, or part of a\n/// node, with another tree. This is useful to include trees from\n/// different languages in mixed-language parsers.\nNodeProp$1.mounted=new NodeProp$1({perNode:true});const noProps$1=Object.create(null);/// Each node in a syntax tree has a node type associated with it.\nclass NodeType$1{/// @internal\nconstructor(/// The name of the node type. Not necessarily unique, but if the\n/// grammar was written properly, different node types with the\n/// same name within a node set should play the same semantic\n/// role.\nname,/// @internal\nprops,/// The id of this node in its set. Corresponds to the term ids\n/// used in the parser.\nid,/// @internal\nflags=0){this.name=name;this.props=props;this.id=id;this.flags=flags;}/// Define a node type.\nstatic define(spec){let props=spec.props&&spec.props.length?Object.create(null):noProps$1;let flags=(spec.top?1/* Top */:0)|(spec.skipped?2/* Skipped */:0)|(spec.error?4/* Error */:0)|(spec.name==null?8/* Anonymous */:0);let type=new NodeType$1(spec.name||\"\",props,spec.id,flags);if(spec.props)for(let src of spec.props){if(!Array.isArray(src))src=src(type);if(src){if(src[0].perNode)throw new RangeError(\"Can't store a per-node prop on a node type\");props[src[0].id]=src[1];}}return type;}/// Retrieves a node prop for this type. Will return `undefined` if\n/// the prop isn't present on this node.\nprop(prop){return this.props[prop.id];}/// True when this is the top node of a grammar.\nget isTop(){return (this.flags&1/* Top */)>0;}/// True when this node is produced by a skip rule.\nget isSkipped(){return (this.flags&2/* Skipped */)>0;}/// Indicates whether this is an error node.\nget isError(){return (this.flags&4/* Error */)>0;}/// When true, this node type doesn't correspond to a user-declared\n/// named node, for example because it is used to cache repetition.\nget isAnonymous(){return (this.flags&8/* Anonymous */)>0;}/// Returns true when this node's name or one of its\n/// [groups](#common.NodeProp^group) matches the given string.\nis(name){if(typeof name=='string'){if(this.name==name)return true;let group=this.prop(NodeProp$1.group);return group?group.indexOf(name)>-1:false;}return this.id==name;}/// Create a function from node types to arbitrary values by\n/// specifying an object whose property names are node or\n/// [group](#common.NodeProp^group) names. Often useful with\n/// [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n/// names, separated by spaces, in a single property name to map\n/// multiple node names to a single value.\nstatic match(map){let direct=Object.create(null);for(let prop in map)for(let name of prop.split(\" \"))direct[name]=map[prop];return node=>{for(let groups=node.prop(NodeProp$1.group),i=-1;i<(groups?groups.length:0);i++){let found=direct[i<0?node.name:groups[i]];if(found)return found;}};}}/// An empty dummy node type to use when no actual type is available.\nNodeType$1.none=new NodeType$1(\"\",Object.create(null),0,8/* Anonymous */);const CachedNode$1=new WeakMap(),CachedInnerNode$1=new WeakMap();/// Options that control iteration. Can be combined with the `|`\n/// operator to enable multiple ones.\nvar IterMode$1;(function(IterMode){/// When enabled, iteration will only visit [`Tree`](#common.Tree)\n/// objects, not nodes packed into\n/// [`TreeBuffer`](#common.TreeBuffer)s.\nIterMode[IterMode[\"ExcludeBuffers\"]=1]=\"ExcludeBuffers\";/// Enable this to make iteration include anonymous nodes (such as\n/// the nodes that wrap repeated grammar constructs into a balanced\n/// tree).\nIterMode[IterMode[\"IncludeAnonymous\"]=2]=\"IncludeAnonymous\";/// By default, regular [mounted](#common.NodeProp^mounted) nodes\n/// replace their base node in iteration. Enable this to ignore them\n/// instead.\nIterMode[IterMode[\"IgnoreMounts\"]=4]=\"IgnoreMounts\";/// This option only applies in\n/// [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n/// library to not enter mounted overlays if one covers the given\n/// position.\nIterMode[IterMode[\"IgnoreOverlays\"]=8]=\"IgnoreOverlays\";})(IterMode$1||(IterMode$1={}));/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the [`TreeCursor`](#common.TreeCursor) or\n/// [`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\n/// a view on some part of this data structure, and can be used to\n/// move around to adjacent nodes.\nclass Tree$1{/// Construct a new tree. See also [`Tree.build`](#common.Tree^build).\nconstructor(/// The type of the top node.\ntype,/// This node's child nodes.\nchildren,/// The positions (offsets relative to the start of this tree) of\n/// the children.\npositions,/// The total length of this tree\nlength,/// Per-node [node props](#common.NodeProp) to associate with this node.\nprops){this.type=type;this.children=children;this.positions=positions;this.length=length;/// @internal\nthis.props=null;if(props&&props.length){this.props=Object.create(null);for(let[prop,value]of props)this.props[typeof prop==\"number\"?prop:prop.id]=value;}}/// @internal\ntoString(){let mounted=this.prop(NodeProp$1.mounted);if(mounted&&!mounted.overlay)return mounted.tree.toString();let children=\"\";for(let ch of this.children){let str=ch.toString();if(str){if(children)children+=\",\";children+=str;}}return !this.type.name?children:(/\\W/.test(this.type.name)&&!this.type.isError?JSON.stringify(this.type.name):this.type.name)+(children.length?\"(\"+children+\")\":\"\");}/// Get a [tree cursor](#common.TreeCursor) positioned at the top of\n/// the tree. Mode can be used to [control](#common.IterMode) which\n/// nodes the cursor visits.\ncursor(mode=0){return new TreeCursor$1(this.topNode,mode);}/// Get a [tree cursor](#common.TreeCursor) pointing into this tree\n/// at the given position and side (see\n/// [`moveTo`](#common.TreeCursor.moveTo).\ncursorAt(pos,side=0,mode=0){let scope=CachedNode$1.get(this)||this.topNode;let cursor=new TreeCursor$1(scope);cursor.moveTo(pos,side);CachedNode$1.set(this,cursor._tree);return cursor;}/// Get a [syntax node](#common.SyntaxNode) object for the top of the\n/// tree.\nget topNode(){return new TreeNode$1(this,0,0,null);}/// Get the [syntax node](#common.SyntaxNode) at the given position.\n/// If `side` is -1, this will move into nodes that end at the\n/// position. If 1, it'll move into nodes that start at the\n/// position. With 0, it'll only enter nodes that cover the position\n/// from both sides.\nresolve(pos,side=0){let node=resolveNode$1(CachedNode$1.get(this)||this.topNode,pos,side,false);CachedNode$1.set(this,node);return node;}/// Like [`resolve`](#common.Tree.resolve), but will enter\n/// [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n/// pointing into the innermost overlaid tree at the given position\n/// (with parent links going through all parent structure, including\n/// the host trees).\nresolveInner(pos,side=0){let node=resolveNode$1(CachedInnerNode$1.get(this)||this.topNode,pos,side,true);CachedInnerNode$1.set(this,node);return node;}/// Iterate over the tree and its children, calling `enter` for any\n/// node that touches the `from`/`to` region (if given) before\n/// running over such a node's children, and `leave` (if given) when\n/// leaving the node. When `enter` returns `false`, that node will\n/// not have its children iterated over (or `leave` called).\niterate(spec){let{enter,leave,from=0,to=this.length}=spec;for(let c=this.cursor((spec.mode||0)|IterMode$1.IncludeAnonymous);;){let entered=false;if(c.from<=to&&c.to>=from&&(c.type.isAnonymous||enter(c)!==false)){if(c.firstChild())continue;entered=true;}for(;;){if(entered&&leave&&!c.type.isAnonymous)leave(c);if(c.nextSibling())break;if(!c.parent())return;entered=true;}}}/// Get the value of the given [node prop](#common.NodeProp) for this\n/// node. Works with both per-node and per-type props.\nprop(prop){return !prop.perNode?this.type.prop(prop):this.props?this.props[prop.id]:undefined;}/// Returns the node's [per-node props](#common.NodeProp.perNode) in a\n/// format that can be passed to the [`Tree`](#common.Tree)\n/// constructor.\nget propValues(){let result=[];if(this.props)for(let id in this.props)result.push([+id,this.props[id]]);return result;}/// Balance the direct children of this tree, producing a copy of\n/// which may have children grouped into subtrees with type\n/// [`NodeType.none`](#common.NodeType^none).\nbalance(config={}){return this.children.length<=8/* BranchFactor */?this:balanceRange$1(NodeType$1.none,this.children,this.positions,0,this.children.length,0,this.length,(children,positions,length)=>new Tree$1(this.type,children,positions,length,this.propValues),config.makeTree||((children,positions,length)=>new Tree$1(NodeType$1.none,children,positions,length)));}/// Build a tree from a postfix-ordered buffer of node information,\n/// or a cursor over such a buffer.\nstatic build(data){return buildTree$1(data);}}/// The empty tree\nTree$1.empty=new Tree$1(NodeType$1.none,[],[],0);class FlatBufferCursor$1{constructor(buffer,index){this.buffer=buffer;this.index=index;}get id(){return this.buffer[this.index-4];}get start(){return this.buffer[this.index-3];}get end(){return this.buffer[this.index-2];}get size(){return this.buffer[this.index-1];}get pos(){return this.index;}next(){this.index-=4;}fork(){return new FlatBufferCursor$1(this.buffer,this.index);}}/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it).\nclass TreeBuffer$1{/// Create a tree buffer.\nconstructor(/// The buffer's content.\nbuffer,/// The total length of the group of nodes in the buffer.\nlength,/// The node set used in this buffer.\nset){this.buffer=buffer;this.length=length;this.set=set;}/// @internal\nget type(){return NodeType$1.none;}/// @internal\ntoString(){let result=[];for(let index=0;index<this.buffer.length;){result.push(this.childString(index));index=this.buffer[index+3];}return result.join(\",\");}/// @internal\nchildString(index){let id=this.buffer[index],endIndex=this.buffer[index+3];let type=this.set.types[id],result=type.name;if(/\\W/.test(result)&&!type.isError)result=JSON.stringify(result);index+=4;if(endIndex==index)return result;let children=[];while(index<endIndex){children.push(this.childString(index));index=this.buffer[index+3];}return result+\"(\"+children.join(\",\")+\")\";}/// @internal\nfindChild(startIndex,endIndex,dir,pos,side){let{buffer}=this,pick=-1;for(let i=startIndex;i!=endIndex;i=buffer[i+3]){if(checkSide$1(side,pos,buffer[i+1],buffer[i+2])){pick=i;if(dir>0)break;}}return pick;}/// @internal\nslice(startI,endI,from,to){let b=this.buffer;let copy=new Uint16Array(endI-startI);for(let i=startI,j=0;i<endI;){copy[j++]=b[i++];copy[j++]=b[i++]-from;copy[j++]=b[i++]-from;copy[j++]=b[i++]-startI;}return new TreeBuffer$1(copy,to-from,this.set);}}function checkSide$1(side,pos,from,to){switch(side){case-2/* Before */:return from<pos;case-1/* AtOrBefore */:return to>=pos&&from<pos;case 0/* Around */:return from<pos&&to>pos;case 1/* AtOrAfter */:return from<=pos&&to>pos;case 2/* After */:return to>pos;case 4/* DontCare */:return true;}}function enterUnfinishedNodesBefore$1(node,pos){let scan=node.childBefore(pos);while(scan){let last=scan.lastChild;if(!last||last.to!=scan.to)break;if(last.type.isError&&last.from==last.to){node=scan;scan=last.prevSibling;}else {scan=last;}}return node;}function resolveNode$1(node,pos,side,overlays){var _a;// Move up to a node that actually holds the position, if possible\nwhile(node.from==node.to||(side<1?node.from>=pos:node.from>pos)||(side>-1?node.to<=pos:node.to<pos)){let parent=!overlays&&node instanceof TreeNode$1&&node.index<0?null:node.parent;if(!parent)return node;node=parent;}let mode=overlays?0:IterMode$1.IgnoreOverlays;// Must go up out of overlays when those do not overlap with pos\nif(overlays)for(let scan=node,parent=scan.parent;parent;scan=parent,parent=scan.parent){if(scan instanceof TreeNode$1&&scan.index<0&&((_a=parent.enter(pos,side,mode))===null||_a===void 0?void 0:_a.from)!=scan.from)node=parent;}for(;;){let inner=node.enter(pos,side,mode);if(!inner)return node;node=inner;}}class TreeNode$1{constructor(_tree,from,// Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\nindex,_parent){this._tree=_tree;this.from=from;this.index=index;this._parent=_parent;}get type(){return this._tree.type;}get name(){return this._tree.type.name;}get to(){return this.from+this._tree.length;}nextChild(i,dir,pos,side,mode=0){for(let parent=this;;){for(let{children,positions}=parent._tree,e=dir>0?children.length:-1;i!=e;i+=dir){let next=children[i],start=positions[i]+parent.from;if(!checkSide$1(side,pos,start,start+next.length))continue;if(next instanceof TreeBuffer$1){if(mode&IterMode$1.ExcludeBuffers)continue;let index=next.findChild(0,next.buffer.length,dir,pos-start,side);if(index>-1)return new BufferNode$1(new BufferContext$1(parent,next,i,start),null,index);}else if(mode&IterMode$1.IncludeAnonymous||!next.type.isAnonymous||hasChild$1(next)){let mounted;if(!(mode&IterMode$1.IgnoreMounts)&&next.props&&(mounted=next.prop(NodeProp$1.mounted))&&!mounted.overlay)return new TreeNode$1(mounted.tree,start,i,parent);let inner=new TreeNode$1(next,start,i,parent);return mode&IterMode$1.IncludeAnonymous||!inner.type.isAnonymous?inner:inner.nextChild(dir<0?next.children.length-1:0,dir,pos,side);}}if(mode&IterMode$1.IncludeAnonymous||!parent.type.isAnonymous)return null;if(parent.index>=0)i=parent.index+dir;else i=dir<0?-1:parent._parent._tree.children.length;parent=parent._parent;if(!parent)return null;}}get firstChild(){return this.nextChild(0,1,0,4/* DontCare */);}get lastChild(){return this.nextChild(this._tree.children.length-1,-1,0,4/* DontCare */);}childAfter(pos){return this.nextChild(0,1,pos,2/* After */);}childBefore(pos){return this.nextChild(this._tree.children.length-1,-1,pos,-2/* Before */);}enter(pos,side,mode=0){let mounted;if(!(mode&IterMode$1.IgnoreOverlays)&&(mounted=this._tree.prop(NodeProp$1.mounted))&&mounted.overlay){let rPos=pos-this.from;for(let{from,to}of mounted.overlay){if((side>0?from<=rPos:from<rPos)&&(side<0?to>=rPos:to>rPos))return new TreeNode$1(mounted.tree,mounted.overlay[0].from+this.from,-1,this);}}return this.nextChild(0,1,pos,side,mode);}nextSignificantParent(){let val=this;while(val.type.isAnonymous&&val._parent)val=val._parent;return val;}get parent(){return this._parent?this._parent.nextSignificantParent():null;}get nextSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index+1,1,0,4/* DontCare */):null;}get prevSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index-1,-1,0,4/* DontCare */):null;}cursor(mode=0){return new TreeCursor$1(this,mode);}get tree(){return this._tree;}toTree(){return this._tree;}resolve(pos,side=0){return resolveNode$1(this,pos,side,false);}resolveInner(pos,side=0){return resolveNode$1(this,pos,side,true);}enterUnfinishedNodesBefore(pos){return enterUnfinishedNodesBefore$1(this,pos);}getChild(type,before=null,after=null){let r=getChildren$1(this,type,before,after);return r.length?r[0]:null;}getChildren(type,before=null,after=null){return getChildren$1(this,type,before,after);}/// @internal\ntoString(){return this._tree.toString();}get node(){return this;}matchContext(context){return matchNodeContext$1(this,context);}}function getChildren$1(node,type,before,after){let cur=node.cursor(),result=[];if(!cur.firstChild())return result;if(before!=null)while(!cur.type.is(before))if(!cur.nextSibling())return result;for(;;){if(after!=null&&cur.type.is(after))return result;if(cur.type.is(type))result.push(cur.node);if(!cur.nextSibling())return after==null?result:[];}}function matchNodeContext$1(node,context,i=context.length-1){for(let p=node.parent;i>=0;p=p.parent){if(!p)return false;if(!p.type.isAnonymous){if(context[i]&&context[i]!=p.name)return false;i--;}}return true;}class BufferContext$1{constructor(parent,buffer,index,start){this.parent=parent;this.buffer=buffer;this.index=index;this.start=start;}}class BufferNode$1{constructor(context,_parent,index){this.context=context;this._parent=_parent;this.index=index;this.type=context.buffer.set.types[context.buffer.buffer[index]];}get name(){return this.type.name;}get from(){return this.context.start+this.context.buffer.buffer[this.index+1];}get to(){return this.context.start+this.context.buffer.buffer[this.index+2];}child(dir,pos,side){let{buffer}=this.context;let index=buffer.findChild(this.index+4,buffer.buffer[this.index+3],dir,pos-this.context.start,side);return index<0?null:new BufferNode$1(this.context,this,index);}get firstChild(){return this.child(1,0,4/* DontCare */);}get lastChild(){return this.child(-1,0,4/* DontCare */);}childAfter(pos){return this.child(1,pos,2/* After */);}childBefore(pos){return this.child(-1,pos,-2/* Before */);}enter(pos,side,mode=0){if(mode&IterMode$1.ExcludeBuffers)return null;let{buffer}=this.context;let index=buffer.findChild(this.index+4,buffer.buffer[this.index+3],side>0?1:-1,pos-this.context.start,side);return index<0?null:new BufferNode$1(this.context,this,index);}get parent(){return this._parent||this.context.parent.nextSignificantParent();}externalSibling(dir){return this._parent?null:this.context.parent.nextChild(this.context.index+dir,dir,0,4/* DontCare */);}get nextSibling(){let{buffer}=this.context;let after=buffer.buffer[this.index+3];if(after<(this._parent?buffer.buffer[this._parent.index+3]:buffer.buffer.length))return new BufferNode$1(this.context,this._parent,after);return this.externalSibling(1);}get prevSibling(){let{buffer}=this.context;let parentStart=this._parent?this._parent.index+4:0;if(this.index==parentStart)return this.externalSibling(-1);return new BufferNode$1(this.context,this._parent,buffer.findChild(parentStart,this.index,-1,0,4/* DontCare */));}cursor(mode=0){return new TreeCursor$1(this,mode);}get tree(){return null;}toTree(){let children=[],positions=[];let{buffer}=this.context;let startI=this.index+4,endI=buffer.buffer[this.index+3];if(endI>startI){let from=buffer.buffer[this.index+1],to=buffer.buffer[this.index+2];children.push(buffer.slice(startI,endI,from,to));positions.push(0);}return new Tree$1(this.type,children,positions,this.to-this.from);}resolve(pos,side=0){return resolveNode$1(this,pos,side,false);}resolveInner(pos,side=0){return resolveNode$1(this,pos,side,true);}enterUnfinishedNodesBefore(pos){return enterUnfinishedNodesBefore$1(this,pos);}/// @internal\ntoString(){return this.context.buffer.childString(this.index);}getChild(type,before=null,after=null){let r=getChildren$1(this,type,before,after);return r.length?r[0]:null;}getChildren(type,before=null,after=null){return getChildren$1(this,type,before,after);}get node(){return this;}matchContext(context){return matchNodeContext$1(this,context);}}/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nclass TreeCursor$1{/// @internal\nconstructor(node,/// @internal\nmode=0){this.mode=mode;/// @internal\nthis.buffer=null;this.stack=[];/// @internal\nthis.index=0;this.bufferNode=null;if(node instanceof TreeNode$1){this.yieldNode(node);}else {this._tree=node.context.parent;this.buffer=node.context;for(let n=node._parent;n;n=n._parent)this.stack.unshift(n.index);this.bufferNode=node;this.yieldBuf(node.index);}}/// Shorthand for `.type.name`.\nget name(){return this.type.name;}yieldNode(node){if(!node)return false;this._tree=node;this.type=node.type;this.from=node.from;this.to=node.to;return true;}yieldBuf(index,type){this.index=index;let{start,buffer}=this.buffer;this.type=type||buffer.set.types[buffer.buffer[index]];this.from=start+buffer.buffer[index+1];this.to=start+buffer.buffer[index+2];return true;}yield(node){if(!node)return false;if(node instanceof TreeNode$1){this.buffer=null;return this.yieldNode(node);}this.buffer=node.context;return this.yieldBuf(node.index,node.type);}/// @internal\ntoString(){return this.buffer?this.buffer.buffer.childString(this.index):this._tree.toString();}/// @internal\nenterChild(dir,pos,side){if(!this.buffer)return this.yield(this._tree.nextChild(dir<0?this._tree._tree.children.length-1:0,dir,pos,side,this.mode));let{buffer}=this.buffer;let index=buffer.findChild(this.index+4,buffer.buffer[this.index+3],dir,pos-this.buffer.start,side);if(index<0)return false;this.stack.push(this.index);return this.yieldBuf(index);}/// Move the cursor to this node's first child. When this returns\n/// false, the node has no child, and the cursor has not been moved.\nfirstChild(){return this.enterChild(1,0,4/* DontCare */);}/// Move the cursor to this node's last child.\nlastChild(){return this.enterChild(-1,0,4/* DontCare */);}/// Move the cursor to the first child that ends after `pos`.\nchildAfter(pos){return this.enterChild(1,pos,2/* After */);}/// Move to the last child that starts before `pos`.\nchildBefore(pos){return this.enterChild(-1,pos,-2/* Before */);}/// Move the cursor to the child around `pos`. If side is -1 the\n/// child may end at that position, when 1 it may start there. This\n/// will also enter [overlaid](#common.MountedTree.overlay)\n/// [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n/// set to false.\nenter(pos,side,mode=this.mode){if(!this.buffer)return this.yield(this._tree.enter(pos,side,mode));return mode&IterMode$1.ExcludeBuffers?false:this.enterChild(1,pos,side);}/// Move to the node's parent node, if this isn't the top node.\nparent(){if(!this.buffer)return this.yieldNode(this.mode&IterMode$1.IncludeAnonymous?this._tree._parent:this._tree.parent);if(this.stack.length)return this.yieldBuf(this.stack.pop());let parent=this.mode&IterMode$1.IncludeAnonymous?this.buffer.parent:this.buffer.parent.nextSignificantParent();this.buffer=null;return this.yieldNode(parent);}/// @internal\nsibling(dir){if(!this.buffer)return !this._tree._parent?false:this.yield(this._tree.index<0?null:this._tree._parent.nextChild(this._tree.index+dir,dir,0,4/* DontCare */,this.mode));let{buffer}=this.buffer,d=this.stack.length-1;if(dir<0){let parentStart=d<0?0:this.stack[d]+4;if(this.index!=parentStart)return this.yieldBuf(buffer.findChild(parentStart,this.index,-1,0,4/* DontCare */));}else {let after=buffer.buffer[this.index+3];if(after<(d<0?buffer.buffer.length:buffer.buffer[this.stack[d]+3]))return this.yieldBuf(after);}return d<0?this.yield(this.buffer.parent.nextChild(this.buffer.index+dir,dir,0,4/* DontCare */,this.mode)):false;}/// Move to this node's next sibling, if any.\nnextSibling(){return this.sibling(1);}/// Move to this node's previous sibling, if any.\nprevSibling(){return this.sibling(-1);}atLastNode(dir){let index,parent,{buffer}=this;if(buffer){if(dir>0){if(this.index<buffer.buffer.buffer.length)return false;}else {for(let i=0;i<this.index;i++)if(buffer.buffer.buffer[i+3]<this.index)return false;}({index,parent}=buffer);}else {({index,_parent:parent}=this._tree);}for(;parent;({index,_parent:parent}=parent)){if(index>-1)for(let i=index+dir,e=dir<0?-1:parent._tree.children.length;i!=e;i+=dir){let child=parent._tree.children[i];if(this.mode&IterMode$1.IncludeAnonymous||child instanceof TreeBuffer$1||!child.type.isAnonymous||hasChild$1(child))return false;}}return true;}move(dir,enter){if(enter&&this.enterChild(dir,0,4/* DontCare */))return true;for(;;){if(this.sibling(dir))return true;if(this.atLastNode(dir)||!this.parent())return false;}}/// Move to the next node in a\n/// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n/// traversal, going from a node to its first child or, if the\n/// current node is empty or `enter` is false, its next sibling or\n/// the next sibling of the first parent node that has one.\nnext(enter=true){return this.move(1,enter);}/// Move to the next node in a last-to-first pre-order traveral. A\n/// node is followed by its last child or, if it has none, its\n/// previous sibling or the previous sibling of the first parent\n/// node that has one.\nprev(enter=true){return this.move(-1,enter);}/// Move the cursor to the innermost node that covers `pos`. If\n/// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n/// it will enter nodes that start at `pos`.\nmoveTo(pos,side=0){// Move up to a node that actually holds the position, if possible\nwhile(this.from==this.to||(side<1?this.from>=pos:this.from>pos)||(side>-1?this.to<=pos:this.to<pos))if(!this.parent())break;// Then scan down into child nodes as far as possible\nwhile(this.enterChild(1,pos,side)){}return this;}/// Get a [syntax node](#common.SyntaxNode) at the cursor's current\n/// position.\nget node(){if(!this.buffer)return this._tree;let cache=this.bufferNode,result=null,depth=0;if(cache&&cache.context==this.buffer){scan:for(let index=this.index,d=this.stack.length;d>=0;){for(let c=cache;c;c=c._parent)if(c.index==index){if(index==this.index)return c;result=c;depth=d+1;break scan;}index=this.stack[--d];}}for(let i=depth;i<this.stack.length;i++)result=new BufferNode$1(this.buffer,result,this.stack[i]);return this.bufferNode=new BufferNode$1(this.buffer,result,this.index);}/// Get the [tree](#common.Tree) that represents the current node, if\n/// any. Will return null when the node is in a [tree\n/// buffer](#common.TreeBuffer).\nget tree(){return this.buffer?null:this._tree._tree;}/// Iterate over the current node and all its descendants, calling\n/// `enter` when entering a node and `leave`, if given, when leaving\n/// one. When `enter` returns `false`, any children of that node are\n/// skipped, and `leave` isn't called for it.\niterate(enter,leave){for(let depth=0;;){let mustLeave=false;if(this.type.isAnonymous||enter(this)!==false){if(this.firstChild()){depth++;continue;}if(!this.type.isAnonymous)mustLeave=true;}for(;;){if(mustLeave&&leave)leave(this);mustLeave=this.type.isAnonymous;if(this.nextSibling())break;if(!depth)return;this.parent();depth--;mustLeave=true;}}}/// Test whether the current node matches a given context—a sequence\n/// of direct parent node names. Empty strings in the context array\n/// are treated as wildcards.\nmatchContext(context){if(!this.buffer)return matchNodeContext$1(this.node,context);let{buffer}=this.buffer,{types}=buffer.set;for(let i=context.length-1,d=this.stack.length-1;i>=0;d--){if(d<0)return matchNodeContext$1(this.node,context,i);let type=types[buffer.buffer[this.stack[d]]];if(!type.isAnonymous){if(context[i]&&context[i]!=type.name)return false;i--;}}return true;}}function hasChild$1(tree){return tree.children.some(ch=>ch instanceof TreeBuffer$1||!ch.type.isAnonymous||hasChild$1(ch));}function buildTree$1(data){var _a;let{buffer,nodeSet,maxBufferLength=DefaultBufferLength$1,reused=[],minRepeatType=nodeSet.types.length}=data;let cursor=Array.isArray(buffer)?new FlatBufferCursor$1(buffer,buffer.length):buffer;let types=nodeSet.types;let contextHash=0,lookAhead=0;function takeNode(parentStart,minPos,children,positions,inRepeat){let{id,start,end,size}=cursor;let lookAheadAtStart=lookAhead;while(size<0){cursor.next();if(size==-1/* Reuse */){let node=reused[id];children.push(node);positions.push(start-parentStart);return;}else if(size==-3/* ContextChange */){// Context change\ncontextHash=id;return;}else if(size==-4/* LookAhead */){lookAhead=id;return;}else {throw new RangeError(`Unrecognized record size: ${size}`);}}let type=types[id],node,buffer;let startPos=start-parentStart;if(end-start<=maxBufferLength&&(buffer=findBufferSize(cursor.pos-minPos,inRepeat))){// Small enough for a buffer, and no reused nodes inside\nlet data=new Uint16Array(buffer.size-buffer.skip);let endPos=cursor.pos-buffer.size,index=data.length;while(cursor.pos>endPos)index=copyToBuffer(buffer.start,data,index);node=new TreeBuffer$1(data,end-buffer.start,nodeSet);startPos=buffer.start-parentStart;}else {// Make it a node\nlet endPos=cursor.pos-size;cursor.next();let localChildren=[],localPositions=[];let localInRepeat=id>=minRepeatType?id:-1;let lastGroup=0,lastEnd=end;while(cursor.pos>endPos){if(localInRepeat>=0&&cursor.id==localInRepeat&&cursor.size>=0){if(cursor.end<=lastEnd-maxBufferLength){makeRepeatLeaf(localChildren,localPositions,start,lastGroup,cursor.end,lastEnd,localInRepeat,lookAheadAtStart);lastGroup=localChildren.length;lastEnd=cursor.end;}cursor.next();}else {takeNode(start,endPos,localChildren,localPositions,localInRepeat);}}if(localInRepeat>=0&&lastGroup>0&&lastGroup<localChildren.length)makeRepeatLeaf(localChildren,localPositions,start,lastGroup,start,lastEnd,localInRepeat,lookAheadAtStart);localChildren.reverse();localPositions.reverse();if(localInRepeat>-1&&lastGroup>0){let make=makeBalanced(type);node=balanceRange$1(type,localChildren,localPositions,0,localChildren.length,0,end-start,make,make);}else {node=makeTree(type,localChildren,localPositions,end-start,lookAheadAtStart-end);}}children.push(node);positions.push(startPos);}function makeBalanced(type){return (children,positions,length)=>{let lookAhead=0,lastI=children.length-1,last,lookAheadProp;if(lastI>=0&&(last=children[lastI])instanceof Tree$1){if(!lastI&&last.type==type&&last.length==length)return last;if(lookAheadProp=last.prop(NodeProp$1.lookAhead))lookAhead=positions[lastI]+last.length+lookAheadProp;}return makeTree(type,children,positions,length,lookAhead);};}function makeRepeatLeaf(children,positions,base,i,from,to,type,lookAhead){let localChildren=[],localPositions=[];while(children.length>i){localChildren.push(children.pop());localPositions.push(positions.pop()+base-from);}children.push(makeTree(nodeSet.types[type],localChildren,localPositions,to-from,lookAhead-to));positions.push(from-base);}function makeTree(type,children,positions,length,lookAhead=0,props){if(contextHash){let pair=[NodeProp$1.contextHash,contextHash];props=props?[pair].concat(props):[pair];}if(lookAhead>25){let pair=[NodeProp$1.lookAhead,lookAhead];props=props?[pair].concat(props):[pair];}return new Tree$1(type,children,positions,length,props);}function findBufferSize(maxSize,inRepeat){// Scan through the buffer to find previous siblings that fit\n// together in a TreeBuffer, and don't contain any reused nodes\n// (which can't be stored in a buffer).\n// If `inRepeat` is > -1, ignore node boundaries of that type for\n// nesting, but make sure the end falls either at the start\n// (`maxSize`) or before such a node.\nlet fork=cursor.fork();let size=0,start=0,skip=0,minStart=fork.end-maxBufferLength;let result={size:0,start:0,skip:0};scan:for(let minPos=fork.pos-maxSize;fork.pos>minPos;){let nodeSize=fork.size;// Pretend nested repeat nodes of the same type don't exist\nif(fork.id==inRepeat&&nodeSize>=0){// Except that we store the current state as a valid return\n// value.\nresult.size=size;result.start=start;result.skip=skip;skip+=4;size+=4;fork.next();continue;}let startPos=fork.pos-nodeSize;if(nodeSize<0||startPos<minPos||fork.start<minStart)break;let localSkipped=fork.id>=minRepeatType?4:0;let nodeStart=fork.start;fork.next();while(fork.pos>startPos){if(fork.size<0){if(fork.size==-3/* ContextChange */)localSkipped+=4;else break scan;}else if(fork.id>=minRepeatType){localSkipped+=4;}fork.next();}start=nodeStart;size+=nodeSize;skip+=localSkipped;}if(inRepeat<0||size==maxSize){result.size=size;result.start=start;result.skip=skip;}return result.size>4?result:undefined;}function copyToBuffer(bufferStart,buffer,index){let{id,start,end,size}=cursor;cursor.next();if(size>=0&&id<minRepeatType){let startIndex=index;if(size>4){let endPos=cursor.pos-(size-4);while(cursor.pos>endPos)index=copyToBuffer(bufferStart,buffer,index);}buffer[--index]=startIndex;buffer[--index]=end-bufferStart;buffer[--index]=start-bufferStart;buffer[--index]=id;}else if(size==-3/* ContextChange */){contextHash=id;}else if(size==-4/* LookAhead */){lookAhead=id;}return index;}let children=[],positions=[];while(cursor.pos>0)takeNode(data.start||0,data.bufferStart||0,children,positions,-1);let length=(_a=data.length)!==null&&_a!==void 0?_a:children.length?positions[0]+children[0].length:0;return new Tree$1(types[data.topID],children.reverse(),positions.reverse(),length);}const nodeSizeCache$1=new WeakMap();function nodeSize$1(balanceType,node){if(!balanceType.isAnonymous||node instanceof TreeBuffer$1||node.type!=balanceType)return 1;let size=nodeSizeCache$1.get(node);if(size==null){size=1;for(let child of node.children){if(child.type!=balanceType||!(child instanceof Tree$1)){size=1;break;}size+=nodeSize$1(balanceType,child);}nodeSizeCache$1.set(node,size);}return size;}function balanceRange$1(// The type the balanced tree's inner nodes.\nbalanceType,// The direct children and their positions\nchildren,positions,// The index range in children/positions to use\nfrom,to,// The start position of the nodes, relative to their parent.\nstart,// Length of the outer node\nlength,// Function to build the top node of the balanced tree\nmkTop,// Function to build internal nodes for the balanced tree\nmkTree){let total=0;for(let i=from;i<to;i++)total+=nodeSize$1(balanceType,children[i]);let maxChild=Math.ceil(total*1.5/8/* BranchFactor */);let localChildren=[],localPositions=[];function divide(children,positions,from,to,offset){for(let i=from;i<to;){let groupFrom=i,groupStart=positions[i],groupSize=nodeSize$1(balanceType,children[i]);i++;for(;i<to;i++){let nextSize=nodeSize$1(balanceType,children[i]);if(groupSize+nextSize>=maxChild)break;groupSize+=nextSize;}if(i==groupFrom+1){if(groupSize>maxChild){let only=children[groupFrom];// Only trees can have a size > 1\ndivide(only.children,only.positions,0,only.children.length,positions[groupFrom]+offset);continue;}localChildren.push(children[groupFrom]);}else {let length=positions[i-1]+children[i-1].length-groupStart;localChildren.push(balanceRange$1(balanceType,children,positions,groupFrom,i,groupStart,length,null,mkTree));}localPositions.push(groupStart+offset-start);}}divide(children,positions,from,to,0);return (mkTop||mkTree)(localChildren,localPositions,length);}/// Tree fragments are used during [incremental\n/// parsing](#common.Parser.startParse) to track parts of old trees\n/// that can be reused in a new parse. An array of fragments is used\n/// to track regions of an old tree whose nodes might be reused in new\n/// parses. Use the static\n/// [`applyChanges`](#common.TreeFragment^applyChanges) method to\n/// update fragments for document changes.\nclass TreeFragment{/// Construct a tree fragment. You'll usually want to use\n/// [`addTree`](#common.TreeFragment^addTree) and\n/// [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n/// calling this directly.\nconstructor(/// The start of the unchanged range pointed to by this fragment.\n/// This refers to an offset in the _updated_ document (as opposed\n/// to the original tree).\nfrom,/// The end of the unchanged range.\nto,/// The tree that this fragment is based on.\ntree,/// The offset between the fragment's tree and the document that\n/// this fragment can be used against. Add this when going from\n/// document to tree positions, subtract it to go from tree to\n/// document positions.\noffset,openStart=false,openEnd=false){this.from=from;this.to=to;this.tree=tree;this.offset=offset;this.open=(openStart?1/* Start */:0)|(openEnd?2/* End */:0);}/// Whether the start of the fragment represents the start of a\n/// parse, or the end of a change. (In the second case, it may not\n/// be safe to reuse some nodes at the start, depending on the\n/// parsing algorithm.)\nget openStart(){return (this.open&1/* Start */)>0;}/// Whether the end of the fragment represents the end of a\n/// full-document parse, or the start of a change.\nget openEnd(){return (this.open&2/* End */)>0;}/// Create a set of fragments from a freshly parsed tree, or update\n/// an existing set of fragments by replacing the ones that overlap\n/// with a tree with content from the new tree. When `partial` is\n/// true, the parse is treated as incomplete, and the resulting\n/// fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n/// true.\nstatic addTree(tree,fragments=[],partial=false){let result=[new TreeFragment(0,tree.length,tree,0,false,partial)];for(let f of fragments)if(f.to>tree.length)result.push(f);return result;}/// Apply a set of edits to an array of fragments, removing or\n/// splitting fragments as necessary to remove edited ranges, and\n/// adjusting offsets for fragments that moved.\nstatic applyChanges(fragments,changes,minGap=128){if(!changes.length)return fragments;let result=[];let fI=1,nextF=fragments.length?fragments[0]:null;for(let cI=0,pos=0,off=0;;cI++){let nextC=cI<changes.length?changes[cI]:null;let nextPos=nextC?nextC.fromA:1e9;if(nextPos-pos>=minGap)while(nextF&&nextF.from<nextPos){let cut=nextF;if(pos>=cut.from||nextPos<=cut.to||off){let fFrom=Math.max(cut.from,pos)-off,fTo=Math.min(cut.to,nextPos)-off;cut=fFrom>=fTo?null:new TreeFragment(fFrom,fTo,cut.tree,cut.offset+off,cI>0,!!nextC);}if(cut)result.push(cut);if(nextF.to>nextPos)break;nextF=fI<fragments.length?fragments[fI++]:null;}if(!nextC)break;pos=nextC.toA;off=nextC.toA-nextC.toB;}return result;}}/// A superclass that parsers should extend.\nclass Parser$1{/// Start a parse, returning a [partial parse](#common.PartialParse)\n/// object. [`fragments`](#common.TreeFragment) can be passed in to\n/// make the parse incremental.\n///\n/// By default, the entire input is parsed. You can pass `ranges`,\n/// which should be a sorted array of non-empty, non-overlapping\n/// ranges, to parse only those ranges. The tree returned in that\n/// case will start at `ranges[0].from`.\nstartParse(input,fragments,ranges){if(typeof input==\"string\")input=new StringInput$1(input);ranges=!ranges?[new Range$1(0,input.length)]:ranges.length?ranges.map(r=>new Range$1(r.from,r.to)):[new Range$1(0,0)];return this.createParse(input,fragments||[],ranges);}/// Run a full parse, returning the resulting tree.\nparse(input,fragments,ranges){let parse=this.startParse(input,fragments,ranges);for(;;){let done=parse.advance();if(done)return done;}}}class StringInput$1{constructor(string){this.string=string;}get length(){return this.string.length;}chunk(from){return this.string.slice(from);}get lineChunks(){return false;}read(from,to){return this.string.slice(from,to);}}new NodeProp$1({perNode:true});let nextTagID=0;/// Highlighting tags are markers that denote a highlighting category.\n/// They are [associated](#highlight.styleTags) with parts of a syntax\n/// tree by a language mode, and then mapped to an actual CSS style by\n/// a [highlighter](#highlight.Highlighter).\n///\n/// Because syntax tree node types and highlight styles have to be\n/// able to talk the same language, CodeMirror uses a mostly _closed_\n/// [vocabulary](#highlight.tags) of syntax tags (as opposed to\n/// traditional open string-based systems, which make it hard for\n/// highlighting themes to cover all the tokens produced by the\n/// various languages).\n///\n/// It _is_ possible to [define](#highlight.Tag^define) your own\n/// highlighting tags for system-internal use (where you control both\n/// the language package and the highlighter), but such tags will not\n/// be picked up by regular highlighters (though you can derive them\n/// from standard tags to allow highlighters to fall back to those).\nclass Tag{/// @internal\nconstructor(/// The set of this tag and all its parent tags, starting with\n/// this one itself and sorted in order of decreasing specificity.\nset,/// The base unmodified tag that this one is based on, if it's\n/// modified @internal\nbase,/// The modifiers applied to this.base @internal\nmodified){this.set=set;this.base=base;this.modified=modified;/// @internal\nthis.id=nextTagID++;}/// Define a new tag. If `parent` is given, the tag is treated as a\n/// sub-tag of that parent, and\n/// [highlighters](#highlight.tagHighlighter) that don't mention\n/// this tag will try to fall back to the parent tag (or grandparent\n/// tag, etc).\nstatic define(parent){if(parent===null||parent===void 0?void 0:parent.base)throw new Error(\"Can not derive from a modified tag\");let tag=new Tag([],null,[]);tag.set.push(tag);if(parent)for(let t of parent.set)tag.set.push(t);return tag;}/// Define a tag _modifier_, which is a function that, given a tag,\n/// will return a tag that is a subtag of the original. Applying the\n/// same modifier to a twice tag will return the same value (`m1(t1)\n/// == m1(t1)`) and applying multiple modifiers will, regardless or\n/// order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n///\n/// When multiple modifiers are applied to a given base tag, each\n/// smaller set of modifiers is registered as a parent, so that for\n/// example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n/// `m1(m3(t1)`, and so on.\nstatic defineModifier(){let mod=new Modifier();return tag=>{if(tag.modified.indexOf(mod)>-1)return tag;return Modifier.get(tag.base||tag,tag.modified.concat(mod).sort((a,b)=>a.id-b.id));};}}let nextModifierID=0;class Modifier{constructor(){this.instances=[];this.id=nextModifierID++;}static get(base,mods){if(!mods.length)return base;let exists=mods[0].instances.find(t=>t.base==base&&sameArray(mods,t.modified));if(exists)return exists;let set=[],tag=new Tag(set,base,mods);for(let m of mods)m.instances.push(tag);let configs=permute(mods);for(let parent of base.set)for(let config of configs)set.push(Modifier.get(parent,config));return tag;}}function sameArray(a,b){return a.length==b.length&&a.every((x,i)=>x==b[i]);}function permute(array){let result=[array];for(let i=0;i<array.length;i++){for(let a of permute(array.slice(0,i).concat(array.slice(i+1))))result.push(a);}return result;}/// This function is used to add a set of tags to a language syntax\n/// via [`NodeSet.extend`](#common.NodeSet.extend) or\n/// [`LRParser.configure`](#lr.LRParser.configure).\n///\n/// The argument object maps node selectors to [highlighting\n/// tags](#highlight.Tag) or arrays of tags.\n///\n/// Node selectors may hold one or more (space-separated) node paths.\n/// Such a path can be a [node name](#common.NodeType.name), or\n/// multiple node names (or `*` wildcards) separated by slash\n/// characters, as in `\"Block/Declaration/VariableName\"`. Such a path\n/// matches the final node but only if its direct parent nodes are the\n/// other nodes mentioned. A `*` in such a path matches any parent,\n/// but only a single level—wildcards that match multiple parents\n/// aren't supported, both for efficiency reasons and because Lezer\n/// trees make it rather hard to reason about what they would match.)\n///\n/// A path can be ended with `/...` to indicate that the tag assigned\n/// to the node should also apply to all child nodes, even if they\n/// match their own style (by default, only the innermost style is\n/// used).\n///\n/// When a path ends in `!`, as in `Attribute!`, no further matching\n/// happens for the node's child nodes, and the entire node gets the\n/// given style.\n///\n/// In this notation, node names that contain `/`, `!`, `*`, or `...`\n/// must be quoted as JSON strings.\n///\n/// For example:\n///\n/// ```javascript\n/// parser.withProps(\n///   styleTags({\n///     // Style Number and BigNumber nodes\n///     \"Number BigNumber\": tags.number,\n///     // Style Escape nodes whose parent is String\n///     \"String/Escape\": tags.escape,\n///     // Style anything inside Attributes nodes\n///     \"Attributes!\": tags.meta,\n///     // Add a style to all content inside Italic nodes\n///     \"Italic/...\": tags.emphasis,\n///     // Style InvalidString nodes as both `string` and `invalid`\n///     \"InvalidString\": [tags.string, tags.invalid],\n///     // Style the node named \"/\" as punctuation\n///     '\"/\"': tags.punctuation\n///   })\n/// )\n/// ```\nfunction styleTags(spec){let byName=Object.create(null);for(let prop in spec){let tags=spec[prop];if(!Array.isArray(tags))tags=[tags];for(let part of prop.split(\" \"))if(part){let pieces=[],mode=2/* Normal */,rest=part;for(let pos=0;;){if(rest==\"...\"&&pos>0&&pos+3==part.length){mode=1/* Inherit */;break;}let m=/^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);if(!m)throw new RangeError(\"Invalid path: \"+part);pieces.push(m[0]==\"*\"?\"\":m[0][0]=='\"'?JSON.parse(m[0]):m[0]);pos+=m[0].length;if(pos==part.length)break;let next=part[pos++];if(pos==part.length&&next==\"!\"){mode=0/* Opaque */;break;}if(next!=\"/\")throw new RangeError(\"Invalid path: \"+part);rest=part.slice(pos);}let last=pieces.length-1,inner=pieces[last];if(!inner)throw new RangeError(\"Invalid path: \"+part);let rule=new Rule(tags,mode,last>0?pieces.slice(0,last):null);byName[inner]=rule.sort(byName[inner]);}}return ruleNodeProp.add(byName);}const ruleNodeProp=new NodeProp$1();class Rule{constructor(tags,mode,context,next){this.tags=tags;this.mode=mode;this.context=context;this.next=next;}sort(other){if(!other||other.depth<this.depth){this.next=other;return this;}other.next=this.sort(other.next);return other;}get depth(){return this.context?this.context.length:0;}}/// Define a [highlighter](#highlight.Highlighter) from an array of\n/// tag/class pairs. Classes associated with more specific tags will\n/// take precedence.\nfunction tagHighlighter(tags,options){let map=Object.create(null);for(let style of tags){if(!Array.isArray(style.tag))map[style.tag.id]=style.class;else for(let tag of style.tag)map[tag.id]=style.class;}let{scope,all=null}=options||{};return {style:tags=>{let cls=all;for(let tag of tags){for(let sub of tag.set){let tagClass=map[sub.id];if(tagClass){cls=cls?cls+\" \"+tagClass:tagClass;break;}}}return cls;},scope:scope};}function highlightTags$1(highlighters,tags){let result=null;for(let highlighter of highlighters){let value=highlighter.style(tags);if(value)result=result?result+\" \"+value:value;}return result;}/// Highlight the given [tree](#common.Tree) with the given\n/// [highlighter](#highlight.Highlighter).\nfunction highlightTree(tree,highlighter,/// Assign styling to a region of the text. Will be called, in order\n/// of position, for any ranges where more than zero classes apply.\n/// `classes` is a space separated string of CSS classes.\nputStyle,/// The start of the range to highlight.\nfrom=0,/// The end of the range.\nto=tree.length){let builder=new HighlightBuilder(from,Array.isArray(highlighter)?highlighter:[highlighter],putStyle);builder.highlightRange(tree.cursor(),from,to,\"\",builder.highlighters);builder.flush(to);}class HighlightBuilder{constructor(at,highlighters,span){this.at=at;this.highlighters=highlighters;this.span=span;this.class=\"\";}startSpan(at,cls){if(cls!=this.class){this.flush(at);if(at>this.at)this.at=at;this.class=cls;}}flush(to){if(to>this.at&&this.class)this.span(this.at,to,this.class);}highlightRange(cursor,from,to,inheritedClass,highlighters){let{type,from:start,to:end}=cursor;if(start>=to||end<=from)return;if(type.isTop)highlighters=this.highlighters.filter(h=>!h.scope||h.scope(type));let cls=inheritedClass;let rule=type.prop(ruleNodeProp),opaque=false;while(rule){if(!rule.context||cursor.matchContext(rule.context)){let tagCls=highlightTags$1(highlighters,rule.tags);if(tagCls){if(cls)cls+=\" \";cls+=tagCls;if(rule.mode==1/* Inherit */)inheritedClass+=(inheritedClass?\" \":\"\")+tagCls;else if(rule.mode==0/* Opaque */)opaque=true;}break;}rule=rule.next;}this.startSpan(cursor.from,cls);if(opaque)return;let mounted=cursor.tree&&cursor.tree.prop(NodeProp$1.mounted);if(mounted&&mounted.overlay){let inner=cursor.node.enter(mounted.overlay[0].from+start,1);let innerHighlighters=this.highlighters.filter(h=>!h.scope||h.scope(mounted.tree.type));let hasChild=cursor.firstChild();for(let i=0,pos=start;;i++){let next=i<mounted.overlay.length?mounted.overlay[i]:null;let nextPos=next?next.from+start:end;let rangeFrom=Math.max(from,pos),rangeTo=Math.min(to,nextPos);if(rangeFrom<rangeTo&&hasChild){while(cursor.from<rangeTo){this.highlightRange(cursor,rangeFrom,rangeTo,inheritedClass,highlighters);this.startSpan(Math.min(to,cursor.to),cls);if(cursor.to>=nextPos||!cursor.nextSibling())break;}}if(!next||nextPos>to)break;pos=next.to+start;if(pos>from){this.highlightRange(inner.cursor(),Math.max(from,next.from+start),Math.min(to,pos),inheritedClass,innerHighlighters);this.startSpan(pos,cls);}}if(hasChild)cursor.parent();}else if(cursor.firstChild()){do{if(cursor.to<=from)continue;if(cursor.from>=to)break;this.highlightRange(cursor,from,to,inheritedClass,highlighters);this.startSpan(Math.min(to,cursor.to),cls);}while(cursor.nextSibling());cursor.parent();}}}const t=Tag.define;const comment=t(),name=t(),typeName=t(name),propertyName=t(name),literal=t(),string=t(literal),number=t(literal),content=t(),heading=t(content),keyword=t(),operator=t(),punctuation=t(),bracket=t(punctuation),meta=t();/// The default set of highlighting [tags](#highlight.Tag).\n///\n/// This collection is heavily biased towards programming languages,\n/// and necessarily incomplete. A full ontology of syntactic\n/// constructs would fill a stack of books, and be impractical to\n/// write themes for. So try to make do with this set. If all else\n/// fails, [open an\n/// issue](https://github.com/codemirror/codemirror.next) to propose a\n/// new tag, or [define](#highlight.Tag^define) a local custom tag for\n/// your use case.\n///\n/// Note that it is not obligatory to always attach the most specific\n/// tag possible to an element—if your grammar can't easily\n/// distinguish a certain type of element (such as a local variable),\n/// it is okay to style it as its more general variant (a variable).\n/// \n/// For tags that extend some parent tag, the documentation links to\n/// the parent.\nconst tags={/// A comment.\ncomment,/// A line [comment](#highlight.tags.comment).\nlineComment:t(comment),/// A block [comment](#highlight.tags.comment).\nblockComment:t(comment),/// A documentation [comment](#highlight.tags.comment).\ndocComment:t(comment),/// Any kind of identifier.\nname,/// The [name](#highlight.tags.name) of a variable.\nvariableName:t(name),/// A type [name](#highlight.tags.name).\ntypeName:typeName,/// A tag name (subtag of [`typeName`](#highlight.tags.typeName)).\ntagName:t(typeName),/// A property or field [name](#highlight.tags.name).\npropertyName:propertyName,/// An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).\nattributeName:t(propertyName),/// The [name](#highlight.tags.name) of a class.\nclassName:t(name),/// A label [name](#highlight.tags.name).\nlabelName:t(name),/// A namespace [name](#highlight.tags.name).\nnamespace:t(name),/// The [name](#highlight.tags.name) of a macro.\nmacroName:t(name),/// A literal value.\nliteral,/// A string [literal](#highlight.tags.literal).\nstring,/// A documentation [string](#highlight.tags.string).\ndocString:t(string),/// A character literal (subtag of [string](#highlight.tags.string)).\ncharacter:t(string),/// An attribute value (subtag of [string](#highlight.tags.string)).\nattributeValue:t(string),/// A number [literal](#highlight.tags.literal).\nnumber,/// An integer [number](#highlight.tags.number) literal.\ninteger:t(number),/// A floating-point [number](#highlight.tags.number) literal.\nfloat:t(number),/// A boolean [literal](#highlight.tags.literal).\nbool:t(literal),/// Regular expression [literal](#highlight.tags.literal).\nregexp:t(literal),/// An escape [literal](#highlight.tags.literal), for example a\n/// backslash escape in a string.\nescape:t(literal),/// A color [literal](#highlight.tags.literal).\ncolor:t(literal),/// A URL [literal](#highlight.tags.literal).\nurl:t(literal),/// A language keyword.\nkeyword,/// The [keyword](#highlight.tags.keyword) for the self or this\n/// object.\nself:t(keyword),/// The [keyword](#highlight.tags.keyword) for null.\nnull:t(keyword),/// A [keyword](#highlight.tags.keyword) denoting some atomic value.\natom:t(keyword),/// A [keyword](#highlight.tags.keyword) that represents a unit.\nunit:t(keyword),/// A modifier [keyword](#highlight.tags.keyword).\nmodifier:t(keyword),/// A [keyword](#highlight.tags.keyword) that acts as an operator.\noperatorKeyword:t(keyword),/// A control-flow related [keyword](#highlight.tags.keyword).\ncontrolKeyword:t(keyword),/// A [keyword](#highlight.tags.keyword) that defines something.\ndefinitionKeyword:t(keyword),/// A [keyword](#highlight.tags.keyword) related to defining or\n/// interfacing with modules.\nmoduleKeyword:t(keyword),/// An operator.\noperator,/// An [operator](#highlight.tags.operator) that defines something.\nderefOperator:t(operator),/// Arithmetic-related [operator](#highlight.tags.operator).\narithmeticOperator:t(operator),/// Logical [operator](#highlight.tags.operator).\nlogicOperator:t(operator),/// Bit [operator](#highlight.tags.operator).\nbitwiseOperator:t(operator),/// Comparison [operator](#highlight.tags.operator).\ncompareOperator:t(operator),/// [Operator](#highlight.tags.operator) that updates its operand.\nupdateOperator:t(operator),/// [Operator](#highlight.tags.operator) that defines something.\ndefinitionOperator:t(operator),/// Type-related [operator](#highlight.tags.operator).\ntypeOperator:t(operator),/// Control-flow [operator](#highlight.tags.operator).\ncontrolOperator:t(operator),/// Program or markup punctuation.\npunctuation,/// [Punctuation](#highlight.tags.punctuation) that separates\n/// things.\nseparator:t(punctuation),/// Bracket-style [punctuation](#highlight.tags.punctuation).\nbracket,/// Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n/// tokens).\nangleBracket:t(bracket),/// Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n/// tokens).\nsquareBracket:t(bracket),/// Parentheses (usually `(` and `)` tokens). Subtag of\n/// [bracket](#highlight.tags.bracket).\nparen:t(bracket),/// Braces (usually `{` and `}` tokens). Subtag of\n/// [bracket](#highlight.tags.bracket).\nbrace:t(bracket),/// Content, for example plain text in XML or markup documents.\ncontent,/// [Content](#highlight.tags.content) that represents a heading.\nheading,/// A level 1 [heading](#highlight.tags.heading).\nheading1:t(heading),/// A level 2 [heading](#highlight.tags.heading).\nheading2:t(heading),/// A level 3 [heading](#highlight.tags.heading).\nheading3:t(heading),/// A level 4 [heading](#highlight.tags.heading).\nheading4:t(heading),/// A level 5 [heading](#highlight.tags.heading).\nheading5:t(heading),/// A level 6 [heading](#highlight.tags.heading).\nheading6:t(heading),/// A prose separator (such as a horizontal rule).\ncontentSeparator:t(content),/// [Content](#highlight.tags.content) that represents a list.\nlist:t(content),/// [Content](#highlight.tags.content) that represents a quote.\nquote:t(content),/// [Content](#highlight.tags.content) that is emphasized.\nemphasis:t(content),/// [Content](#highlight.tags.content) that is styled strong.\nstrong:t(content),/// [Content](#highlight.tags.content) that is part of a link.\nlink:t(content),/// [Content](#highlight.tags.content) that is styled as code or\n/// monospace.\nmonospace:t(content),/// [Content](#highlight.tags.content) that has a strike-through\n/// style.\nstrikethrough:t(content),/// Inserted text in a change-tracking format.\ninserted:t(),/// Deleted text.\ndeleted:t(),/// Changed text.\nchanged:t(),/// An invalid or unsyntactic element.\ninvalid:t(),/// Metadata or meta-instruction.\nmeta,/// [Metadata](#highlight.tags.meta) that applies to the entire\n/// document.\ndocumentMeta:t(meta),/// [Metadata](#highlight.tags.meta) that annotates or adds\n/// attributes to a given syntactic element.\nannotation:t(meta),/// Processing instruction or preprocessor directive. Subtag of\n/// [meta](#highlight.tags.meta).\nprocessingInstruction:t(meta),/// [Modifier](#highlight.Tag^defineModifier) that indicates that a\n/// given element is being defined. Expected to be used with the\n/// various [name](#highlight.tags.name) tags.\ndefinition:Tag.defineModifier(),/// [Modifier](#highlight.Tag^defineModifier) that indicates that\n/// something is constant. Mostly expected to be used with\n/// [variable names](#highlight.tags.variableName).\nconstant:Tag.defineModifier(),/// [Modifier](#highlight.Tag^defineModifier) used to indicate that\n/// a [variable](#highlight.tags.variableName) or [property\n/// name](#highlight.tags.propertyName) is being called or defined\n/// as a function.\nfunction:Tag.defineModifier(),/// [Modifier](#highlight.Tag^defineModifier) that can be applied to\n/// [names](#highlight.tags.name) to indicate that they belong to\n/// the language's standard environment.\nstandard:Tag.defineModifier(),/// [Modifier](#highlight.Tag^defineModifier) that indicates a given\n/// [names](#highlight.tags.name) is local to some scope.\nlocal:Tag.defineModifier(),/// A generic variant [modifier](#highlight.Tag^defineModifier) that\n/// can be used to tag language-specific alternative variants of\n/// some common tag. It is recommended for themes to define special\n/// forms of at least the [string](#highlight.tags.string) and\n/// [variable name](#highlight.tags.variableName) tags, since those\n/// come up a lot.\nspecial:Tag.defineModifier()};/// This is a highlighter that adds stable, predictable classes to\n/// tokens, for styling with external CSS.\n///\n/// The following tags are mapped to their name prefixed with `\"tok-\"`\n/// (for example `\"tok-comment\"`):\n///\n/// * [`link`](#highlight.tags.link)\n/// * [`heading`](#highlight.tags.heading)\n/// * [`emphasis`](#highlight.tags.emphasis)\n/// * [`strong`](#highlight.tags.strong)\n/// * [`keyword`](#highlight.tags.keyword)\n/// * [`atom`](#highlight.tags.atom)\n/// * [`bool`](#highlight.tags.bool)\n/// * [`url`](#highlight.tags.url)\n/// * [`labelName`](#highlight.tags.labelName)\n/// * [`inserted`](#highlight.tags.inserted)\n/// * [`deleted`](#highlight.tags.deleted)\n/// * [`literal`](#highlight.tags.literal)\n/// * [`string`](#highlight.tags.string)\n/// * [`number`](#highlight.tags.number)\n/// * [`variableName`](#highlight.tags.variableName)\n/// * [`typeName`](#highlight.tags.typeName)\n/// * [`namespace`](#highlight.tags.namespace)\n/// * [`className`](#highlight.tags.className)\n/// * [`macroName`](#highlight.tags.macroName)\n/// * [`propertyName`](#highlight.tags.propertyName)\n/// * [`operator`](#highlight.tags.operator)\n/// * [`comment`](#highlight.tags.comment)\n/// * [`meta`](#highlight.tags.meta)\n/// * [`punctuation`](#highlight.tags.punctuation)\n/// * [`invalid`](#highlight.tags.invalid)\n///\n/// In addition, these mappings are provided:\n///\n/// * [`regexp`](#highlight.tags.regexp),\n///   [`escape`](#highlight.tags.escape), and\n///   [`special`](#highlight.tags.special)[`(string)`](#highlight.tags.string)\n///   are mapped to `\"tok-string2\"`\n/// * [`special`](#highlight.tags.special)[`(variableName)`](#highlight.tags.variableName)\n///   to `\"tok-variableName2\"`\n/// * [`local`](#highlight.tags.local)[`(variableName)`](#highlight.tags.variableName)\n///   to `\"tok-variableName tok-local\"`\n/// * [`definition`](#highlight.tags.definition)[`(variableName)`](#highlight.tags.variableName)\n///   to `\"tok-variableName tok-definition\"`\n/// * [`definition`](#highlight.tags.definition)[`(propertyName)`](#highlight.tags.propertyName)\n///   to `\"tok-propertyName tok-definition\"`\ntagHighlighter([{tag:tags.link,class:\"tok-link\"},{tag:tags.heading,class:\"tok-heading\"},{tag:tags.emphasis,class:\"tok-emphasis\"},{tag:tags.strong,class:\"tok-strong\"},{tag:tags.keyword,class:\"tok-keyword\"},{tag:tags.atom,class:\"tok-atom\"},{tag:tags.bool,class:\"tok-bool\"},{tag:tags.url,class:\"tok-url\"},{tag:tags.labelName,class:\"tok-labelName\"},{tag:tags.inserted,class:\"tok-inserted\"},{tag:tags.deleted,class:\"tok-deleted\"},{tag:tags.literal,class:\"tok-literal\"},{tag:tags.string,class:\"tok-string\"},{tag:tags.number,class:\"tok-number\"},{tag:[tags.regexp,tags.escape,tags.special(tags.string)],class:\"tok-string2\"},{tag:tags.variableName,class:\"tok-variableName\"},{tag:tags.local(tags.variableName),class:\"tok-variableName tok-local\"},{tag:tags.definition(tags.variableName),class:\"tok-variableName tok-definition\"},{tag:tags.special(tags.variableName),class:\"tok-variableName2\"},{tag:tags.definition(tags.propertyName),class:\"tok-propertyName tok-definition\"},{tag:tags.typeName,class:\"tok-typeName\"},{tag:tags.namespace,class:\"tok-namespace\"},{tag:tags.className,class:\"tok-className\"},{tag:tags.macroName,class:\"tok-macroName\"},{tag:tags.propertyName,class:\"tok-propertyName\"},{tag:tags.operator,class:\"tok-operator\"},{tag:tags.comment,class:\"tok-comment\"},{tag:tags.meta,class:\"tok-meta\"},{tag:tags.invalid,class:\"tok-invalid\"},{tag:tags.punctuation,class:\"tok-punctuation\"}]);var _a;/**\nNode prop stored in a parser's top syntax node to provide the\nfacet that stores language-specific data for that language.\n*/const languageDataProp=/*@__PURE__*/new NodeProp$1();/**\nHelper function to define a facet (to be added to the top syntax\nnode(s) for a language via\n[`languageDataProp`](https://codemirror.net/6/docs/ref/#language.languageDataProp)), that will be\nused to associate language data with the language. You\nprobably only need this when subclassing\n[`Language`](https://codemirror.net/6/docs/ref/#language.Language).\n*/function defineLanguageFacet(baseData){return Facet.define({combine:baseData?values=>values.concat(baseData):undefined});}/**\nA language object manages parsing and per-language\n[metadata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt). Parse data is\nmanaged as a [Lezer](https://lezer.codemirror.net) tree. The class\ncan be used directly, via the [`LRLanguage`](https://codemirror.net/6/docs/ref/#language.LRLanguage)\nsubclass for [Lezer](https://lezer.codemirror.net/) LR parsers, or\nvia the [`StreamLanguage`](https://codemirror.net/6/docs/ref/#language.StreamLanguage) subclass\nfor stream parsers.\n*/class Language{/**\n    Construct a language object. If you need to invoke this\n    directly, first define a data facet with\n    [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then\n    configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it\n    to the language's outer syntax node.\n    */constructor(/**\n    The [language data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) facet\n    used for this language.\n    */data,parser,extraExtensions=[]){this.data=data;// Kludge to define EditorState.tree as a debugging helper,\n// without the EditorState package actually knowing about\n// languages and lezer trees.\nif(!EditorState.prototype.hasOwnProperty(\"tree\"))Object.defineProperty(EditorState.prototype,\"tree\",{get(){return syntaxTree(this);}});this.parser=parser;this.extension=[language$1.of(this),EditorState.languageData.of((state,pos,side)=>state.facet(languageDataFacetAt(state,pos,side)))].concat(extraExtensions);}/**\n    Query whether this language is active at the given position.\n    */isActiveAt(state,pos,side=-1){return languageDataFacetAt(state,pos,side)==this.data;}/**\n    Find the document regions that were parsed using this language.\n    The returned regions will _include_ any nested languages rooted\n    in this language, when those exist.\n    */findRegions(state){let lang=state.facet(language$1);if((lang===null||lang===void 0?void 0:lang.data)==this.data)return [{from:0,to:state.doc.length}];if(!lang||!lang.allowsNesting)return [];let result=[];let explore=(tree,from)=>{if(tree.prop(languageDataProp)==this.data){result.push({from,to:from+tree.length});return;}let mount=tree.prop(NodeProp$1.mounted);if(mount){if(mount.tree.prop(languageDataProp)==this.data){if(mount.overlay)for(let r of mount.overlay)result.push({from:r.from+from,to:r.to+from});else result.push({from:from,to:from+tree.length});return;}else if(mount.overlay){let size=result.length;explore(mount.tree,mount.overlay[0].from+from);if(result.length>size)return;}}for(let i=0;i<tree.children.length;i++){let ch=tree.children[i];if(ch instanceof Tree$1)explore(ch,tree.positions[i]+from);}};explore(syntaxTree(state),0);return result;}/**\n    Indicates whether this language allows nested languages. The\n    default implementation returns true.\n    */get allowsNesting(){return true;}}/**\n@internal\n*/Language.setState=/*@__PURE__*/StateEffect.define();function languageDataFacetAt(state,pos,side){let topLang=state.facet(language$1);if(!topLang)return null;let facet=topLang.data;if(topLang.allowsNesting){for(let node=syntaxTree(state).topNode;node;node=node.enter(pos,side,IterMode$1.ExcludeBuffers))facet=node.type.prop(languageDataProp)||facet;}return facet;}/**\nA subclass of [`Language`](https://codemirror.net/6/docs/ref/#language.Language) for use with Lezer\n[LR parsers](https://lezer.codemirror.net/docs/ref#lr.LRParser)\nparsers.\n*/class LRLanguage extends Language{constructor(data,parser){super(data,parser);this.parser=parser;}/**\n    Define a language from a parser.\n    */static define(spec){let data=defineLanguageFacet(spec.languageData);return new LRLanguage(data,spec.parser.configure({props:[languageDataProp.add(type=>type.isTop?data:undefined)]}));}/**\n    Create a new instance of this language with a reconfigured\n    version of its parser.\n    */configure(options){return new LRLanguage(this.data,this.parser.configure(options));}get allowsNesting(){return this.parser.hasWrappers();}}/**\nGet the syntax tree for a state, which is the current (possibly\nincomplete) parse tree of the active\n[language](https://codemirror.net/6/docs/ref/#language.Language), or the empty tree if there is no\nlanguage available.\n*/function syntaxTree(state){let field=state.field(Language.state,false);return field?field.tree:Tree$1.empty;}// Lezer-style Input object for a Text document.\nclass DocInput{constructor(doc,length=doc.length){this.doc=doc;this.length=length;this.cursorPos=0;this.string=\"\";this.cursor=doc.iter();}syncTo(pos){this.string=this.cursor.next(pos-this.cursorPos).value;this.cursorPos=pos+this.string.length;return this.cursorPos-this.string.length;}chunk(pos){this.syncTo(pos);return this.string;}get lineChunks(){return true;}read(from,to){let stringStart=this.cursorPos-this.string.length;if(from<stringStart||to>=this.cursorPos)return this.doc.sliceString(from,to);else return this.string.slice(from-stringStart,to-stringStart);}}let currentContext=null;/**\nA parse context provided to parsers working on the editor content.\n*/class ParseContext{constructor(parser,/**\n    The current editor state.\n    */state,/**\n    Tree fragments that can be reused by incremental re-parses.\n    */fragments=[],/**\n    @internal\n    */tree,/**\n    @internal\n    */treeLen,/**\n    The current editor viewport (or some overapproximation\n    thereof). Intended to be used for opportunistically avoiding\n    work (in which case\n    [`skipUntilInView`](https://codemirror.net/6/docs/ref/#language.ParseContext.skipUntilInView)\n    should be called to make sure the parser is restarted when the\n    skipped region becomes visible).\n    */viewport,/**\n    @internal\n    */skipped,/**\n    This is where skipping parsers can register a promise that,\n    when resolved, will schedule a new parse. It is cleared when\n    the parse worker picks up the promise. @internal\n    */scheduleOn){this.parser=parser;this.state=state;this.fragments=fragments;this.tree=tree;this.treeLen=treeLen;this.viewport=viewport;this.skipped=skipped;this.scheduleOn=scheduleOn;this.parse=null;/**\n        @internal\n        */this.tempSkipped=[];}/**\n    @internal\n    */static create(parser,state,viewport){return new ParseContext(parser,state,[],Tree$1.empty,0,viewport,[],null);}startParse(){return this.parser.startParse(new DocInput(this.state.doc),this.fragments);}/**\n    @internal\n    */work(until,upto){if(upto!=null&&upto>=this.state.doc.length)upto=undefined;if(this.tree!=Tree$1.empty&&this.isDone(upto!==null&&upto!==void 0?upto:this.state.doc.length)){this.takeTree();return true;}return this.withContext(()=>{var _a;if(typeof until==\"number\"){let endTime=Date.now()+until;until=()=>Date.now()>endTime;}if(!this.parse)this.parse=this.startParse();if(upto!=null&&(this.parse.stoppedAt==null||this.parse.stoppedAt>upto)&&upto<this.state.doc.length)this.parse.stopAt(upto);for(;;){let done=this.parse.advance();if(done){this.fragments=this.withoutTempSkipped(TreeFragment.addTree(done,this.fragments,this.parse.stoppedAt!=null));this.treeLen=(_a=this.parse.stoppedAt)!==null&&_a!==void 0?_a:this.state.doc.length;this.tree=done;this.parse=null;if(this.treeLen<(upto!==null&&upto!==void 0?upto:this.state.doc.length))this.parse=this.startParse();else return true;}if(until())return false;}});}/**\n    @internal\n    */takeTree(){let pos,tree;if(this.parse&&(pos=this.parse.parsedPos)>=this.treeLen){if(this.parse.stoppedAt==null||this.parse.stoppedAt>pos)this.parse.stopAt(pos);this.withContext(()=>{while(!(tree=this.parse.advance())){}});this.treeLen=pos;this.tree=tree;this.fragments=this.withoutTempSkipped(TreeFragment.addTree(this.tree,this.fragments,true));this.parse=null;}}withContext(f){let prev=currentContext;currentContext=this;try{return f();}finally{currentContext=prev;}}withoutTempSkipped(fragments){for(let r;r=this.tempSkipped.pop();)fragments=cutFragments(fragments,r.from,r.to);return fragments;}/**\n    @internal\n    */changes(changes,newState){let{fragments,tree,treeLen,viewport,skipped}=this;this.takeTree();if(!changes.empty){let ranges=[];changes.iterChangedRanges((fromA,toA,fromB,toB)=>ranges.push({fromA,toA,fromB,toB}));fragments=TreeFragment.applyChanges(fragments,ranges);tree=Tree$1.empty;treeLen=0;viewport={from:changes.mapPos(viewport.from,-1),to:changes.mapPos(viewport.to,1)};if(this.skipped.length){skipped=[];for(let r of this.skipped){let from=changes.mapPos(r.from,1),to=changes.mapPos(r.to,-1);if(from<to)skipped.push({from,to});}}}return new ParseContext(this.parser,newState,fragments,tree,treeLen,viewport,skipped,this.scheduleOn);}/**\n    @internal\n    */updateViewport(viewport){if(this.viewport.from==viewport.from&&this.viewport.to==viewport.to)return false;this.viewport=viewport;let startLen=this.skipped.length;for(let i=0;i<this.skipped.length;i++){let{from,to}=this.skipped[i];if(from<viewport.to&&to>viewport.from){this.fragments=cutFragments(this.fragments,from,to);this.skipped.splice(i--,1);}}if(this.skipped.length>=startLen)return false;this.reset();return true;}/**\n    @internal\n    */reset(){if(this.parse){this.takeTree();this.parse=null;}}/**\n    Notify the parse scheduler that the given region was skipped\n    because it wasn't in view, and the parse should be restarted\n    when it comes into view.\n    */skipUntilInView(from,to){this.skipped.push({from,to});}/**\n    Returns a parser intended to be used as placeholder when\n    asynchronously loading a nested parser. It'll skip its input and\n    mark it as not-really-parsed, so that the next update will parse\n    it again.\n    \n    When `until` is given, a reparse will be scheduled when that\n    promise resolves.\n    */static getSkippingParser(until){return new class extends Parser$1{createParse(input,fragments,ranges){let from=ranges[0].from,to=ranges[ranges.length-1].to;let parser={parsedPos:from,advance(){let cx=currentContext;if(cx){for(let r of ranges)cx.tempSkipped.push(r);if(until)cx.scheduleOn=cx.scheduleOn?Promise.all([cx.scheduleOn,until]):until;}this.parsedPos=to;return new Tree$1(NodeType$1.none,[],[],to-from);},stoppedAt:null,stopAt(){}};return parser;}}();}/**\n    @internal\n    */isDone(upto){upto=Math.min(upto,this.state.doc.length);let frags=this.fragments;return this.treeLen>=upto&&frags.length&&frags[0].from==0&&frags[0].to>=upto;}/**\n    Get the context for the current parse, or `null` if no editor\n    parse is in progress.\n    */static get(){return currentContext;}}function cutFragments(fragments,from,to){return TreeFragment.applyChanges(fragments,[{fromA:from,toA:to,fromB:from,toB:to}]);}class LanguageState{constructor(// A mutable parse state that is used to preserve work done during\n// the lifetime of a state when moving to the next state.\ncontext){this.context=context;this.tree=context.tree;}apply(tr){if(!tr.docChanged&&this.tree==this.context.tree)return this;let newCx=this.context.changes(tr.changes,tr.state);// If the previous parse wasn't done, go forward only up to its\n// end position or the end of the viewport, to avoid slowing down\n// state updates with parse work beyond the viewport.\nlet upto=this.context.treeLen==tr.startState.doc.length?undefined:Math.max(tr.changes.mapPos(this.context.treeLen),newCx.viewport.to);if(!newCx.work(20/* Apply */,upto))newCx.takeTree();return new LanguageState(newCx);}static init(state){let vpTo=Math.min(3000/* InitViewport */,state.doc.length);let parseState=ParseContext.create(state.facet(language$1).parser,state,{from:0,to:vpTo});if(!parseState.work(20/* Apply */,vpTo))parseState.takeTree();return new LanguageState(parseState);}}Language.state=/*@__PURE__*/StateField.define({create:LanguageState.init,update(value,tr){for(let e of tr.effects)if(e.is(Language.setState))return e.value;if(tr.startState.facet(language$1)!=tr.state.facet(language$1))return LanguageState.init(tr.state);return value.apply(tr);}});let requestIdle=callback=>{let timeout=setTimeout(()=>callback(),500/* MaxPause */);return ()=>clearTimeout(timeout);};if(typeof requestIdleCallback!=\"undefined\")requestIdle=callback=>{let idle=-1,timeout=setTimeout(()=>{idle=requestIdleCallback(callback,{timeout:500/* MaxPause */-100/* MinPause */});},100/* MinPause */);return ()=>idle<0?clearTimeout(timeout):cancelIdleCallback(idle);};const isInputPending=typeof navigator!=\"undefined\"&&((_a=navigator.scheduling)===null||_a===void 0?void 0:_a.isInputPending)?()=>navigator.scheduling.isInputPending():null;const parseWorker=/*@__PURE__*/ViewPlugin.fromClass(class ParseWorker{constructor(view){this.view=view;this.working=null;this.workScheduled=0;// End of the current time chunk\nthis.chunkEnd=-1;// Milliseconds of budget left for this chunk\nthis.chunkBudget=-1;this.work=this.work.bind(this);this.scheduleWork();}update(update){let cx=this.view.state.field(Language.state).context;if(cx.updateViewport(update.view.viewport)||this.view.viewport.to>cx.treeLen)this.scheduleWork();if(update.docChanged){if(this.view.hasFocus)this.chunkBudget+=50/* ChangeBonus */;this.scheduleWork();}this.checkAsyncSchedule(cx);}scheduleWork(){if(this.working)return;let{state}=this.view,field=state.field(Language.state);if(field.tree!=field.context.tree||!field.context.isDone(state.doc.length))this.working=requestIdle(this.work);}work(deadline){this.working=null;let now=Date.now();if(this.chunkEnd<now&&(this.chunkEnd<0||this.view.hasFocus)){// Start a new chunk\nthis.chunkEnd=now+30000/* ChunkTime */;this.chunkBudget=3000/* ChunkBudget */;}if(this.chunkBudget<=0)return;// No more budget\nlet{state,viewport:{to:vpTo}}=this.view,field=state.field(Language.state);if(field.tree==field.context.tree&&field.context.isDone(vpTo+100000/* MaxParseAhead */))return;let endTime=Date.now()+Math.min(this.chunkBudget,100/* Slice */,deadline&&!isInputPending?Math.max(25/* MinSlice */,deadline.timeRemaining()-5):1e9);let viewportFirst=field.context.treeLen<vpTo&&state.doc.length>vpTo+1000;let done=field.context.work(()=>{return isInputPending&&isInputPending()||Date.now()>endTime;},vpTo+(viewportFirst?0:100000/* MaxParseAhead */));this.chunkBudget-=Date.now()-now;if(done||this.chunkBudget<=0){field.context.takeTree();this.view.dispatch({effects:Language.setState.of(new LanguageState(field.context))});}if(this.chunkBudget>0&&!(done&&!viewportFirst))this.scheduleWork();this.checkAsyncSchedule(field.context);}checkAsyncSchedule(cx){if(cx.scheduleOn){this.workScheduled++;cx.scheduleOn.then(()=>this.scheduleWork()).catch(err=>logException(this.view.state,err)).then(()=>this.workScheduled--);cx.scheduleOn=null;}}destroy(){if(this.working)this.working();}isWorking(){return !!(this.working||this.workScheduled>0);}},{eventHandlers:{focus(){this.scheduleWork();}}});/**\nThe facet used to associate a language with an editor state.\n*/const language$1=/*@__PURE__*/Facet.define({combine(languages){return languages.length?languages[0]:null;},enables:[Language.state,parseWorker]});/**\nThis class bundles a [language](https://codemirror.net/6/docs/ref/#language.Language) with an\noptional set of supporting extensions. Language packages are\nencouraged to export a function that optionally takes a\nconfiguration object and returns a `LanguageSupport` instance, as\nthe main way for client code to use the package.\n*/class LanguageSupport{/**\n    Create a language support object.\n    */constructor(/**\n    The language object.\n    */language,/**\n    An optional set of supporting extensions. When nesting a\n    language in another language, the outer language is encouraged\n    to include the supporting extensions for its inner languages\n    in its own set of support extensions.\n    */support=[]){this.language=language;this.support=support;this.extension=[language,support];}}/**\nFacet that defines a way to provide a function that computes the\nappropriate indentation depth at the start of a given line, or\n`null` to indicate no appropriate indentation could be determined.\n*/const indentService=/*@__PURE__*/Facet.define();/**\nFacet for overriding the unit by which indentation happens.\nShould be a string consisting either entirely of spaces or\nentirely of tabs. When not set, this defaults to 2 spaces.\n*/const indentUnit=/*@__PURE__*/Facet.define({combine:values=>{if(!values.length)return \"  \";if(!/^(?: +|\\t+)$/.test(values[0]))throw new Error(\"Invalid indent unit: \"+JSON.stringify(values[0]));return values[0];}});/**\nReturn the _column width_ of an indent unit in the state.\nDetermined by the [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit)\nfacet, and [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) when that\ncontains tabs.\n*/function getIndentUnit(state){let unit=state.facet(indentUnit);return unit.charCodeAt(0)==9?state.tabSize*unit.length:unit.length;}/**\nCreate an indentation string that covers columns 0 to `cols`.\nWill use tabs for as much of the columns as possible when the\n[`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit) facet contains\ntabs.\n*/function indentString(state,cols){let result=\"\",ts=state.tabSize;if(state.facet(indentUnit).charCodeAt(0)==9)while(cols>=ts){result+=\"\\t\";cols-=ts;}for(let i=0;i<cols;i++)result+=\" \";return result;}/**\nGet the indentation at the given position. Will first consult any\n[indent services](https://codemirror.net/6/docs/ref/#language.indentService) that are registered,\nand if none of those return an indentation, this will check the\nsyntax tree for the [indent node prop](https://codemirror.net/6/docs/ref/#language.indentNodeProp)\nand use that if found. Returns a number when an indentation could\nbe determined, and null otherwise.\n*/function getIndentation(context,pos){if(context instanceof EditorState)context=new IndentContext(context);for(let service of context.state.facet(indentService)){let result=service(context,pos);if(result!=null)return result;}let tree=syntaxTree(context.state);return tree?syntaxIndentation(context,tree,pos):null;}/**\nIndentation contexts are used when calling [indentation\nservices](https://codemirror.net/6/docs/ref/#language.indentService). They provide helper utilities\nuseful in indentation logic, and can selectively override the\nindentation reported for some lines.\n*/class IndentContext{/**\n    Create an indent context.\n    */constructor(/**\n    The editor state.\n    */state,/**\n    @internal\n    */options={}){this.state=state;this.options=options;this.unit=getIndentUnit(state);}/**\n    Get a description of the line at the given position, taking\n    [simulated line\n    breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    into account. If there is such a break at `pos`, the `bias`\n    argument determines whether the part of the line line before or\n    after the break is used.\n    */lineAt(pos,bias=1){let line=this.state.doc.lineAt(pos);let{simulateBreak,simulateDoubleBreak}=this.options;if(simulateBreak!=null&&simulateBreak>=line.from&&simulateBreak<=line.to){if(simulateDoubleBreak&&simulateBreak==pos)return {text:\"\",from:pos};else if(bias<0?simulateBreak<pos:simulateBreak<=pos)return {text:line.text.slice(simulateBreak-line.from),from:simulateBreak};else return {text:line.text.slice(0,simulateBreak-line.from),from:line.from};}return line;}/**\n    Get the text directly after `pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */textAfterPos(pos,bias=1){if(this.options.simulateDoubleBreak&&pos==this.options.simulateBreak)return \"\";let{text,from}=this.lineAt(pos,bias);return text.slice(pos-from,Math.min(text.length,pos+100-from));}/**\n    Find the column for the given position.\n    */column(pos,bias=1){let{text,from}=this.lineAt(pos,bias);let result=this.countColumn(text,pos-from);let override=this.options.overrideIndentation?this.options.overrideIndentation(from):-1;if(override>-1)result+=override-this.countColumn(text,text.search(/\\S|$/));return result;}/**\n    Find the column position (taking tabs into account) of the given\n    position in the given string.\n    */countColumn(line,pos=line.length){return countColumn(line,this.state.tabSize,pos);}/**\n    Find the indentation column of the line at the given point.\n    */lineIndent(pos,bias=1){let{text,from}=this.lineAt(pos,bias);let override=this.options.overrideIndentation;if(override){let overriden=override(from);if(overriden>-1)return overriden;}return this.countColumn(text,text.search(/\\S|$/));}/**\n    Returns the [simulated line\n    break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    for this context, if any.\n    */get simulatedBreak(){return this.options.simulateBreak||null;}}/**\nA syntax tree node prop used to associate indentation strategies\nwith node types. Such a strategy is a function from an indentation\ncontext to a column number or null, where null indicates that no\ndefinitive indentation can be determined.\n*/const indentNodeProp=/*@__PURE__*/new NodeProp$1();// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx,ast,pos){return indentFrom(ast.resolveInner(pos).enterUnfinishedNodesBefore(pos),pos,cx);}function ignoreClosed(cx){return cx.pos==cx.options.simulateBreak&&cx.options.simulateDoubleBreak;}function indentStrategy(tree){let strategy=tree.type.prop(indentNodeProp);if(strategy)return strategy;let first=tree.firstChild,close;if(first&&(close=first.type.prop(NodeProp$1.closedBy))){let last=tree.lastChild,closed=last&&close.indexOf(last.name)>-1;return cx=>delimitedStrategy(cx,true,1,undefined,closed&&!ignoreClosed(cx)?last.from:undefined);}return tree.parent==null?topIndent:null;}function indentFrom(node,pos,base){for(;node;node=node.parent){let strategy=indentStrategy(node);if(strategy)return strategy(TreeIndentContext.create(base,pos,node));}return null;}function topIndent(){return 0;}/**\nObjects of this type provide context information and helper\nmethods to indentation functions registered on syntax nodes.\n*/class TreeIndentContext extends IndentContext{constructor(base,/**\n    The position at which indentation is being computed.\n    */pos,/**\n    The syntax tree node to which the indentation strategy\n    applies.\n    */node){super(base.state,base.options);this.base=base;this.pos=pos;this.node=node;}/**\n    @internal\n    */static create(base,pos,node){return new TreeIndentContext(base,pos,node);}/**\n    Get the text directly after `this.pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */get textAfter(){return this.textAfterPos(this.pos);}/**\n    Get the indentation at the reference line for `this.node`, which\n    is the line on which it starts, unless there is a node that is\n    _not_ a parent of this node covering the start of that line. If\n    so, the line at the start of that node is tried, again skipping\n    on if it is covered by another such node.\n    */get baseIndent(){let line=this.state.doc.lineAt(this.node.from);// Skip line starts that are covered by a sibling (or cousin, etc)\nfor(;;){let atBreak=this.node.resolve(line.from);while(atBreak.parent&&atBreak.parent.from==atBreak.from)atBreak=atBreak.parent;if(isParent(atBreak,this.node))break;line=this.state.doc.lineAt(atBreak.from);}return this.lineIndent(line.from);}/**\n    Continue looking for indentations in the node's parent nodes,\n    and return the result of that.\n    */continue(){let parent=this.node.parent;return parent?indentFrom(parent,this.pos,this.base):0;}}function isParent(parent,of){for(let cur=of;cur;cur=cur.parent)if(parent==cur)return true;return false;}// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context){let tree=context.node;let openToken=tree.childAfter(tree.from),last=tree.lastChild;if(!openToken)return null;let sim=context.options.simulateBreak;let openLine=context.state.doc.lineAt(openToken.from);let lineEnd=sim==null||sim<=openLine.from?openLine.to:Math.min(openLine.to,sim);for(let pos=openToken.to;;){let next=tree.childAfter(pos);if(!next||next==last)return null;if(!next.type.isSkipped)return next.from<lineEnd?openToken:null;pos=next.to;}}function delimitedStrategy(context,align,units,closing,closedAt){let after=context.textAfter,space=after.match(/^\\s*/)[0].length;let closed=closing&&after.slice(space,space+closing.length)==closing||closedAt==context.pos+space;let aligned=align?bracketedAligned(context):null;if(aligned)return closed?context.column(aligned.from):context.column(aligned.to);return context.baseIndent+(closed?0:context.unit*units);}/**\nA highlight style associates CSS styles with higlighting\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag).\n*/class HighlightStyle{constructor(spec,options){let modSpec;function def(spec){let cls=StyleModule.newName();(modSpec||(modSpec=Object.create(null)))[\".\"+cls]=spec;return cls;}const all=typeof options.all==\"string\"?options.all:options.all?def(options.all):undefined;const scopeOpt=options.scope;this.scope=scopeOpt instanceof Language?type=>type.prop(languageDataProp)==scopeOpt.data:scopeOpt?type=>type==scopeOpt:undefined;this.style=tagHighlighter(spec.map(style=>({tag:style.tag,class:style.class||def(Object.assign({},style,{tag:null}))})),{all}).style;this.module=modSpec?new StyleModule(modSpec):null;this.themeType=options.themeType;}/**\n    Create a highlighter style that associates the given styles to\n    the given tags. The specs must be objects that hold a style tag\n    or array of tags in their `tag` property, and either a single\n    `class` property providing a static CSS class (for highlighter\n    that rely on external styling), or a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style\n    set of CSS properties (which define the styling for those tags).\n    \n    The CSS rules created for a highlighter will be emitted in the\n    order of the spec's properties. That means that for elements that\n    have multiple tags associated with them, styles defined further\n    down in the list will have a higher CSS precedence than styles\n    defined earlier.\n    */static define(specs,options){return new HighlightStyle(specs,options||{});}}const highlighterFacet=/*@__PURE__*/Facet.define();const fallbackHighlighter=/*@__PURE__*/Facet.define({combine(values){return values.length?[values[0]]:null;}});function getHighlighters(state){let main=state.facet(highlighterFacet);return main.length?main:state.facet(fallbackHighlighter);}/**\nWrap a highlighter in an editor extension that uses it to apply\nsyntax highlighting to the editor content.\n\nWhen multiple (non-fallback) styles are provided, the styling\napplied is the union of the classes they emit.\n*/function syntaxHighlighting(highlighter,options){let ext=[treeHighlighter],themeType;if(highlighter instanceof HighlightStyle){if(highlighter.module)ext.push(EditorView.styleModule.of(highlighter.module));themeType=highlighter.themeType;}if(options===null||options===void 0?void 0:options.fallback)ext.push(fallbackHighlighter.of(highlighter));else if(themeType)ext.push(highlighterFacet.computeN([EditorView.darkTheme],state=>{return state.facet(EditorView.darkTheme)==(themeType==\"dark\")?[highlighter]:[];}));else ext.push(highlighterFacet.of(highlighter));return ext;}class TreeHighlighter{constructor(view){this.markCache=Object.create(null);this.tree=syntaxTree(view.state);this.decorations=this.buildDeco(view,getHighlighters(view.state));}update(update){let tree=syntaxTree(update.state),highlighters=getHighlighters(update.state);let styleChange=highlighters!=getHighlighters(update.startState);if(tree.length<update.view.viewport.to&&!styleChange&&tree.type==this.tree.type){this.decorations=this.decorations.map(update.changes);}else if(tree!=this.tree||update.viewportChanged||styleChange){this.tree=tree;this.decorations=this.buildDeco(update.view,highlighters);}}buildDeco(view,highlighters){if(!highlighters||!this.tree.length)return Decoration.none;let builder=new RangeSetBuilder();for(let{from,to}of view.visibleRanges){highlightTree(this.tree,highlighters,(from,to,style)=>{builder.add(from,to,this.markCache[style]||(this.markCache[style]=Decoration.mark({class:style})));},from,to);}return builder.finish();}}const treeHighlighter=/*@__PURE__*/Prec.high(/*@__PURE__*/ViewPlugin.fromClass(TreeHighlighter,{decorations:v=>v.decorations}));const DefaultScanDist=10000,DefaultBrackets=\"()[]{}\";function matchingNodes(node,dir,brackets){let byProp=node.prop(dir<0?NodeProp$1.openedBy:NodeProp$1.closedBy);if(byProp)return byProp;if(node.name.length==1){let index=brackets.indexOf(node.name);if(index>-1&&index%2==(dir<0?1:0))return [brackets[index+dir]];}return null;}/**\nFind the matching bracket for the token at `pos`, scanning\ndirection `dir`. Only the `brackets` and `maxScanDistance`\nproperties are used from `config`, if given. Returns null if no\nbracket was found at `pos`, or a match result otherwise.\n*/function matchBrackets(state,pos,dir,config={}){let maxScanDistance=config.maxScanDistance||DefaultScanDist,brackets=config.brackets||DefaultBrackets;let tree=syntaxTree(state),node=tree.resolveInner(pos,dir);for(let cur=node;cur;cur=cur.parent){let matches=matchingNodes(cur.type,dir,brackets);if(matches&&cur.from<cur.to)return matchMarkedBrackets(state,pos,dir,cur,matches,brackets);}return matchPlainBrackets(state,pos,dir,tree,node.type,maxScanDistance,brackets);}function matchMarkedBrackets(_state,_pos,dir,token,matching,brackets){let parent=token.parent,firstToken={from:token.from,to:token.to};let depth=0,cursor=parent===null||parent===void 0?void 0:parent.cursor();if(cursor&&(dir<0?cursor.childBefore(token.from):cursor.childAfter(token.to)))do{if(dir<0?cursor.to<=token.from:cursor.from>=token.to){if(depth==0&&matching.indexOf(cursor.type.name)>-1&&cursor.from<cursor.to){return {start:firstToken,end:{from:cursor.from,to:cursor.to},matched:true};}else if(matchingNodes(cursor.type,dir,brackets)){depth++;}else if(matchingNodes(cursor.type,-dir,brackets)){depth--;if(depth==0)return {start:firstToken,end:cursor.from==cursor.to?undefined:{from:cursor.from,to:cursor.to},matched:false};}}}while(dir<0?cursor.prevSibling():cursor.nextSibling());return {start:firstToken,matched:false};}function matchPlainBrackets(state,pos,dir,tree,tokenType,maxScanDistance,brackets){let startCh=dir<0?state.sliceDoc(pos-1,pos):state.sliceDoc(pos,pos+1);let bracket=brackets.indexOf(startCh);if(bracket<0||bracket%2==0!=dir>0)return null;let startToken={from:dir<0?pos-1:pos,to:dir>0?pos+1:pos};let iter=state.doc.iterRange(pos,dir>0?state.doc.length:0),depth=0;for(let distance=0;!iter.next().done&&distance<=maxScanDistance;){let text=iter.value;if(dir<0)distance+=text.length;let basePos=pos+distance*dir;for(let pos=dir>0?0:text.length-1,end=dir>0?text.length:-1;pos!=end;pos+=dir){let found=brackets.indexOf(text[pos]);if(found<0||tree.resolve(basePos+pos,1).type!=tokenType)continue;if(found%2==0==dir>0){depth++;}else if(depth==1){// Closing\nreturn {start:startToken,end:{from:basePos+pos,to:basePos+pos+1},matched:found>>1==bracket>>1};}else {depth--;}}if(dir>0)distance+=text.length;}return iter.done?{start:startToken,matched:false}:null;}const noTokens=/*@__PURE__*/Object.create(null);const typeArray=[NodeType$1.none];const warned=[];const defaultTable=/*@__PURE__*/Object.create(null);for(let[legacyName,name]of [[\"variable\",\"variableName\"],[\"variable-2\",\"variableName.special\"],[\"string-2\",\"string.special\"],[\"def\",\"variableName.definition\"],[\"tag\",\"typeName\"],[\"attribute\",\"propertyName\"],[\"type\",\"typeName\"],[\"builtin\",\"variableName.standard\"],[\"qualifier\",\"modifier\"],[\"error\",\"invalid\"],[\"header\",\"heading\"],[\"property\",\"propertyName\"]])defaultTable[legacyName]=/*@__PURE__*/createTokenType(noTokens,name);function warnForPart(part,msg){if(warned.indexOf(part)>-1)return;warned.push(part);console.warn(msg);}function createTokenType(extra,tagStr){let tag=null;for(let part of tagStr.split(\".\")){let value=extra[part]||tags[part];if(!value){warnForPart(part,`Unknown highlighting tag ${part}`);}else if(typeof value==\"function\"){if(!tag)warnForPart(part,`Modifier ${part} used at start of tag`);else tag=value(tag);}else {if(tag)warnForPart(part,`Tag ${part} used as modifier`);else tag=value;}}if(!tag)return 0;let name=tagStr.replace(/ /g,\"_\"),type=NodeType$1.define({id:typeArray.length,name,props:[styleTags({[name]:tag})]});typeArray.push(type);return type.id;}// FIXME profile adding a per-Tree TreeNode cache, validating it by\n// parent pointer\n/// The default maximum length of a `TreeBuffer` node (1024).\nconst DefaultBufferLength=1024;let nextPropID=0;class Range{constructor(from,to){this.from=from;this.to=to;}}/// Each [node type](#common.NodeType) or [individual tree](#common.Tree)\n/// can have metadata associated with it in props. Instances of this\n/// class represent prop names.\nclass NodeProp{/// Create a new node prop type.\nconstructor(config={}){this.id=nextPropID++;this.perNode=!!config.perNode;this.deserialize=config.deserialize||(()=>{throw new Error(\"This node type doesn't define a deserialize function\");});}/// This is meant to be used with\n/// [`NodeSet.extend`](#common.NodeSet.extend) or\n/// [`LRParser.configure`](#lr.ParserConfig.props) to compute\n/// prop values for each node type in the set. Takes a [match\n/// object](#common.NodeType^match) or function that returns undefined\n/// if the node type doesn't get this prop, and the prop's value if\n/// it does.\nadd(match){if(this.perNode)throw new RangeError(\"Can't add per-node props to node types\");if(typeof match!=\"function\")match=NodeType.match(match);return type=>{let result=match(type);return result===undefined?null:[this,result];};}}/// Prop that is used to describe matching delimiters. For opening\n/// delimiters, this holds an array of node names (written as a\n/// space-separated string when declaring this prop in a grammar)\n/// for the node types of closing delimiters that match it.\nNodeProp.closedBy=new NodeProp({deserialize:str=>str.split(\" \")});/// The inverse of [`closedBy`](#common.NodeProp^closedBy). This is\n/// attached to closing delimiters, holding an array of node names\n/// of types of matching opening delimiters.\nNodeProp.openedBy=new NodeProp({deserialize:str=>str.split(\" \")});/// Used to assign node types to groups (for example, all node\n/// types that represent an expression could be tagged with an\n/// `\"Expression\"` group).\nNodeProp.group=new NodeProp({deserialize:str=>str.split(\" \")});/// The hash of the [context](#lr.ContextTracker.constructor)\n/// that the node was parsed in, if any. Used to limit reuse of\n/// contextual nodes.\nNodeProp.contextHash=new NodeProp({perNode:true});/// The distance beyond the end of the node that the tokenizer\n/// looked ahead for any of the tokens inside the node. (The LR\n/// parser only stores this when it is larger than 25, for\n/// efficiency reasons.)\nNodeProp.lookAhead=new NodeProp({perNode:true});/// This per-node prop is used to replace a given node, or part of a\n/// node, with another tree. This is useful to include trees from\n/// different languages.\nNodeProp.mounted=new NodeProp({perNode:true});const noProps=Object.create(null);/// Each node in a syntax tree has a node type associated with it.\nclass NodeType{/// @internal\nconstructor(/// The name of the node type. Not necessarily unique, but if the\n/// grammar was written properly, different node types with the\n/// same name within a node set should play the same semantic\n/// role.\nname,/// @internal\nprops,/// The id of this node in its set. Corresponds to the term ids\n/// used in the parser.\nid,/// @internal\nflags=0){this.name=name;this.props=props;this.id=id;this.flags=flags;}static define(spec){let props=spec.props&&spec.props.length?Object.create(null):noProps;let flags=(spec.top?1/* Top */:0)|(spec.skipped?2/* Skipped */:0)|(spec.error?4/* Error */:0)|(spec.name==null?8/* Anonymous */:0);let type=new NodeType(spec.name||\"\",props,spec.id,flags);if(spec.props)for(let src of spec.props){if(!Array.isArray(src))src=src(type);if(src){if(src[0].perNode)throw new RangeError(\"Can't store a per-node prop on a node type\");props[src[0].id]=src[1];}}return type;}/// Retrieves a node prop for this type. Will return `undefined` if\n/// the prop isn't present on this node.\nprop(prop){return this.props[prop.id];}/// True when this is the top node of a grammar.\nget isTop(){return (this.flags&1/* Top */)>0;}/// True when this node is produced by a skip rule.\nget isSkipped(){return (this.flags&2/* Skipped */)>0;}/// Indicates whether this is an error node.\nget isError(){return (this.flags&4/* Error */)>0;}/// When true, this node type doesn't correspond to a user-declared\n/// named node, for example because it is used to cache repetition.\nget isAnonymous(){return (this.flags&8/* Anonymous */)>0;}/// Returns true when this node's name or one of its\n/// [groups](#common.NodeProp^group) matches the given string.\nis(name){if(typeof name=='string'){if(this.name==name)return true;let group=this.prop(NodeProp.group);return group?group.indexOf(name)>-1:false;}return this.id==name;}/// Create a function from node types to arbitrary values by\n/// specifying an object whose property names are node or\n/// [group](#common.NodeProp^group) names. Often useful with\n/// [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n/// names, separated by spaces, in a single property name to map\n/// multiple node names to a single value.\nstatic match(map){let direct=Object.create(null);for(let prop in map)for(let name of prop.split(\" \"))direct[name]=map[prop];return node=>{for(let groups=node.prop(NodeProp.group),i=-1;i<(groups?groups.length:0);i++){let found=direct[i<0?node.name:groups[i]];if(found)return found;}};}}/// An empty dummy node type to use when no actual type is available.\nNodeType.none=new NodeType(\"\",Object.create(null),0,8/* Anonymous */);/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a numeric array. Each parser\n/// [has](#lr.LRParser.nodeSet) a node set, and [tree\n/// buffers](#common.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536) node\n/// types in it, so that the ids fit into 16-bit typed array slots.\nclass NodeSet{/// Create a set with the given types. The `id` property of each\n/// type should correspond to its position within the array.\nconstructor(/// The node types in this set, by id.\ntypes){this.types=types;for(let i=0;i<types.length;i++)if(types[i].id!=i)throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");}/// Create a copy of this set with some node properties added. The\n/// arguments to this method should be created with\n/// [`NodeProp.add`](#common.NodeProp.add).\nextend(...props){let newTypes=[];for(let type of this.types){let newProps=null;for(let source of props){let add=source(type);if(add){if(!newProps)newProps=Object.assign({},type.props);newProps[add[0].id]=add[1];}}newTypes.push(newProps?new NodeType(type.name,newProps,type.id,type.flags):type);}return new NodeSet(newTypes);}}const CachedNode=new WeakMap(),CachedInnerNode=new WeakMap();/// Options that control iteration. Can be combined with the `|`\n/// operator to enable multiple ones.\nvar IterMode;(function(IterMode){/// When enabled, iteration will only visit [`Tree`](#common.Tree)\n/// objects, not nodes packed into\n/// [`TreeBuffer`](#common.TreeBuffer)s.\nIterMode[IterMode[\"ExcludeBuffers\"]=1]=\"ExcludeBuffers\";/// Enable this to make iteration include anonymous nodes (such as\n/// the nodes that wrap repeated grammar constructs into a balanced\n/// tree).\nIterMode[IterMode[\"IncludeAnonymous\"]=2]=\"IncludeAnonymous\";/// By default, regular [mounted](#common.NodeProp^mounted) nodes\n/// replace their base node in iteration. Enable this to ignore them\n/// instead.\nIterMode[IterMode[\"IgnoreMounts\"]=4]=\"IgnoreMounts\";/// This option only applies in\n/// [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n/// library to not enter mounted overlays if one covers the given\n/// position.\nIterMode[IterMode[\"IgnoreOverlays\"]=8]=\"IgnoreOverlays\";})(IterMode||(IterMode={}));/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the [`TreeCursor`](#common.TreeCursor) or\n/// [`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\n/// a view on some part of this data structure, and can be used to\n/// move around to adjacent nodes.\nclass Tree{/// Construct a new tree. See also [`Tree.build`](#common.Tree^build).\nconstructor(/// The type of the top node.\ntype,/// This node's child nodes.\nchildren,/// The positions (offsets relative to the start of this tree) of\n/// the children.\npositions,/// The total length of this tree\nlength,/// Per-node [node props](#common.NodeProp) to associate with this node.\nprops){this.type=type;this.children=children;this.positions=positions;this.length=length;/// @internal\nthis.props=null;if(props&&props.length){this.props=Object.create(null);for(let[prop,value]of props)this.props[typeof prop==\"number\"?prop:prop.id]=value;}}/// @internal\ntoString(){let mounted=this.prop(NodeProp.mounted);if(mounted&&!mounted.overlay)return mounted.tree.toString();let children=\"\";for(let ch of this.children){let str=ch.toString();if(str){if(children)children+=\",\";children+=str;}}return !this.type.name?children:(/\\W/.test(this.type.name)&&!this.type.isError?JSON.stringify(this.type.name):this.type.name)+(children.length?\"(\"+children+\")\":\"\");}/// Get a [tree cursor](#common.TreeCursor) positioned at the top of\n/// the tree. Mode can be used to [control](#common.IterMode) which\n/// nodes the cursor visits.\ncursor(mode=0){return new TreeCursor(this.topNode,mode);}/// Get a [tree cursor](#common.TreeCursor) pointing into this tree\n/// at the given position and side (see\n/// [`moveTo`](#common.TreeCursor.moveTo).\ncursorAt(pos,side=0,mode=0){let scope=CachedNode.get(this)||this.topNode;let cursor=new TreeCursor(scope);cursor.moveTo(pos,side);CachedNode.set(this,cursor._tree);return cursor;}/// Get a [syntax node](#common.SyntaxNode) object for the top of the\n/// tree.\nget topNode(){return new TreeNode(this,0,0,null);}/// Get the [syntax node](#common.SyntaxNode) at the given position.\n/// If `side` is -1, this will move into nodes that end at the\n/// position. If 1, it'll move into nodes that start at the\n/// position. With 0, it'll only enter nodes that cover the position\n/// from both sides.\nresolve(pos,side=0){let node=resolveNode(CachedNode.get(this)||this.topNode,pos,side,false);CachedNode.set(this,node);return node;}/// Like [`resolve`](#common.Tree.resolve), but will enter\n/// [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n/// pointing into the innermost overlaid tree at the given position\n/// (with parent links going through all parent structure, including\n/// the host trees).\nresolveInner(pos,side=0){let node=resolveNode(CachedInnerNode.get(this)||this.topNode,pos,side,true);CachedInnerNode.set(this,node);return node;}/// Iterate over the tree and its children, calling `enter` for any\n/// node that touches the `from`/`to` region (if given) before\n/// running over such a node's children, and `leave` (if given) when\n/// leaving the node. When `enter` returns `false`, that node will\n/// not have its children iterated over (or `leave` called).\niterate(spec){let{enter,leave,from=0,to=this.length}=spec;for(let c=this.cursor((spec.mode||0)|IterMode.IncludeAnonymous);;){let entered=false;if(c.from<=to&&c.to>=from&&(c.type.isAnonymous||enter(c)!==false)){if(c.firstChild())continue;entered=true;}for(;;){if(entered&&leave&&!c.type.isAnonymous)leave(c);if(c.nextSibling())break;if(!c.parent())return;entered=true;}}}/// Get the value of the given [node prop](#common.NodeProp) for this\n/// node. Works with both per-node and per-type props.\nprop(prop){return !prop.perNode?this.type.prop(prop):this.props?this.props[prop.id]:undefined;}/// Returns the node's [per-node props](#common.NodeProp.perNode) in a\n/// format that can be passed to the [`Tree`](#common.Tree)\n/// constructor.\nget propValues(){let result=[];if(this.props)for(let id in this.props)result.push([+id,this.props[id]]);return result;}/// Balance the direct children of this tree, producing a copy of\n/// which may have children grouped into subtrees with type\n/// [`NodeType.none`](#common.NodeType^none).\nbalance(config={}){return this.children.length<=8/* BranchFactor */?this:balanceRange(NodeType.none,this.children,this.positions,0,this.children.length,0,this.length,(children,positions,length)=>new Tree(this.type,children,positions,length,this.propValues),config.makeTree||((children,positions,length)=>new Tree(NodeType.none,children,positions,length)));}/// Build a tree from a postfix-ordered buffer of node information,\n/// or a cursor over such a buffer.\nstatic build(data){return buildTree(data);}}/// The empty tree\nTree.empty=new Tree(NodeType.none,[],[],0);class FlatBufferCursor{constructor(buffer,index){this.buffer=buffer;this.index=index;}get id(){return this.buffer[this.index-4];}get start(){return this.buffer[this.index-3];}get end(){return this.buffer[this.index-2];}get size(){return this.buffer[this.index-1];}get pos(){return this.index;}next(){this.index-=4;}fork(){return new FlatBufferCursor(this.buffer,this.index);}}/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it)\nclass TreeBuffer{/// Create a tree buffer.\nconstructor(/// The buffer's content.\nbuffer,/// The total length of the group of nodes in the buffer.\nlength,/// The node set used in this buffer.\nset){this.buffer=buffer;this.length=length;this.set=set;}/// @internal\nget type(){return NodeType.none;}/// @internal\ntoString(){let result=[];for(let index=0;index<this.buffer.length;){result.push(this.childString(index));index=this.buffer[index+3];}return result.join(\",\");}/// @internal\nchildString(index){let id=this.buffer[index],endIndex=this.buffer[index+3];let type=this.set.types[id],result=type.name;if(/\\W/.test(result)&&!type.isError)result=JSON.stringify(result);index+=4;if(endIndex==index)return result;let children=[];while(index<endIndex){children.push(this.childString(index));index=this.buffer[index+3];}return result+\"(\"+children.join(\",\")+\")\";}/// @internal\nfindChild(startIndex,endIndex,dir,pos,side){let{buffer}=this,pick=-1;for(let i=startIndex;i!=endIndex;i=buffer[i+3]){if(checkSide(side,pos,buffer[i+1],buffer[i+2])){pick=i;if(dir>0)break;}}return pick;}/// @internal\nslice(startI,endI,from,to){let b=this.buffer;let copy=new Uint16Array(endI-startI);for(let i=startI,j=0;i<endI;){copy[j++]=b[i++];copy[j++]=b[i++]-from;copy[j++]=b[i++]-from;copy[j++]=b[i++]-startI;}return new TreeBuffer(copy,to-from,this.set);}}function checkSide(side,pos,from,to){switch(side){case-2/* Before */:return from<pos;case-1/* AtOrBefore */:return to>=pos&&from<pos;case 0/* Around */:return from<pos&&to>pos;case 1/* AtOrAfter */:return from<=pos&&to>pos;case 2/* After */:return to>pos;case 4/* DontCare */:return true;}}function enterUnfinishedNodesBefore(node,pos){let scan=node.childBefore(pos);while(scan){let last=scan.lastChild;if(!last||last.to!=scan.to)break;if(last.type.isError&&last.from==last.to){node=scan;scan=last.prevSibling;}else {scan=last;}}return node;}function resolveNode(node,pos,side,overlays){var _a;// Move up to a node that actually holds the position, if possible\nwhile(node.from==node.to||(side<1?node.from>=pos:node.from>pos)||(side>-1?node.to<=pos:node.to<pos)){let parent=!overlays&&node instanceof TreeNode&&node.index<0?null:node.parent;if(!parent)return node;node=parent;}let mode=overlays?0:IterMode.IgnoreOverlays;// Must go up out of overlays when those do not overlap with pos\nif(overlays)for(let scan=node,parent=scan.parent;parent;scan=parent,parent=scan.parent){if(scan instanceof TreeNode&&scan.index<0&&((_a=parent.enter(pos,side,mode))===null||_a===void 0?void 0:_a.from)!=scan.from)node=parent;}for(;;){let inner=node.enter(pos,side,mode);if(!inner)return node;node=inner;}}class TreeNode{constructor(_tree,from,// Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\nindex,_parent){this._tree=_tree;this.from=from;this.index=index;this._parent=_parent;}get type(){return this._tree.type;}get name(){return this._tree.type.name;}get to(){return this.from+this._tree.length;}nextChild(i,dir,pos,side,mode=0){for(let parent=this;;){for(let{children,positions}=parent._tree,e=dir>0?children.length:-1;i!=e;i+=dir){let next=children[i],start=positions[i]+parent.from;if(!checkSide(side,pos,start,start+next.length))continue;if(next instanceof TreeBuffer){if(mode&IterMode.ExcludeBuffers)continue;let index=next.findChild(0,next.buffer.length,dir,pos-start,side);if(index>-1)return new BufferNode(new BufferContext(parent,next,i,start),null,index);}else if(mode&IterMode.IncludeAnonymous||!next.type.isAnonymous||hasChild(next)){let mounted;if(!(mode&IterMode.IgnoreMounts)&&next.props&&(mounted=next.prop(NodeProp.mounted))&&!mounted.overlay)return new TreeNode(mounted.tree,start,i,parent);let inner=new TreeNode(next,start,i,parent);return mode&IterMode.IncludeAnonymous||!inner.type.isAnonymous?inner:inner.nextChild(dir<0?next.children.length-1:0,dir,pos,side);}}if(mode&IterMode.IncludeAnonymous||!parent.type.isAnonymous)return null;if(parent.index>=0)i=parent.index+dir;else i=dir<0?-1:parent._parent._tree.children.length;parent=parent._parent;if(!parent)return null;}}get firstChild(){return this.nextChild(0,1,0,4/* DontCare */);}get lastChild(){return this.nextChild(this._tree.children.length-1,-1,0,4/* DontCare */);}childAfter(pos){return this.nextChild(0,1,pos,2/* After */);}childBefore(pos){return this.nextChild(this._tree.children.length-1,-1,pos,-2/* Before */);}enter(pos,side,mode=0){let mounted;if(!(mode&IterMode.IgnoreOverlays)&&(mounted=this._tree.prop(NodeProp.mounted))&&mounted.overlay){let rPos=pos-this.from;for(let{from,to}of mounted.overlay){if((side>0?from<=rPos:from<rPos)&&(side<0?to>=rPos:to>rPos))return new TreeNode(mounted.tree,mounted.overlay[0].from+this.from,-1,this);}}return this.nextChild(0,1,pos,side,mode);}nextSignificantParent(){let val=this;while(val.type.isAnonymous&&val._parent)val=val._parent;return val;}get parent(){return this._parent?this._parent.nextSignificantParent():null;}get nextSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index+1,1,0,4/* DontCare */):null;}get prevSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index-1,-1,0,4/* DontCare */):null;}cursor(mode=0){return new TreeCursor(this,mode);}get tree(){return this._tree;}toTree(){return this._tree;}resolve(pos,side=0){return resolveNode(this,pos,side,false);}resolveInner(pos,side=0){return resolveNode(this,pos,side,true);}enterUnfinishedNodesBefore(pos){return enterUnfinishedNodesBefore(this,pos);}getChild(type,before=null,after=null){let r=getChildren(this,type,before,after);return r.length?r[0]:null;}getChildren(type,before=null,after=null){return getChildren(this,type,before,after);}/// @internal\ntoString(){return this._tree.toString();}get node(){return this;}matchContext(context){return matchNodeContext(this,context);}}function getChildren(node,type,before,after){let cur=node.cursor(),result=[];if(!cur.firstChild())return result;if(before!=null)while(!cur.type.is(before))if(!cur.nextSibling())return result;for(;;){if(after!=null&&cur.type.is(after))return result;if(cur.type.is(type))result.push(cur.node);if(!cur.nextSibling())return after==null?result:[];}}function matchNodeContext(node,context,i=context.length-1){for(let p=node.parent;i>=0;p=p.parent){if(!p)return false;if(!p.type.isAnonymous){if(context[i]&&context[i]!=p.name)return false;i--;}}return true;}class BufferContext{constructor(parent,buffer,index,start){this.parent=parent;this.buffer=buffer;this.index=index;this.start=start;}}class BufferNode{constructor(context,_parent,index){this.context=context;this._parent=_parent;this.index=index;this.type=context.buffer.set.types[context.buffer.buffer[index]];}get name(){return this.type.name;}get from(){return this.context.start+this.context.buffer.buffer[this.index+1];}get to(){return this.context.start+this.context.buffer.buffer[this.index+2];}child(dir,pos,side){let{buffer}=this.context;let index=buffer.findChild(this.index+4,buffer.buffer[this.index+3],dir,pos-this.context.start,side);return index<0?null:new BufferNode(this.context,this,index);}get firstChild(){return this.child(1,0,4/* DontCare */);}get lastChild(){return this.child(-1,0,4/* DontCare */);}childAfter(pos){return this.child(1,pos,2/* After */);}childBefore(pos){return this.child(-1,pos,-2/* Before */);}enter(pos,side,mode=0){if(mode&IterMode.ExcludeBuffers)return null;let{buffer}=this.context;let index=buffer.findChild(this.index+4,buffer.buffer[this.index+3],side>0?1:-1,pos-this.context.start,side);return index<0?null:new BufferNode(this.context,this,index);}get parent(){return this._parent||this.context.parent.nextSignificantParent();}externalSibling(dir){return this._parent?null:this.context.parent.nextChild(this.context.index+dir,dir,0,4/* DontCare */);}get nextSibling(){let{buffer}=this.context;let after=buffer.buffer[this.index+3];if(after<(this._parent?buffer.buffer[this._parent.index+3]:buffer.buffer.length))return new BufferNode(this.context,this._parent,after);return this.externalSibling(1);}get prevSibling(){let{buffer}=this.context;let parentStart=this._parent?this._parent.index+4:0;if(this.index==parentStart)return this.externalSibling(-1);return new BufferNode(this.context,this._parent,buffer.findChild(parentStart,this.index,-1,0,4/* DontCare */));}cursor(mode=0){return new TreeCursor(this,mode);}get tree(){return null;}toTree(){let children=[],positions=[];let{buffer}=this.context;let startI=this.index+4,endI=buffer.buffer[this.index+3];if(endI>startI){let from=buffer.buffer[this.index+1],to=buffer.buffer[this.index+2];children.push(buffer.slice(startI,endI,from,to));positions.push(0);}return new Tree(this.type,children,positions,this.to-this.from);}resolve(pos,side=0){return resolveNode(this,pos,side,false);}resolveInner(pos,side=0){return resolveNode(this,pos,side,true);}enterUnfinishedNodesBefore(pos){return enterUnfinishedNodesBefore(this,pos);}/// @internal\ntoString(){return this.context.buffer.childString(this.index);}getChild(type,before=null,after=null){let r=getChildren(this,type,before,after);return r.length?r[0]:null;}getChildren(type,before=null,after=null){return getChildren(this,type,before,after);}get node(){return this;}matchContext(context){return matchNodeContext(this,context);}}/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nclass TreeCursor{/// @internal\nconstructor(node,/// @internal\nmode=0){this.mode=mode;/// @internal\nthis.buffer=null;this.stack=[];/// @internal\nthis.index=0;this.bufferNode=null;if(node instanceof TreeNode){this.yieldNode(node);}else {this._tree=node.context.parent;this.buffer=node.context;for(let n=node._parent;n;n=n._parent)this.stack.unshift(n.index);this.bufferNode=node;this.yieldBuf(node.index);}}/// Shorthand for `.type.name`.\nget name(){return this.type.name;}yieldNode(node){if(!node)return false;this._tree=node;this.type=node.type;this.from=node.from;this.to=node.to;return true;}yieldBuf(index,type){this.index=index;let{start,buffer}=this.buffer;this.type=type||buffer.set.types[buffer.buffer[index]];this.from=start+buffer.buffer[index+1];this.to=start+buffer.buffer[index+2];return true;}yield(node){if(!node)return false;if(node instanceof TreeNode){this.buffer=null;return this.yieldNode(node);}this.buffer=node.context;return this.yieldBuf(node.index,node.type);}/// @internal\ntoString(){return this.buffer?this.buffer.buffer.childString(this.index):this._tree.toString();}/// @internal\nenterChild(dir,pos,side){if(!this.buffer)return this.yield(this._tree.nextChild(dir<0?this._tree._tree.children.length-1:0,dir,pos,side,this.mode));let{buffer}=this.buffer;let index=buffer.findChild(this.index+4,buffer.buffer[this.index+3],dir,pos-this.buffer.start,side);if(index<0)return false;this.stack.push(this.index);return this.yieldBuf(index);}/// Move the cursor to this node's first child. When this returns\n/// false, the node has no child, and the cursor has not been moved.\nfirstChild(){return this.enterChild(1,0,4/* DontCare */);}/// Move the cursor to this node's last child.\nlastChild(){return this.enterChild(-1,0,4/* DontCare */);}/// Move the cursor to the first child that ends after `pos`.\nchildAfter(pos){return this.enterChild(1,pos,2/* After */);}/// Move to the last child that starts before `pos`.\nchildBefore(pos){return this.enterChild(-1,pos,-2/* Before */);}/// Move the cursor to the child around `pos`. If side is -1 the\n/// child may end at that position, when 1 it may start there. This\n/// will also enter [overlaid](#common.MountedTree.overlay)\n/// [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n/// set to false.\nenter(pos,side,mode=this.mode){if(!this.buffer)return this.yield(this._tree.enter(pos,side,mode));return mode&IterMode.ExcludeBuffers?false:this.enterChild(1,pos,side);}/// Move to the node's parent node, if this isn't the top node.\nparent(){if(!this.buffer)return this.yieldNode(this.mode&IterMode.IncludeAnonymous?this._tree._parent:this._tree.parent);if(this.stack.length)return this.yieldBuf(this.stack.pop());let parent=this.mode&IterMode.IncludeAnonymous?this.buffer.parent:this.buffer.parent.nextSignificantParent();this.buffer=null;return this.yieldNode(parent);}/// @internal\nsibling(dir){if(!this.buffer)return !this._tree._parent?false:this.yield(this._tree.index<0?null:this._tree._parent.nextChild(this._tree.index+dir,dir,0,4/* DontCare */,this.mode));let{buffer}=this.buffer,d=this.stack.length-1;if(dir<0){let parentStart=d<0?0:this.stack[d]+4;if(this.index!=parentStart)return this.yieldBuf(buffer.findChild(parentStart,this.index,-1,0,4/* DontCare */));}else {let after=buffer.buffer[this.index+3];if(after<(d<0?buffer.buffer.length:buffer.buffer[this.stack[d]+3]))return this.yieldBuf(after);}return d<0?this.yield(this.buffer.parent.nextChild(this.buffer.index+dir,dir,0,4/* DontCare */,this.mode)):false;}/// Move to this node's next sibling, if any.\nnextSibling(){return this.sibling(1);}/// Move to this node's previous sibling, if any.\nprevSibling(){return this.sibling(-1);}atLastNode(dir){let index,parent,{buffer}=this;if(buffer){if(dir>0){if(this.index<buffer.buffer.buffer.length)return false;}else {for(let i=0;i<this.index;i++)if(buffer.buffer.buffer[i+3]<this.index)return false;}({index,parent}=buffer);}else {({index,_parent:parent}=this._tree);}for(;parent;({index,_parent:parent}=parent)){if(index>-1)for(let i=index+dir,e=dir<0?-1:parent._tree.children.length;i!=e;i+=dir){let child=parent._tree.children[i];if(this.mode&IterMode.IncludeAnonymous||child instanceof TreeBuffer||!child.type.isAnonymous||hasChild(child))return false;}}return true;}move(dir,enter){if(enter&&this.enterChild(dir,0,4/* DontCare */))return true;for(;;){if(this.sibling(dir))return true;if(this.atLastNode(dir)||!this.parent())return false;}}/// Move to the next node in a\n/// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n/// traversal, going from a node to its first child or, if the\n/// current node is empty or `enter` is false, its next sibling or\n/// the next sibling of the first parent node that has one.\nnext(enter=true){return this.move(1,enter);}/// Move to the next node in a last-to-first pre-order traveral. A\n/// node is followed by its last child or, if it has none, its\n/// previous sibling or the previous sibling of the first parent\n/// node that has one.\nprev(enter=true){return this.move(-1,enter);}/// Move the cursor to the innermost node that covers `pos`. If\n/// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n/// it will enter nodes that start at `pos`.\nmoveTo(pos,side=0){// Move up to a node that actually holds the position, if possible\nwhile(this.from==this.to||(side<1?this.from>=pos:this.from>pos)||(side>-1?this.to<=pos:this.to<pos))if(!this.parent())break;// Then scan down into child nodes as far as possible\nwhile(this.enterChild(1,pos,side)){}return this;}/// Get a [syntax node](#common.SyntaxNode) at the cursor's current\n/// position.\nget node(){if(!this.buffer)return this._tree;let cache=this.bufferNode,result=null,depth=0;if(cache&&cache.context==this.buffer){scan:for(let index=this.index,d=this.stack.length;d>=0;){for(let c=cache;c;c=c._parent)if(c.index==index){if(index==this.index)return c;result=c;depth=d+1;break scan;}index=this.stack[--d];}}for(let i=depth;i<this.stack.length;i++)result=new BufferNode(this.buffer,result,this.stack[i]);return this.bufferNode=new BufferNode(this.buffer,result,this.index);}/// Get the [tree](#common.Tree) that represents the current node, if\n/// any. Will return null when the node is in a [tree\n/// buffer](#common.TreeBuffer).\nget tree(){return this.buffer?null:this._tree._tree;}/// Iterate over the current node and all its descendants, calling\n/// `enter` when entering a node and `leave`, if given, when leaving\n/// one. When `enter` returns `false`, any children of that node are\n/// skipped, and `leave` isn't called for it.\niterate(enter,leave){for(let depth=0;;){let mustLeave=false;if(this.type.isAnonymous||enter(this)!==false){if(this.firstChild()){depth++;continue;}if(!this.type.isAnonymous)mustLeave=true;}for(;;){if(mustLeave&&leave)leave(this);mustLeave=this.type.isAnonymous;if(this.nextSibling())break;if(!depth)return;this.parent();depth--;mustLeave=true;}}}/// Test whether the current node matches a given context—a sequence\n/// of direct parent node names. Empty strings in the context array\n/// are treated as wildcards.\nmatchContext(context){if(!this.buffer)return matchNodeContext(this.node,context);let{buffer}=this.buffer,{types}=buffer.set;for(let i=context.length-1,d=this.stack.length-1;i>=0;d--){if(d<0)return matchNodeContext(this.node,context,i);let type=types[buffer.buffer[this.stack[d]]];if(!type.isAnonymous){if(context[i]&&context[i]!=type.name)return false;i--;}}return true;}}function hasChild(tree){return tree.children.some(ch=>ch instanceof TreeBuffer||!ch.type.isAnonymous||hasChild(ch));}function buildTree(data){var _a;let{buffer,nodeSet,maxBufferLength=DefaultBufferLength,reused=[],minRepeatType=nodeSet.types.length}=data;let cursor=Array.isArray(buffer)?new FlatBufferCursor(buffer,buffer.length):buffer;let types=nodeSet.types;let contextHash=0,lookAhead=0;function takeNode(parentStart,minPos,children,positions,inRepeat){let{id,start,end,size}=cursor;let lookAheadAtStart=lookAhead;while(size<0){cursor.next();if(size==-1/* Reuse */){let node=reused[id];children.push(node);positions.push(start-parentStart);return;}else if(size==-3/* ContextChange */){// Context change\ncontextHash=id;return;}else if(size==-4/* LookAhead */){lookAhead=id;return;}else {throw new RangeError(`Unrecognized record size: ${size}`);}}let type=types[id],node,buffer;let startPos=start-parentStart;if(end-start<=maxBufferLength&&(buffer=findBufferSize(cursor.pos-minPos,inRepeat))){// Small enough for a buffer, and no reused nodes inside\nlet data=new Uint16Array(buffer.size-buffer.skip);let endPos=cursor.pos-buffer.size,index=data.length;while(cursor.pos>endPos)index=copyToBuffer(buffer.start,data,index);node=new TreeBuffer(data,end-buffer.start,nodeSet);startPos=buffer.start-parentStart;}else {// Make it a node\nlet endPos=cursor.pos-size;cursor.next();let localChildren=[],localPositions=[];let localInRepeat=id>=minRepeatType?id:-1;let lastGroup=0,lastEnd=end;while(cursor.pos>endPos){if(localInRepeat>=0&&cursor.id==localInRepeat&&cursor.size>=0){if(cursor.end<=lastEnd-maxBufferLength){makeRepeatLeaf(localChildren,localPositions,start,lastGroup,cursor.end,lastEnd,localInRepeat,lookAheadAtStart);lastGroup=localChildren.length;lastEnd=cursor.end;}cursor.next();}else {takeNode(start,endPos,localChildren,localPositions,localInRepeat);}}if(localInRepeat>=0&&lastGroup>0&&lastGroup<localChildren.length)makeRepeatLeaf(localChildren,localPositions,start,lastGroup,start,lastEnd,localInRepeat,lookAheadAtStart);localChildren.reverse();localPositions.reverse();if(localInRepeat>-1&&lastGroup>0){let make=makeBalanced(type);node=balanceRange(type,localChildren,localPositions,0,localChildren.length,0,end-start,make,make);}else {node=makeTree(type,localChildren,localPositions,end-start,lookAheadAtStart-end);}}children.push(node);positions.push(startPos);}function makeBalanced(type){return (children,positions,length)=>{let lookAhead=0,lastI=children.length-1,last,lookAheadProp;if(lastI>=0&&(last=children[lastI])instanceof Tree){if(!lastI&&last.type==type&&last.length==length)return last;if(lookAheadProp=last.prop(NodeProp.lookAhead))lookAhead=positions[lastI]+last.length+lookAheadProp;}return makeTree(type,children,positions,length,lookAhead);};}function makeRepeatLeaf(children,positions,base,i,from,to,type,lookAhead){let localChildren=[],localPositions=[];while(children.length>i){localChildren.push(children.pop());localPositions.push(positions.pop()+base-from);}children.push(makeTree(nodeSet.types[type],localChildren,localPositions,to-from,lookAhead-to));positions.push(from-base);}function makeTree(type,children,positions,length,lookAhead=0,props){if(contextHash){let pair=[NodeProp.contextHash,contextHash];props=props?[pair].concat(props):[pair];}if(lookAhead>25){let pair=[NodeProp.lookAhead,lookAhead];props=props?[pair].concat(props):[pair];}return new Tree(type,children,positions,length,props);}function findBufferSize(maxSize,inRepeat){// Scan through the buffer to find previous siblings that fit\n// together in a TreeBuffer, and don't contain any reused nodes\n// (which can't be stored in a buffer).\n// If `inRepeat` is > -1, ignore node boundaries of that type for\n// nesting, but make sure the end falls either at the start\n// (`maxSize`) or before such a node.\nlet fork=cursor.fork();let size=0,start=0,skip=0,minStart=fork.end-maxBufferLength;let result={size:0,start:0,skip:0};scan:for(let minPos=fork.pos-maxSize;fork.pos>minPos;){let nodeSize=fork.size;// Pretend nested repeat nodes of the same type don't exist\nif(fork.id==inRepeat&&nodeSize>=0){// Except that we store the current state as a valid return\n// value.\nresult.size=size;result.start=start;result.skip=skip;skip+=4;size+=4;fork.next();continue;}let startPos=fork.pos-nodeSize;if(nodeSize<0||startPos<minPos||fork.start<minStart)break;let localSkipped=fork.id>=minRepeatType?4:0;let nodeStart=fork.start;fork.next();while(fork.pos>startPos){if(fork.size<0){if(fork.size==-3/* ContextChange */)localSkipped+=4;else break scan;}else if(fork.id>=minRepeatType){localSkipped+=4;}fork.next();}start=nodeStart;size+=nodeSize;skip+=localSkipped;}if(inRepeat<0||size==maxSize){result.size=size;result.start=start;result.skip=skip;}return result.size>4?result:undefined;}function copyToBuffer(bufferStart,buffer,index){let{id,start,end,size}=cursor;cursor.next();if(size>=0&&id<minRepeatType){let startIndex=index;if(size>4){let endPos=cursor.pos-(size-4);while(cursor.pos>endPos)index=copyToBuffer(bufferStart,buffer,index);}buffer[--index]=startIndex;buffer[--index]=end-bufferStart;buffer[--index]=start-bufferStart;buffer[--index]=id;}else if(size==-3/* ContextChange */){contextHash=id;}else if(size==-4/* LookAhead */){lookAhead=id;}return index;}let children=[],positions=[];while(cursor.pos>0)takeNode(data.start||0,data.bufferStart||0,children,positions,-1);let length=(_a=data.length)!==null&&_a!==void 0?_a:children.length?positions[0]+children[0].length:0;return new Tree(types[data.topID],children.reverse(),positions.reverse(),length);}const nodeSizeCache=new WeakMap();function nodeSize(balanceType,node){if(!balanceType.isAnonymous||node instanceof TreeBuffer||node.type!=balanceType)return 1;let size=nodeSizeCache.get(node);if(size==null){size=1;for(let child of node.children){if(child.type!=balanceType||!(child instanceof Tree)){size=1;break;}size+=nodeSize(balanceType,child);}nodeSizeCache.set(node,size);}return size;}function balanceRange(// The type the balanced tree's inner nodes.\nbalanceType,// The direct children and their positions\nchildren,positions,// The index range in children/positions to use\nfrom,to,// The start position of the nodes, relative to their parent.\nstart,// Length of the outer node\nlength,// Function to build the top node of the balanced tree\nmkTop,// Function to build internal nodes for the balanced tree\nmkTree){let total=0;for(let i=from;i<to;i++)total+=nodeSize(balanceType,children[i]);let maxChild=Math.ceil(total*1.5/8/* BranchFactor */);let localChildren=[],localPositions=[];function divide(children,positions,from,to,offset){for(let i=from;i<to;){let groupFrom=i,groupStart=positions[i],groupSize=nodeSize(balanceType,children[i]);i++;for(;i<to;i++){let nextSize=nodeSize(balanceType,children[i]);if(groupSize+nextSize>=maxChild)break;groupSize+=nextSize;}if(i==groupFrom+1){if(groupSize>maxChild){let only=children[groupFrom];// Only trees can have a size > 1\ndivide(only.children,only.positions,0,only.children.length,positions[groupFrom]+offset);continue;}localChildren.push(children[groupFrom]);}else {let length=positions[i-1]+children[i-1].length-groupStart;localChildren.push(balanceRange(balanceType,children,positions,groupFrom,i,groupStart,length,null,mkTree));}localPositions.push(groupStart+offset-start);}}divide(children,positions,from,to,0);return (mkTop||mkTree)(localChildren,localPositions,length);}/// A superclass that parsers should extend.\nclass Parser{/// Start a parse, returning a [partial parse](#common.PartialParse)\n/// object. [`fragments`](#common.TreeFragment) can be passed in to\n/// make the parse incremental.\n///\n/// By default, the entire input is parsed. You can pass `ranges`,\n/// which should be a sorted array of non-empty, non-overlapping\n/// ranges, to parse only those ranges. The tree returned in that\n/// case will start at `ranges[0].from`.\nstartParse(input,fragments,ranges){if(typeof input==\"string\")input=new StringInput(input);ranges=!ranges?[new Range(0,input.length)]:ranges.length?ranges.map(r=>new Range(r.from,r.to)):[new Range(0,0)];return this.createParse(input,fragments||[],ranges);}/// Run a full parse, returning the resulting tree.\nparse(input,fragments,ranges){let parse=this.startParse(input,fragments,ranges);for(;;){let done=parse.advance();if(done)return done;}}}class StringInput{constructor(string){this.string=string;}get length(){return this.string.length;}chunk(from){return this.string.slice(from);}get lineChunks(){return false;}read(from,to){return this.string.slice(from,to);}}new NodeProp({perNode:true});/// A parse stack. These are used internally by the parser to track\n/// parsing progress. They also provide some properties and methods\n/// that external code such as a tokenizer can use to get information\n/// about the parse state.\nclass Stack{/// @internal\nconstructor(/// The parse that this stack is part of @internal\np,/// Holds state, input pos, buffer index triplets for all but the\n/// top state @internal\nstack,/// The current parse state @internal\nstate,// The position at which the next reduce should take place. This\n// can be less than `this.pos` when skipped expressions have been\n// added to the stack (which should be moved outside of the next\n// reduction)\n/// @internal\nreducePos,/// The input position up to which this stack has parsed.\npos,/// The dynamic score of the stack, including dynamic precedence\n/// and error-recovery penalties\n/// @internal\nscore,// The output buffer. Holds (type, start, end, size) quads\n// representing nodes created by the parser, where `size` is\n// amount of buffer array entries covered by this node.\n/// @internal\nbuffer,// The base offset of the buffer. When stacks are split, the split\n// instance shared the buffer history with its parent up to\n// `bufferBase`, which is the absolute offset (including the\n// offset of previous splits) into the buffer at which this stack\n// starts writing.\n/// @internal\nbufferBase,/// @internal\ncurContext,/// @internal\nlookAhead=0,// A parent stack from which this was split off, if any. This is\n// set up so that it always points to a stack that has some\n// additional buffer content, never to a stack with an equal\n// `bufferBase`.\n/// @internal\nparent){this.p=p;this.stack=stack;this.state=state;this.reducePos=reducePos;this.pos=pos;this.score=score;this.buffer=buffer;this.bufferBase=bufferBase;this.curContext=curContext;this.lookAhead=lookAhead;this.parent=parent;}/// @internal\ntoString(){return `[${this.stack.filter((_,i)=>i%3==0).concat(this.state)}]@${this.pos}${this.score?\"!\"+this.score:\"\"}`;}// Start an empty stack\n/// @internal\nstatic start(p,state,pos=0){let cx=p.parser.context;return new Stack(p,[],state,pos,pos,0,[],0,cx?new StackContext(cx,cx.start):null,0,null);}/// The stack's current [context](#lr.ContextTracker) value, if\n/// any. Its type will depend on the context tracker's type\n/// parameter, or it will be `null` if there is no context\n/// tracker.\nget context(){return this.curContext?this.curContext.context:null;}// Push a state onto the stack, tracking its start position as well\n// as the buffer base at that point.\n/// @internal\npushState(state,start){this.stack.push(this.state,start,this.bufferBase+this.buffer.length);this.state=state;}// Apply a reduce action\n/// @internal\nreduce(action){let depth=action>>19/* ReduceDepthShift */,type=action&65535/* ValueMask */;let{parser}=this.p;let dPrec=parser.dynamicPrecedence(type);if(dPrec)this.score+=dPrec;if(depth==0){this.pushState(parser.getGoto(this.state,type,true),this.reducePos);// Zero-depth reductions are a special case—they add stuff to\n// the stack without popping anything off.\nif(type<parser.minRepeatTerm)this.storeNode(type,this.reducePos,this.reducePos,4,true);this.reduceContext(type,this.reducePos);return;}// Find the base index into `this.stack`, content after which will\n// be dropped. Note that with `StayFlag` reductions we need to\n// consume two extra frames (the dummy parent node for the skipped\n// expression and the state that we'll be staying in, which should\n// be moved to `this.state`).\nlet base=this.stack.length-(depth-1)*3-(action&262144/* StayFlag */?6:0);let start=this.stack[base-2];let bufferBase=this.stack[base-1],count=this.bufferBase+this.buffer.length-bufferBase;// Store normal terms or `R -> R R` repeat reductions\nif(type<parser.minRepeatTerm||action&131072/* RepeatFlag */){let pos=parser.stateFlag(this.state,1/* Skipped */)?this.pos:this.reducePos;this.storeNode(type,start,pos,count+4,true);}if(action&262144/* StayFlag */){this.state=this.stack[base];}else {let baseStateID=this.stack[base-3];this.state=parser.getGoto(baseStateID,type,true);}while(this.stack.length>base)this.stack.pop();this.reduceContext(type,start);}// Shift a value into the buffer\n/// @internal\nstoreNode(term,start,end,size=4,isReduce=false){if(term==0/* Err */&&(!this.stack.length||this.stack[this.stack.length-1]<this.buffer.length+this.bufferBase)){// Try to omit/merge adjacent error nodes\nlet cur=this,top=this.buffer.length;if(top==0&&cur.parent){top=cur.bufferBase-cur.parent.bufferBase;cur=cur.parent;}if(top>0&&cur.buffer[top-4]==0/* Err */&&cur.buffer[top-1]>-1){if(start==end)return;if(cur.buffer[top-2]>=start){cur.buffer[top-2]=end;return;}}}if(!isReduce||this.pos==end){// Simple case, just append\nthis.buffer.push(term,start,end,size);}else {// There may be skipped nodes that have to be moved forward\nlet index=this.buffer.length;if(index>0&&this.buffer[index-4]!=0/* Err */)while(index>0&&this.buffer[index-2]>end){// Move this record forward\nthis.buffer[index]=this.buffer[index-4];this.buffer[index+1]=this.buffer[index-3];this.buffer[index+2]=this.buffer[index-2];this.buffer[index+3]=this.buffer[index-1];index-=4;if(size>4)size-=4;}this.buffer[index]=term;this.buffer[index+1]=start;this.buffer[index+2]=end;this.buffer[index+3]=size;}}// Apply a shift action\n/// @internal\nshift(action,next,nextEnd){let start=this.pos;if(action&131072/* GotoFlag */){this.pushState(action&65535/* ValueMask */,this.pos);}else if((action&262144/* StayFlag */)==0){// Regular shift\nlet nextState=action,{parser}=this.p;if(nextEnd>this.pos||next<=parser.maxNode){this.pos=nextEnd;if(!parser.stateFlag(nextState,1/* Skipped */))this.reducePos=nextEnd;}this.pushState(nextState,start);this.shiftContext(next,start);if(next<=parser.maxNode)this.buffer.push(next,start,nextEnd,4);}else {// Shift-and-stay, which means this is a skipped token\nthis.pos=nextEnd;this.shiftContext(next,start);if(next<=this.p.parser.maxNode)this.buffer.push(next,start,nextEnd,4);}}// Apply an action\n/// @internal\napply(action,next,nextEnd){if(action&65536/* ReduceFlag */)this.reduce(action);else this.shift(action,next,nextEnd);}// Add a prebuilt (reused) node into the buffer.\n/// @internal\nuseNode(value,next){let index=this.p.reused.length-1;if(index<0||this.p.reused[index]!=value){this.p.reused.push(value);index++;}let start=this.pos;this.reducePos=this.pos=start+value.length;this.pushState(next,start);this.buffer.push(index,start,this.reducePos,-1/* size == -1 means this is a reused value */);if(this.curContext)this.updateContext(this.curContext.tracker.reuse(this.curContext.context,value,this,this.p.stream.reset(this.pos-value.length)));}// Split the stack. Due to the buffer sharing and the fact\n// that `this.stack` tends to stay quite shallow, this isn't very\n// expensive.\n/// @internal\nsplit(){let parent=this;let off=parent.buffer.length;// Because the top of the buffer (after this.pos) may be mutated\n// to reorder reductions and skipped tokens, and shared buffers\n// should be immutable, this copies any outstanding skipped tokens\n// to the new buffer, and puts the base pointer before them.\nwhile(off>0&&parent.buffer[off-2]>parent.reducePos)off-=4;let buffer=parent.buffer.slice(off),base=parent.bufferBase+off;// Make sure parent points to an actual parent with content, if there is such a parent.\nwhile(parent&&base==parent.bufferBase)parent=parent.parent;return new Stack(this.p,this.stack.slice(),this.state,this.reducePos,this.pos,this.score,buffer,base,this.curContext,this.lookAhead,parent);}// Try to recover from an error by 'deleting' (ignoring) one token.\n/// @internal\nrecoverByDelete(next,nextEnd){let isNode=next<=this.p.parser.maxNode;if(isNode)this.storeNode(next,this.pos,nextEnd,4);this.storeNode(0/* Err */,this.pos,nextEnd,isNode?8:4);this.pos=this.reducePos=nextEnd;this.score-=190/* Delete */;}/// Check if the given term would be able to be shifted (optionally\n/// after some reductions) on this stack. This can be useful for\n/// external tokenizers that want to make sure they only provide a\n/// given token when it applies.\ncanShift(term){for(let sim=new SimulatedStack(this);;){let action=this.p.parser.stateSlot(sim.state,4/* DefaultReduce */)||this.p.parser.hasAction(sim.state,term);if((action&65536/* ReduceFlag */)==0)return true;if(action==0)return false;sim.reduce(action);}}// Apply up to Recover.MaxNext recovery actions that conceptually\n// inserts some missing token or rule.\n/// @internal\nrecoverByInsert(next){if(this.stack.length>=300/* MaxInsertStackDepth */)return [];let nextStates=this.p.parser.nextStates(this.state);if(nextStates.length>4/* MaxNext */<<1||this.stack.length>=120/* DampenInsertStackDepth */){let best=[];for(let i=0,s;i<nextStates.length;i+=2){if((s=nextStates[i+1])!=this.state&&this.p.parser.hasAction(s,next))best.push(nextStates[i],s);}if(this.stack.length<120/* DampenInsertStackDepth */)for(let i=0;best.length<4/* MaxNext */<<1&&i<nextStates.length;i+=2){let s=nextStates[i+1];if(!best.some((v,i)=>i&1&&v==s))best.push(nextStates[i],s);}nextStates=best;}let result=[];for(let i=0;i<nextStates.length&&result.length<4/* MaxNext */;i+=2){let s=nextStates[i+1];if(s==this.state)continue;let stack=this.split();stack.pushState(s,this.pos);stack.storeNode(0/* Err */,stack.pos,stack.pos,4,true);stack.shiftContext(nextStates[i],this.pos);stack.score-=200/* Insert */;result.push(stack);}return result;}// Force a reduce, if possible. Return false if that can't\n// be done.\n/// @internal\nforceReduce(){let reduce=this.p.parser.stateSlot(this.state,5/* ForcedReduce */);if((reduce&65536/* ReduceFlag */)==0)return false;let{parser}=this.p;if(!parser.validAction(this.state,reduce)){let depth=reduce>>19/* ReduceDepthShift */,term=reduce&65535/* ValueMask */;let target=this.stack.length-depth*3;if(target<0||parser.getGoto(this.stack[target],term,false)<0)return false;this.storeNode(0/* Err */,this.reducePos,this.reducePos,4,true);this.score-=100/* Reduce */;}this.reducePos=this.pos;this.reduce(reduce);return true;}/// @internal\nforceAll(){while(!this.p.parser.stateFlag(this.state,2/* Accepting */)){if(!this.forceReduce()){this.storeNode(0/* Err */,this.pos,this.pos,4,true);break;}}return this;}/// Check whether this state has no further actions (assumed to be a direct descendant of the\n/// top state, since any other states must be able to continue\n/// somehow). @internal\nget deadEnd(){if(this.stack.length!=3)return false;let{parser}=this.p;return parser.data[parser.stateSlot(this.state,1/* Actions */)]==65535/* End */&&!parser.stateSlot(this.state,4/* DefaultReduce */);}/// Restart the stack (put it back in its start state). Only safe\n/// when this.stack.length == 3 (state is directly below the top\n/// state). @internal\nrestart(){this.state=this.stack[0];this.stack.length=0;}/// @internal\nsameState(other){if(this.state!=other.state||this.stack.length!=other.stack.length)return false;for(let i=0;i<this.stack.length;i+=3)if(this.stack[i]!=other.stack[i])return false;return true;}/// Get the parser used by this stack.\nget parser(){return this.p.parser;}/// Test whether a given dialect (by numeric ID, as exported from\n/// the terms file) is enabled.\ndialectEnabled(dialectID){return this.p.parser.dialect.flags[dialectID];}shiftContext(term,start){if(this.curContext)this.updateContext(this.curContext.tracker.shift(this.curContext.context,term,this,this.p.stream.reset(start)));}reduceContext(term,start){if(this.curContext)this.updateContext(this.curContext.tracker.reduce(this.curContext.context,term,this,this.p.stream.reset(start)));}/// @internal\nemitContext(){let last=this.buffer.length-1;if(last<0||this.buffer[last]!=-3)this.buffer.push(this.curContext.hash,this.reducePos,this.reducePos,-3);}/// @internal\nemitLookAhead(){let last=this.buffer.length-1;if(last<0||this.buffer[last]!=-4)this.buffer.push(this.lookAhead,this.reducePos,this.reducePos,-4);}updateContext(context){if(context!=this.curContext.context){let newCx=new StackContext(this.curContext.tracker,context);if(newCx.hash!=this.curContext.hash)this.emitContext();this.curContext=newCx;}}/// @internal\nsetLookAhead(lookAhead){if(lookAhead>this.lookAhead){this.emitLookAhead();this.lookAhead=lookAhead;}}/// @internal\nclose(){if(this.curContext&&this.curContext.tracker.strict)this.emitContext();if(this.lookAhead>0)this.emitLookAhead();}}class StackContext{constructor(tracker,context){this.tracker=tracker;this.context=context;this.hash=tracker.strict?tracker.hash(context):0;}}var Recover;(function(Recover){Recover[Recover[\"Insert\"]=200]=\"Insert\";Recover[Recover[\"Delete\"]=190]=\"Delete\";Recover[Recover[\"Reduce\"]=100]=\"Reduce\";Recover[Recover[\"MaxNext\"]=4]=\"MaxNext\";Recover[Recover[\"MaxInsertStackDepth\"]=300]=\"MaxInsertStackDepth\";Recover[Recover[\"DampenInsertStackDepth\"]=120]=\"DampenInsertStackDepth\";})(Recover||(Recover={}));// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack{constructor(start){this.start=start;this.state=start.state;this.stack=start.stack;this.base=this.stack.length;}reduce(action){let term=action&65535/* ValueMask */,depth=action>>19/* ReduceDepthShift */;if(depth==0){if(this.stack==this.start.stack)this.stack=this.stack.slice();this.stack.push(this.state,0,0);this.base+=3;}else {this.base-=(depth-1)*3;}let goto=this.start.p.parser.getGoto(this.stack[this.base-3],term,true);this.state=goto;}}// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor{constructor(stack,pos,index){this.stack=stack;this.pos=pos;this.index=index;this.buffer=stack.buffer;if(this.index==0)this.maybeNext();}static create(stack,pos=stack.bufferBase+stack.buffer.length){return new StackBufferCursor(stack,pos,pos-stack.bufferBase);}maybeNext(){let next=this.stack.parent;if(next!=null){this.index=this.stack.bufferBase-next.bufferBase;this.stack=next;this.buffer=next.buffer;}}get id(){return this.buffer[this.index-4];}get start(){return this.buffer[this.index-3];}get end(){return this.buffer[this.index-2];}get size(){return this.buffer[this.index-1];}next(){this.index-=4;this.pos-=4;if(this.index==0)this.maybeNext();}fork(){return new StackBufferCursor(this.stack,this.pos,this.index);}}class CachedToken{constructor(){this.start=-1;this.value=-1;this.end=-1;this.extended=-1;this.lookAhead=0;this.mask=0;this.context=0;}}const nullToken=new CachedToken();/// [Tokenizers](#lr.ExternalTokenizer) interact with the input\n/// through this interface. It presents the input as a stream of\n/// characters, tracking lookahead and hiding the complexity of\n/// [ranges](#common.Parser.parse^ranges) from tokenizer code.\nclass InputStream{/// @internal\nconstructor(/// @internal\ninput,/// @internal\nranges){this.input=input;this.ranges=ranges;/// @internal\nthis.chunk=\"\";/// @internal\nthis.chunkOff=0;/// Backup chunk\nthis.chunk2=\"\";this.chunk2Pos=0;/// The character code of the next code unit in the input, or -1\n/// when the stream is at the end of the input.\nthis.next=-1;/// @internal\nthis.token=nullToken;this.rangeIndex=0;this.pos=this.chunkPos=ranges[0].from;this.range=ranges[0];this.end=ranges[ranges.length-1].to;this.readNext();}resolveOffset(offset,assoc){let range=this.range,index=this.rangeIndex;let pos=this.pos+offset;while(pos<range.from){if(!index)return null;let next=this.ranges[--index];pos-=range.from-next.to;range=next;}while(assoc<0?pos>range.to:pos>=range.to){if(index==this.ranges.length-1)return null;let next=this.ranges[++index];pos+=next.from-range.to;range=next;}return pos;}/// Look at a code unit near the stream position. `.peek(0)` equals\n/// `.next`, `.peek(-1)` gives you the previous character, and so\n/// on.\n///\n/// Note that looking around during tokenizing creates dependencies\n/// on potentially far-away content, which may reduce the\n/// effectiveness incremental parsing—when looking forward—or even\n/// cause invalid reparses when looking backward more than 25 code\n/// units, since the library does not track lookbehind.\npeek(offset){let idx=this.chunkOff+offset,pos,result;if(idx>=0&&idx<this.chunk.length){pos=this.pos+offset;result=this.chunk.charCodeAt(idx);}else {let resolved=this.resolveOffset(offset,1);if(resolved==null)return -1;pos=resolved;if(pos>=this.chunk2Pos&&pos<this.chunk2Pos+this.chunk2.length){result=this.chunk2.charCodeAt(pos-this.chunk2Pos);}else {let i=this.rangeIndex,range=this.range;while(range.to<=pos)range=this.ranges[++i];this.chunk2=this.input.chunk(this.chunk2Pos=pos);if(pos+this.chunk2.length>range.to)this.chunk2=this.chunk2.slice(0,range.to-pos);result=this.chunk2.charCodeAt(0);}}if(pos>=this.token.lookAhead)this.token.lookAhead=pos+1;return result;}/// Accept a token. By default, the end of the token is set to the\n/// current stream position, but you can pass an offset (relative to\n/// the stream position) to change that.\nacceptToken(token,endOffset=0){let end=endOffset?this.resolveOffset(endOffset,-1):this.pos;if(end==null||end<this.token.start)throw new RangeError(\"Token end out of bounds\");this.token.value=token;this.token.end=end;}getChunk(){if(this.pos>=this.chunk2Pos&&this.pos<this.chunk2Pos+this.chunk2.length){let{chunk,chunkPos}=this;this.chunk=this.chunk2;this.chunkPos=this.chunk2Pos;this.chunk2=chunk;this.chunk2Pos=chunkPos;this.chunkOff=this.pos-this.chunkPos;}else {this.chunk2=this.chunk;this.chunk2Pos=this.chunkPos;let nextChunk=this.input.chunk(this.pos);let end=this.pos+nextChunk.length;this.chunk=end>this.range.to?nextChunk.slice(0,this.range.to-this.pos):nextChunk;this.chunkPos=this.pos;this.chunkOff=0;}}readNext(){if(this.chunkOff>=this.chunk.length){this.getChunk();if(this.chunkOff==this.chunk.length)return this.next=-1;}return this.next=this.chunk.charCodeAt(this.chunkOff);}/// Move the stream forward N (defaults to 1) code units. Returns\n/// the new value of [`next`](#lr.InputStream.next).\nadvance(n=1){this.chunkOff+=n;while(this.pos+n>=this.range.to){if(this.rangeIndex==this.ranges.length-1)return this.setDone();n-=this.range.to-this.pos;this.range=this.ranges[++this.rangeIndex];this.pos=this.range.from;}this.pos+=n;if(this.pos>=this.token.lookAhead)this.token.lookAhead=this.pos+1;return this.readNext();}setDone(){this.pos=this.chunkPos=this.end;this.range=this.ranges[this.rangeIndex=this.ranges.length-1];this.chunk=\"\";return this.next=-1;}/// @internal\nreset(pos,token){if(token){this.token=token;token.start=pos;token.lookAhead=pos+1;token.value=token.extended=-1;}else {this.token=nullToken;}if(this.pos!=pos){this.pos=pos;if(pos==this.end){this.setDone();return this;}while(pos<this.range.from)this.range=this.ranges[--this.rangeIndex];while(pos>=this.range.to)this.range=this.ranges[++this.rangeIndex];if(pos>=this.chunkPos&&pos<this.chunkPos+this.chunk.length){this.chunkOff=pos-this.chunkPos;}else {this.chunk=\"\";this.chunkOff=0;}this.readNext();}return this;}/// @internal\nread(from,to){if(from>=this.chunkPos&&to<=this.chunkPos+this.chunk.length)return this.chunk.slice(from-this.chunkPos,to-this.chunkPos);if(from>=this.chunk2Pos&&to<=this.chunk2Pos+this.chunk2.length)return this.chunk2.slice(from-this.chunk2Pos,to-this.chunk2Pos);if(from>=this.range.from&&to<=this.range.to)return this.input.read(from,to);let result=\"\";for(let r of this.ranges){if(r.from>=to)break;if(r.to>from)result+=this.input.read(Math.max(r.from,from),Math.min(r.to,to));}return result;}}/// @internal\nclass TokenGroup{constructor(data,id){this.data=data;this.id=id;}token(input,stack){readToken(this.data,input,stack,this.id);}}TokenGroup.prototype.contextual=TokenGroup.prototype.fallback=TokenGroup.prototype.extend=false;// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `token` when it matches a token.\nfunction readToken(data,input,stack,group){let state=0,groupMask=1<<group,{parser}=stack.p,{dialect}=parser;scan:for(;;){if((groupMask&data[state])==0)break;let accEnd=data[state+1];// Check whether this state can lead to a token in the current group\n// Accept tokens in this state, possibly overwriting\n// lower-precedence / shorter tokens\nfor(let i=state+3;i<accEnd;i+=2)if((data[i+1]&groupMask)>0){let term=data[i];if(dialect.allows(term)&&(input.token.value==-1||input.token.value==term||parser.overrides(term,input.token.value))){input.acceptToken(term);break;}}// Do a binary search on the state's edges\nfor(let next=input.next,low=0,high=data[state+2];low<high;){let mid=low+high>>1;let index=accEnd+mid+(mid<<1);let from=data[index],to=data[index+1];if(next<from)high=mid;else if(next>=to)low=mid+1;else {state=data[index+2];input.advance();continue scan;}}break;}}// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input,Type=Uint16Array){if(typeof input!=\"string\")return input;let array=null;for(let pos=0,out=0;pos<input.length;){let value=0;for(;;){let next=input.charCodeAt(pos++),stop=false;if(next==126/* BigValCode */){value=65535/* BigVal */;break;}if(next>=92/* Gap2 */)next--;if(next>=34/* Gap1 */)next--;let digit=next-32/* Start */;if(digit>=46/* Base */){digit-=46/* Base */;stop=true;}value+=digit;if(stop)break;value*=46/* Base */;}if(array)array[out++]=value;else array=new Type(value);}return array;}// Environment variable used to control console output\nconst verbose=typeof process!=\"undefined\"&&process.env&&/\\bparse\\b/.test(process.env.LOG);let stackIDs=null;var Safety;(function(Safety){Safety[Safety[\"Margin\"]=25]=\"Margin\";})(Safety||(Safety={}));function cutAt(tree,pos,side){let cursor=tree.cursor(IterMode.IncludeAnonymous);cursor.moveTo(pos);for(;;){if(!(side<0?cursor.childBefore(pos):cursor.childAfter(pos)))for(;;){if((side<0?cursor.to<pos:cursor.from>pos)&&!cursor.type.isError)return side<0?Math.max(0,Math.min(cursor.to-1,pos-25/* Margin */)):Math.min(tree.length,Math.max(cursor.from+1,pos+25/* Margin */));if(side<0?cursor.prevSibling():cursor.nextSibling())break;if(!cursor.parent())return side<0?0:tree.length;}}}class FragmentCursor{constructor(fragments,nodeSet){this.fragments=fragments;this.nodeSet=nodeSet;this.i=0;this.fragment=null;this.safeFrom=-1;this.safeTo=-1;this.trees=[];this.start=[];this.index=[];this.nextFragment();}nextFragment(){let fr=this.fragment=this.i==this.fragments.length?null:this.fragments[this.i++];if(fr){this.safeFrom=fr.openStart?cutAt(fr.tree,fr.from+fr.offset,1)-fr.offset:fr.from;this.safeTo=fr.openEnd?cutAt(fr.tree,fr.to+fr.offset,-1)-fr.offset:fr.to;while(this.trees.length){this.trees.pop();this.start.pop();this.index.pop();}this.trees.push(fr.tree);this.start.push(-fr.offset);this.index.push(0);this.nextStart=this.safeFrom;}else {this.nextStart=1e9;}}// `pos` must be >= any previously given `pos` for this cursor\nnodeAt(pos){if(pos<this.nextStart)return null;while(this.fragment&&this.safeTo<=pos)this.nextFragment();if(!this.fragment)return null;for(;;){let last=this.trees.length-1;if(last<0){// End of tree\nthis.nextFragment();return null;}let top=this.trees[last],index=this.index[last];if(index==top.children.length){this.trees.pop();this.start.pop();this.index.pop();continue;}let next=top.children[index];let start=this.start[last]+top.positions[index];if(start>pos){this.nextStart=start;return null;}if(next instanceof Tree){if(start==pos){if(start<this.safeFrom)return null;let end=start+next.length;if(end<=this.safeTo){let lookAhead=next.prop(NodeProp.lookAhead);if(!lookAhead||end+lookAhead<this.fragment.to)return next;}}this.index[last]++;if(start+next.length>=Math.max(this.safeFrom,pos)){// Enter this node\nthis.trees.push(next);this.start.push(start);this.index.push(0);}}else {this.index[last]++;this.nextStart=start+next.length;}}}}class TokenCache{constructor(parser,stream){this.stream=stream;this.tokens=[];this.mainToken=null;this.actions=[];this.tokens=parser.tokenizers.map(_=>new CachedToken());}getActions(stack){let actionIndex=0;let main=null;let{parser}=stack.p,{tokenizers}=parser;let mask=parser.stateSlot(stack.state,3/* TokenizerMask */);let context=stack.curContext?stack.curContext.hash:0;let lookAhead=0;for(let i=0;i<tokenizers.length;i++){if((1<<i&mask)==0)continue;let tokenizer=tokenizers[i],token=this.tokens[i];if(main&&!tokenizer.fallback)continue;if(tokenizer.contextual||token.start!=stack.pos||token.mask!=mask||token.context!=context){this.updateCachedToken(token,tokenizer,stack);token.mask=mask;token.context=context;}if(token.lookAhead>token.end+25/* Margin */)lookAhead=Math.max(token.lookAhead,lookAhead);if(token.value!=0/* Err */){let startIndex=actionIndex;if(token.extended>-1)actionIndex=this.addActions(stack,token.extended,token.end,actionIndex);actionIndex=this.addActions(stack,token.value,token.end,actionIndex);if(!tokenizer.extend){main=token;if(actionIndex>startIndex)break;}}}while(this.actions.length>actionIndex)this.actions.pop();if(lookAhead)stack.setLookAhead(lookAhead);if(!main&&stack.pos==this.stream.end){main=new CachedToken();main.value=stack.p.parser.eofTerm;main.start=main.end=stack.pos;actionIndex=this.addActions(stack,main.value,main.end,actionIndex);}this.mainToken=main;return this.actions;}getMainToken(stack){if(this.mainToken)return this.mainToken;let main=new CachedToken(),{pos,p}=stack;main.start=pos;main.end=Math.min(pos+1,p.stream.end);main.value=pos==p.stream.end?p.parser.eofTerm:0/* Err */;return main;}updateCachedToken(token,tokenizer,stack){tokenizer.token(this.stream.reset(stack.pos,token),stack);if(token.value>-1){let{parser}=stack.p;for(let i=0;i<parser.specialized.length;i++)if(parser.specialized[i]==token.value){let result=parser.specializers[i](this.stream.read(token.start,token.end),stack);if(result>=0&&stack.p.parser.dialect.allows(result>>1)){if((result&1)==0/* Specialize */)token.value=result>>1;else token.extended=result>>1;break;}}}else {token.value=0/* Err */;token.end=Math.min(stack.p.stream.end,stack.pos+1);}}putAction(action,token,end,index){// Don't add duplicate actions\nfor(let i=0;i<index;i+=3)if(this.actions[i]==action)return index;this.actions[index++]=action;this.actions[index++]=token;this.actions[index++]=end;return index;}addActions(stack,token,end,index){let{state}=stack,{parser}=stack.p,{data}=parser;for(let set=0;set<2;set++){for(let i=parser.stateSlot(state,set?2/* Skip */:1/* Actions */);;i+=3){if(data[i]==65535/* End */){if(data[i+1]==1/* Next */){i=pair(data,i+2);}else {if(index==0&&data[i+1]==2/* Other */)index=this.putAction(pair(data,i+2),token,end,index);break;}}if(data[i]==token)index=this.putAction(pair(data,i+1),token,end,index);}}return index;}}var Rec;(function(Rec){Rec[Rec[\"Distance\"]=5]=\"Distance\";Rec[Rec[\"MaxRemainingPerStep\"]=3]=\"MaxRemainingPerStep\";// When two stacks have been running independently long enough to\n// add this many elements to their buffers, prune one.\nRec[Rec[\"MinBufferLengthPrune\"]=500]=\"MinBufferLengthPrune\";Rec[Rec[\"ForceReduceLimit\"]=10]=\"ForceReduceLimit\";// Once a stack reaches this depth (in .stack.length) force-reduce\n// it back to CutTo to avoid creating trees that overflow the stack\n// on recursive traversal.\nRec[Rec[\"CutDepth\"]=15000]=\"CutDepth\";Rec[Rec[\"CutTo\"]=9000]=\"CutTo\";})(Rec||(Rec={}));class Parse{constructor(parser,input,fragments,ranges){this.parser=parser;this.input=input;this.ranges=ranges;this.recovering=0;this.nextStackID=0x2654;// ♔, ♕, ♖, ♗, ♘, ♙, ♠, ♡, ♢, ♣, ♤, ♥, ♦, ♧\nthis.minStackPos=0;this.reused=[];this.stoppedAt=null;this.stream=new InputStream(input,ranges);this.tokens=new TokenCache(parser,this.stream);this.topTerm=parser.top[1];let{from}=ranges[0];this.stacks=[Stack.start(this,parser.top[0],from)];this.fragments=fragments.length&&this.stream.end-from>parser.bufferLength*4?new FragmentCursor(fragments,parser.nodeSet):null;}get parsedPos(){return this.minStackPos;}// Move the parser forward. This will process all parse stacks at\n// `this.pos` and try to advance them to a further position. If no\n// stack for such a position is found, it'll start error-recovery.\n//\n// When the parse is finished, this will return a syntax tree. When\n// not, it returns `null`.\nadvance(){let stacks=this.stacks,pos=this.minStackPos;// This will hold stacks beyond `pos`.\nlet newStacks=this.stacks=[];let stopped,stoppedTokens;// Keep advancing any stacks at `pos` until they either move\n// forward or can't be advanced. Gather stacks that can't be\n// advanced further in `stopped`.\nfor(let i=0;i<stacks.length;i++){let stack=stacks[i];for(;;){this.tokens.mainToken=null;if(stack.pos>pos){newStacks.push(stack);}else if(this.advanceStack(stack,newStacks,stacks)){continue;}else {if(!stopped){stopped=[];stoppedTokens=[];}stopped.push(stack);let tok=this.tokens.getMainToken(stack);stoppedTokens.push(tok.value,tok.end);}break;}}if(!newStacks.length){let finished=stopped&&findFinished(stopped);if(finished)return this.stackToTree(finished);if(this.parser.strict){if(verbose&&stopped)console.log(\"Stuck with token \"+(this.tokens.mainToken?this.parser.getName(this.tokens.mainToken.value):\"none\"));throw new SyntaxError(\"No parse at \"+pos);}if(!this.recovering)this.recovering=5/* Distance */;}if(this.recovering&&stopped){let finished=this.stoppedAt!=null&&stopped[0].pos>this.stoppedAt?stopped[0]:this.runRecovery(stopped,stoppedTokens,newStacks);if(finished)return this.stackToTree(finished.forceAll());}if(this.recovering){let maxRemaining=this.recovering==1?1:this.recovering*3/* MaxRemainingPerStep */;if(newStacks.length>maxRemaining){newStacks.sort((a,b)=>b.score-a.score);while(newStacks.length>maxRemaining)newStacks.pop();}if(newStacks.some(s=>s.reducePos>pos))this.recovering--;}else if(newStacks.length>1){// Prune stacks that are in the same state, or that have been\n// running without splitting for a while, to avoid getting stuck\n// with multiple successful stacks running endlessly on.\nouter:for(let i=0;i<newStacks.length-1;i++){let stack=newStacks[i];for(let j=i+1;j<newStacks.length;j++){let other=newStacks[j];if(stack.sameState(other)||stack.buffer.length>500/* MinBufferLengthPrune */&&other.buffer.length>500/* MinBufferLengthPrune */){if((stack.score-other.score||stack.buffer.length-other.buffer.length)>0){newStacks.splice(j--,1);}else {newStacks.splice(i--,1);continue outer;}}}}}this.minStackPos=newStacks[0].pos;for(let i=1;i<newStacks.length;i++)if(newStacks[i].pos<this.minStackPos)this.minStackPos=newStacks[i].pos;return null;}stopAt(pos){if(this.stoppedAt!=null&&this.stoppedAt<pos)throw new RangeError(\"Can't move stoppedAt forward\");this.stoppedAt=pos;}// Returns an updated version of the given stack, or null if the\n// stack can't advance normally. When `split` and `stacks` are\n// given, stacks split off by ambiguous operations will be pushed to\n// `split`, or added to `stacks` if they move `pos` forward.\nadvanceStack(stack,stacks,split){let start=stack.pos,{parser}=this;let base=verbose?this.stackID(stack)+\" -> \":\"\";if(this.stoppedAt!=null&&start>this.stoppedAt)return stack.forceReduce()?stack:null;if(this.fragments){let strictCx=stack.curContext&&stack.curContext.tracker.strict,cxHash=strictCx?stack.curContext.hash:0;for(let cached=this.fragments.nodeAt(start);cached;){let match=this.parser.nodeSet.types[cached.type.id]==cached.type?parser.getGoto(stack.state,cached.type.id):-1;if(match>-1&&cached.length&&(!strictCx||(cached.prop(NodeProp.contextHash)||0)==cxHash)){stack.useNode(cached,match);if(verbose)console.log(base+this.stackID(stack)+` (via reuse of ${parser.getName(cached.type.id)})`);return true;}if(!(cached instanceof Tree)||cached.children.length==0||cached.positions[0]>0)break;let inner=cached.children[0];if(inner instanceof Tree&&cached.positions[0]==0)cached=inner;else break;}}let defaultReduce=parser.stateSlot(stack.state,4/* DefaultReduce */);if(defaultReduce>0){stack.reduce(defaultReduce);if(verbose)console.log(base+this.stackID(stack)+` (via always-reduce ${parser.getName(defaultReduce&65535/* ValueMask */)})`);return true;}if(stack.stack.length>=15000/* CutDepth */){while(stack.stack.length>9000/* CutTo */&&stack.forceReduce()){}}let actions=this.tokens.getActions(stack);for(let i=0;i<actions.length;){let action=actions[i++],term=actions[i++],end=actions[i++];let last=i==actions.length||!split;let localStack=last?stack:stack.split();localStack.apply(action,term,end);if(verbose)console.log(base+this.stackID(localStack)+` (via ${(action&65536/* ReduceFlag */)==0?\"shift\":`reduce of ${parser.getName(action&65535/* ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack==stack?\"\":\", split\"})`);if(last)return true;else if(localStack.pos>start)stacks.push(localStack);else split.push(localStack);}return false;}// Advance a given stack forward as far as it will go. Returns the\n// (possibly updated) stack if it got stuck, or null if it moved\n// forward and was given to `pushStackDedup`.\nadvanceFully(stack,newStacks){let pos=stack.pos;for(;;){if(!this.advanceStack(stack,null,null))return false;if(stack.pos>pos){pushStackDedup(stack,newStacks);return true;}}}runRecovery(stacks,tokens,newStacks){let finished=null,restarted=false;for(let i=0;i<stacks.length;i++){let stack=stacks[i],token=tokens[i<<1],tokenEnd=tokens[(i<<1)+1];let base=verbose?this.stackID(stack)+\" -> \":\"\";if(stack.deadEnd){if(restarted)continue;restarted=true;stack.restart();if(verbose)console.log(base+this.stackID(stack)+\" (restarted)\");let done=this.advanceFully(stack,newStacks);if(done)continue;}let force=stack.split(),forceBase=base;for(let j=0;force.forceReduce()&&j<10/* ForceReduceLimit */;j++){if(verbose)console.log(forceBase+this.stackID(force)+\" (via force-reduce)\");let done=this.advanceFully(force,newStacks);if(done)break;if(verbose)forceBase=this.stackID(force)+\" -> \";}for(let insert of stack.recoverByInsert(token)){if(verbose)console.log(base+this.stackID(insert)+\" (via recover-insert)\");this.advanceFully(insert,newStacks);}if(this.stream.end>stack.pos){if(tokenEnd==stack.pos){tokenEnd++;token=0/* Err */;}stack.recoverByDelete(token,tokenEnd);if(verbose)console.log(base+this.stackID(stack)+` (via recover-delete ${this.parser.getName(token)})`);pushStackDedup(stack,newStacks);}else if(!finished||finished.score<stack.score){finished=stack;}}return finished;}// Convert the stack's buffer to a syntax tree.\nstackToTree(stack){stack.close();return Tree.build({buffer:StackBufferCursor.create(stack),nodeSet:this.parser.nodeSet,topID:this.topTerm,maxBufferLength:this.parser.bufferLength,reused:this.reused,start:this.ranges[0].from,length:stack.pos-this.ranges[0].from,minRepeatType:this.parser.minRepeatTerm});}stackID(stack){let id=(stackIDs||(stackIDs=new WeakMap())).get(stack);if(!id)stackIDs.set(stack,id=String.fromCodePoint(this.nextStackID++));return id+stack;}}function pushStackDedup(stack,newStacks){for(let i=0;i<newStacks.length;i++){let other=newStacks[i];if(other.pos==stack.pos&&other.sameState(stack)){if(newStacks[i].score<stack.score)newStacks[i]=stack;return;}}newStacks.push(stack);}class Dialect{constructor(source,flags,disabled){this.source=source;this.flags=flags;this.disabled=disabled;}allows(term){return !this.disabled||this.disabled[term]==0;}}/// A parser holds the parse tables for a given grammar, as generated\n/// by `lezer-generator`.\nclass LRParser extends Parser{/// @internal\nconstructor(spec){super();/// @internal\nthis.wrappers=[];if(spec.version!=14/* Version */)throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${14/* Version */})`);let nodeNames=spec.nodeNames.split(\" \");this.minRepeatTerm=nodeNames.length;for(let i=0;i<spec.repeatNodeCount;i++)nodeNames.push(\"\");let topTerms=Object.keys(spec.topRules).map(r=>spec.topRules[r][1]);let nodeProps=[];for(let i=0;i<nodeNames.length;i++)nodeProps.push([]);function setProp(nodeID,prop,value){nodeProps[nodeID].push([prop,prop.deserialize(String(value))]);}if(spec.nodeProps)for(let propSpec of spec.nodeProps){let prop=propSpec[0];if(typeof prop==\"string\")prop=NodeProp[prop];for(let i=1;i<propSpec.length;){let next=propSpec[i++];if(next>=0){setProp(next,prop,propSpec[i++]);}else {let value=propSpec[i+-next];for(let j=-next;j>0;j--)setProp(propSpec[i++],prop,value);i++;}}}this.nodeSet=new NodeSet(nodeNames.map((name,i)=>NodeType.define({name:i>=this.minRepeatTerm?undefined:name,id:i,props:nodeProps[i],top:topTerms.indexOf(i)>-1,error:i==0,skipped:spec.skippedNodes&&spec.skippedNodes.indexOf(i)>-1})));if(spec.propSources)this.nodeSet=this.nodeSet.extend(...spec.propSources);this.strict=false;this.bufferLength=DefaultBufferLength;let tokenArray=decodeArray(spec.tokenData);this.context=spec.context;this.specialized=new Uint16Array(spec.specialized?spec.specialized.length:0);this.specializers=[];if(spec.specialized)for(let i=0;i<spec.specialized.length;i++){this.specialized[i]=spec.specialized[i].term;this.specializers[i]=spec.specialized[i].get;}this.states=decodeArray(spec.states,Uint32Array);this.data=decodeArray(spec.stateData);this.goto=decodeArray(spec.goto);this.maxTerm=spec.maxTerm;this.tokenizers=spec.tokenizers.map(value=>typeof value==\"number\"?new TokenGroup(tokenArray,value):value);this.topRules=spec.topRules;this.dialects=spec.dialects||{};this.dynamicPrecedences=spec.dynamicPrecedences||null;this.tokenPrecTable=spec.tokenPrec;this.termNames=spec.termNames||null;this.maxNode=this.nodeSet.types.length-1;this.dialect=this.parseDialect();this.top=this.topRules[Object.keys(this.topRules)[0]];}createParse(input,fragments,ranges){let parse=new Parse(this,input,fragments,ranges);for(let w of this.wrappers)parse=w(parse,input,fragments,ranges);return parse;}/// Get a goto table entry @internal\ngetGoto(state,term,loose=false){let table=this.goto;if(term>=table[0])return -1;for(let pos=table[term+1];;){let groupTag=table[pos++],last=groupTag&1;let target=table[pos++];if(last&&loose)return target;for(let end=pos+(groupTag>>1);pos<end;pos++)if(table[pos]==state)return target;if(last)return -1;}}/// Check if this state has an action for a given terminal @internal\nhasAction(state,terminal){let data=this.data;for(let set=0;set<2;set++){for(let i=this.stateSlot(state,set?2/* Skip */:1/* Actions */),next;;i+=3){if((next=data[i])==65535/* End */){if(data[i+1]==1/* Next */)next=data[i=pair(data,i+2)];else if(data[i+1]==2/* Other */)return pair(data,i+2);else break;}if(next==terminal||next==0/* Err */)return pair(data,i+1);}}return 0;}/// @internal\nstateSlot(state,slot){return this.states[state*6/* Size */+slot];}/// @internal\nstateFlag(state,flag){return (this.stateSlot(state,0/* Flags */)&flag)>0;}/// @internal\nvalidAction(state,action){if(action==this.stateSlot(state,4/* DefaultReduce */))return true;for(let i=this.stateSlot(state,1/* Actions */);;i+=3){if(this.data[i]==65535/* End */){if(this.data[i+1]==1/* Next */)i=pair(this.data,i+2);else return false;}if(action==pair(this.data,i+1))return true;}}/// Get the states that can follow this one through shift actions or\n/// goto jumps. @internal\nnextStates(state){let result=[];for(let i=this.stateSlot(state,1/* Actions */);;i+=3){if(this.data[i]==65535/* End */){if(this.data[i+1]==1/* Next */)i=pair(this.data,i+2);else break;}if((this.data[i+2]&65536/* ReduceFlag */>>16)==0){let value=this.data[i+1];if(!result.some((v,i)=>i&1&&v==value))result.push(this.data[i],value);}}return result;}/// @internal\noverrides(token,prev){let iPrev=findOffset(this.data,this.tokenPrecTable,prev);return iPrev<0||findOffset(this.data,this.tokenPrecTable,token)<iPrev;}/// Configure the parser. Returns a new parser instance that has the\n/// given settings modified. Settings not provided in `config` are\n/// kept from the original parser.\nconfigure(config){// Hideous reflection-based kludge to make it easy to create a\n// slightly modified copy of a parser.\nlet copy=Object.assign(Object.create(LRParser.prototype),this);if(config.props)copy.nodeSet=this.nodeSet.extend(...config.props);if(config.top){let info=this.topRules[config.top];if(!info)throw new RangeError(`Invalid top rule name ${config.top}`);copy.top=info;}if(config.tokenizers)copy.tokenizers=this.tokenizers.map(t=>{let found=config.tokenizers.find(r=>r.from==t);return found?found.to:t;});if(config.contextTracker)copy.context=config.contextTracker;if(config.dialect)copy.dialect=this.parseDialect(config.dialect);if(config.strict!=null)copy.strict=config.strict;if(config.wrap)copy.wrappers=copy.wrappers.concat(config.wrap);if(config.bufferLength!=null)copy.bufferLength=config.bufferLength;return copy;}/// Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)\n/// are registered for this parser.\nhasWrappers(){return this.wrappers.length>0;}/// Returns the name associated with a given term. This will only\n/// work for all terms when the parser was generated with the\n/// `--names` option. By default, only the names of tagged terms are\n/// stored.\ngetName(term){return this.termNames?this.termNames[term]:String(term<=this.maxNode&&this.nodeSet.types[term].name||term);}/// The eof term id is always allocated directly after the node\n/// types. @internal\nget eofTerm(){return this.maxNode+1;}/// The type of top node produced by the parser.\nget topNode(){return this.nodeSet.types[this.top[1]];}/// @internal\ndynamicPrecedence(term){let prec=this.dynamicPrecedences;return prec==null?0:prec[term]||0;}/// @internal\nparseDialect(dialect){let values=Object.keys(this.dialects),flags=values.map(()=>false);if(dialect)for(let part of dialect.split(\" \")){let id=values.indexOf(part);if(id>=0)flags[id]=true;}let disabled=null;for(let i=0;i<values.length;i++)if(!flags[i]){for(let j=this.dialects[values[i]],id;(id=this.data[j++])!=65535/* End */;)(disabled||(disabled=new Uint8Array(this.maxTerm+1)))[id]=1;}return new Dialect(dialect,flags,disabled);}/// (used by the output of the parser generator) @internal\nstatic deserialize(spec){return new LRParser(spec);}}function pair(data,off){return data[off]|data[off+1]<<16;}function findOffset(data,start,term){for(let i=start,next;(next=data[i])!=65535/* End */;i++)if(next==term)return i-start;return -1;}function findFinished(stacks){let best=null;for(let stack of stacks){let stopped=stack.p.stoppedAt;if((stack.pos==stack.p.stream.end||stopped!=null&&stack.pos>stopped)&&stack.p.parser.stateFlag(stack.state,2/* Accepting */)&&(!best||best.score<stack.score))best=stack;}return best;}// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier={__proto__:null,for:10,in:18,return:23,if:26,then:28,else:30,some:34,every:36,satisfies:43,or:46,and:50,between:58,instance:82,of:85,days:93,time:95,duration:97,years:99,months:101,date:103,list:109,context:115,function:122,string:141,length:143,upper:145,case:147,lower:149,substring:151,before:153,after:155,starts:157,with:159,ends:161,contains:163,insert:165,index:167,distinct:169,values:171,met:173,by:175,overlaps:177,finished:179,started:181,day:183,year:185,week:187,month:189,get:191,value:193,entries:195,start:205,position:207,decimal:209,sep:211,separator:213,grouping:215,null:218,true:344,false:344,\"?\":232,external:248,method:265,signature:267,not:273};const parser=LRParser.deserialize({version:14,states:\"!#UO]QPOOO&hQPOOO'sQPO'#FiO]QPO'#DOO*[QPO'#DOO,zQPO'#DrOOQO'#En'#EnOOQO'#Eo'#EoOOQO'#Ep'#EpO,zQPO'#EqOOQO'#F{'#F{OOQO'#Fz'#FzOOQO'#Es'#EsO-PQPO'#EvO-kQPO'#EwO0ZQPO'#ExO-PQPO'#EuOOQO'#Eu'#EuOOQO'#Fk'#FkO0bQPO'#FQOOQO'#GQ'#GQOOQO'#Fj'#FjOOQO'#FZ'#FZQ]QPOOO0pQPO'#C`O]QPO'#ChO0pQPO'#ClO0uQPO'#DsO0zQPO'#DsO1PQPO'#DsO1UQPO'#DsO1^QPO'#DsO1cQPO'#DsO1hQPO'#DsO1mQPO'#DsO1rQPO'#DsO1wQPO'#DsO1|QPO'#DsO2RQPO'#DsO2WQPO'#DsO2`QPO'#ErOOQO'#Er'#ErO2hQPO'#EyO2mQPO'#CzO5hQPO'#FqOOQO'#C|'#C|O5sQPO'#FXQOQPOOO5zQPOOO]QPO,59bO]QPO,59jO]QPO,59jO]QPO,59jO0pQPO,5:YO]QPO,5:[O8lQPO'#FwOOQO,5:^,5:^OOQO,5<T,5<TO]QPO,59^O]QPO,59`O]QPO,59bO;lQPO,59bO;sQPO,59pO;xQPO,59jOB]QPO,5;YOOQO,5;],5;]OOQO'#Cd'#CdOGqQPO'#DYOKoQPO'#EnOOQO'#GP'#GPOKtQPO,5;bOMQQPO'#CdOM_QPO,5;cOMfQPO'#FzONsQPO'#FyO! QQPO,5;dOOQO,5;a,5;aOOQO'#FS'#FSO! VQPO'#FRO! [QPO'#GSO! dQPO,5;lO! iQPO'#FTOOQO-E9X-E9XO! nQPO'#FmOOQO'#Cb'#CbO! vQPO'#CcO! {QPO,58zO!!QQPO,59SO!!XQPO'#FpOOQO'#Co'#CoO!!aQPO'#CpO!!fQPO,59WO!!kQPO,5:_OOQO,5:_,5:_O!!pQPO,5:_O!!xQPO,5:_O!!}QPO,5;^O!#SQPO,5;eO]QPO'#F^O!#eQPO,5<]O]QPOOO!'XQPO1G.|O!+^QPO1G/UO!+hQPO1G/UO!/jQPO1G/UOOQO1G/t1G/tO!/tQPO1G/vOOQO'#Ed'#EdO!/{QPO'#EcO!0QQPO'#FxOOQO'#Eb'#EbOOQO'#El'#ElO!0YQPO,5<cO!0_QPO'#EeO!0dQPO'#EeO!3tQPO1G.xO!7sQPO1G.zO!9bQPO1G.|O-kQPO1G.|OOQO1G.|1G.|O!9iQPO1G/[O0pQPO'#F_O!:QQPO,59tOOQO,5;Y,5;YO-PQPO1G0|OOQO1G0}1G0}O]QPO'#FcO!>OQPO,5<eOOQO1G1O1G1OO]QPO,5;mO!>ZQPO'#FeO!>fQPO,5<nOOQO1G1W1G1WOOQO,5;o,5;oO0pQPO'#F[O!>nQPO,5<XO!>vQPO,58}O]QPO1G.fO!AfQPO1G.nO0pQPO'#F]O!DUQPO,5<[O]QPO,59[O]QPO1G.rO!D^QPO1G/yOOQO1G/y1G/yOOQO1G0x1G0xO!DcQPO'#E{O!DnQPO'#GROOQO'#Ez'#EzO!DvQPO1G1POOQO,5;x,5;xOOQO-E9[-E9[O!D{QPOOOOQO7+%b7+%bO]QPO,5:}O!EQQPO'#FbO!E`QPO,5<dOOQO1G1}1G1}OOQO,5;P,5;PO]QPO7+$hO!EhQPO,5;cO!ErQPO7+$hOOQO'#DX'#DXO!EwQPO'#DZO!E|QPO'#DZO!FRQPO'#DZO!FWQQO'#DcO!F]QQO'#DfO!FbQQO'#DjOOQO7+$v7+$vOOQO,5;y,5;yOOQO-E9]-E9]O!FgQPO7+&hO!FrQPO,5;}OOQO-E9a-E9aO!GPQPO1G1XOOQO,5<P,5<POOQO-E9c-E9cOOQO,5;v,5;vOOQO-E9Y-E9YO!H[QPO'#CfOOQO1G.i1G.iO!HiQPO7+$QO# [QPO7+$YOOQO,5;w,5;wOOQO-E9Z-E9ZO# cQPO1G.vO# mQPO7+$^OOQO7+%e7+%eO!9iQPO,5;gO!EQQPO'#FdO#$hQPO,5<mO#$pQPO7+&kO#$wQPO1G0iOOQO,5;|,5;|OOQO-E9`-E9`O#(jQPO<<HSOOQO<<HS<<HSO#(}QPO,59uO#)SQPO,59uO#)XQPO,59uO#)^QPO,59}O0pQPO,5:QO#)uQQO,5:UOOQO<<JS<<JSO]QPO,59QO]QPO<<GtOOQO1G1R1G1ROOQO,5<O,5<OOOQO-E9b-E9bO#)|QPO'#E}OOQO<<JV<<JVO]QPO<<JVO#,wQPO1G/aOOQO1G/a1G/aO#,|QQO'#DYO#-XQQO1G/iO#-^QPO'#DiO#-cQQO'#FsOOQO'#Dh'#DhO#-kQQO1G/lOOQO'#Dm'#DmO#-pQQO'#FuOOQO'#Dl'#DlO#-xQQO1G/pO#-}QPO1G.lO#.XQPOAN=`OOQOAN?qAN?qOOQO7+${7+${O#1SQQO,59tOOQO7+%T7+%TO#)^QPO,5:TO0pQPO'#F`O#1_QQO,5<_OOQO7+%W7+%WO#)^QPO'#FaO#1gQQO,5<aO#1oQQO7+%[OOQO1G/o1G/oOOQO,5;z,5;zOOQO-E9^-E9^OOQO,5;{,5;{OOQO-E9_-E9_O!9iQPO<<HvOOQOAN>bAN>bO#1tQPO,5;YO#1{QPO'#CdO#2SQPO7+$YO#)^QPO<<HvO#4vQPO'#DOO!>vQPO,59bO!>vQPO,59jO!>vQPO,59jO!>vQPO,59jO!>vQPO,59^O!>vQPO,59`O#7jQPO,59bO#8lQPO1G.|O#:TQPO1G/UO#:_QPO1G/UO#;gQPO1G.xO#<rQPO1G.zO!>vQPO1G.fO#=VQPO1G.nO!AfQPO1G.nO#=VQPO1G.nO!>vQPO1G.rO!>vQPO7+$hO#?uQPO7+$QO#A^QPO7+$YO#AeQPO7+$^O#ArQPO7+&kO#BtQPO<<HSO!>vQPO<<GtO#CXQPO'#E}O!>vQPO<<JVO#CfQPOAN=`O#CsQQO7+%[O#CxQPO7+$YO!>vQPO'#DOO#DPQPO'#CzO#D^QPO,58zO#DcQPO,59SO#DjQPO,59SO#DqQPO,59SO#DxQPO,59WO#D}QPO1G.|O#EUQPO1G1PO#EZQQO1G/pO0pQPO'#C`O]QPO'#ChO]QPO'#ChO]QPO'#ChO0pQPO'#ClO!AfQPO,59bO!AfQPO,59jO!AfQPO,59jO!AfQPO,59jO!AfQPO,59^O!AfQPO,59`O]QPO,59bO#G{QPO,59bO!#SQPO,5;eO#HSQPO1G.|O#L_QPO1G/UO#LiQPO1G/UO#LpQPO1G.xO#MgQPO1G.zO!AfQPO1G.fO!AfQPO1G.rO!AfQPO7+$hO$ [QPO7+$QO$$YQPO7+$^O$'WQPO7+&kO$'_QPO<<HSO#)uQQO,5:UP!AfQPO<<GtO$'uQPO'#E}O!AfQPO<<JVP$*sQPOAN=`O$.cQPO'#DOO#=VQPO,59bO#=VQPO,59jO#=VQPO,59jO#=VQPO,59jO#=VQPO,59^O#=VQPO,59`O$1VQPO,59bO$1^QPO1G.|O$2{QPO1G/UO$3VQPO1G/UO$4_QPO1G.xO$5mQPO1G.zO#=VQPO1G.fO#=VQPO1G.rO#=VQPO7+$hO$6TQPO7+$QO$6hQPO7+$^O$6{QPO7+&kO$7SQPO<<HSP#=VQPO<<GtO$7jQPO'#E}O#=VQPO<<JVP$7}QPOAN=`O#=VQPO'#DOO$8bQPO'#CzO$8uQPO,58zO$8zQPO,59WO$9PQPO1G.|O$9WQPO1G1PO!AfQPO'#DOO$;cQPO'#DOO$<PQPO'#EyO$<UQPO'#CzO$?SQPO,58zO$?XQPO,59WO$?^QPO1G.|O$?eQPO1G1PO$?jQQO'#DjO0pQPO'#C`O0pQPO'#ClO]QPO,59bO!#SQPO,5;eO0pQPO'#C`O0pQPO'#ClO]QPO,59bO!#SQPO,5;eO$?oQPO'#EyO$?tQPO'#Ey\",stateData:\"$?y~O$[OSPOSQOS~OThO]iOajObjOl`Oo^OsROtSO!PyO!QyO!RkO!TxO!WpO!_zO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$pUO$qVO$rWO~OThO]iOajObjOl`Oo^OsRO!PyO!QyO!RkO!TxO!WpO!_zO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$pUO$qVO$rWO~Ot!OO#|!QO~P#{OX!_Og![Oi!]Ok!ROl!ROm!^Oo!XOs!SOt!SOu!TOv!TOw!UOy!`O!e!WO$f!VO~O$w!ZOT$]X]$]Xa$]Xb$]X!P$]X!Q$]X!R$]X!T$]X!W$]X!_$]X!c$]X!h$]X!j$]X!l$]X!m$]X!p$]X!r$]X!t$]X!u$]X!v$]X!x$]X!z$]X!{$]X!|$]X!}$]X#P$]X#Q$]X#R$]X#a$]X#h$]X#s$]X$Y$]X$`$]X$p$]X$q$]X$r$]X~P&rOThO]iOajObjOl`Oo^OsROtSO!PyO!QyO!RkO!TxO!WpO!_zO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$p!bO$qVO$rWO~Oo!XO~Ot!fO!PyO!QyO!TxO$`!dO$pUO$qVO$rWO~OThO]iOajObjOl`Oo^OsROtSO!PyO!QyO!RkO!TxO!WpO!_zO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`!iO$pUO$qVO$rWO~O!c$mP~P-kO#x!sO$`!dO$qVO#r$vP~O$`!dO~Oi#OO~O!i#PO~O!k#PO~O!n#PO!o#PO~O!q#PO~O!s#PO~O!n#PO~Oz#PO~O!w#PO~O!y#PO~Oz#QO~Oz#RO~O#S#PO#T#PO~Oi#SOo#fX~Oo#TO~O$YnX$cnXTnX]nXanXbnX!PnX!QnX!RnX!TnX!WnX!_nX!cnX!hnX!jnX!lnX!mnX!pnX!rnX!tnX!unX!vnX!xnX!znX!{nX!|nX!}nX#PnX#QnX#RnX#anX#hnX#snX$`nX$pnX$qnX$rnX$wnXqnX^nX#rnXenXZnX~P&rO$c#UO$Y$eXq$eX~O$Y#{X~P*[Oo#WO~OThO]iOajObjOl`Oo^OsROtSO!PyO!QyO!RkO!TxO!WpO!_zO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$pUO$qVO$rWO~O#Y#eO#[#fO#_#fO$`&`Oq$mP~P6POThO]iOajObjOl`OsROtSO!PyO!QyO!RkO!TxO!WpO!_zO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$pUO$qVO$rWO~Oo#jO~P9POz#lO~Oo!XOy!`O!e!WO$f!VOTraXra]raarabragrairakralramrasratrauravrawra!Pra!Qra!Rra!Tra!Wra!_ra!cra!hra!jra!lra!mra!pra!rra!tra!ura!vra!xra!zra!{ra!|ra!}ra#Pra#Qra#Rra#ara#hra#sra$Yra$`ra$pra$qra$rra$wra$craqra^ra#rraZra$bra_raera~OX#bXX#bag#bXg#bai#bXi#bak#bXk#bal#bXl#bam#bXm#bao#bXo#bas#bXs#bat#bXt#bau#bXu#bav#bXv#baw#bXw#bay#bXy#ba!e#bX!e#ba$f#bX$f#ba$c#bX$c#ba$b#ba_#bX_#baZ#bXZ#ba~OT#bXT#ba]#bX]#baa#bXa#bab#bXb#ba!P#bX!P#ba!Q#bX!Q#ba!R#bX!R#ba!T#bX!T#ba!W#bX!W#ba!_#bX!_#ba!c#bX!c#ba!h#bX!h#ba!j#bX!j#ba!l#bX!l#ba!m#bX!m#ba!p#bX!p#ba!r#bX!r#ba!t#bX!t#ba!u#bX!u#ba!v#bX!v#ba!x#bX!x#ba!z#bX!z#ba!{#bX!{#ba!|#bX!|#ba!}#bX!}#ba#P#bX#P#ba#Q#bX#Q#ba#R#bX#R#ba#a#bX#a#ba#h#bX#h#ba#s#bX#s#ba$Y#bX$Y#ba$`#bX$`#ba$p#bX$p#ba$q#bX$q#ba$r#bX$r#ba$w#bX$w#baq#bXq#ba^#bX^#ba#r#bX#r#bae#bXe#ba~P?vO$f#mO$b|XT|XX|X]|Xa|Xb|Xg|Xi|Xk|Xl|Xm|Xo|Xs|Xt|Xu|Xv|Xw|Xy|X!P|X!Q|X!R|X!T|X!W|X!_|X!c|X!e|X!h|X!j|X!l|X!m|X!p|X!r|X!t|X!u|X!v|X!x|X!z|X!{|X!||X!}|X#P|X#Q|X#R|X#a|X#h|X#s|X$Y|X$`|X$p|X$q|X$r|X$w|X$c|Xq|X^|X#r|XZ|X_|Xe|X~O$p#oO~O$b#pO~OX#gXg#gXi#gXk#gXl#gXm#gXo#gXq#gXs#gXt#gXu#gXv#gXw#gXy#gX!e#gX$f#gX$c#gX~O$bWX$fWX!c#gX~PKyOq#qO~P&rOX$nXg$nXi$nXk$nXl$nXm$nXo$nXq$nXs$nXt$nXu$nXv$nXw$nXy$nX!e$nX$b$sX$f$nX!c$nX$c$nX~O$c#rO!c$mXq$mX~P&rO!c#tO~O$h#uO~O$c#vO#r$vX~O#r#xO~O#y#yO~O$c#zOZ$aX~OX#|O~OZ#}O~O^$OO~P&rO$c$POe$dX~OX$RO~Oe$SO~O!S$TO~O#O$UO#P$UO~O#O$UO~O!P$VO~O#Y#eO#[#fO#_#fO$`!dOq$uP~O$c#UO$Y$eaq$ea~Oo!XOy!`O!e!WO$f!VOTjiXji]jiajibjigjiijikjiljimji!Pji!Qji!Rji!Tji!Wji!_ji!cji!hji!jji!lji!mji!pji!rji!tji!uji!vji!xji!zji!{ji!|ji!}ji#Pji#Qji#Rji#aji#hji#sji$Yji$`ji$pji$qji$rji$wji$cjiqji^ji#rjiejiZji~Os!SOt!SOu!TOv!TOw!UO~P!#pOo!XOw!UOy!`O!e!WO$f!VOTriXri]riaribrigriirikrilrimrisritri!Pri!Qri!Rri!Tri!Wri!_ri!cri!hri!jri!lri!mri!pri!rri!tri!uri!vri!xri!zri!{ri!|ri!}ri#Pri#Qri#Rri#ari#hri#sri$Yri$`ri$pri$qri$rri$wri$criqri^ri#rrieriZri~Ou!TOv!TO~P!'lOurivri~P!'lOo!XOy!`O!e!WO$f!VOTriXri]riaribrigriirikrilrimrisritriurivri!Pri!Qri!Rri!Tri!Wri!_ri!cri!hri!jri!lri!mri!pri!rri!tri!uri!vri!xri!zri!{ri!|ri!}ri#Pri#Qri#Rri#ari#hri#sri$Yri$`ri$pri$qri$rri$wri$criqri^ri#rriZri_rieri~Owri$bri~P!+rO!c$_O~P&rO$h$`O~O$c$aOq$lX~Oq$cO~O#Z$dO~O#]$dO#^$dO~Oo!XOy!`O!e!WO$f!VOTfi]fiafibfigfi!Pfi!Qfi!Rfi!Tfi!Wfi!_fi!cfi!hfi!jfi!lfi!mfi!pfi!rfi!tfi!ufi!vfi!xfi!zfi!{fi!|fi!}fi#Pfi#Qfi#Rfi#afi#hfi#sfi$Yfi$`fi$pfi$qfi$rfi$wfi$cfiqfi^fi#rfiefiZfi~OX!_Oi!]Ok!ROl!ROm!^Os!SOt!SOu!TOv!TOw!UO~P!0lOo!XOy!`O!e!WO$f!VOThi]hiahibhighiihi!Phi!Qhi!Rhi!Thi!Whi!_hi!chi!hhi!jhi!lhi!mhi!phi!rhi!thi!uhi!vhi!xhi!zhi!{hi!|hi!}hi#Phi#Qhi#Rhi#ahi#hhi#shi$Yhi$`hi$phi$qhi$rhi$whi$chiqhi^hi#rhiehiZhi~OX!_Ok!ROl!ROm!^Os!SOt!SOu!TOv!TOw!UO~P!4hOX!_Og![Ok!ROl!ROm!^Oo!XOs!SOt!SOu!TOv!TOw!UOy!`O!e!WO$f!VO~Oi$eO~P!8dO!O$iO!R$jO!T$kO!W$lO!Z$mO!_$nO$`!dO~O$f#mO$b|aT|aX|a]|aa|ab|ag|ai|ak|al|am|ao|as|at|au|av|aw|ay|a!P|a!Q|a!R|a!T|a!W|a!_|a!c|a!e|a!h|a!j|a!l|a!m|a!p|a!r|a!t|a!u|a!v|a!x|a!z|a!{|a!||a!}|a#P|a#Q|a#R|a#a|a#h|a#s|a$Y|a$`|a$p|a$q|a$r|a$w|a$c|aq|a^|a#r|aZ|a_|ae|a~O$c#rO!c$maq$ma~O#x!sO$`!dO$qVO~O$c#vO#r$va~O$c#zOZ$aa~OT']O]'^Oa'aOb'aOl`Oo^Os'ROt&cO!PyO!QyO!RkO!TxO!WpO!_(nO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$pUO$qVO$rWO~OT(yO]'_Oa(zOb(zOl`Oo^Os(lOt(mO!PyO!QyO!RkO!TxO!WpO!_)OO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$pUO$qVO$rWO~O$c$POe$da~O!Q%SO~O$h%TOq#oX$c#oX~O$c%UOq$uX~Oq%WO~Oq!PO~O#Y#eO#[#fO#_#fO$`!dO~O$c$aOq$la~Oq#qO$cnX~P&rOq%]O~Oi%^O~Oi%_O~Oi%`O~O!X%aO~O!X%bO~O!X%cO~Oq%dO!c%dO!e%dO~O!c$Va$c$Vaq$Va~P&rO#r#ui$c#ui~P&rOX&jOg&hOi&iOk&dOl&dOm'hOo!XOs&eOt&eOu&fOv&fOw&gOy!`O!e!WO$f!VO~O$b%eOZYX$cYX~P!GZOTSq]SqaSqbSq!PSq!QSq!RSq!TSq!WSq!_Sq!cSq!hSq!jSq!lSq!mSq!pSq!rSq!tSq!uSq!vSq!xSq!zSq!{Sq!|Sq!}Sq#PSq#QSq#RSq#aSq#hSq#sSq$YSq$`Sq$pSq$qSq$rSq$wSq$cSqqSq^Sq#rSqeSqZSq~P&rOX'iOg'fOi'gOk'bOl'bOm({Oo!XOs'cOt'cOu'dOv'dOw'eOy!`O!e!WO$f!VOT[q][qa[qb[q!P[q!Q[q!R[q!T[q!W[q!_[q!c[q!h[q!j[q!l[q!m[q!p[q!r[q!t[q!u[q!v[q!x[q!z[q!{[q!|[q!}[q#P[q#Q[q#R[q#a[q#h[q#s[q$Y[q$`[q$p[q$q[q$r[q$w[q$c[qq[q^[q#r[qe[qZ[q~O_%fO~P!KdOedi$cdi~P&rOT`q]`qa`qb`q!P`q!Q`q!R`q!T`q!W`q!_`q!c`q!h`q!j`q!l`q!m`q!p`q!r`q!t`q!u`q!v`q!x`q!z`q!{`q!|`q!}`q#P`q#Q`q#R`q#a`q#h`q#s`q$Y`q$``q$p`q$q`q$r`q$w`q$c`qq`q^`q#r`qe`qZ`q~P&rO$c%UOq$ua~O#p%lO~P]Oq#Vi$c#Vi~P&rOo!XOy!`O!e!WO$f!VOTjyXjy]jyajybjygjyijykjyljymjy!Pjy!Qjy!Rjy!Tjy!Wjy!_jy!cjy!hjy!jjy!ljy!mjy!pjy!rjy!tjy!ujy!vjy!xjy!zjy!{jy!|jy!}jy#Pjy#Qjy#Rjy#ajy#hjy#sjy$Yjy$`jy$pjy$qjy$rjy$wjy$cjyqjy^jy#rjyejyZjy~Os!SOt!SOu!TOv!TOw!UO~P#%RO!P%mO~O!S%mO~O!P%nO~O!O$iO!R$jO!T$kO!W$lO!Z$mO!_(tO$`!dO~O!U$iP~P#)^OT#qX]#qXa#qXb#qX!P#qX!Q#qX!R#qX!T#qX!W#qX!_#qX!c#qX!h#qX!j#qX!l#qX!m#qX!p#qX!r#qX!t#qX!u#qX!v#qX!x#qX!z#qX!{#qX!|#qX!}#qX#P#qX#Q#qX#R#qX#a#qX#h#qX#s#qX$Y#qX$`#qX$p#qX$q#qX$r#qX$w#qX$c#qXq#qX^#qX#r#qXe#qXZ#qX~P&rO!Q%|O~O$f#mO!U|X$c|X~O!U&OO~O$h&PO~O$c&QO!U$gX~O!U&SO~O$c&TO!U$iX~O!U&VO~OZYi$cYi~P&rOT[!R][!Ra[!Rb[!R!P[!R!Q[!R!R[!R!T[!R!W[!R!_[!R!c[!R!h[!R!j[!R!l[!R!m[!R!p[!R!r[!R!t[!R!u[!R!v[!R!x[!R!z[!R!{[!R!|[!R!}[!R#P[!R#Q[!R#R[!R#a[!R#h[!R#s[!R$Y[!R$`[!R$p[!R$q[!R$r[!R$w[!R$c[!Rq[!R^[!R#r[!Re[!RZ[!R~P&rO$f#mO!U|a$c|a~O$c&QO!U$ga~O$c&TO!U$ia~O$j&]O~O$b#bX~P?vO$hWX~PKyO_[q~P!KdOT']O]'^Oa'aOb'aOl`Oo^Os'ROt&cO!PyO!QyO!RkO!TxO!WpO!_(nO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$qVO$rWO~O$p&_O~P#2ZOT']O]'^Oa'aOb'aOl`Os'ROt&cO!PyO!QyO!RkO!TxO!WpO!_(nO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$pUO$qVO$rWO~Oo#jO~P#4}Oo!XOy!`O!e!WO$f!VOXjiZjigjiijikjiljimji$bji$cji~Os&eOt&eOu&fOv&fOw&gO~P#7qOo!XOw&gOy!`O!e!WO$f!VOXriZrigriirikrilrimrisritri$bri$cri~Ou&fOv&fO~P#9POurivri~P#9POX&jOi&iOk&dOl&dOm'hOo!XOs&eOt&eOu&fOv&fOw&gOy!`O!e!WO$f!VO~OZfigfi$bfi$cfi~P#:iOX&jOk&dOl&dOm'hOo!XOs&eOt&eOu&fOv&fOw&gOy!`O!e!WO$f!VO~OZhighiihi$bhi$chi~P#;wOT(uO]'`Oa(vOb(vOl`Oo^Os(fOt'|O!PyO!QyO!RkO!TxO!WpO!_(}O!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$pUO$qVO$rWO~OZSq$bSq$cSq~P!GZOX(TOg(ROi(SOk'}Ol'}Om(wOo!XOs(OOt(OOu(POv(POw(QOy!`O!e!WO$f!VOZ[q$b[q$c[q~O_&{O~P#@SOZ`q$b`q$c`q~P!GZO#p&}O~P!>vOo!XOy!`O!e!WO$f!VOXjyZjygjyijykjyljymjy$bjy$cjy~Os&eOt&eOu&fOv&fOw&gO~P#AyOZ#qX$b#qX$c#qX~P!GZOZ[!R$b[!R$c[!R~P!GZO$j&bO~O_[q~P#@SOZnX$bnX$cnX~P!GZOZ&pO~O^&qO~P&rO^&rO~P&rO^&sO~P&rOe&tO~Oi&uO~P!8dOq&yO~O!U'PO~OT(yO]'_Oa(zOb(zOl`Os(lOt(mO!PyO!QyO!RkO!TxO!WpO!_)OO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$pUO$qVO$rWO~Oo#jO~P#E`Os'cOt'cOu'dOv'dOw'eO_ji~P!#pOo!XOw'eOy!`O!e!WO$f!VOTriXri]ri_riaribrigriirikrilrimrisritri!Pri!Qri!Rri!Tri!Wri!_ri!cri!hri!jri!lri!mri!pri!rri!tri!uri!vri!xri!zri!{ri!|ri!}ri#Pri#Qri#Rri#ari#hri#sri$Yri$`ri$pri$qri$rri$wri$criqri^ri#rrieriZri~Ou'dOv'dO~P#HjOw'eO~P!+rOX'iOi'gOk'bOl'bOm({Os'cOt'cOu'dOv'dOw'eO_fi~P!0lOX'iOk'bOl'bOm({Os'cOt'cOu'dOv'dOw'eO_hi~P!4hOX'iOg'fOi'gOk'bOl'bOm({Oo!XOs'cOt'cOu'dOv'dOw'eOy!`O!e!WO$f!VO~OTSq]Sq_SqaSqbSq!PSq!QSq!RSq!TSq!WSq!_Sq!cSq!hSq!jSq!lSq!mSq!pSq!rSq!tSq!uSq!vSq!xSq!zSq!{Sq!|Sq!}Sq#PSq#QSq#RSq#aSq#hSq#sSq$YSq$`Sq$pSq$qSq$rSq$wSq$cSqqSq^Sq#rSqeSqZSq~P#NZOT`q]`q_`qa`qb`q!P`q!Q`q!R`q!T`q!W`q!_`q!c`q!h`q!j`q!l`q!m`q!p`q!r`q!t`q!u`q!v`q!x`q!z`q!{`q!|`q!}`q#P`q#Q`q#R`q#a`q#h`q#s`q$Y`q$``q$p`q$q`q$r`q$w`q$c`qq`q^`q#r`qe`qZ`q~P#NZO#p'zO~P!AfOs'cOt'cOu'dOv'dOw'eO_jy~P#%ROT#qX]#qX_#qXa#qXb#qX!P#qX!Q#qX!R#qX!T#qX!W#qX!_#qX!c#qX!h#qX!j#qX!l#qX!m#qX!p#qX!r#qX!t#qX!u#qX!v#qX!x#qX!z#qX!{#qX!|#qX!}#qX#P#qX#Q#qX#R#qX#a#qX#h#qX#s#qX$Y#qX$`#qX$p#qX$q#qX$r#qX$w#qX$c#qXq#qX^#qX#r#qXe#qXZ#qX~P#NZOX'iOg'fOi'gOk'bOl'bOm({Oo!XOs'cOt'cOu'dOv'dOw'eOy!`O!e!WO$f!VO~Q[!RT(uO]'`Oa(vOb(vOl`Oo^Os(fOt'|O!PyO!QyO!RkO!TxO!WpO!_(}O!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$qVO$rWO~O$p&_O~P$+vOT(uO]'`Oa(vOb(vOl`Os(fOt'|O!PyO!QyO!RkO!TxO!WpO!_(}O!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$pUO$qVO$rWO~Oo#jO~P$.jOs(OOt(OOu(POv(POw(QO_ji~P#7qOo!XOw(QOy!`O!e!WO$f!VOXriZri_rigriirikrilrimrisritri$bri$cri~Ou(POv(PO~P$1tOurivri~P$1tOX(TOi(SOk'}Ol'}Om(wOo!XOs(OOt(OOu(POv(POw(QOy!`O!e!WO$f!VO~OZfi_figfi$bfi$cfi~P$3aOX(TOk'}Ol'}Om(wOo!XOs(OOt(OOu(POv(POw(QOy!`O!e!WO$f!VO~OZhi_highiihi$bhi$chi~P$4rOg(ROZSq_Sq$bSq$cSq~P$3aOg(ROZ`q_`q$b`q$c`q~P$3aO#p(dO~P#=VOs(OOt(OOu(POv(POw(QO_jy~P#AyOg(ROZ#qX_#qX$b#qX$c#qX~P$3aOg(ROZ[!R_[!R$b[!R$c[!R~P$3aOg(ROZnX_nX$bnX$cnX~P$3aOZ(ZO~Oe([O~Oi(]O~P!8dOq(`O~Ol`Oo^O!PyO!QyO!RkO!TxO!WpO!c]O!e_O!hlO!jmO!lmO!mnO!poO!roO!tqO!urO!vsO!xtO!znO!{tO!|tO!}uO#PvO#QvO#RwO#aZO#hbO#scO$`[O$qVO$rWO~OT(yO]'_Oa(zOb(zOs(lOt(mO!_)OO$p!bO~P$9]Oo'jO~OTnX]nX_nXanXbnX!PnX!QnX!RnX!TnX!WnX!_nX!cnX!hnX!jnX!lnX!mnX!pnX!rnX!tnX!unX!vnX!xnX!znX!{nX!|nX!}nX#PnX#QnX#RnX#anX#hnX#snX$YnX$`nX$pnX$qnX$rnX$wnX$cnXqnX^nX#rnXenXZnX~P#NZOZ'pO~Oe'qO~Oi'rO~P!8dOq'uO~O!X'wO~Oo(xO~Oo(|O~O\",goto:\"FU$wPPPP$xP&w'T'^P(hP$xPPP$xPP(k(wP$xP$xP$xPPP)QP)`P$xPPPPP$xPP)i*O*WPPPPPPP*WPP*WP*c*f*WP*l*r$xP$xP$x*yPPPPPPPPPPPPPPPPPPPPPPPPPPPP,x,{-R-^PPPPPP,xP-g/i-g-g1o$xP$x3q$x5p5p7o7{P8UPP5p8b8h1kPPP8lP8o8u8{9R9X9c9i9o9u9{:RPPP:X:]?YPAXPPA_AePAjPAmPAqC`Cc$xCiPPPEo?YE{FR$ybOPRS^_gi!O!R!S!T!U!W!X![!]!^!_#U#W#j#r#u#|#}$O$R$S$`$e%W%e%f%l&c&d&e&f&g&h&i&j&p&q&r&s&t&u&y&{&}'R'^'_'`'b'c'd'e'f'g'h'i'p'q'r'u'x'z'|'}(O(P(Q(R(S(T(Z([(](`(b(d(f(l(m(w({Q!xhQ'T']Q(h(uR(p(yW!uh'](u(yR$x#zb!e]^_`#j#l#p%T&]S!oc#vY!wh#z'](u(yY!|j$P'a(v(zQ#]!V^#_!X#T$a%U'j(x(|Q$p#m[%o%a%c&P&T&b'wT%q%b&QR${#|Q!}jQ'X'aQ(i(vR(q(zW!zj'a(v(zR%O$PU|P#W#jW#k!_&j'i(TR$[#UQ!PPQ$^#WR$g#jQ$o#lQ%g%TQ%p%aU%u%c&T'wQ&W&PT&^&]&b[!g]^_`#j#pc$h#l%T%a%c&P&T&]&b'wR%t%bQ%r%bR&X&QQ%x%cR'['wS%v%c'wR&Z&T$yTOPRS^_gi!O!R!S!T!U!W!X![!]!^!_#U#W#j#r#u#|#}$O$R$S$`$e%W%e%f%l&c&d&e&f&g&h&i&j&p&q&r&s&t&u&y&{&}'R'^'_'`'b'c'd'e'f'g'h'i'p'q'r'u'x'z'|'}(O(P(Q(R(S(T(Z([(](`(b(d(f(l(m(w({R#d!XQ#a!XR%Y$aS#`!X$aZ$W#T%U'j(x(|_#_!X#T$a%U'j(x(|%PYOPRS]^_`gi!O!R!S!T!U!W!X![!]!^!_#U#W#j#p#r#u#|#}$O$R$S$`$e%W%e%f%l&c&d&e&f&g&h&i&j&p&q&r&s&t&u&y&{&}'R'^'_'`'b'c'd'e'f'g'h'i'p'q'r'u'x'z'|'}(O(P(Q(R(S(T(Z([(](`(b(d(f(l(m(w({%OYOPRS]^_`gi!O!R!S!T!U!W!X![!]!^!_#U#W#j#p#r#u#|#}$O$R$S$`$e%W%e%f%l&c&d&e&f&g&h&i&j&p&q&r&s&t&u&y&{&}'R'^'_'`'b'c'd'e'f'g'h'i'p'q'r'u'x'z'|'}(O(P(Q(R(S(T(Z([(](`(b(d(f(l(m(w({T!oc#v%PXOPRS]^_`gi!O!R!S!T!U!W!X![!]!^!_#U#W#j#p#r#u#|#}$O$R$S$`$e%W%e%f%l&c&d&e&f&g&h&i&j&p&q&r&s&t&u&y&{&}'R'^'_'`'b'c'd'e'f'g'h'i'p'q'r'u'x'z'|'}(O(P(Q(R(S(T(Z([(](`(b(d(f(l(m(w({$yaOPRS^_gi!O!R!S!T!U!W!X![!]!^!_#U#W#j#r#u#|#}$O$R$S$`$e%W%e%f%l&c&d&e&f&g&h&i&j&p&q&r&s&t&u&y&{&}'R'^'_'`'b'c'd'e'f'g'h'i'p'q'r'u'x'z'|'}(O(P(Q(R(S(T(Z([(](`(b(d(f(l(m(w({$ydOPRS^_gi!O!R!S!T!U!W!X![!]!^!_#U#W#j#r#u#|#}$O$R$S$`$e%W%e%f%l&c&d&e&f&g&h&i&j&p&q&r&s&t&u&y&{&}'R'^'_'`'b'c'd'e'f'g'h'i'p'q'r'u'x'z'|'}(O(P(Q(R(S(T(Z([(](`(b(d(f(l(m(w({Q$Z#TQ'Z'jQ(k(xR(s(|W$X#T'j(x(|R%h%UW%k%W&y'u(`X%{%l&}'z(dQ!qcR$v#vT!pc#vR!PPQgOR!tgQ#{!uR$y#{Q$Q!zR%P$QQ#V|R$]#VQ#n!eS$q#n%}R%}%oQ&R%rR&Y&RQ&U%vR&[&UQ$b#aR%Z$bQ#s!lR$t#sQ%V$XR%i%VQ#w!qR$w#wTfOgSQOgW{P!_#U#Wb!aRS!O&c'R'|(f(l(mQ!j^S!l_!XQ!yiQ#X!RQ#Y!SQ#Z!TW#[!U&g'e(QQ#^!WQ#g![Q#h!]Q#i!^Q$f#jQ$s#rQ$u#uQ$z#|Q$|#}Q$}$OQ%Q$RQ%R$SQ%X$`Q%[$eS%j%W%lQ%y%eQ%z%fQ&a&rQ&k&dQ&l&eQ&m&fQ&n&hQ&o&iQ&v&pQ&w&qQ&x&tQ&z&uS&|&y&}Q'O&{Q'Q&sQ'S&jQ'U'^Q'V'_Q'W'`Q'Y'hQ'k'bQ'l'cQ'm'dQ'n'fQ'o'gQ's'pQ't'qQ'v'rS'y'u'zQ'{'xQ(U'}Q(V(OQ(W(PQ(X(RQ(Y(SQ(^(ZQ(_([Q(a(]S(c(`(dQ(e(bQ(g(TQ(j(wQ(o'iR(r({$yeOPRS^_gi!O!R!S!T!U!W!X![!]!^!_#U#W#j#r#u#|#}$O$R$S$`$e%W%e%f%l&c&d&e&f&g&h&i&j&p&q&r&s&t&u&y&{&}'R'^'_'`'b'c'd'e'f'g'h'i'p'q'r'u'x'z'|'}(O(P(Q(R(S(T(Z([(](`(b(d(f(l(m(w({X!vh'](u(yX!{j'a(v(zV}P#W#jR%s%bT%w%c'w$Q!YQT{!a!j!l!y#X#Y#Z#[#^#g#h#i$f$s$u$z$|$}%Q%R%X%[%j%y%z&a&k&l&m&n&o&v&w&x&z&|'O'Q'S'U'V'W'Y'k'l'm'n'o's't'v'y'{(U(V(W(X(Y(^(_(a(c(e(g(j(o(rR!cXR#b!XQ!m_R#c!X$rZOPRSgi!O!R!S!T!U!W!X![!]!^!_#U#W#r#u#|#}$O$R$S$`$e%W%e%f%l&c&d&e&f&g&h&i&j&p&q&r&s&t&u&y&{&}'R'^'_'`'b'c'd'e'f'g'h'i'p'q'r'u'x'z'|'}(O(P(Q(R(S(T(Z([(](`(b(d(f(l(m(w({U!g]`#pV!k^_#jW!h]^_#jQ!n`R$r#pX$Y#T'j(x(|R!rc\",nodeNames:\"⚠ LineComment BlockComment Expressions ForExpression for InExpressions InExpression Name in IterationContext return IfExpression if then else QuantifiedExpression some every InExpressions InExpression satisfies Disjunction or Conjunction and Comparison CompareOp CompareOp between PositiveUnaryTest ( PositiveUnaryTests ) ArithmeticExpression ArithOp ArithOp ArithOp ArithOp ArithOp InstanceOf instance of Type QualifiedName SpecialType days time duration years months date > ListType list < ContextType context ContextEntryTypes ContextEntryType FunctionType function ArgumentTypes ArgumentType PathExpression ] FilterExpression [ FunctionInvocation SpecialFunctionName string length upper case lower substring before after starts with ends contains insert index distinct values met by overlaps finished started day year week month get value entries NamedParameters NamedParameter ParameterName SpecialParameterName start position decimal sep separator grouping PositionalParameters null NumericLiteral StringLiteral BooleanLiteral DateTimeLiteral DateTimeConstructor VariableName ? SimplePositiveUnaryTest Interval ParenthesizedExpression List FunctionDefinition FormalParameters FormalParameter external FunctionBody } { Context ContextEntry Key SpecialKey method signature UnaryTests Wildcard not\",maxTerm:177,nodeProps:[[\"group\",-18,4,12,16,22,24,26,34,40,64,66,68,115,116,117,119,120,121,128,\"Expression\",-5,109,110,111,112,113,\"Expression Literal\"],[\"closedBy\",31,\")\",67,\"]\",127,\"}\"],[\"openedBy\",33,\"(\",65,\"[\",126,\"{\"]],skippedNodes:[0,1,2],repeatNodeCount:11,tokenData:\"+Y~R|XY#{Y^#{pq#{qr$prs${tu%oxy&yyz'Oz{'T{|'b|}'g}!O'l!O!P'y!P!Q(c!Q![)n![!]*P!]!^*U!^!_*Z!_!`$v!`!a*j!a!b%o!c!}%o!}#O*t#P#Q*y#Q#R']#R#S%o#T#o%o#o#p+O#q#r+T#y#z#{$f$g#{#BY#BZ#{$IS$I_#{$I`$Ib%o$I|$JO#{$JT$JU#{$KV$KW#{$Kh%#t%o&/x&Et%o&FU&FV#{&FV;'S%o;'S;:j&s?&r?Ah%o?BY?Mn%o~$QY$[~X^#{pq#{#y#z#{$f$g#{#BY#BZ#{$IS$I_#{$I|$JO#{$JT$JU#{$KV$KW#{&FU&FV#{~$sP!_!`$v~${Ok~~%QU$q~OY${Zr${rs%ds#O${#O#P%i#P~${~%iO$q~~%lPO~${~%t_$`~tu%o!Q![%o!a!b%o!c!}%o#R#S%o#T#o%o1p4U%o$I`$Ib%o$Je$Jg%o$Kh%#t%o&/x&Et%o&FV;'S%o;'S;:j&s?&r?Ah%o?BY?Mn%o~&vP;=`<%l%o~'OOo~~'TOq~~'YPu~z{']~'bOw~~'gOs~~'lO$c~R'qPtP!`!a'tQ'yO$jQ~(OQ$f~!O!P(U!Q![(Z~(ZO$b~~(`P$p~!Q![(Z~(hQv~z{(n!P!Q)c~(qROz(nz{(z{~(n~(}TOz(nz{(z{!P(n!P!Q)^!Q~(n~)cOQ~~)hQP~OY)cZ~)c~)sQ$p~!O!P)y!Q![)n~)|P!Q![(Z~*UO$h~~*ZO$w~R*bP!XQlP!_!`*eP*jOlPR*qP!UQlP!_!`*e~*yO!e~~+OO!c~~+TO#s~~+YO#r~\",tokenizers:[0,1],topRules:{\"Expressions\":[0,3],\"UnaryTests\":[1,134]},dynamicPrecedences:{\"24\":-1,\"68\":-1,\"151\":-1},specialized:[{term:154,get:value=>spec_identifier[value]||-1}],tokenPrec:0});const highlightTags=styleTags({VariableName:tags.variableName,NumericLiteral:tags.number,QualifiedName:tags.name,Name:tags.name,BooleanLiteral:tags.bool,StringLiteral:tags.string,LineComment:tags.lineComment,BlockComment:tags.blockComment,'( )':tags.paren,BuiltInFunctionName:tags.function(tags.variableName),BuiltInType:tags.function(tags.variableName),ListType:tags.function(tags.variableName),ContextType:tags.function(tags.variableName),FunctionType:tags.function(tags.variableName),DateAndTime:tags.function(tags.variableName),'DateTimeConstructor!':tags.function(tags.variableName),'for in return null':tags.atom,List:tags.list,Interval:tags.list});const parserWithMetadata=parser.configure({props:[highlightTags]});const FeelLanguage=LRLanguage.define({parser:parserWithMetadata});function language(){return new LanguageSupport(FeelLanguage,[]);}/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/const toggleComment=target=>{let config=getConfig(target.state);return config.line?toggleLineComment(target):config.block?toggleBlockCommentByLine(target):false;};function command(f,option){return ({state,dispatch})=>{if(state.readOnly)return false;let tr=f(option,state);if(!tr)return false;dispatch(state.update(tr));return true;};}/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/const toggleLineComment=/*@__PURE__*/command(changeLineComment,0/* Toggle */);/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/const toggleBlockComment=/*@__PURE__*/command(changeBlockComment,0/* Toggle */);/**\nComment or uncomment the lines around the current selection using\nblock comments.\n*/const toggleBlockCommentByLine=/*@__PURE__*/command((o,s)=>changeBlockComment(o,s,selectedLineRanges(s)),0/* Toggle */);function getConfig(state,pos=state.selection.main.head){let data=state.languageDataAt(\"commentTokens\",pos);return data.length?data[0]:{};}const SearchMargin=50;/**\nDetermines if the given range is block-commented in the given\nstate.\n*/function findBlockComment(state,{open,close},from,to){let textBefore=state.sliceDoc(from-SearchMargin,from);let textAfter=state.sliceDoc(to,to+SearchMargin);let spaceBefore=/\\s*$/.exec(textBefore)[0].length,spaceAfter=/^\\s*/.exec(textAfter)[0].length;let beforeOff=textBefore.length-spaceBefore;if(textBefore.slice(beforeOff-open.length,beforeOff)==open&&textAfter.slice(spaceAfter,spaceAfter+close.length)==close){return {open:{pos:from-spaceBefore,margin:spaceBefore&&1},close:{pos:to+spaceAfter,margin:spaceAfter&&1}};}let startText,endText;if(to-from<=2*SearchMargin){startText=endText=state.sliceDoc(from,to);}else {startText=state.sliceDoc(from,from+SearchMargin);endText=state.sliceDoc(to-SearchMargin,to);}let startSpace=/^\\s*/.exec(startText)[0].length,endSpace=/\\s*$/.exec(endText)[0].length;let endOff=endText.length-endSpace-close.length;if(startText.slice(startSpace,startSpace+open.length)==open&&endText.slice(endOff,endOff+close.length)==close){return {open:{pos:from+startSpace+open.length,margin:/\\s/.test(startText.charAt(startSpace+open.length))?1:0},close:{pos:to-endSpace-close.length,margin:/\\s/.test(endText.charAt(endOff-1))?1:0}};}return null;}function selectedLineRanges(state){let ranges=[];for(let r of state.selection.ranges){let fromLine=state.doc.lineAt(r.from);let toLine=r.to<=fromLine.to?fromLine:state.doc.lineAt(r.to);let last=ranges.length-1;if(last>=0&&ranges[last].to>fromLine.from)ranges[last].to=toLine.to;else ranges.push({from:fromLine.from,to:toLine.to});}return ranges;}// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option,state,ranges=state.selection.ranges){let tokens=ranges.map(r=>getConfig(state,r.from).block);if(!tokens.every(c=>c))return null;let comments=ranges.map((r,i)=>findBlockComment(state,tokens[i],r.from,r.to));if(option!=2/* Uncomment */&&!comments.every(c=>c)){return {changes:state.changes(ranges.map((range,i)=>{if(comments[i])return [];return [{from:range.from,insert:tokens[i].open+\" \"},{from:range.to,insert:\" \"+tokens[i].close}];}))};}else if(option!=1/* Comment */&&comments.some(c=>c)){let changes=[];for(let i=0,comment;i<comments.length;i++)if(comment=comments[i]){let token=tokens[i],{open,close}=comment;changes.push({from:open.pos-token.open.length,to:open.pos+open.margin},{from:close.pos-close.margin,to:close.pos+token.close.length});}return {changes};}return null;}// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option,state,ranges=state.selection.ranges){let lines=[];let prevLine=-1;for(let{from,to}of ranges){let startI=lines.length,minIndent=1e9;for(let pos=from;pos<=to;){let line=state.doc.lineAt(pos);if(line.from>prevLine&&(from==to||to>line.from)){prevLine=line.from;let token=getConfig(state,pos).line;if(!token)continue;let indent=/^\\s*/.exec(line.text)[0].length;let empty=indent==line.length;let comment=line.text.slice(indent,indent+token.length)==token?indent:-1;if(indent<line.text.length&&indent<minIndent)minIndent=indent;lines.push({line,comment,token,indent,empty,single:false});}pos=line.to+1;}if(minIndent<1e9)for(let i=startI;i<lines.length;i++)if(lines[i].indent<lines[i].line.text.length)lines[i].indent=minIndent;if(lines.length==startI+1)lines[startI].single=true;}if(option!=2/* Uncomment */&&lines.some(l=>l.comment<0&&(!l.empty||l.single))){let changes=[];for(let{line,token,indent,empty,single}of lines)if(single||!empty)changes.push({from:line.from+indent,insert:token+\" \"});let changeSet=state.changes(changes);return {changes:changeSet,selection:state.selection.map(changeSet,1)};}else if(option!=1/* Comment */&&lines.some(l=>l.comment>=0)){let changes=[];for(let{line,comment,token}of lines)if(comment>=0){let from=line.from+comment,to=from+token.length;if(line.text[to-line.from]==\" \")to++;changes.push({from,to});}return {changes};}return null;}function updateSel(sel,by){return EditorSelection.create(sel.ranges.map(by),sel.mainIndex);}function setSel(state,selection){return state.update({selection,scrollIntoView:true,userEvent:\"select\"});}function moveSel({state,dispatch},how){let selection=updateSel(state.selection,how);if(selection.eq(state.selection))return false;dispatch(setSel(state,selection));return true;}function rangeEnd(range,forward){return EditorSelection.cursor(forward?range.to:range.from);}function cursorByChar(view,forward){return moveSel(view,range=>range.empty?view.moveByChar(range,forward):rangeEnd(range,forward));}function ltrAtCursor(view){return view.textDirectionAt(view.state.selection.main.head)==Direction.LTR;}/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/const cursorCharLeft=view=>cursorByChar(view,!ltrAtCursor(view));/**\nMove the selection one character to the right.\n*/const cursorCharRight=view=>cursorByChar(view,ltrAtCursor(view));function cursorByGroup(view,forward){return moveSel(view,range=>range.empty?view.moveByGroup(range,forward):rangeEnd(range,forward));}/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/const cursorGroupLeft=view=>cursorByGroup(view,!ltrAtCursor(view));/**\nMove the selection one group to the right.\n*/const cursorGroupRight=view=>cursorByGroup(view,ltrAtCursor(view));function interestingNode(state,node,bracketProp){if(node.type.prop(bracketProp))return true;let len=node.to-node.from;return len&&(len>2||/[^\\s,.;:]/.test(state.sliceDoc(node.from,node.to)))||node.firstChild;}function moveBySyntax(state,start,forward){let pos=syntaxTree(state).resolveInner(start.head);let bracketProp=forward?NodeProp$1.closedBy:NodeProp$1.openedBy;// Scan forward through child nodes to see if there's an interesting\n// node ahead.\nfor(let at=start.head;;){let next=forward?pos.childAfter(at):pos.childBefore(at);if(!next)break;if(interestingNode(state,next,bracketProp))pos=next;else at=forward?next.to:next.from;}let bracket=pos.type.prop(bracketProp),match,newPos;if(bracket&&(match=forward?matchBrackets(state,pos.from,1):matchBrackets(state,pos.to,-1))&&match.matched)newPos=forward?match.end.to:match.end.from;else newPos=forward?pos.to:pos.from;return EditorSelection.cursor(newPos,forward?-1:1);}/**\nMove the cursor over the next syntactic element to the left.\n*/const cursorSyntaxLeft=view=>moveSel(view,range=>moveBySyntax(view.state,range,!ltrAtCursor(view)));/**\nMove the cursor over the next syntactic element to the right.\n*/const cursorSyntaxRight=view=>moveSel(view,range=>moveBySyntax(view.state,range,ltrAtCursor(view)));function cursorByLine(view,forward){return moveSel(view,range=>{if(!range.empty)return rangeEnd(range,forward);let moved=view.moveVertically(range,forward);return moved.head!=range.head?moved:view.moveToLineBoundary(range,forward);});}/**\nMove the selection one line up.\n*/const cursorLineUp=view=>cursorByLine(view,false);/**\nMove the selection one line down.\n*/const cursorLineDown=view=>cursorByLine(view,true);function pageHeight(view){return Math.max(view.defaultLineHeight,Math.min(view.dom.clientHeight,innerHeight)-5);}function cursorByPage(view,forward){let{state}=view,selection=updateSel(state.selection,range=>{return range.empty?view.moveVertically(range,forward,pageHeight(view)):rangeEnd(range,forward);});if(selection.eq(state.selection))return false;let startPos=view.coordsAtPos(state.selection.main.head);let scrollRect=view.scrollDOM.getBoundingClientRect();let effect;if(startPos&&startPos.top>scrollRect.top&&startPos.bottom<scrollRect.bottom&&startPos.top-scrollRect.top<=view.scrollDOM.scrollHeight-view.scrollDOM.scrollTop-view.scrollDOM.clientHeight)effect=EditorView.scrollIntoView(selection.main.head,{y:\"start\",yMargin:startPos.top-scrollRect.top});view.dispatch(setSel(state,selection),{effects:effect});return true;}/**\nMove the selection one page up.\n*/const cursorPageUp=view=>cursorByPage(view,false);/**\nMove the selection one page down.\n*/const cursorPageDown=view=>cursorByPage(view,true);function moveByLineBoundary(view,start,forward){let line=view.lineBlockAt(start.head),moved=view.moveToLineBoundary(start,forward);if(moved.head==start.head&&moved.head!=(forward?line.to:line.from))moved=view.moveToLineBoundary(start,forward,false);if(!forward&&moved.head==line.from&&line.length){let space=/^\\s*/.exec(view.state.sliceDoc(line.from,Math.min(line.from+100,line.to)))[0].length;if(space&&start.head!=line.from+space)moved=EditorSelection.cursor(line.from+space);}return moved;}/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/const cursorLineBoundaryForward=view=>moveSel(view,range=>moveByLineBoundary(view,range,true));/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/const cursorLineBoundaryBackward=view=>moveSel(view,range=>moveByLineBoundary(view,range,false));/**\nMove the selection to the start of the line.\n*/const cursorLineStart=view=>moveSel(view,range=>EditorSelection.cursor(view.lineBlockAt(range.head).from,1));/**\nMove the selection to the end of the line.\n*/const cursorLineEnd=view=>moveSel(view,range=>EditorSelection.cursor(view.lineBlockAt(range.head).to,-1));function toMatchingBracket(state,dispatch,extend){let found=false,selection=updateSel(state.selection,range=>{let matching=matchBrackets(state,range.head,-1)||matchBrackets(state,range.head,1)||range.head>0&&matchBrackets(state,range.head-1,1)||range.head<state.doc.length&&matchBrackets(state,range.head+1,-1);if(!matching||!matching.end)return range;found=true;let head=matching.start.from==range.head?matching.end.to:matching.end.from;return extend?EditorSelection.range(range.anchor,head):EditorSelection.cursor(head);});if(!found)return false;dispatch(setSel(state,selection));return true;}/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/const cursorMatchingBracket=({state,dispatch})=>toMatchingBracket(state,dispatch,false);function extendSel(view,how){let selection=updateSel(view.state.selection,range=>{let head=how(range);return EditorSelection.range(range.anchor,head.head,head.goalColumn);});if(selection.eq(view.state.selection))return false;view.dispatch(setSel(view.state,selection));return true;}function selectByChar(view,forward){return extendSel(view,range=>view.moveByChar(range,forward));}/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/const selectCharLeft=view=>selectByChar(view,!ltrAtCursor(view));/**\nMove the selection head one character to the right.\n*/const selectCharRight=view=>selectByChar(view,ltrAtCursor(view));function selectByGroup(view,forward){return extendSel(view,range=>view.moveByGroup(range,forward));}/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/const selectGroupLeft=view=>selectByGroup(view,!ltrAtCursor(view));/**\nMove the selection head one group to the right.\n*/const selectGroupRight=view=>selectByGroup(view,ltrAtCursor(view));/**\nMove the selection head over the next syntactic element to the left.\n*/const selectSyntaxLeft=view=>extendSel(view,range=>moveBySyntax(view.state,range,!ltrAtCursor(view)));/**\nMove the selection head over the next syntactic element to the right.\n*/const selectSyntaxRight=view=>extendSel(view,range=>moveBySyntax(view.state,range,ltrAtCursor(view)));function selectByLine(view,forward){return extendSel(view,range=>view.moveVertically(range,forward));}/**\nMove the selection head one line up.\n*/const selectLineUp=view=>selectByLine(view,false);/**\nMove the selection head one line down.\n*/const selectLineDown=view=>selectByLine(view,true);function selectByPage(view,forward){return extendSel(view,range=>view.moveVertically(range,forward,pageHeight(view)));}/**\nMove the selection head one page up.\n*/const selectPageUp=view=>selectByPage(view,false);/**\nMove the selection head one page down.\n*/const selectPageDown=view=>selectByPage(view,true);/**\nMove the selection head to the next line boundary.\n*/const selectLineBoundaryForward=view=>extendSel(view,range=>moveByLineBoundary(view,range,true));/**\nMove the selection head to the previous line boundary.\n*/const selectLineBoundaryBackward=view=>extendSel(view,range=>moveByLineBoundary(view,range,false));/**\nMove the selection head to the start of the line.\n*/const selectLineStart=view=>extendSel(view,range=>EditorSelection.cursor(view.lineBlockAt(range.head).from));/**\nMove the selection head to the end of the line.\n*/const selectLineEnd=view=>extendSel(view,range=>EditorSelection.cursor(view.lineBlockAt(range.head).to));/**\nMove the selection to the start of the document.\n*/const cursorDocStart=({state,dispatch})=>{dispatch(setSel(state,{anchor:0}));return true;};/**\nMove the selection to the end of the document.\n*/const cursorDocEnd=({state,dispatch})=>{dispatch(setSel(state,{anchor:state.doc.length}));return true;};/**\nMove the selection head to the start of the document.\n*/const selectDocStart=({state,dispatch})=>{dispatch(setSel(state,{anchor:state.selection.main.anchor,head:0}));return true;};/**\nMove the selection head to the end of the document.\n*/const selectDocEnd=({state,dispatch})=>{dispatch(setSel(state,{anchor:state.selection.main.anchor,head:state.doc.length}));return true;};/**\nSelect the entire document.\n*/const selectAll=({state,dispatch})=>{dispatch(state.update({selection:{anchor:0,head:state.doc.length},userEvent:\"select\"}));return true;};/**\nExpand the selection to cover entire lines.\n*/const selectLine=({state,dispatch})=>{let ranges=selectedLineBlocks(state).map(({from,to})=>EditorSelection.range(from,Math.min(to+1,state.doc.length)));dispatch(state.update({selection:EditorSelection.create(ranges),userEvent:\"select\"}));return true;};/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/const selectParentSyntax=({state,dispatch})=>{let selection=updateSel(state.selection,range=>{var _a;let context=syntaxTree(state).resolveInner(range.head,1);while(!(context.from<range.from&&context.to>=range.to||context.to>range.to&&context.from<=range.from||!((_a=context.parent)===null||_a===void 0?void 0:_a.parent)))context=context.parent;return EditorSelection.range(context.to,context.from);});dispatch(setSel(state,selection));return true;};/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/const simplifySelection=({state,dispatch})=>{let cur=state.selection,selection=null;if(cur.ranges.length>1)selection=EditorSelection.create([cur.main]);else if(!cur.main.empty)selection=EditorSelection.create([EditorSelection.cursor(cur.main.head)]);if(!selection)return false;dispatch(setSel(state,selection));return true;};function deleteBy({state,dispatch},by){if(state.readOnly)return false;let event=\"delete.selection\";let changes=state.changeByRange(range=>{let{from,to}=range;if(from==to){let towards=by(from);if(towards<from)event=\"delete.backward\";else if(towards>from)event=\"delete.forward\";from=Math.min(from,towards);to=Math.max(to,towards);}return from==to?{range}:{changes:{from,to},range:EditorSelection.cursor(from)};});if(changes.changes.empty)return false;dispatch(state.update(changes,{scrollIntoView:true,userEvent:event}));return true;}function skipAtomic(target,pos,forward){if(target instanceof EditorView)for(let ranges of target.state.facet(EditorView.atomicRanges).map(f=>f(target)))ranges.between(pos,pos,(from,to)=>{if(from<pos&&to>pos)pos=forward?to:from;});return pos;}const deleteByChar=(target,forward)=>deleteBy(target,pos=>{let{state}=target,line=state.doc.lineAt(pos),before,targetPos;if(!forward&&pos>line.from&&pos<line.from+200&&!/[^ \\t]/.test(before=line.text.slice(0,pos-line.from))){if(before[before.length-1]==\"\\t\")return pos-1;let col=countColumn(before,state.tabSize),drop=col%getIndentUnit(state)||getIndentUnit(state);for(let i=0;i<drop&&before[before.length-1-i]==\" \";i++)pos--;targetPos=pos;}else {targetPos=findClusterBreak(line.text,pos-line.from,forward,forward)+line.from;if(targetPos==pos&&line.number!=(forward?state.doc.lines:1))targetPos+=forward?1:-1;}return skipAtomic(target,targetPos,forward);});/**\nDelete the selection, or, for cursor selections, the character\nbefore the cursor.\n*/const deleteCharBackward=view=>deleteByChar(view,false);/**\nDelete the selection or the character after the cursor.\n*/const deleteCharForward=view=>deleteByChar(view,true);const deleteByGroup=(target,forward)=>deleteBy(target,start=>{let pos=start,{state}=target,line=state.doc.lineAt(pos);let categorize=state.charCategorizer(pos);for(let cat=null;;){if(pos==(forward?line.to:line.from)){if(pos==start&&line.number!=(forward?state.doc.lines:1))pos+=forward?1:-1;break;}let next=findClusterBreak(line.text,pos-line.from,forward)+line.from;let nextChar=line.text.slice(Math.min(pos,next)-line.from,Math.max(pos,next)-line.from);let nextCat=categorize(nextChar);if(cat!=null&&nextCat!=cat)break;if(nextChar!=\" \"||pos!=start)cat=nextCat;pos=next;}return skipAtomic(target,pos,forward);});/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/const deleteGroupBackward=target=>deleteByGroup(target,false);/**\nDelete the selection or forward until the end of the next group.\n*/const deleteGroupForward=target=>deleteByGroup(target,true);/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/const deleteToLineEnd=view=>deleteBy(view,pos=>{let lineEnd=view.lineBlockAt(pos).to;return skipAtomic(view,pos<lineEnd?lineEnd:Math.min(view.state.doc.length,pos+1),true);});/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/const deleteToLineStart=view=>deleteBy(view,pos=>{let lineStart=view.lineBlockAt(pos).from;return skipAtomic(view,pos>lineStart?lineStart:Math.max(0,pos-1),false);});/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/const splitLine=({state,dispatch})=>{if(state.readOnly)return false;let changes=state.changeByRange(range=>{return {changes:{from:range.from,to:range.to,insert:Text.of([\"\",\"\"])},range:EditorSelection.cursor(range.from)};});dispatch(state.update(changes,{scrollIntoView:true,userEvent:\"input\"}));return true;};/**\nFlip the characters before and after the cursor(s).\n*/const transposeChars=({state,dispatch})=>{if(state.readOnly)return false;let changes=state.changeByRange(range=>{if(!range.empty||range.from==0||range.from==state.doc.length)return {range};let pos=range.from,line=state.doc.lineAt(pos);let from=pos==line.from?pos-1:findClusterBreak(line.text,pos-line.from,false)+line.from;let to=pos==line.to?pos+1:findClusterBreak(line.text,pos-line.from,true)+line.from;return {changes:{from,to,insert:state.doc.slice(pos,to).append(state.doc.slice(from,pos))},range:EditorSelection.cursor(to)};});if(changes.changes.empty)return false;dispatch(state.update(changes,{scrollIntoView:true,userEvent:\"move.character\"}));return true;};function selectedLineBlocks(state){let blocks=[],upto=-1;for(let range of state.selection.ranges){let startLine=state.doc.lineAt(range.from),endLine=state.doc.lineAt(range.to);if(!range.empty&&range.to==endLine.from)endLine=state.doc.lineAt(range.to-1);if(upto>=startLine.number){let prev=blocks[blocks.length-1];prev.to=endLine.to;prev.ranges.push(range);}else {blocks.push({from:startLine.from,to:endLine.to,ranges:[range]});}upto=endLine.number+1;}return blocks;}function moveLine(state,dispatch,forward){if(state.readOnly)return false;let changes=[],ranges=[];for(let block of selectedLineBlocks(state)){if(forward?block.to==state.doc.length:block.from==0)continue;let nextLine=state.doc.lineAt(forward?block.to+1:block.from-1);let size=nextLine.length+1;if(forward){changes.push({from:block.to,to:nextLine.to},{from:block.from,insert:nextLine.text+state.lineBreak});for(let r of block.ranges)ranges.push(EditorSelection.range(Math.min(state.doc.length,r.anchor+size),Math.min(state.doc.length,r.head+size)));}else {changes.push({from:nextLine.from,to:block.from},{from:block.to,insert:state.lineBreak+nextLine.text});for(let r of block.ranges)ranges.push(EditorSelection.range(r.anchor-size,r.head-size));}}if(!changes.length)return false;dispatch(state.update({changes,scrollIntoView:true,selection:EditorSelection.create(ranges,state.selection.mainIndex),userEvent:\"move.line\"}));return true;}/**\nMove the selected lines up one line.\n*/const moveLineUp=({state,dispatch})=>moveLine(state,dispatch,false);/**\nMove the selected lines down one line.\n*/const moveLineDown=({state,dispatch})=>moveLine(state,dispatch,true);function copyLine(state,dispatch,forward){if(state.readOnly)return false;let changes=[];for(let block of selectedLineBlocks(state)){if(forward)changes.push({from:block.from,insert:state.doc.slice(block.from,block.to)+state.lineBreak});else changes.push({from:block.to,insert:state.lineBreak+state.doc.slice(block.from,block.to)});}dispatch(state.update({changes,scrollIntoView:true,userEvent:\"input.copyline\"}));return true;}/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/const copyLineUp=({state,dispatch})=>copyLine(state,dispatch,false);/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/const copyLineDown=({state,dispatch})=>copyLine(state,dispatch,true);/**\nDelete selected lines.\n*/const deleteLine=view=>{if(view.state.readOnly)return false;let{state}=view,changes=state.changes(selectedLineBlocks(state).map(({from,to})=>{if(from>0)from--;else if(to<state.doc.length)to++;return {from,to};}));let selection=updateSel(state.selection,range=>view.moveVertically(range,true)).map(changes);view.dispatch({changes,selection,scrollIntoView:true,userEvent:\"delete.line\"});return true;};function isBetweenBrackets(state,pos){if(/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos-1,pos+1)))return {from:pos,to:pos};let context=syntaxTree(state).resolveInner(pos);let before=context.childBefore(pos),after=context.childAfter(pos),closedBy;if(before&&after&&before.to<=pos&&after.from>=pos&&(closedBy=before.type.prop(NodeProp$1.closedBy))&&closedBy.indexOf(after.name)>-1&&state.doc.lineAt(before.to).from==state.doc.lineAt(after.from).from)return {from:before.to,to:after.from};return null;}/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/const insertNewlineAndIndent=/*@__PURE__*/newlineAndIndent(false);/**\nCreate a blank, indented line below the current line.\n*/const insertBlankLine=/*@__PURE__*/newlineAndIndent(true);function newlineAndIndent(atEof){return ({state,dispatch})=>{if(state.readOnly)return false;let changes=state.changeByRange(range=>{let{from,to}=range,line=state.doc.lineAt(from);let explode=!atEof&&from==to&&isBetweenBrackets(state,from);if(atEof)from=to=(to<=line.to?line:state.doc.lineAt(to)).to;let cx=new IndentContext(state,{simulateBreak:from,simulateDoubleBreak:!!explode});let indent=getIndentation(cx,from);if(indent==null)indent=/^\\s*/.exec(state.doc.lineAt(from).text)[0].length;while(to<line.to&&/\\s/.test(line.text[to-line.from]))to++;if(explode)({from,to}=explode);else if(from>line.from&&from<line.from+100&&!/\\S/.test(line.text.slice(0,from)))from=line.from;let insert=[\"\",indentString(state,indent)];if(explode)insert.push(indentString(state,cx.lineIndent(line.from,-1)));return {changes:{from,to,insert:Text.of(insert)},range:EditorSelection.cursor(from+1+insert[1].length)};});dispatch(state.update(changes,{scrollIntoView:true,userEvent:\"input\"}));return true;};}function changeBySelectedLine(state,f){let atLine=-1;return state.changeByRange(range=>{let changes=[];for(let pos=range.from;pos<=range.to;){let line=state.doc.lineAt(pos);if(line.number>atLine&&(range.empty||range.to>line.from)){f(line,changes,range);atLine=line.number;}pos=line.to+1;}let changeSet=state.changes(changes);return {changes,range:EditorSelection.range(changeSet.mapPos(range.anchor,1),changeSet.mapPos(range.head,1))};});}/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/const indentSelection=({state,dispatch})=>{if(state.readOnly)return false;let updated=Object.create(null);let context=new IndentContext(state,{overrideIndentation:start=>{let found=updated[start];return found==null?-1:found;}});let changes=changeBySelectedLine(state,(line,changes,range)=>{let indent=getIndentation(context,line.from);if(indent==null)return;if(!/\\S/.test(line.text))indent=0;let cur=/^\\s*/.exec(line.text)[0];let norm=indentString(state,indent);if(cur!=norm||range.from<line.from+cur.length){updated[line.from]=indent;changes.push({from:line.from,to:line.from+cur.length,insert:norm});}});if(!changes.changes.empty)dispatch(state.update(changes,{userEvent:\"indent\"}));return true;};/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/const indentMore=({state,dispatch})=>{if(state.readOnly)return false;dispatch(state.update(changeBySelectedLine(state,(line,changes)=>{changes.push({from:line.from,insert:state.facet(indentUnit)});}),{userEvent:\"input.indent\"}));return true;};/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/const indentLess=({state,dispatch})=>{if(state.readOnly)return false;dispatch(state.update(changeBySelectedLine(state,(line,changes)=>{let space=/^\\s*/.exec(line.text)[0];if(!space)return;let col=countColumn(space,state.tabSize),keep=0;let insert=indentString(state,Math.max(0,col-getIndentUnit(state)));while(keep<space.length&&keep<insert.length&&space.charCodeAt(keep)==insert.charCodeAt(keep))keep++;changes.push({from:line.from+keep,to:line.from+space.length,insert:insert.slice(keep)});}),{userEvent:\"delete.dedent\"}));return true;};/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/const emacsStyleKeymap=[{key:\"Ctrl-b\",run:cursorCharLeft,shift:selectCharLeft,preventDefault:true},{key:\"Ctrl-f\",run:cursorCharRight,shift:selectCharRight},{key:\"Ctrl-p\",run:cursorLineUp,shift:selectLineUp},{key:\"Ctrl-n\",run:cursorLineDown,shift:selectLineDown},{key:\"Ctrl-a\",run:cursorLineStart,shift:selectLineStart},{key:\"Ctrl-e\",run:cursorLineEnd,shift:selectLineEnd},{key:\"Ctrl-d\",run:deleteCharForward},{key:\"Ctrl-h\",run:deleteCharBackward},{key:\"Ctrl-k\",run:deleteToLineEnd},{key:\"Ctrl-Alt-h\",run:deleteGroupBackward},{key:\"Ctrl-o\",run:splitLine},{key:\"Ctrl-t\",run:transposeChars},{key:\"Ctrl-v\",run:cursorPageDown}];/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteToLineStart`](https://codemirror.net/6/docs/ref/#commands.deleteToLineStart).\n - Cmd-Delete (macOS): [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd).\n*/const standardKeymap=/*@__PURE__*/[{key:\"ArrowLeft\",run:cursorCharLeft,shift:selectCharLeft,preventDefault:true},{key:\"Mod-ArrowLeft\",mac:\"Alt-ArrowLeft\",run:cursorGroupLeft,shift:selectGroupLeft},{mac:\"Cmd-ArrowLeft\",run:cursorLineBoundaryBackward,shift:selectLineBoundaryBackward},{key:\"ArrowRight\",run:cursorCharRight,shift:selectCharRight,preventDefault:true},{key:\"Mod-ArrowRight\",mac:\"Alt-ArrowRight\",run:cursorGroupRight,shift:selectGroupRight},{mac:\"Cmd-ArrowRight\",run:cursorLineBoundaryForward,shift:selectLineBoundaryForward},{key:\"ArrowUp\",run:cursorLineUp,shift:selectLineUp,preventDefault:true},{mac:\"Cmd-ArrowUp\",run:cursorDocStart,shift:selectDocStart},{mac:\"Ctrl-ArrowUp\",run:cursorPageUp,shift:selectPageUp},{key:\"ArrowDown\",run:cursorLineDown,shift:selectLineDown,preventDefault:true},{mac:\"Cmd-ArrowDown\",run:cursorDocEnd,shift:selectDocEnd},{mac:\"Ctrl-ArrowDown\",run:cursorPageDown,shift:selectPageDown},{key:\"PageUp\",run:cursorPageUp,shift:selectPageUp},{key:\"PageDown\",run:cursorPageDown,shift:selectPageDown},{key:\"Home\",run:cursorLineBoundaryBackward,shift:selectLineBoundaryBackward,preventDefault:true},{key:\"Mod-Home\",run:cursorDocStart,shift:selectDocStart},{key:\"End\",run:cursorLineBoundaryForward,shift:selectLineBoundaryForward,preventDefault:true},{key:\"Mod-End\",run:cursorDocEnd,shift:selectDocEnd},{key:\"Enter\",run:insertNewlineAndIndent},{key:\"Mod-a\",run:selectAll},{key:\"Backspace\",run:deleteCharBackward,shift:deleteCharBackward},{key:\"Delete\",run:deleteCharForward},{key:\"Mod-Backspace\",mac:\"Alt-Backspace\",run:deleteGroupBackward},{key:\"Mod-Delete\",mac:\"Alt-Delete\",run:deleteGroupForward},{mac:\"Mod-Backspace\",run:deleteToLineStart},{mac:\"Mod-Delete\",run:deleteToLineEnd}].concat(/*@__PURE__*/emacsStyleKeymap.map(b=>({mac:b.key,run:b.run,shift:b.shift})));/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Comd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n- Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).\n- Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).\n*/const defaultKeymap=/*@__PURE__*/[{key:\"Alt-ArrowLeft\",mac:\"Ctrl-ArrowLeft\",run:cursorSyntaxLeft,shift:selectSyntaxLeft},{key:\"Alt-ArrowRight\",mac:\"Ctrl-ArrowRight\",run:cursorSyntaxRight,shift:selectSyntaxRight},{key:\"Alt-ArrowUp\",run:moveLineUp},{key:\"Shift-Alt-ArrowUp\",run:copyLineUp},{key:\"Alt-ArrowDown\",run:moveLineDown},{key:\"Shift-Alt-ArrowDown\",run:copyLineDown},{key:\"Escape\",run:simplifySelection},{key:\"Mod-Enter\",run:insertBlankLine},{key:\"Alt-l\",mac:\"Ctrl-l\",run:selectLine},{key:\"Mod-i\",run:selectParentSyntax,preventDefault:true},{key:\"Mod-[\",run:indentLess},{key:\"Mod-]\",run:indentMore},{key:\"Mod-Alt-\\\\\",run:indentSelection},{key:\"Shift-Mod-k\",run:deleteLine},{key:\"Shift-Mod-\\\\\",run:cursorMatchingBracket},{key:\"Mod-/\",run:toggleComment},{key:\"Alt-A\",run:toggleBlockComment}].concat(standardKeymap);function crelt(){var elt=arguments[0];if(typeof elt==\"string\")elt=document.createElement(elt);var i=1,next=arguments[1];if(next&&typeof next==\"object\"&&next.nodeType==null&&!Array.isArray(next)){for(var name in next)if(Object.prototype.hasOwnProperty.call(next,name)){var value=next[name];if(typeof value==\"string\")elt.setAttribute(name,value);else if(value!=null)elt[name]=value;}i++;}for(;i<arguments.length;i++)add(elt,arguments[i]);return elt;}function add(elt,child){if(typeof child==\"string\"){elt.appendChild(document.createTextNode(child));}else if(child==null);else if(child.nodeType!=null){elt.appendChild(child);}else if(Array.isArray(child)){for(var i=0;i<child.length;i++)add(elt,child[i]);}else {throw new RangeError(\"Unsupported child node: \"+child);}}class SelectedDiagnostic{constructor(from,to,diagnostic){this.from=from;this.to=to;this.diagnostic=diagnostic;}}class LintState{constructor(diagnostics,panel,selected){this.diagnostics=diagnostics;this.panel=panel;this.selected=selected;}static init(diagnostics,panel,state){// Filter the list of diagnostics for which to create markers\nlet markedDiagnostics=diagnostics;let diagnosticFilter=state.facet(lintConfig).markerFilter;if(diagnosticFilter)markedDiagnostics=diagnosticFilter(markedDiagnostics);let ranges=Decoration.set(markedDiagnostics.map(d=>{// For zero-length ranges or ranges covering only a line break, create a widget\nreturn d.from==d.to||d.from==d.to-1&&state.doc.lineAt(d.from).to==d.from?Decoration.widget({widget:new DiagnosticWidget(d),diagnostic:d}).range(d.from):Decoration.mark({attributes:{class:\"cm-lintRange cm-lintRange-\"+d.severity},diagnostic:d}).range(d.from,d.to);}),true);return new LintState(ranges,panel,findDiagnostic(ranges));}}function findDiagnostic(diagnostics,diagnostic=null,after=0){let found=null;diagnostics.between(after,1e9,(from,to,{spec})=>{if(diagnostic&&spec.diagnostic!=diagnostic)return;found=new SelectedDiagnostic(from,to,spec.diagnostic);return false;});return found;}function hideTooltip(tr,tooltip){return !!(tr.effects.some(e=>e.is(setDiagnosticsEffect))||tr.changes.touchesRange(tooltip.pos));}function maybeEnableLint(state,effects){return state.field(lintState,false)?effects:effects.concat(StateEffect.appendConfig.of([lintState,EditorView.decorations.compute([lintState],state=>{let{selected,panel}=state.field(lintState);return !selected||!panel||selected.from==selected.to?Decoration.none:Decoration.set([activeMark.range(selected.from,selected.to)]);}),hoverTooltip(lintTooltip,{hideOn:hideTooltip}),baseTheme$2]));}/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/function setDiagnostics(state,diagnostics){return {effects:maybeEnableLint(state,[setDiagnosticsEffect.of(diagnostics)])};}/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/const setDiagnosticsEffect=/*@__PURE__*/StateEffect.define();const togglePanel=/*@__PURE__*/StateEffect.define();const movePanelSelection=/*@__PURE__*/StateEffect.define();const lintState=/*@__PURE__*/StateField.define({create(){return new LintState(Decoration.none,null,null);},update(value,tr){if(tr.docChanged){let mapped=value.diagnostics.map(tr.changes),selected=null;if(value.selected){let selPos=tr.changes.mapPos(value.selected.from,1);selected=findDiagnostic(mapped,value.selected.diagnostic,selPos)||findDiagnostic(mapped,null,selPos);}value=new LintState(mapped,value.panel,selected);}for(let effect of tr.effects){if(effect.is(setDiagnosticsEffect)){value=LintState.init(effect.value,value.panel,tr.state);}else if(effect.is(togglePanel)){value=new LintState(value.diagnostics,effect.value?LintPanel.open:null,value.selected);}else if(effect.is(movePanelSelection)){value=new LintState(value.diagnostics,value.panel,effect.value);}}return value;},provide:f=>[showPanel.from(f,val=>val.panel),EditorView.decorations.from(f,s=>s.diagnostics)]});const activeMark=/*@__PURE__*/Decoration.mark({class:\"cm-lintRange cm-lintRange-active\"});function lintTooltip(view,pos,side){let{diagnostics}=view.state.field(lintState);let found=[],stackStart=2e8,stackEnd=0;diagnostics.between(pos-(side<0?1:0),pos+(side>0?1:0),(from,to,{spec})=>{if(pos>=from&&pos<=to&&(from==to||(pos>from||side>0)&&(pos<to||side<0))){found.push(spec.diagnostic);stackStart=Math.min(from,stackStart);stackEnd=Math.max(to,stackEnd);}});let diagnosticFilter=view.state.facet(lintConfig).tooltipFilter;if(diagnosticFilter)found=diagnosticFilter(found);if(!found.length)return null;return {pos:stackStart,end:stackEnd,above:view.state.doc.lineAt(stackStart).to<stackEnd,create(){return {dom:diagnosticsTooltip(view,found)};}};}function diagnosticsTooltip(view,diagnostics){return crelt(\"ul\",{class:\"cm-tooltip-lint\"},diagnostics.map(d=>renderDiagnostic(view,d,false)));}/**\nCommand to close the lint panel, when open.\n*/const closeLintPanel=view=>{let field=view.state.field(lintState,false);if(!field||!field.panel)return false;view.dispatch({effects:togglePanel.of(false)});return true;};const lintPlugin=/*@__PURE__*/ViewPlugin.fromClass(class{constructor(view){this.view=view;this.timeout=-1;this.set=true;let{delay}=view.state.facet(lintConfig);this.lintTime=Date.now()+delay;this.run=this.run.bind(this);this.timeout=setTimeout(this.run,delay);}run(){let now=Date.now();if(now<this.lintTime-10){setTimeout(this.run,this.lintTime-now);}else {this.set=false;let{state}=this.view,{sources}=state.facet(lintConfig);Promise.all(sources.map(source=>Promise.resolve(source(this.view)))).then(annotations=>{let all=annotations.reduce((a,b)=>a.concat(b));if(this.view.state.doc==state.doc)this.view.dispatch(setDiagnostics(this.view.state,all));},error=>{logException(this.view.state,error);});}}update(update){let config=update.state.facet(lintConfig);if(update.docChanged||config!=update.startState.facet(lintConfig)){this.lintTime=Date.now()+config.delay;if(!this.set){this.set=true;this.timeout=setTimeout(this.run,config.delay);}}}force(){if(this.set){this.lintTime=Date.now();this.run();}}destroy(){clearTimeout(this.timeout);}});const lintConfig=/*@__PURE__*/Facet.define({combine(input){return Object.assign({sources:input.map(i=>i.source)},combineConfig(input.map(i=>i.config),{delay:750,markerFilter:null,tooltipFilter:null}));},enables:lintPlugin});/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/function linter$1(source,config={}){return lintConfig.of({source,config});}function assignKeys(actions){let assigned=[];if(actions)actions:for(let{name}of actions){for(let i=0;i<name.length;i++){let ch=name[i];if(/[a-zA-Z]/.test(ch)&&!assigned.some(c=>c.toLowerCase()==ch.toLowerCase())){assigned.push(ch);continue actions;}}assigned.push(\"\");}return assigned;}function renderDiagnostic(view,diagnostic,inPanel){var _a;let keys=inPanel?assignKeys(diagnostic.actions):[];return crelt(\"li\",{class:\"cm-diagnostic cm-diagnostic-\"+diagnostic.severity},crelt(\"span\",{class:\"cm-diagnosticText\"},diagnostic.renderMessage?diagnostic.renderMessage():diagnostic.message),(_a=diagnostic.actions)===null||_a===void 0?void 0:_a.map((action,i)=>{let click=e=>{e.preventDefault();let found=findDiagnostic(view.state.field(lintState).diagnostics,diagnostic);if(found)action.apply(view,found.from,found.to);};let{name}=action,keyIndex=keys[i]?name.indexOf(keys[i]):-1;let nameElt=keyIndex<0?name:[name.slice(0,keyIndex),crelt(\"u\",name.slice(keyIndex,keyIndex+1)),name.slice(keyIndex+1)];return crelt(\"button\",{type:\"button\",class:\"cm-diagnosticAction\",onclick:click,onmousedown:click,\"aria-label\":` Action: ${name}${keyIndex<0?\"\":` (access key \"${keys[i]})\"`}.`},nameElt);}),diagnostic.source&&crelt(\"div\",{class:\"cm-diagnosticSource\"},diagnostic.source));}class DiagnosticWidget extends WidgetType{constructor(diagnostic){super();this.diagnostic=diagnostic;}eq(other){return other.diagnostic==this.diagnostic;}toDOM(){return crelt(\"span\",{class:\"cm-lintPoint cm-lintPoint-\"+this.diagnostic.severity});}}class PanelItem{constructor(view,diagnostic){this.diagnostic=diagnostic;this.id=\"item_\"+Math.floor(Math.random()*0xffffffff).toString(16);this.dom=renderDiagnostic(view,diagnostic,true);this.dom.id=this.id;this.dom.setAttribute(\"role\",\"option\");}}class LintPanel{constructor(view){this.view=view;this.items=[];let onkeydown=event=>{if(event.keyCode==27){// Escape\ncloseLintPanel(this.view);this.view.focus();}else if(event.keyCode==38||event.keyCode==33){// ArrowUp, PageUp\nthis.moveSelection((this.selectedIndex-1+this.items.length)%this.items.length);}else if(event.keyCode==40||event.keyCode==34){// ArrowDown, PageDown\nthis.moveSelection((this.selectedIndex+1)%this.items.length);}else if(event.keyCode==36){// Home\nthis.moveSelection(0);}else if(event.keyCode==35){// End\nthis.moveSelection(this.items.length-1);}else if(event.keyCode==13){// Enter\nthis.view.focus();}else if(event.keyCode>=65&&event.keyCode<=90&&this.selectedIndex>=0){// A-Z\nlet{diagnostic}=this.items[this.selectedIndex],keys=assignKeys(diagnostic.actions);for(let i=0;i<keys.length;i++)if(keys[i].toUpperCase().charCodeAt(0)==event.keyCode){let found=findDiagnostic(this.view.state.field(lintState).diagnostics,diagnostic);if(found)diagnostic.actions[i].apply(view,found.from,found.to);}}else {return;}event.preventDefault();};let onclick=event=>{for(let i=0;i<this.items.length;i++){if(this.items[i].dom.contains(event.target))this.moveSelection(i);}};this.list=crelt(\"ul\",{tabIndex:0,role:\"listbox\",\"aria-label\":this.view.state.phrase(\"Diagnostics\"),onkeydown,onclick});this.dom=crelt(\"div\",{class:\"cm-panel-lint\"},this.list,crelt(\"button\",{type:\"button\",name:\"close\",\"aria-label\":this.view.state.phrase(\"close\"),onclick:()=>closeLintPanel(this.view)},\"×\"));this.update();}get selectedIndex(){let selected=this.view.state.field(lintState).selected;if(!selected)return -1;for(let i=0;i<this.items.length;i++)if(this.items[i].diagnostic==selected.diagnostic)return i;return -1;}update(){let{diagnostics,selected}=this.view.state.field(lintState);let i=0,needsSync=false,newSelectedItem=null;diagnostics.between(0,this.view.state.doc.length,(_start,_end,{spec})=>{let found=-1,item;for(let j=i;j<this.items.length;j++)if(this.items[j].diagnostic==spec.diagnostic){found=j;break;}if(found<0){item=new PanelItem(this.view,spec.diagnostic);this.items.splice(i,0,item);needsSync=true;}else {item=this.items[found];if(found>i){this.items.splice(i,found-i);needsSync=true;}}if(selected&&item.diagnostic==selected.diagnostic){if(!item.dom.hasAttribute(\"aria-selected\")){item.dom.setAttribute(\"aria-selected\",\"true\");newSelectedItem=item;}}else if(item.dom.hasAttribute(\"aria-selected\")){item.dom.removeAttribute(\"aria-selected\");}i++;});while(i<this.items.length&&!(this.items.length==1&&this.items[0].diagnostic.from<0)){needsSync=true;this.items.pop();}if(this.items.length==0){this.items.push(new PanelItem(this.view,{from:-1,to:-1,severity:\"info\",message:this.view.state.phrase(\"No diagnostics\")}));needsSync=true;}if(newSelectedItem){this.list.setAttribute(\"aria-activedescendant\",newSelectedItem.id);this.view.requestMeasure({key:this,read:()=>({sel:newSelectedItem.dom.getBoundingClientRect(),panel:this.list.getBoundingClientRect()}),write:({sel,panel})=>{if(sel.top<panel.top)this.list.scrollTop-=panel.top-sel.top;else if(sel.bottom>panel.bottom)this.list.scrollTop+=sel.bottom-panel.bottom;}});}else if(this.selectedIndex<0){this.list.removeAttribute(\"aria-activedescendant\");}if(needsSync)this.sync();}sync(){let domPos=this.list.firstChild;function rm(){let prev=domPos;domPos=prev.nextSibling;prev.remove();}for(let item of this.items){if(item.dom.parentNode==this.list){while(domPos!=item.dom)rm();domPos=item.dom.nextSibling;}else {this.list.insertBefore(item.dom,domPos);}}while(domPos)rm();}moveSelection(selectedIndex){if(this.selectedIndex<0)return;let field=this.view.state.field(lintState);let selection=findDiagnostic(field.diagnostics,this.items[selectedIndex].diagnostic);if(!selection)return;this.view.dispatch({selection:{anchor:selection.from,head:selection.to},scrollIntoView:true,effects:movePanelSelection.of(selection)});}static open(view){return new LintPanel(view);}}function svg(content,attrs=`viewBox=\"0 0 40 40\"`){return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;}function underline(color){return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`,`width=\"6\" height=\"3\"`);}const baseTheme$2=/*@__PURE__*/EditorView.baseTheme({\".cm-diagnostic\":{padding:\"3px 6px 3px 8px\",marginLeft:\"-1px\",display:\"block\",whiteSpace:\"pre-wrap\"},\".cm-diagnostic-error\":{borderLeft:\"5px solid #d11\"},\".cm-diagnostic-warning\":{borderLeft:\"5px solid orange\"},\".cm-diagnostic-info\":{borderLeft:\"5px solid #999\"},\".cm-diagnosticAction\":{font:\"inherit\",border:\"none\",padding:\"2px 4px\",backgroundColor:\"#444\",color:\"white\",borderRadius:\"3px\",marginLeft:\"8px\"},\".cm-diagnosticSource\":{fontSize:\"70%\",opacity:.7},\".cm-lintRange\":{backgroundPosition:\"left bottom\",backgroundRepeat:\"repeat-x\",paddingBottom:\"0.7px\"},\".cm-lintRange-error\":{backgroundImage:/*@__PURE__*/underline(\"#d11\")},\".cm-lintRange-warning\":{backgroundImage:/*@__PURE__*/underline(\"orange\")},\".cm-lintRange-info\":{backgroundImage:/*@__PURE__*/underline(\"#999\")},\".cm-lintRange-active\":{backgroundColor:\"#ffdd9980\"},\".cm-tooltip-lint\":{padding:0,margin:0},\".cm-lintPoint\":{position:\"relative\",\"&:after\":{content:'\"\"',position:\"absolute\",bottom:0,left:\"-2px\",borderLeft:\"3px solid transparent\",borderRight:\"3px solid transparent\",borderBottom:\"4px solid #d11\"}},\".cm-lintPoint-warning\":{\"&:after\":{borderBottomColor:\"orange\"}},\".cm-lintPoint-info\":{\"&:after\":{borderBottomColor:\"#999\"}},\".cm-panel.cm-panel-lint\":{position:\"relative\",\"& ul\":{maxHeight:\"100px\",overflowY:\"auto\",\"& [aria-selected]\":{backgroundColor:\"#ddd\",\"& u\":{textDecoration:\"underline\"}},\"&:focus [aria-selected]\":{background_fallback:\"#bdf\",backgroundColor:\"Highlight\",color_fallback:\"white\",color:\"HighlightText\"},\"& u\":{textDecoration:\"none\"},padding:0,margin:0},\"& [name=close]\":{position:\"absolute\",top:\"0\",right:\"2px\",background:\"inherit\",border:\"none\",font:\"inherit\",padding:0,margin:0}}});const FeelLinter=function(editorView){const messages=[];// don't lint if the Editor is empty\nif(editorView.state.doc.length===0){return messages;}const tree=syntaxTree(editorView.state);tree.iterate({enter:node=>{if(node.type.isError){const error=node.toString();/* The error has the pattern [⚠ || ⚠(NodeType)]. The regex extracts the node type from inside the brackets */const match=/\\((.*?)\\)/.exec(error);const nodeType=match&&match[1];let message;if(nodeType){message='unexpected '+nodeType;}else {message='expression expected';}messages.push({from:node.from,to:node.to,severity:'error',message:message,source:'syntaxError'});}}});return messages;};var syntaxLinter=linter$1(FeelLinter);var linter=[syntaxLinter];const baseTheme$1=EditorView.theme({'& .cm-content':{padding:'0px'},'& .cm-line':{padding:'0px'},'&.cm-editor.cm-focused':{outline:'none'}});const highlightTheme=EditorView.baseTheme({'& .variableName':{color:'#10f'},'& .number':{color:'#164'},'& .string':{color:'#a11'},'& .function':{color:'#aa3731',fontWeight:'bold'},'& .atom':{color:'#708'}});const syntaxClasses=syntaxHighlighting(HighlightStyle.define([{tag:tags.variableName,class:'variableName'},{tag:tags.name,class:'variableName'},{tag:tags.number,class:'number'},{tag:tags.string,class:'string'},{tag:tags.function(tags.variableName),class:'function'},{tag:tags.atom,class:'atom'}]));var theme=[baseTheme$1,highlightTheme,syntaxClasses];/**\nAn instance of this is passed to completion source functions.\n*/class CompletionContext{/**\n    Create a new completion context. (Mostly useful for testing\n    completion sources—in the editor, the extension will create\n    these for you.)\n    */constructor(/**\n    The editor state that the completion happens in.\n    */state,/**\n    The position at which the completion is happening.\n    */pos,/**\n    Indicates whether completion was activated explicitly, or\n    implicitly by typing. The usual way to respond to this is to\n    only return completions when either there is part of a\n    completable entity before the cursor, or `explicit` is true.\n    */explicit){this.state=state;this.pos=pos;this.explicit=explicit;/**\n        @internal\n        */this.abortListeners=[];}/**\n    Get the extent, content, and (if there is a token) type of the\n    token before `this.pos`.\n    */tokenBefore(types){let token=syntaxTree(this.state).resolveInner(this.pos,-1);while(token&&types.indexOf(token.name)<0)token=token.parent;return token?{from:token.from,to:this.pos,text:this.state.sliceDoc(token.from,this.pos),type:token.type}:null;}/**\n    Get the match of the given expression directly before the\n    cursor.\n    */matchBefore(expr){let line=this.state.doc.lineAt(this.pos);let start=Math.max(line.from,this.pos-250);let str=line.text.slice(start-line.from,this.pos-line.from);let found=str.search(ensureAnchor(expr,false));return found<0?null:{from:start+found,to:this.pos,text:str.slice(found)};}/**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */get aborted(){return this.abortListeners==null;}/**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    */addEventListener(type,listener){if(type==\"abort\"&&this.abortListeners)this.abortListeners.push(listener);}}function toSet(chars){let flat=Object.keys(chars).join(\"\");let words=/\\w/.test(flat);if(words)flat=flat.replace(/\\w/g,\"\");return `[${words?\"\\\\w\":\"\"}${flat.replace(/[^\\w\\s]/g,\"\\\\$&\")}]`;}function prefixMatch(options){let first=Object.create(null),rest=Object.create(null);for(let{label}of options){first[label[0]]=true;for(let i=1;i<label.length;i++)rest[label[i]]=true;}let source=toSet(first)+toSet(rest)+\"*$\";return [new RegExp(\"^\"+source),new RegExp(source)];}/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/function completeFromList(list){let options=list.map(o=>typeof o==\"string\"?{label:o}:o);let[validFor,match]=options.every(o=>/^\\w+$/.test(o.label))?[/\\w*$/,/\\w+$/]:prefixMatch(options);return context=>{let token=context.matchBefore(match);return token||context.explicit?{from:token?token.from:context.pos,options,validFor}:null;};}class Option{constructor(completion,source,match){this.completion=completion;this.source=source;this.match=match;}}function cur(state){return state.selection.main.head;}// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr,start){var _a;let{source}=expr;let addStart=start&&source[0]!=\"^\",addEnd=source[source.length-1]!=\"$\";if(!addStart&&!addEnd)return expr;return new RegExp(`${addStart?\"^\":\"\"}(?:${source})${addEnd?\"$\":\"\"}`,(_a=expr.flags)!==null&&_a!==void 0?_a:expr.ignoreCase?\"i\":\"\");}/**\nHelper function that returns a transaction spec which inserts a\ncompletion's text in the main selection range, and any other\nselection range that has the same text in front of it.\n*/function insertCompletionText(state,text,from,to){return Object.assign(Object.assign({},state.changeByRange(range=>{if(range==state.selection.main)return {changes:{from:from,to:to,insert:text},range:EditorSelection.cursor(from+text.length)};let len=to-from;if(!range.empty||len&&state.sliceDoc(range.from-len,range.from)!=state.sliceDoc(from,to))return {range};return {changes:{from:range.from-len,to:range.from,insert:text},range:EditorSelection.cursor(range.from-len+text.length)};})),{userEvent:\"input.complete\"});}function applyCompletion(view,option){const apply=option.completion.apply||option.completion.label;let result=option.source;if(typeof apply==\"string\")view.dispatch(insertCompletionText(view.state,apply,result.from,result.to));else apply(view,option.completion,result.from,result.to);}const SourceCache=/*@__PURE__*/new WeakMap();function asSource(source){if(!Array.isArray(source))return source;let known=SourceCache.get(source);if(!known)SourceCache.set(source,known=completeFromList(source));return known;}// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher{constructor(pattern){this.pattern=pattern;this.chars=[];this.folded=[];// Buffers reused by calls to `match` to track matched character\n// positions.\nthis.any=[];this.precise=[];this.byWord=[];for(let p=0;p<pattern.length;){let char=codePointAt(pattern,p),size=codePointSize(char);this.chars.push(char);let part=pattern.slice(p,p+size),upper=part.toUpperCase();this.folded.push(codePointAt(upper==part?part.toLowerCase():upper,0));p+=size;}this.astral=pattern.length!=this.chars.length;}// Matches a given word (completion) against the pattern (input).\n// Will return null for no match, and otherwise an array that starts\n// with the match score, followed by any number of `from, to` pairs\n// indicating the matched parts of `word`.\n//\n// The score is a number that is more negative the worse the match\n// is. See `Penalty` above.\nmatch(word){if(this.pattern.length==0)return [0];if(word.length<this.pattern.length)return null;let{chars,folded,any,precise,byWord}=this;// For single-character queries, only match when they occur right\n// at the start\nif(chars.length==1){let first=codePointAt(word,0);return first==chars[0]?[0,0,codePointSize(first)]:first==folded[0]?[-200/* CaseFold */,0,codePointSize(first)]:null;}let direct=word.indexOf(this.pattern);if(direct==0)return [0,0,this.pattern.length];let len=chars.length,anyTo=0;if(direct<0){for(let i=0,e=Math.min(word.length,200);i<e&&anyTo<len;){let next=codePointAt(word,i);if(next==chars[anyTo]||next==folded[anyTo])any[anyTo++]=i;i+=codePointSize(next);}// No match, exit immediately\nif(anyTo<len)return null;}// This tracks the extent of the precise (non-folded, not\n// necessarily adjacent) match\nlet preciseTo=0;// Tracks whether there is a match that hits only characters that\n// appear to be starting words. `byWordFolded` is set to true when\n// a case folded character is encountered in such a match\nlet byWordTo=0,byWordFolded=false;// If we've found a partial adjacent match, these track its state\nlet adjacentTo=0,adjacentStart=-1,adjacentEnd=-1;let hasLower=/[a-z]/.test(word),wordAdjacent=true;// Go over the option's text, scanning for the various kinds of matches\nfor(let i=0,e=Math.min(word.length,200),prevType=0/* NonWord */;i<e&&byWordTo<len;){let next=codePointAt(word,i);if(direct<0){if(preciseTo<len&&next==chars[preciseTo])precise[preciseTo++]=i;if(adjacentTo<len){if(next==chars[adjacentTo]||next==folded[adjacentTo]){if(adjacentTo==0)adjacentStart=i;adjacentEnd=i+1;adjacentTo++;}else {adjacentTo=0;}}}let ch,type=next<0xff?next>=48&&next<=57||next>=97&&next<=122?2/* Lower */:next>=65&&next<=90?1/* Upper */:0/* NonWord */:(ch=fromCodePoint(next))!=ch.toLowerCase()?1/* Upper */:ch!=ch.toUpperCase()?2/* Lower */:0/* NonWord */;if(!i||type==1/* Upper */&&hasLower||prevType==0/* NonWord */&&type!=0/* NonWord */){if(chars[byWordTo]==next||folded[byWordTo]==next&&(byWordFolded=true))byWord[byWordTo++]=i;else if(byWord.length)wordAdjacent=false;}prevType=type;i+=codePointSize(next);}if(byWordTo==len&&byWord[0]==0&&wordAdjacent)return this.result(-100/* ByWord */+(byWordFolded?-200/* CaseFold */:0),byWord,word);if(adjacentTo==len&&adjacentStart==0)return [-200/* CaseFold */-word.length,0,adjacentEnd];if(direct>-1)return [-700/* NotStart */-word.length,direct,direct+this.pattern.length];if(adjacentTo==len)return [-200/* CaseFold */+-700/* NotStart */-word.length,adjacentStart,adjacentEnd];if(byWordTo==len)return this.result(-100/* ByWord */+(byWordFolded?-200/* CaseFold */:0)+-700/* NotStart */+(wordAdjacent?0:-1100/* Gap */),byWord,word);return chars.length==2?null:this.result((any[0]?-700/* NotStart */:0)+-200/* CaseFold */+-1100/* Gap */,any,word);}result(score,positions,word){let result=[score-word.length],i=1;for(let pos of positions){let to=pos+(this.astral?codePointSize(codePointAt(word,pos)):1);if(i>1&&result[i-1]==pos)result[i-1]=to;else {result[i++]=pos;result[i++]=to;}}return result;}}const completionConfig=/*@__PURE__*/Facet.define({combine(configs){return combineConfig(configs,{activateOnTyping:true,override:null,closeOnBlur:true,maxRenderedOptions:100,defaultKeymap:true,optionClass:()=>\"\",aboveCursor:false,icons:true,addToOptions:[]},{defaultKeymap:(a,b)=>a&&b,closeOnBlur:(a,b)=>a&&b,icons:(a,b)=>a&&b,optionClass:(a,b)=>c=>joinClass(a(c),b(c)),addToOptions:(a,b)=>a.concat(b)});}});function joinClass(a,b){return a?b?a+\" \"+b:a:b;}function optionContent(config){let content=config.addToOptions.slice();if(config.icons)content.push({render(completion){let icon=document.createElement(\"div\");icon.classList.add(\"cm-completionIcon\");if(completion.type)icon.classList.add(...completion.type.split(/\\s+/g).map(cls=>\"cm-completionIcon-\"+cls));icon.setAttribute(\"aria-hidden\",\"true\");return icon;},position:20});content.push({render(completion,_s,match){let labelElt=document.createElement(\"span\");labelElt.className=\"cm-completionLabel\";let{label}=completion,off=0;for(let j=1;j<match.length;){let from=match[j++],to=match[j++];if(from>off)labelElt.appendChild(document.createTextNode(label.slice(off,from)));let span=labelElt.appendChild(document.createElement(\"span\"));span.appendChild(document.createTextNode(label.slice(from,to)));span.className=\"cm-completionMatchedText\";off=to;}if(off<label.length)labelElt.appendChild(document.createTextNode(label.slice(off)));return labelElt;},position:50},{render(completion){if(!completion.detail)return null;let detailElt=document.createElement(\"span\");detailElt.className=\"cm-completionDetail\";detailElt.textContent=completion.detail;return detailElt;},position:80});return content.sort((a,b)=>a.position-b.position).map(a=>a.render);}function rangeAroundSelected(total,selected,max){if(total<=max)return {from:0,to:total};if(selected<=total>>1){let off=Math.floor(selected/max);return {from:off*max,to:(off+1)*max};}let off=Math.floor((total-selected)/max);return {from:total-(off+1)*max,to:total-off*max};}class CompletionTooltip{constructor(view,stateField){this.view=view;this.stateField=stateField;this.info=null;this.placeInfo={read:()=>this.measureInfo(),write:pos=>this.positionInfo(pos),key:this};let cState=view.state.field(stateField);let{options,selected}=cState.open;let config=view.state.facet(completionConfig);this.optionContent=optionContent(config);this.optionClass=config.optionClass;this.range=rangeAroundSelected(options.length,selected,config.maxRenderedOptions);this.dom=document.createElement(\"div\");this.dom.className=\"cm-tooltip-autocomplete\";this.dom.addEventListener(\"mousedown\",e=>{for(let dom=e.target,match;dom&&dom!=this.dom;dom=dom.parentNode){if(dom.nodeName==\"LI\"&&(match=/-(\\d+)$/.exec(dom.id))&&+match[1]<options.length){applyCompletion(view,options[+match[1]]);e.preventDefault();return;}}});this.list=this.dom.appendChild(this.createListBox(options,cState.id,this.range));this.list.addEventListener(\"scroll\",()=>{if(this.info)this.view.requestMeasure(this.placeInfo);});}mount(){this.updateSel();}update(update){if(update.state.field(this.stateField)!=update.startState.field(this.stateField))this.updateSel();}positioned(){if(this.info)this.view.requestMeasure(this.placeInfo);}updateSel(){let cState=this.view.state.field(this.stateField),open=cState.open;if(open.selected<this.range.from||open.selected>=this.range.to){this.range=rangeAroundSelected(open.options.length,open.selected,this.view.state.facet(completionConfig).maxRenderedOptions);this.list.remove();this.list=this.dom.appendChild(this.createListBox(open.options,cState.id,this.range));this.list.addEventListener(\"scroll\",()=>{if(this.info)this.view.requestMeasure(this.placeInfo);});}if(this.updateSelectedOption(open.selected)){if(this.info){this.info.remove();this.info=null;}let{completion}=open.options[open.selected];let{info}=completion;if(!info)return;let infoResult=typeof info==='string'?document.createTextNode(info):info(completion);if(!infoResult)return;if('then'in infoResult){infoResult.then(node=>{if(node&&this.view.state.field(this.stateField,false)==cState)this.addInfoPane(node);}).catch(e=>logException(this.view.state,e,\"completion info\"));}else {this.addInfoPane(infoResult);}}}addInfoPane(content){let dom=this.info=document.createElement(\"div\");dom.className=\"cm-tooltip cm-completionInfo\";dom.appendChild(content);this.dom.appendChild(dom);this.view.requestMeasure(this.placeInfo);}updateSelectedOption(selected){let set=null;for(let opt=this.list.firstChild,i=this.range.from;opt;opt=opt.nextSibling,i++){if(i==selected){if(!opt.hasAttribute(\"aria-selected\")){opt.setAttribute(\"aria-selected\",\"true\");set=opt;}}else {if(opt.hasAttribute(\"aria-selected\"))opt.removeAttribute(\"aria-selected\");}}if(set)scrollIntoView(this.list,set);return set;}measureInfo(){let sel=this.dom.querySelector(\"[aria-selected]\");if(!sel||!this.info)return null;let listRect=this.dom.getBoundingClientRect();let infoRect=this.info.getBoundingClientRect();let selRect=sel.getBoundingClientRect();if(selRect.top>Math.min(innerHeight,listRect.bottom)-10||selRect.bottom<Math.max(0,listRect.top)+10)return null;let top=Math.max(0,Math.min(selRect.top,innerHeight-infoRect.height))-listRect.top;let left=this.view.textDirection==Direction.RTL;let spaceLeft=listRect.left,spaceRight=innerWidth-listRect.right;if(left&&spaceLeft<Math.min(infoRect.width,spaceRight))left=false;else if(!left&&spaceRight<Math.min(infoRect.width,spaceLeft))left=true;return {top,left};}positionInfo(pos){if(this.info){this.info.style.top=(pos?pos.top:-1e6)+\"px\";if(pos){this.info.classList.toggle(\"cm-completionInfo-left\",pos.left);this.info.classList.toggle(\"cm-completionInfo-right\",!pos.left);}}}createListBox(options,id,range){const ul=document.createElement(\"ul\");ul.id=id;ul.setAttribute(\"role\",\"listbox\");ul.setAttribute(\"aria-expanded\",\"true\");ul.setAttribute(\"aria-label\",this.view.state.phrase(\"Completions\"));for(let i=range.from;i<range.to;i++){let{completion,match}=options[i];const li=ul.appendChild(document.createElement(\"li\"));li.id=id+\"-\"+i;li.setAttribute(\"role\",\"option\");let cls=this.optionClass(completion);if(cls)li.className=cls;for(let source of this.optionContent){let node=source(completion,this.view.state,match);if(node)li.appendChild(node);}}if(range.from)ul.classList.add(\"cm-completionListIncompleteTop\");if(range.to<options.length)ul.classList.add(\"cm-completionListIncompleteBottom\");return ul;}}// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField){return view=>new CompletionTooltip(view,stateField);}function scrollIntoView(container,element){let parent=container.getBoundingClientRect();let self=element.getBoundingClientRect();if(self.top<parent.top)container.scrollTop-=parent.top-self.top;else if(self.bottom>parent.bottom)container.scrollTop+=self.bottom-parent.bottom;}// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option){return (option.boost||0)*100+(option.apply?10:0)+(option.info?5:0)+(option.type?1:0);}function sortOptions(active,state){let options=[],i=0;for(let a of active)if(a.hasResult()){if(a.result.filter===false){let getMatch=a.result.getMatch;for(let option of a.result.options){let match=[1e9-i++];if(getMatch)for(let n of getMatch(option))match.push(n);options.push(new Option(option,a,match));}}else {let matcher=new FuzzyMatcher(state.sliceDoc(a.from,a.to)),match;for(let option of a.result.options)if(match=matcher.match(option.label)){if(option.boost!=null)match[0]+=option.boost;options.push(new Option(option,a,match));}}}let result=[],prev=null;for(let opt of options.sort(cmpOption)){if(!prev||prev.label!=opt.completion.label||prev.detail!=opt.completion.detail||prev.type!=null&&opt.completion.type!=null&&prev.type!=opt.completion.type||prev.apply!=opt.completion.apply)result.push(opt);else if(score(opt.completion)>score(prev))result[result.length-1]=opt;prev=opt.completion;}return result;}class CompletionDialog{constructor(options,attrs,tooltip,timestamp,selected){this.options=options;this.attrs=attrs;this.tooltip=tooltip;this.timestamp=timestamp;this.selected=selected;}setSelected(selected,id){return selected==this.selected||selected>=this.options.length?this:new CompletionDialog(this.options,makeAttrs(id,selected),this.tooltip,this.timestamp,selected);}static build(active,state,id,prev,conf){let options=sortOptions(active,state);if(!options.length)return null;let selected=0;if(prev&&prev.selected){let selectedValue=prev.options[prev.selected].completion;for(let i=0;i<options.length;i++)if(options[i].completion==selectedValue){selected=i;break;}}return new CompletionDialog(options,makeAttrs(id,selected),{pos:active.reduce((a,b)=>b.hasResult()?Math.min(a,b.from):a,1e8),create:completionTooltip(completionState),above:conf.aboveCursor},prev?prev.timestamp:Date.now(),selected);}map(changes){return new CompletionDialog(this.options,this.attrs,Object.assign(Object.assign({},this.tooltip),{pos:changes.mapPos(this.tooltip.pos)}),this.timestamp,this.selected);}}class CompletionState{constructor(active,id,open){this.active=active;this.id=id;this.open=open;}static start(){return new CompletionState(none,\"cm-ac-\"+Math.floor(Math.random()*2e6).toString(36),null);}update(tr){let{state}=tr,conf=state.facet(completionConfig);let sources=conf.override||state.languageDataAt(\"autocomplete\",cur(state)).map(asSource);let active=sources.map(source=>{let value=this.active.find(s=>s.source==source)||new ActiveSource(source,this.active.some(a=>a.state!=0/* Inactive */)?1/* Pending */:0/* Inactive */);return value.update(tr,conf);});if(active.length==this.active.length&&active.every((a,i)=>a==this.active[i]))active=this.active;let open=tr.selection||active.some(a=>a.hasResult()&&tr.changes.touchesRange(a.from,a.to))||!sameResults(active,this.active)?CompletionDialog.build(active,state,this.id,this.open,conf):this.open&&tr.docChanged?this.open.map(tr.changes):this.open;if(!open&&active.every(a=>a.state!=1/* Pending */)&&active.some(a=>a.hasResult()))active=active.map(a=>a.hasResult()?new ActiveSource(a.source,0/* Inactive */):a);for(let effect of tr.effects)if(effect.is(setSelectedEffect))open=open&&open.setSelected(effect.value,this.id);return active==this.active&&open==this.open?this:new CompletionState(active,this.id,open);}get tooltip(){return this.open?this.open.tooltip:null;}get attrs(){return this.open?this.open.attrs:baseAttrs;}}function sameResults(a,b){if(a==b)return true;for(let iA=0,iB=0;;){while(iA<a.length&&!a[iA].hasResult)iA++;while(iB<b.length&&!b[iB].hasResult)iB++;let endA=iA==a.length,endB=iB==b.length;if(endA||endB)return endA==endB;if(a[iA++].result!=b[iB++].result)return false;}}const baseAttrs={\"aria-autocomplete\":\"list\"};function makeAttrs(id,selected){return {\"aria-autocomplete\":\"list\",\"aria-haspopup\":\"listbox\",\"aria-activedescendant\":id+\"-\"+selected,\"aria-controls\":id};}const none=[];function cmpOption(a,b){let dScore=b.match[0]-a.match[0];if(dScore)return dScore;return a.completion.label.localeCompare(b.completion.label);}function getUserEvent(tr){return tr.isUserEvent(\"input.type\")?\"input\":tr.isUserEvent(\"delete.backward\")?\"delete\":null;}class ActiveSource{constructor(source,state,explicitPos=-1){this.source=source;this.state=state;this.explicitPos=explicitPos;}hasResult(){return false;}update(tr,conf){let event=getUserEvent(tr),value=this;if(event)value=value.handleUserEvent(tr,event,conf);else if(tr.docChanged)value=value.handleChange(tr);else if(tr.selection&&value.state!=0/* Inactive */)value=new ActiveSource(value.source,0/* Inactive */);for(let effect of tr.effects){if(effect.is(startCompletionEffect))value=new ActiveSource(value.source,1/* Pending */,effect.value?cur(tr.state):-1);else if(effect.is(closeCompletionEffect))value=new ActiveSource(value.source,0/* Inactive */);else if(effect.is(setActiveEffect))for(let active of effect.value)if(active.source==value.source)value=active;}return value;}handleUserEvent(tr,type,conf){return type==\"delete\"||!conf.activateOnTyping?this.map(tr.changes):new ActiveSource(this.source,1/* Pending */);}handleChange(tr){return tr.changes.touchesRange(cur(tr.startState))?new ActiveSource(this.source,0/* Inactive */):this.map(tr.changes);}map(changes){return changes.empty||this.explicitPos<0?this:new ActiveSource(this.source,this.state,changes.mapPos(this.explicitPos));}}class ActiveResult extends ActiveSource{constructor(source,explicitPos,result,from,to){super(source,2/* Result */,explicitPos);this.result=result;this.from=from;this.to=to;}hasResult(){return true;}handleUserEvent(tr,type,conf){var _a;let from=tr.changes.mapPos(this.from),to=tr.changes.mapPos(this.to,1);let pos=cur(tr.state);if((this.explicitPos<0?pos<=from:pos<this.from)||pos>to||type==\"delete\"&&cur(tr.startState)==this.from)return new ActiveSource(this.source,type==\"input\"&&conf.activateOnTyping?1/* Pending */:0/* Inactive */);let explicitPos=this.explicitPos<0?-1:tr.changes.mapPos(this.explicitPos),updated;if(checkValid(this.result.validFor,tr.state,from,to))return new ActiveResult(this.source,explicitPos,this.result,from,to);if(this.result.update&&(updated=this.result.update(this.result,from,to,new CompletionContext(tr.state,pos,explicitPos>=0))))return new ActiveResult(this.source,explicitPos,updated,updated.from,(_a=updated.to)!==null&&_a!==void 0?_a:cur(tr.state));return new ActiveSource(this.source,1/* Pending */,explicitPos);}handleChange(tr){return tr.changes.touchesRange(this.from,this.to)?new ActiveSource(this.source,0/* Inactive */):this.map(tr.changes);}map(mapping){return mapping.empty?this:new ActiveResult(this.source,this.explicitPos<0?-1:mapping.mapPos(this.explicitPos),this.result,mapping.mapPos(this.from),mapping.mapPos(this.to,1));}}function checkValid(validFor,state,from,to){if(!validFor)return false;let text=state.sliceDoc(from,to);return typeof validFor==\"function\"?validFor(text,from,to,state):ensureAnchor(validFor,true).test(text);}const startCompletionEffect=/*@__PURE__*/StateEffect.define();const closeCompletionEffect=/*@__PURE__*/StateEffect.define();const setActiveEffect=/*@__PURE__*/StateEffect.define({map(sources,mapping){return sources.map(s=>s.map(mapping));}});const setSelectedEffect=/*@__PURE__*/StateEffect.define();const completionState=/*@__PURE__*/StateField.define({create(){return CompletionState.start();},update(value,tr){return value.update(tr);},provide:f=>[showTooltip.from(f,val=>val.tooltip),EditorView.contentAttributes.from(f,state=>state.attrs)]});const CompletionInteractMargin=75;/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/function moveCompletionSelection(forward,by=\"option\"){return view=>{let cState=view.state.field(completionState,false);if(!cState||!cState.open||Date.now()-cState.open.timestamp<CompletionInteractMargin)return false;let step=1,tooltip;if(by==\"page\"&&(tooltip=getTooltip(view,cState.open.tooltip)))step=Math.max(2,Math.floor(tooltip.dom.offsetHeight/tooltip.dom.querySelector(\"li\").offsetHeight)-1);let selected=cState.open.selected+step*(forward?1:-1),{length}=cState.open.options;if(selected<0)selected=by==\"page\"?0:length-1;else if(selected>=length)selected=by==\"page\"?length-1:0;view.dispatch({effects:setSelectedEffect.of(selected)});return true;};}/**\nAccept the current completion.\n*/const acceptCompletion=view=>{let cState=view.state.field(completionState,false);if(view.state.readOnly||!cState||!cState.open||Date.now()-cState.open.timestamp<CompletionInteractMargin)return false;applyCompletion(view,cState.open.options[cState.open.selected]);return true;};/**\nExplicitly start autocompletion.\n*/const startCompletion=view=>{let cState=view.state.field(completionState,false);if(!cState)return false;view.dispatch({effects:startCompletionEffect.of(true)});return true;};/**\nClose the currently active completion.\n*/const closeCompletion=view=>{let cState=view.state.field(completionState,false);if(!cState||!cState.active.some(a=>a.state!=0/* Inactive */))return false;view.dispatch({effects:closeCompletionEffect.of(null)});return true;};class RunningQuery{constructor(active,context){this.active=active;this.context=context;this.time=Date.now();this.updates=[];// Note that 'undefined' means 'not done yet', whereas 'null' means\n// 'query returned null'.\nthis.done=undefined;}}const DebounceTime=50,MaxUpdateCount=50,MinAbortTime=1000;const completionPlugin=/*@__PURE__*/ViewPlugin.fromClass(class{constructor(view){this.view=view;this.debounceUpdate=-1;this.running=[];this.debounceAccept=-1;this.composing=0/* None */;for(let active of view.state.field(completionState).active)if(active.state==1/* Pending */)this.startQuery(active);}update(update){let cState=update.state.field(completionState);if(!update.selectionSet&&!update.docChanged&&update.startState.field(completionState)==cState)return;let doesReset=update.transactions.some(tr=>{return (tr.selection||tr.docChanged)&&!getUserEvent(tr);});for(let i=0;i<this.running.length;i++){let query=this.running[i];if(doesReset||query.updates.length+update.transactions.length>MaxUpdateCount&&Date.now()-query.time>MinAbortTime){for(let handler of query.context.abortListeners){try{handler();}catch(e){logException(this.view.state,e);}}query.context.abortListeners=null;this.running.splice(i--,1);}else {query.updates.push(...update.transactions);}}if(this.debounceUpdate>-1)clearTimeout(this.debounceUpdate);this.debounceUpdate=cState.active.some(a=>a.state==1/* Pending */&&!this.running.some(q=>q.active.source==a.source))?setTimeout(()=>this.startUpdate(),DebounceTime):-1;if(this.composing!=0/* None */)for(let tr of update.transactions){if(getUserEvent(tr)==\"input\")this.composing=2/* Changed */;else if(this.composing==2/* Changed */&&tr.selection)this.composing=3/* ChangedAndMoved */;}}startUpdate(){this.debounceUpdate=-1;let{state}=this.view,cState=state.field(completionState);for(let active of cState.active){if(active.state==1/* Pending */&&!this.running.some(r=>r.active.source==active.source))this.startQuery(active);}}startQuery(active){let{state}=this.view,pos=cur(state);let context=new CompletionContext(state,pos,active.explicitPos==pos);let pending=new RunningQuery(active,context);this.running.push(pending);Promise.resolve(active.source(context)).then(result=>{if(!pending.context.aborted){pending.done=result||null;this.scheduleAccept();}},err=>{this.view.dispatch({effects:closeCompletionEffect.of(null)});logException(this.view.state,err);});}scheduleAccept(){if(this.running.every(q=>q.done!==undefined))this.accept();else if(this.debounceAccept<0)this.debounceAccept=setTimeout(()=>this.accept(),DebounceTime);}// For each finished query in this.running, try to create a result\n// or, if appropriate, restart the query.\naccept(){var _a;if(this.debounceAccept>-1)clearTimeout(this.debounceAccept);this.debounceAccept=-1;let updated=[];let conf=this.view.state.facet(completionConfig);for(let i=0;i<this.running.length;i++){let query=this.running[i];if(query.done===undefined)continue;this.running.splice(i--,1);if(query.done){let active=new ActiveResult(query.active.source,query.active.explicitPos,query.done,query.done.from,(_a=query.done.to)!==null&&_a!==void 0?_a:cur(query.updates.length?query.updates[0].startState:this.view.state));// Replay the transactions that happened since the start of\n// the request and see if that preserves the result\nfor(let tr of query.updates)active=active.update(tr,conf);if(active.hasResult()){updated.push(active);continue;}}let current=this.view.state.field(completionState).active.find(a=>a.source==query.active.source);if(current&&current.state==1/* Pending */){if(query.done==null){// Explicitly failed. Should clear the pending status if it\n// hasn't been re-set in the meantime.\nlet active=new ActiveSource(query.active.source,0/* Inactive */);for(let tr of query.updates)active=active.update(tr,conf);if(active.state!=1/* Pending */)updated.push(active);}else {// Cleared by subsequent transactions. Restart.\nthis.startQuery(current);}}}if(updated.length)this.view.dispatch({effects:setActiveEffect.of(updated)});}},{eventHandlers:{blur(){let state=this.view.state.field(completionState,false);if(state&&state.tooltip&&this.view.state.facet(completionConfig).closeOnBlur)this.view.dispatch({effects:closeCompletionEffect.of(null)});},compositionstart(){this.composing=1/* Started */;},compositionend(){if(this.composing==3/* ChangedAndMoved */){// Safari fires compositionend events synchronously, possibly\n// from inside an update, so dispatch asynchronously to avoid reentrancy\nsetTimeout(()=>this.view.dispatch({effects:startCompletionEffect.of(false)}),20);}this.composing=0/* None */;}}});const baseTheme=/*@__PURE__*/EditorView.baseTheme({\".cm-tooltip.cm-tooltip-autocomplete\":{\"& > ul\":{fontFamily:\"monospace\",whiteSpace:\"nowrap\",overflow:\"hidden auto\",maxWidth_fallback:\"700px\",maxWidth:\"min(700px, 95vw)\",minWidth:\"250px\",maxHeight:\"10em\",listStyle:\"none\",margin:0,padding:0,\"& > li\":{overflowX:\"hidden\",textOverflow:\"ellipsis\",cursor:\"pointer\",padding:\"1px 3px\",lineHeight:1.2}}},\"&light .cm-tooltip-autocomplete ul li[aria-selected]\":{background:\"#17c\",color:\"white\"},\"&dark .cm-tooltip-autocomplete ul li[aria-selected]\":{background:\"#347\",color:\"white\"},\".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\":{content:'\"···\"',opacity:0.5,display:\"block\",textAlign:\"center\"},\".cm-tooltip.cm-completionInfo\":{position:\"absolute\",padding:\"3px 9px\",width:\"max-content\",maxWidth:\"300px\"},\".cm-completionInfo.cm-completionInfo-left\":{right:\"100%\"},\".cm-completionInfo.cm-completionInfo-right\":{left:\"100%\"},\"&light .cm-snippetField\":{backgroundColor:\"#00000022\"},\"&dark .cm-snippetField\":{backgroundColor:\"#ffffff22\"},\".cm-snippetFieldPosition\":{verticalAlign:\"text-top\",width:0,height:\"1.15em\",margin:\"0 -0.7px -.7em\",borderLeft:\"1.4px dotted #888\"},\".cm-completionMatchedText\":{textDecoration:\"underline\"},\".cm-completionDetail\":{marginLeft:\"0.5em\",fontStyle:\"italic\"},\".cm-completionIcon\":{fontSize:\"90%\",width:\".8em\",display:\"inline-block\",textAlign:\"center\",paddingRight:\".6em\",opacity:\"0.6\"},\".cm-completionIcon-function, .cm-completionIcon-method\":{\"&:after\":{content:\"'ƒ'\"}},\".cm-completionIcon-class\":{\"&:after\":{content:\"'○'\"}},\".cm-completionIcon-interface\":{\"&:after\":{content:\"'◌'\"}},\".cm-completionIcon-variable\":{\"&:after\":{content:\"'𝑥'\"}},\".cm-completionIcon-constant\":{\"&:after\":{content:\"'𝐶'\"}},\".cm-completionIcon-type\":{\"&:after\":{content:\"'𝑡'\"}},\".cm-completionIcon-enum\":{\"&:after\":{content:\"'∪'\"}},\".cm-completionIcon-property\":{\"&:after\":{content:\"'□'\"}},\".cm-completionIcon-keyword\":{\"&:after\":{content:\"'🔑\\uFE0E'\"}// Disable emoji rendering\n},\".cm-completionIcon-namespace\":{\"&:after\":{content:\"'▢'\"}},\".cm-completionIcon-text\":{\"&:after\":{content:\"'abc'\",fontSize:\"50%\",verticalAlign:\"middle\"}}});const closedBracket=/*@__PURE__*/new class extends RangeValue{}();closedBracket.startSide=1;closedBracket.endSide=-1;/**\nReturns an extension that enables autocompletion.\n*/function autocompletion$1(config={}){return [completionState,completionConfig.of(config),completionPlugin,completionKeymapExt,baseTheme];}/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space: [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/const completionKeymap=[{key:\"Ctrl-Space\",run:startCompletion},{key:\"Escape\",run:closeCompletion},{key:\"ArrowDown\",run:/*@__PURE__*/moveCompletionSelection(true)},{key:\"ArrowUp\",run:/*@__PURE__*/moveCompletionSelection(false)},{key:\"PageDown\",run:/*@__PURE__*/moveCompletionSelection(true,\"page\")},{key:\"PageUp\",run:/*@__PURE__*/moveCompletionSelection(false,\"page\")},{key:\"Enter\",run:acceptCompletion}];const completionKeymapExt=/*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig],state=>state.facet(completionConfig).defaultKeymap?[completionKeymap]:[]));var variables=variables=>context=>{const options=variables.map(v=>({label:v.name,type:'variable',info:v.info,detail:v.detail}));// In most cases, use what is typed before the cursor\nlet nodeBefore=syntaxTree(context.state).resolve(context.pos,-1);// For the special case of empty nodes, we need to check the current node\n// as well. The previous node could be part of another token, e.g.\n// when typing functions \"abs(\".\nlet nextNode=nodeBefore.nextSibling;const isInEmptyNode=isNodeEmpty(nodeBefore)||nextNode&&nextNode.from===context.pos&&isNodeEmpty(nextNode);if(context.explicit&&isInEmptyNode){return {from:context.pos,options:options};}const result={from:nodeBefore.from,options:options};// Only auto-complete variables\nif(nodeBefore.name!=='VariableName'){return null;}return result;};// helpers ///////////////////////////////\nfunction isNodeEmpty(node){return node.from===node.to;}function autocompletion(context){return [autocompletion$1({override:[variables(context)]})];}/**\n * Creates a FEEL editor in the supplied container\n *\n * @param {Object} config\n * @param {DOMNode} config.container\n * @param {Function} [config.onChange]\n * @param {Function} [config.onKeyDown]\n * @param {String} [config.value]\n *\n * @returns {Object} editor\n */function FeelEditor({container,variables=[],onChange=()=>{},onKeyDown=()=>{},value='',readOnly=false}){const changeHandler=EditorView.updateListener.of(update=>{if(update.docChanged){onChange(update.state.doc.toString());}});const keyHandler=EditorView.domEventHandlers({keydown:onKeyDown});const extensions=[keymap.of([...defaultKeymap]),changeHandler,keyHandler,language(),autocompletion(variables),theme,linter];if(readOnly){extensions.push(EditorView.editable.of(false));}this._cmEditor=new EditorView({state:EditorState.create({doc:value,extensions:extensions}),parent:container});return this;}/**\n * Replaces the content of the Editor\n *\n * @param {String} value\n */FeelEditor.prototype.setValue=function(value){this._cmEditor.dispatch({changes:{from:0,to:this._cmEditor.state.doc.length,insert:value}});};/**\n * Sets the focus in the editor.\n */FeelEditor.prototype.focus=function(){this._cmEditor.focus();};/**\n * Returns the current selection ranges. If no text is selected, a single\n * range with the start and end index at the cursor position will be returned.\n *\n * @returns {Object} selection\n * @returns {Array} selection.ranges\n */FeelEditor.prototype.getSelection=function(){return this._cmEditor.state.selection;};\n\nconst useBufferedFocus = function (editor, ref) {\n  const [buffer, setBuffer] = useState(false);\n  ref.current = useMemo(() => ({\n    focus: () => {\n      if (editor) {\n        editor.focus();\n      } else {\n        setBuffer(true);\n      }\n    }\n  }), [editor]);\n  useEffect(() => {\n    if (buffer && editor) {\n      editor.focus();\n      setBuffer(false);\n    }\n  }, [editor, buffer]);\n};\n\nconst CodeEditor = forwardRef((props, ref) => {\n  const {\n    value,\n    onInput,\n    onFeelToggle,\n    disabled,\n    variables\n  } = props;\n  const inputRef = useRef();\n  const [editor, setEditor] = useState();\n  const [localValue, setLocalValue] = useState(value || '');\n  useBufferedFocus(editor, ref);\n  const handleInput = useStaticCallback(newValue => {\n    onInput(newValue);\n    setLocalValue(newValue);\n  });\n  useEffect(() => {\n    let editor;\n    /* Trigger FEEL toggle when\n     *\n     * - `backspace` is pressed\n     * - AND the cursor is at the beginning of the input\n     */\n\n    const onKeyDown = e => {\n      if (e.key !== 'Backspace' || !editor) {\n        return;\n      }\n\n      const selection = editor.getSelection();\n      const range = selection.ranges[selection.mainIndex];\n\n      if (range.from === 0 && range.to === 0) {\n        onFeelToggle();\n      }\n    };\n\n    editor = new FeelEditor({\n      container: inputRef.current,\n      onChange: handleInput,\n      onKeyDown: onKeyDown,\n      value: localValue,\n      variables: variables\n    });\n    setEditor(editor);\n    return () => {\n      inputRef.current.innerHTML = '';\n      setEditor(null);\n    };\n  }, [variables]);\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n\n    if (value === localValue) {\n      return;\n    }\n\n    editor.setValue(value);\n    setLocalValue(value);\n  }, [value]);\n  return jsx(\"div\", {\n    class: classnames('bio-properties-panel-feel-editor-container', disabled ? 'disabled' : null),\n    children: jsx(\"div\", {\n      name: props.name,\n      class: classnames('bio-properties-panel-input', localValue ? 'edited' : null),\n      ref: inputRef\n    })\n  });\n});\n\nfunction FeelIndicator(props) {\n  const {\n    active\n  } = props;\n\n  if (!active) {\n    return null;\n  }\n\n  return jsx(\"span\", {\n    class: \"bio-properties-panel-feel-indicator\",\n    children: \"=\"\n  });\n}\n\nconst noop$1 = () => {};\n/**\n * @param {Object} props\n * @param {Object} props.label\n * @param {String} props.feel\n */\n\n\nfunction FeelIcon(props) {\n  const {\n    label,\n    feel = false,\n    active,\n    disabled = false,\n    onClick = noop$1\n  } = props;\n  const feelRequiredLabel = ' must be a FEEL expression';\n  const feelOptionalLabel = ' can optionally be a FEEL expression';\n\n  const handleClick = e => {\n    onClick(e); // when pointer event was created from keyboard, keep focus on button\n\n    if (!e.pointerType) {\n      e.stopPropagation();\n    }\n  };\n\n  return jsx(\"button\", {\n    class: classnames('bio-properties-panel-feel-icon', active ? 'active' : null, feel === 'required' ? 'required' : 'optional'),\n    onClick: handleClick,\n    disabled: feel === 'required' || disabled,\n    title: label + (feel === 'required' ? feelRequiredLabel : feelOptionalLabel),\n    children: feel === 'required' ? jsx(FeelRequiredIcon, {}) : jsx(FeelOptionalIcon, {})\n  });\n}\n\nconst noop = () => {};\n\nfunction FeelTextfield(props) {\n  const {\n    debounce,\n    id,\n    label,\n    onInput,\n    feel,\n    value = '',\n    disabled = false,\n    OptionalComponent = OptionalFeelInput\n  } = props;\n  const [localValue, _setLocalValue] = useState(value);\n  const ref = useShowEntryEvent(id);\n  const feelActive = localValue.startsWith('=') || feel === 'required';\n  const feelOnlyValue = localValue.substring(1);\n  const [focus, setFocus] = useState();\n  const handleInputCallback = useMemo(() => {\n    return debounce(newValue => {\n      onInput(newValue);\n    });\n  }, [onInput, debounce]);\n\n  const setLocalValue = newValue => {\n    _setLocalValue(newValue);\n\n    if (!newValue || newValue === '=') {\n      handleInputCallback(undefined);\n    } else {\n      handleInputCallback(newValue);\n    }\n  };\n\n  const handleFeelToggle = useStaticCallback(() => {\n    if (feel === 'required') {\n      return;\n    }\n\n    if (!feelActive) {\n      setLocalValue('=' + localValue);\n    } else {\n      setLocalValue(feelOnlyValue);\n    }\n  });\n\n  const handleLocalInput = newValue => {\n    if (feelActive) {\n      newValue = '=' + newValue;\n    }\n\n    if (newValue === localValue) {\n      return;\n    }\n\n    setLocalValue(newValue);\n\n    if (!feelActive && newValue.startsWith('=')) {\n      setFocus(true);\n    }\n  };\n\n  useEffect(() => {\n    if (focus) {\n      ref.current.focus();\n      setFocus(false);\n    }\n  }, [focus]);\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    } // External value change removed content => keep FEEL configuration\n\n\n    if (!value) {\n      setLocalValue(feelActive ? '=' : '');\n      return;\n    }\n\n    setLocalValue(value);\n  }, [value]);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-feel-entry\",\n    children: [jsxs(\"label\", {\n      for: prefixId$6(id),\n      class: \"bio-properties-panel-label\",\n      onClick: () => setFocus(true),\n      children: [label, jsx(FeelIcon, {\n        label: label,\n        feel: feel,\n        onClick: handleFeelToggle,\n        active: feelActive\n      })]\n    }), jsxs(\"div\", {\n      class: \"bio-properties-panel-feel-container\",\n      children: [jsx(FeelIndicator, {\n        active: feelActive,\n        disabled: feel !== 'optional' || disabled,\n        onClick: handleFeelToggle\n      }), feelActive ? jsx(CodeEditor, {\n        id: prefixId$6(id),\n        name: id,\n        onInput: handleLocalInput,\n        disabled: disabled,\n        onFeelToggle: () => {\n          handleFeelToggle();\n          setFocus(true);\n        },\n        value: feelOnlyValue,\n        variables: props.variables,\n        ref: ref\n      }) : jsx(OptionalComponent, { ...props,\n        onInput: handleLocalInput,\n        value: localValue,\n        ref: ref\n      })]\n    })]\n  });\n}\n\nconst OptionalFeelInput = forwardRef((props, ref) => {\n  const {\n    id,\n    disabled,\n    onInput,\n    value\n  } = props;\n  const inputRef = useRef(); // To be consistent with the FEEL editor, set focus at start of input\n  // this ensures clean editing experience when switching with the keyboard\n\n  ref.current = {\n    focus: () => {\n      const input = inputRef.current;\n\n      if (!input) {\n        return;\n      }\n\n      input.focus();\n      input.setSelectionRange(0, 0);\n    }\n  };\n  return jsx(\"input\", {\n    id: prefixId$6(id),\n    type: \"text\",\n    ref: inputRef,\n    name: id,\n    spellCheck: \"false\",\n    autoComplete: \"off\",\n    disabled: disabled,\n    class: \"bio-properties-panel-input\",\n    onInput: e => onInput(e.target.value),\n    onFocus: props.onFocus,\n    onBlur: props.onBlur,\n    value: value || ''\n  });\n});\nconst OptionalFeelTextArea = forwardRef((props, ref) => {\n  const {\n    id,\n    disabled,\n    onInput,\n    value\n  } = props;\n  const inputRef = useRef(); // To be consistent with the FEEL editor, set focus at start of input\n  // this ensures clean editing experience when switching with the keyboard\n\n  ref.current = {\n    focus: () => {\n      const input = inputRef.current;\n\n      if (!input) {\n        return;\n      }\n\n      input.focus();\n      input.setSelectionRange(0, 0);\n    }\n  };\n  return jsx(\"textarea\", {\n    id: prefixId$6(id),\n    type: \"text\",\n    ref: inputRef,\n    name: id,\n    spellCheck: \"false\",\n    autoComplete: \"off\",\n    disabled: disabled,\n    class: \"bio-properties-panel-input\",\n    onInput: e => onInput(e.target.value),\n    onFocus: props.onFocus,\n    onBlur: props.onBlur,\n    value: value || ''\n  });\n});\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.id\n * @param {String} props.description\n * @param {Boolean} props.debounce\n * @param {Boolean} props.disabled\n * @param {String} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.validate\n */\n\nfunction FeelEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    debounce,\n    disabled,\n    feel,\n    label,\n    getValue,\n    setValue,\n    validate,\n    show = noop\n  } = props;\n  const [cachedInvalidValue, setCachedInvalidValue] = useState(null);\n  const [validationError, setValidationError] = useState(null);\n  let value = getValue(element);\n  const previousValue = usePrevious(value);\n  useEffect(() => {\n    if (isFunction(validate)) {\n      const newValidationError = validate(value) || null;\n      setValidationError(newValidationError);\n    }\n  }, [value]);\n  const onInput = useStaticCallback(newValue => {\n    let newValidationError = null;\n\n    if (isFunction(validate)) {\n      newValidationError = validate(newValue) || null;\n    }\n\n    if (newValidationError) {\n      setCachedInvalidValue(newValue);\n    } else {\n      // don't create multiple commandStack entries for the same value\n      if (newValue !== value) {\n        setValue(newValue);\n      }\n    }\n\n    setValidationError(newValidationError);\n  });\n\n  if (previousValue === value && validationError) {\n    value = cachedInvalidValue;\n  }\n\n  const temporaryError = useError(id);\n  const error = temporaryError || validationError;\n  return jsxs(\"div\", {\n    class: classnames(props.class, 'bio-properties-panel-entry', error ? 'has-error' : ''),\n    \"data-entry-id\": id,\n    children: [jsx(FeelTextfield, {\n      debounce: debounce,\n      disabled: disabled,\n      feel: feel,\n      id: id,\n      label: label,\n      onInput: onInput,\n      example: props.example,\n      show: show,\n      value: value,\n      variables: props.variables,\n      OptionalComponent: props.OptionalComponent\n    }, element), error && jsx(\"div\", {\n      class: \"bio-properties-panel-error\",\n      children: error\n    }), jsx(Description, {\n      forId: id,\n      element: element,\n      value: description\n    })]\n  });\n}\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.id\n * @param {String} props.description\n * @param {Boolean} props.debounce\n * @param {Boolean} props.disabled\n * @param {String} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.validate\n */\n\nfunction FeelTextArea(props) {\n  return jsx(FeelEntry, {\n    class: \"bio-properties-panel-feel-textarea\",\n    OptionalComponent: OptionalFeelTextArea,\n    ...props\n  });\n}\nfunction isEdited$6(node) {\n  return node && (!!node.value || node.classList.contains('edited'));\n} // helpers /////////////////\n\nfunction prefixId$6(id) {\n  return `bio-properties-panel-${id}`;\n}\n\nfunction List(props) {\n  const {\n    id,\n    element,\n    items = [],\n    component,\n    label = '<empty>',\n    open: shouldOpen,\n    onAdd,\n    onRemove,\n    autoFocusEntry,\n    compareFn,\n    ...restProps\n  } = props;\n  const [open, setOpen] = useState(!!shouldOpen);\n  const hasItems = !!items.length;\n\n  const toggleOpen = () => hasItems && setOpen(!open);\n\n  const opening = !usePrevious(open) && open;\n  const elementChanged = usePrevious(element) !== element;\n  const shouldReset = opening || elementChanged;\n  const sortedItems = useSortedItems(items, compareFn, shouldReset);\n  const newItems = useNewItems(items, elementChanged);\n  useEffect(() => {\n    if (open && !hasItems) {\n      setOpen(false);\n    }\n  }, [open, hasItems]);\n  /**\n   * @param {MouseEvent} event\n   */\n\n  function addItem(event) {\n    event.stopPropagation();\n    onAdd();\n\n    if (!open) {\n      setOpen(true);\n    }\n  }\n\n  return jsxs(\"div\", {\n    \"data-entry-id\": id,\n    class: classnames('bio-properties-panel-entry', 'bio-properties-panel-list-entry', hasItems ? '' : 'empty', open ? 'open' : ''),\n    children: [jsxs(\"div\", {\n      class: \"bio-properties-panel-list-entry-header\",\n      onClick: toggleOpen,\n      children: [jsx(\"div\", {\n        title: label,\n        class: classnames('bio-properties-panel-list-entry-header-title', open && 'open'),\n        children: label\n      }), jsxs(\"div\", {\n        class: \"bio-properties-panel-list-entry-header-buttons\",\n        children: [jsxs(\"button\", {\n          title: \"Create new list item\",\n          onClick: addItem,\n          class: \"bio-properties-panel-add-entry\",\n          children: [jsx(CreateIcon, {}), !hasItems ? jsx(\"span\", {\n            class: \"bio-properties-panel-add-entry-label\",\n            children: \"Create\"\n          }) : null]\n        }), hasItems && jsx(\"div\", {\n          title: `List contains ${items.length} item${items.length != 1 ? 's' : ''}`,\n          class: \"bio-properties-panel-list-badge\",\n          children: items.length\n        }), hasItems && jsx(\"button\", {\n          title: \"Toggle list item\",\n          class: \"bio-properties-panel-arrow\",\n          children: jsx(ArrowIcon, {\n            class: open ? 'bio-properties-panel-arrow-down' : 'bio-properties-panel-arrow-right'\n          })\n        })]\n      })]\n    }), hasItems && jsx(ItemsList, { ...restProps,\n      autoFocusEntry: autoFocusEntry,\n      component: component,\n      element: element,\n      id: id,\n      items: sortedItems,\n      newItems: newItems,\n      onRemove: onRemove,\n      open: open\n    })]\n  });\n}\n\nfunction ItemsList(props) {\n  const {\n    autoFocusEntry,\n    component: Component,\n    element,\n    id,\n    items,\n    newItems,\n    onRemove,\n    open,\n    ...restProps\n  } = props;\n  const getKey = useKeyFactory();\n  const newItem = newItems[0];\n  useEffect(() => {\n    if (newItem && autoFocusEntry) {\n      // (0) select the parent entry (containing all list items)\n      const entry = query(`[data-entry-id=\"${id}\"]`); // (1) select the first input or a custom element to be focussed\n\n      const selector = typeof autoFocusEntry === 'boolean' ? '.bio-properties-panel-input' : autoFocusEntry;\n      const focusableInput = query(selector, entry); // (2) set focus\n\n      if (focusableInput) {\n        if (isFunction(focusableInput.select)) {\n          focusableInput.select();\n        } else if (isFunction(focusableInput.focus)) {\n          focusableInput.focus();\n        }\n      }\n    }\n  }, [newItem, autoFocusEntry, id]);\n  return jsx(\"ol\", {\n    class: classnames('bio-properties-panel-list-entry-items', open ? 'open' : ''),\n    children: items.map((item, index) => {\n      const key = getKey(item);\n      return jsxs(\"li\", {\n        class: \"bio-properties-panel-list-entry-item\",\n        children: [jsx(Component, { ...restProps,\n          element: element,\n          id: id,\n          index: index,\n          item: item,\n          open: item === newItem\n        }), onRemove && jsx(\"button\", {\n          type: \"button\",\n          title: \"Delete item\",\n          class: \"bio-properties-panel-remove-entry bio-properties-panel-remove-list-entry\",\n          onClick: () => onRemove && onRemove(item),\n          children: jsx(DeleteIcon, {})\n        })]\n      }, key);\n    })\n  });\n}\n/**\n * Place new items in the beginning of the list and sort the rest with provided function.\n *\n * @template Item\n * @param {Item[]} currentItems\n * @param {(a: Item, b: Item) => 0 | 1 | -1} [compareFn] function used to sort items\n * @param {boolean} [shouldReset=false] set to `true` to reset state of the hook\n * @returns {Item[]}\n */\n\n\nfunction useSortedItems(currentItems, compareFn, shouldReset = false) {\n  const itemsRef = useRef(currentItems.slice()); // (1) Reset and optionally sort.\n\n  if (shouldReset) {\n    itemsRef.current = currentItems.slice();\n\n    if (compareFn) {\n      itemsRef.current.sort(compareFn);\n    }\n  } else {\n    const items = itemsRef.current; // (2) Add new item to the list.\n\n    for (const item of currentItems) {\n      if (!items.includes(item)) {\n        // Unshift or push depending on whether we have a compareFn\n        compareFn ? items.unshift(item) : items.push(item);\n      }\n    } // (3) Filter out removed items.\n\n\n    itemsRef.current = items.filter(item => currentItems.includes(item));\n  }\n\n  return itemsRef.current;\n}\n\nfunction useNewItems(items = [], shouldReset) {\n  const previousItems = usePrevious(items.slice()) || [];\n\n  if (shouldReset) {\n    return [];\n  }\n\n  return previousItems ? items.filter(item => !previousItems.includes(item)) : [];\n}\n\nfunction NumberField(props) {\n  const {\n    debounce,\n    disabled,\n    id,\n    label,\n    max,\n    min,\n    onInput,\n    step,\n    value = ''\n  } = props;\n  const [localValue, setLocalValue] = useState(value);\n  const handleInputCallback = useMemo(() => {\n    return debounce(event => {\n      const {\n        validity,\n        value\n      } = event.target;\n\n      if (validity.valid) {\n        onInput(value ? parseFloat(value) : undefined);\n      }\n    });\n  }, [onInput, debounce]);\n\n  const handleInput = e => {\n    handleInputCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [value]);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-numberfield\",\n    children: [jsx(\"label\", {\n      for: prefixId$5(id),\n      class: \"bio-properties-panel-label\",\n      children: label\n    }), jsx(\"input\", {\n      id: prefixId$5(id),\n      type: \"number\",\n      name: id,\n      spellCheck: \"false\",\n      autoComplete: \"off\",\n      disabled: disabled,\n      class: \"bio-properties-panel-input\",\n      max: max,\n      min: min,\n      onInput: handleInput,\n      step: step,\n      value: localValue\n    })]\n  });\n}\n/**\n * @param {Object} props\n * @param {Boolean} props.debounce\n * @param {String} props.description\n * @param {Boolean} props.disabled\n * @param {Object} props.element\n * @param {Function} props.getValue\n * @param {String} props.id\n * @param {String} props.label\n * @param {String} props.max\n * @param {String} props.min\n * @param {Function} props.setValue\n * @param {String} props.step\n */\n\n\nfunction NumberFieldEntry(props) {\n  const {\n    debounce,\n    description,\n    disabled,\n    element,\n    getValue,\n    id,\n    label,\n    max,\n    min,\n    setValue,\n    step\n  } = props;\n  const value = getValue(element);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-entry\",\n    \"data-entry-id\": id,\n    children: [jsx(NumberField, {\n      debounce: debounce,\n      disabled: disabled,\n      id: id,\n      label: label,\n      onInput: setValue,\n      max: max,\n      min: min,\n      step: step,\n      value: value\n    }, element), jsx(Description, {\n      forId: id,\n      element: element,\n      value: description\n    })]\n  });\n}\nfunction isEdited$5(node) {\n  return node && !!node.value;\n} // helpers /////////////////\n\nfunction prefixId$5(id) {\n  return `bio-properties-panel-${id}`;\n}\n\nfunction Select(props) {\n  const {\n    id,\n    label,\n    onChange,\n    options = [],\n    value,\n    disabled\n  } = props;\n  const ref = useShowEntryEvent(id);\n  const [localValue, setLocalValue] = useState(value);\n\n  const handleChangeCallback = ({\n    target\n  }) => {\n    onChange(target.value);\n  };\n\n  const handleChange = e => {\n    handleChangeCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [value]);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-select\",\n    children: [jsx(\"label\", {\n      for: prefixId$4(id),\n      class: \"bio-properties-panel-label\",\n      children: label\n    }), jsx(\"select\", {\n      ref: ref,\n      id: prefixId$4(id),\n      name: id,\n      class: \"bio-properties-panel-input\",\n      onInput: handleChange,\n      value: localValue,\n      disabled: disabled,\n      children: options.map((option, idx) => {\n        return jsx(\"option\", {\n          value: option.value,\n          disabled: option.disabled,\n          children: option.label\n        }, idx);\n      })\n    })]\n  });\n}\n/**\n * @param {object} props\n * @param {object} props.element\n * @param {string} props.id\n * @param {string} [props.description]\n * @param {string} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.getOptions\n * @param {boolean} [props.disabled]\n */\n\n\nfunction SelectEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    label,\n    getValue,\n    setValue,\n    getOptions,\n    disabled\n  } = props;\n  const value = getValue(element);\n  const options = getOptions(element);\n  const error = useError(id);\n  return jsxs(\"div\", {\n    class: classnames('bio-properties-panel-entry', error ? 'has-error' : ''),\n    \"data-entry-id\": id,\n    children: [jsx(Select, {\n      id: id,\n      label: label,\n      value: value,\n      onChange: setValue,\n      options: options,\n      disabled: disabled\n    }, element), error && jsx(\"div\", {\n      class: \"bio-properties-panel-error\",\n      children: error\n    }), jsx(Description, {\n      forId: id,\n      element: element,\n      value: description\n    })]\n  });\n}\nfunction isEdited$4(node) {\n  return node && !!node.value;\n} // helpers /////////////////\n\nfunction prefixId$4(id) {\n  return `bio-properties-panel-${id}`;\n}\n\nfunction Simple(props) {\n  const {\n    debounce,\n    disabled,\n    element,\n    getValue,\n    id,\n    onBlur,\n    onFocus,\n    setValue\n  } = props;\n  const value = getValue(element);\n  const [localValue, setLocalValue] = useState(value);\n  const handleInputCallback = useMemo(() => {\n    return debounce(({\n      target\n    }) => setValue(target.value.length ? target.value : undefined));\n  }, [setValue, debounce]);\n\n  const handleInput = e => {\n    handleInputCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [value]);\n  return jsx(\"div\", {\n    class: \"bio-properties-panel-simple\",\n    children: jsx(\"input\", {\n      id: prefixId$3(id),\n      type: \"text\",\n      name: id,\n      spellCheck: \"false\",\n      autoComplete: \"off\",\n      disabled: disabled,\n      class: \"bio-properties-panel-input\",\n      onInput: handleInput,\n      \"aria-label\": localValue || '<empty>',\n      onFocus: onFocus,\n      onBlur: onBlur,\n      value: localValue\n    }, element)\n  });\n}\nfunction isEdited$3(node) {\n  return node && !!node.value;\n} // helpers /////////////////\n\nfunction prefixId$3(id) {\n  return `bio-properties-panel-${id}`;\n}\n\nfunction TextArea(props) {\n  const {\n    id,\n    label,\n    rows = 2,\n    debounce,\n    onInput,\n    value = '',\n    disabled,\n    monospace\n  } = props;\n  const [localValue, setLocalValue] = useState(value);\n  const ref = useShowEntryEvent(id);\n  const handleInputCallback = useMemo(() => {\n    return debounce(({\n      target\n    }) => onInput(target.value.length ? target.value : undefined));\n  }, [onInput, debounce]);\n\n  const handleInput = e => {\n    handleInputCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [value]);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-textarea\",\n    children: [jsx(\"label\", {\n      for: prefixId$2(id),\n      class: \"bio-properties-panel-label\",\n      children: label\n    }), jsx(\"textarea\", {\n      ref: ref,\n      id: prefixId$2(id),\n      name: id,\n      spellCheck: \"false\",\n      class: classnames('bio-properties-panel-input', monospace ? 'bio-properties-panel-input-monospace' : ''),\n      onInput: handleInput,\n      onFocus: props.onFocus,\n      onBlur: props.onBlur,\n      rows: rows,\n      value: localValue,\n      disabled: disabled\n    })]\n  });\n}\n/**\n * @param {object} props\n * @param {object} props.element\n * @param {string} props.id\n * @param {string} props.description\n * @param {boolean} props.debounce\n * @param {string} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {number} props.rows\n * @param {boolean} props.monospace\n * @param {boolean} [props.disabled]\n */\n\n\nfunction TextAreaEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    debounce,\n    label,\n    getValue,\n    setValue,\n    rows,\n    monospace,\n    disabled\n  } = props;\n  const value = getValue(element);\n  const error = useError(id);\n  return jsxs(\"div\", {\n    class: classnames('bio-properties-panel-entry', error ? 'has-error' : ''),\n    \"data-entry-id\": id,\n    children: [jsx(TextArea, {\n      id: id,\n      label: label,\n      value: value,\n      onInput: setValue,\n      rows: rows,\n      debounce: debounce,\n      monospace: monospace,\n      disabled: disabled\n    }, element), error && jsx(\"div\", {\n      class: \"bio-properties-panel-error\",\n      children: error\n    }), jsx(Description, {\n      forId: id,\n      element: element,\n      value: description\n    })]\n  });\n}\nfunction isEdited$2(node) {\n  return node && !!node.value;\n} // helpers /////////////////\n\nfunction prefixId$2(id) {\n  return `bio-properties-panel-${id}`;\n}\n\nfunction Textfield(props) {\n  const {\n    debounce,\n    disabled = false,\n    id,\n    label,\n    onInput,\n    value = ''\n  } = props;\n  const [localValue, setLocalValue] = useState(value || '');\n  const ref = useShowEntryEvent(id);\n  const handleInputCallback = useMemo(() => {\n    return debounce(({\n      target\n    }) => onInput(target.value.length ? target.value : undefined));\n  }, [onInput, debounce]);\n\n  const handleInput = e => {\n    handleInputCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [value]);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-textfield\",\n    children: [jsx(\"label\", {\n      for: prefixId$1(id),\n      class: \"bio-properties-panel-label\",\n      children: label\n    }), jsx(\"input\", {\n      ref: ref,\n      id: prefixId$1(id),\n      type: \"text\",\n      name: id,\n      spellCheck: \"false\",\n      autoComplete: \"off\",\n      disabled: disabled,\n      class: \"bio-properties-panel-input\",\n      onInput: handleInput,\n      onFocus: props.onFocus,\n      onBlur: props.onBlur,\n      value: localValue\n    })]\n  });\n}\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.id\n * @param {String} props.description\n * @param {Boolean} props.debounce\n * @param {Boolean} props.disabled\n * @param {String} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.validate\n */\n\n\nfunction TextfieldEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    debounce,\n    disabled,\n    label,\n    getValue,\n    setValue,\n    validate\n  } = props;\n  const [cachedInvalidValue, setCachedInvalidValue] = useState(null);\n  const globalError = useError(id);\n  const [localError, setLocalError] = useState(null);\n  let value = getValue(element);\n  const previousValue = usePrevious(value);\n  useEffect(() => {\n    if (isFunction(validate)) {\n      const newValidationError = validate(value) || null;\n      setLocalError(newValidationError);\n    }\n  }, [value]);\n\n  const onInput = newValue => {\n    let newValidationError = null;\n\n    if (isFunction(validate)) {\n      newValidationError = validate(newValue) || null;\n    }\n\n    if (newValidationError) {\n      setCachedInvalidValue(newValue);\n    } else {\n      setValue(newValue);\n    }\n\n    setLocalError(newValidationError);\n  };\n\n  if (previousValue === value && localError) {\n    value = cachedInvalidValue;\n  }\n\n  const error = globalError || localError;\n  return jsxs(\"div\", {\n    class: classnames('bio-properties-panel-entry', error ? 'has-error' : ''),\n    \"data-entry-id\": id,\n    children: [jsx(Textfield, {\n      debounce: debounce,\n      disabled: disabled,\n      id: id,\n      label: label,\n      onInput: onInput,\n      value: value\n    }, element), error && jsx(\"div\", {\n      class: \"bio-properties-panel-error\",\n      children: error\n    }), jsx(Description, {\n      forId: id,\n      element: element,\n      value: description\n    })]\n  });\n}\nfunction isEdited$1(node) {\n  return node && !!node.value;\n} // helpers /////////////////\n\nfunction prefixId$1(id) {\n  return `bio-properties-panel-${id}`;\n}\n\nfunction ToggleSwitch(props) {\n  const {\n    id,\n    label,\n    onInput,\n    value,\n    switcherLabel\n  } = props;\n  const [localValue, setLocalValue] = useState(value);\n\n  const handleInputCallback = async () => {\n    onInput(!value);\n  };\n\n  const handleInput = e => {\n    handleInputCallback();\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [value]);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-toggle-switch\",\n    children: [jsx(\"label\", {\n      class: \"bio-properties-panel-label\",\n      for: prefixId(id),\n      children: label\n    }), jsxs(\"div\", {\n      class: \"bio-properties-panel-field-wrapper\",\n      children: [jsxs(\"label\", {\n        class: \"bio-properties-panel-toggle-switch__switcher\",\n        children: [jsx(\"input\", {\n          id: prefixId(id),\n          class: \"bio-properties-panel-input\",\n          type: \"checkbox\",\n          name: id,\n          onInput: handleInput,\n          checked: localValue\n        }), jsx(\"span\", {\n          class: \"bio-properties-panel-toggle-switch__slider\"\n        })]\n      }), jsx(\"p\", {\n        class: \"bio-properties-panel-toggle-switch__label\",\n        children: switcherLabel\n      })]\n    })]\n  });\n}\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.id\n * @param {String} props.description\n * @param {String} props.label\n * @param {String} props.switcherLabel\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n */\n\n\nfunction ToggleSwitchEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    label,\n    switcherLabel,\n    getValue,\n    setValue\n  } = props;\n  const value = getValue(element);\n  return jsxs(\"div\", {\n    class: \"bio-properties-panel-entry bio-properties-panel-toggle-switch-entry\",\n    \"data-entry-id\": id,\n    children: [jsx(ToggleSwitch, {\n      id: id,\n      label: label,\n      value: value,\n      onInput: setValue,\n      switcherLabel: switcherLabel\n    }), jsx(Description, {\n      forId: id,\n      element: element,\n      value: description\n    })]\n  });\n}\nfunction isEdited(node) {\n  return node && !!node.checked;\n} // helpers /////////////////\n\nfunction prefixId(id) {\n  return `bio-properties-panel-${id}`;\n}\n\nconst DEFAULT_DEBOUNCE_TIME = 300;\nfunction debounceInput(debounceDelay) {\n  return function _debounceInput(fn) {\n    if (debounceDelay !== false) {\n      var debounceTime = isNumber(debounceDelay) ? debounceDelay : DEFAULT_DEBOUNCE_TIME;\n      return debounce(fn, debounceTime);\n    } else {\n      return fn;\n    }\n  };\n}\ndebounceInput.$inject = ['config.debounceInput'];\n\nvar index = {\n  debounceInput: ['factory', debounceInput]\n};\n\nexport { ArrowIcon, CheckboxEntry, CollapsibleEntry, CreateIcon, index as DebounceInputModule, DeleteIcon, DescriptionContext, Description as DescriptionEntry, DropdownButton, ErrorsContext, EventContext, ExternalLinkIcon, FeelEntry, FeelOptionalIcon, FeelRequiredIcon, FeelTextArea as FeelTextAreaEntry, Group, Header, HeaderButton, LayoutContext, List as ListEntry, ListGroup, ListItem, NumberFieldEntry, Placeholder, PropertiesPanel, LayoutContext as PropertiesPanelContext, SelectEntry, Simple as SimpleEntry, TextAreaEntry, TextfieldEntry as TextFieldEntry, ToggleSwitchEntry, isEdited$7 as isCheckboxEntryEdited, isEdited$6 as isFeelEntryEdited, isEdited$5 as isNumberFieldEntryEdited, isEdited$4 as isSelectEntryEdited, isEdited$3 as isSimpleEntryEdited, isEdited$2 as isTextAreaEntryEdited, isEdited$1 as isTextFieldEntryEdited, isEdited as isToggleSwitchEntryEdited, useDescriptionContext, useError, useEvent, useEventBuffer, useKeyFactory, useLayoutState, usePrevious, useShowEntryEvent, useStaticCallback, useStickyIntersectionObserver };\n//# sourceMappingURL=index.esm.js.map\n","import{useState as n,useReducer as t,useEffect as e,useLayoutEffect as r,useRef as u,useImperativeHandle as o,useMemo as i,useCallback as l,useContext as f,useDebugValue as c}from\"../../hooks\";export*from\"../../hooks\";import{Component as a,createElement as s,options as h,toChildArray as p,Fragment as v,render as d,hydrate as m,cloneElement as y,createRef as b,createContext as _}from\"../..\";export{createElement,createContext,createRef,Fragment,Component}from\"../..\";function C(n,t){for(var e in t)n[e]=t[e];return n}function S(n,t){for(var e in n)if(\"__source\"!==e&&!(e in t))return!0;for(var r in t)if(\"__source\"!==r&&n[r]!==t[r])return!0;return!1}function E(n){this.props=n}function g(n,t){function e(n){var e=this.props.ref,r=e==n.ref;return!r&&e&&(e.call?e(null):e.current=null),t?!t(this.props,n)||!r:S(this.props,n)}function r(t){return this.shouldComponentUpdate=e,s(n,t)}return r.displayName=\"Memo(\"+(n.displayName||n.name)+\")\",r.prototype.isReactComponent=!0,r.__f=!0,r}(E.prototype=new a).isPureReactComponent=!0,E.prototype.shouldComponentUpdate=function(n,t){return S(this.props,n)||S(this.state,t)};var w=h.__b;h.__b=function(n){n.type&&n.type.__f&&n.ref&&(n.props.ref=n.ref,n.ref=null),w&&w(n)};var R=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.forward_ref\")||3911;function x(n){function t(t,e){var r=C({},t);return delete r.ref,n(r,(e=t.ref||e)&&(\"object\"!=typeof e||\"current\"in e)?e:null)}return t.$$typeof=R,t.render=t,t.prototype.isReactComponent=t.__f=!0,t.displayName=\"ForwardRef(\"+(n.displayName||n.name)+\")\",t}var N=function(n,t){return null==n?null:p(p(n).map(t))},k={map:N,forEach:N,count:function(n){return n?p(n).length:0},only:function(n){var t=p(n);if(1!==t.length)throw\"Children.only\";return t[0]},toArray:p},A=h.__e;h.__e=function(n,t,e){if(n.then)for(var r,u=t;u=u.__;)if((r=u.__c)&&r.__c)return null==t.__e&&(t.__e=e.__e,t.__k=e.__k),r.__c(n,t);A(n,t,e)};var O=h.unmount;function L(){this.__u=0,this.t=null,this.__b=null}function U(n){var t=n.__.__c;return t&&t.__e&&t.__e(n)}function D(n){var t,e,r;function u(u){if(t||(t=n()).then(function(n){e=n.default||n},function(n){r=n}),r)throw r;if(!e)throw t;return s(e,u)}return u.displayName=\"Lazy\",u.__f=!0,u}function F(){this.u=null,this.o=null}h.unmount=function(n){var t=n.__c;t&&t.__R&&t.__R(),t&&!0===n.__h&&(n.type=null),O&&O(n)},(L.prototype=new a).__c=function(n,t){var e=t.__c,r=this;null==r.t&&(r.t=[]),r.t.push(e);var u=U(r.__v),o=!1,i=function(){o||(o=!0,e.__R=null,u?u(l):l())};e.__R=i;var l=function(){if(!--r.__u){if(r.state.__e){var n=r.state.__e;r.__v.__k[0]=function n(t,e,r){return t&&(t.__v=null,t.__k=t.__k&&t.__k.map(function(t){return n(t,e,r)}),t.__c&&t.__c.__P===e&&(t.__e&&r.insertBefore(t.__e,t.__d),t.__c.__e=!0,t.__c.__P=r)),t}(n,n.__c.__P,n.__c.__O)}var t;for(r.setState({__e:r.__b=null});t=r.t.pop();)t.forceUpdate()}},f=!0===t.__h;r.__u++||f||r.setState({__e:r.__b=r.__v.__k[0]}),n.then(i,i)},L.prototype.componentWillUnmount=function(){this.t=[]},L.prototype.render=function(n,t){if(this.__b){if(this.__v.__k){var e=document.createElement(\"div\"),r=this.__v.__k[0].__c;this.__v.__k[0]=function n(t,e,r){return t&&(t.__c&&t.__c.__H&&(t.__c.__H.__.forEach(function(n){\"function\"==typeof n.__c&&n.__c()}),t.__c.__H=null),null!=(t=C({},t)).__c&&(t.__c.__P===r&&(t.__c.__P=e),t.__c=null),t.__k=t.__k&&t.__k.map(function(t){return n(t,e,r)})),t}(this.__b,e,r.__O=r.__P)}this.__b=null}var u=t.__e&&s(v,null,n.fallback);return u&&(u.__h=null),[s(v,null,t.__e?null:n.children),u]};var M=function(n,t,e){if(++e[1]===e[0]&&n.o.delete(t),n.props.revealOrder&&(\"t\"!==n.props.revealOrder[0]||!n.o.size))for(e=n.u;e;){for(;e.length>3;)e.pop()();if(e[1]<e[0])break;n.u=e=e[2]}};function T(n){return this.getChildContext=function(){return n.context},n.children}function j(n){var t=this,e=n.i;t.componentWillUnmount=function(){d(null,t.l),t.l=null,t.i=null},t.i&&t.i!==e&&t.componentWillUnmount(),n.__v?(t.l||(t.i=e,t.l={nodeType:1,parentNode:e,childNodes:[],appendChild:function(n){this.childNodes.push(n),t.i.appendChild(n)},insertBefore:function(n,e){this.childNodes.push(n),t.i.appendChild(n)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),t.i.removeChild(n)}}),d(s(T,{context:t.context},n.__v),t.l)):t.l&&t.componentWillUnmount()}function I(n,t){return s(j,{__v:n,i:t})}(F.prototype=new a).__e=function(n){var t=this,e=U(t.__v),r=t.o.get(n);return r[0]++,function(u){var o=function(){t.props.revealOrder?(r.push(u),M(t,n,r)):u()};e?e(o):o()}},F.prototype.render=function(n){this.u=null,this.o=new Map;var t=p(n.children);n.revealOrder&&\"b\"===n.revealOrder[0]&&t.reverse();for(var e=t.length;e--;)this.o.set(t[e],this.u=[1,0,this.u]);return n.children},F.prototype.componentDidUpdate=F.prototype.componentDidMount=function(){var n=this;this.o.forEach(function(t,e){M(n,e,t)})};var W=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103,P=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,V=function(n){return(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol()?/fil|che|rad/i:/fil|che|ra/i).test(n)};function z(n,t,e){return null==t.__k&&(t.textContent=\"\"),d(n,t),\"function\"==typeof e&&e(),n?n.__c:null}function B(n,t,e){return m(n,t),\"function\"==typeof e&&e(),n?n.__c:null}a.prototype.isReactComponent={},[\"componentWillMount\",\"componentWillReceiveProps\",\"componentWillUpdate\"].forEach(function(n){Object.defineProperty(a.prototype,n,{configurable:!0,get:function(){return this[\"UNSAFE_\"+n]},set:function(t){Object.defineProperty(this,n,{configurable:!0,writable:!0,value:t})}})});var H=h.event;function Z(){}function Y(){return this.cancelBubble}function $(){return this.defaultPrevented}h.event=function(n){return H&&(n=H(n)),n.persist=Z,n.isPropagationStopped=Y,n.isDefaultPrevented=$,n.nativeEvent=n};var q,G={configurable:!0,get:function(){return this.class}},J=h.vnode;h.vnode=function(n){var t=n.type,e=n.props,r=e;if(\"string\"==typeof t){for(var u in r={},e){var o=e[u];\"value\"===u&&\"defaultValue\"in e&&null==o||(\"defaultValue\"===u&&\"value\"in e&&null==e.value?u=\"value\":\"download\"===u&&!0===o?o=\"\":/ondoubleclick/i.test(u)?u=\"ondblclick\":/^onchange(textarea|input)/i.test(u+t)&&!V(e.type)?u=\"oninput\":/^on(Ani|Tra|Tou|BeforeInp)/.test(u)?u=u.toLowerCase():P.test(u)?u=u.replace(/[A-Z0-9]/,\"-$&\").toLowerCase():null===o&&(o=void 0),r[u]=o)}\"select\"==t&&r.multiple&&Array.isArray(r.value)&&(r.value=p(e.children).forEach(function(n){n.props.selected=-1!=r.value.indexOf(n.props.value)})),\"select\"==t&&null!=r.defaultValue&&(r.value=p(e.children).forEach(function(n){n.props.selected=r.multiple?-1!=r.defaultValue.indexOf(n.props.value):r.defaultValue==n.props.value})),n.props=r}t&&e.class!=e.className&&(G.enumerable=\"className\"in e,null!=e.className&&(r.class=e.className),Object.defineProperty(r,\"className\",G)),n.$$typeof=W,J&&J(n)};var K=h.__r;h.__r=function(n){K&&K(n),q=n.__c};var Q={ReactCurrentDispatcher:{current:{readContext:function(n){return q.__n[n.__c].props.value}}}},X=1,nn=2,tn=3,en=4,rn=5;function un(n,t){return t()}var on=\"object\"==typeof performance&&\"function\"==typeof performance.now?performance.now.bind(performance):function(){return Date.now()},ln=\"16.8.0\";function fn(n){return s.bind(null,n)}function cn(n){return!!n&&n.$$typeof===W}function an(n){return cn(n)?y.apply(null,arguments):n}function sn(n){return!!n.__k&&(d(null,n),!0)}function hn(n){return n&&(n.base||1===n.nodeType&&n)||null}var pn=function(n,t){return n(t)},vn=v;export default{useState:n,useReducer:t,useEffect:e,useLayoutEffect:r,useRef:u,useImperativeHandle:o,useMemo:i,useCallback:l,useContext:f,useDebugValue:c,version:\"16.8.0\",Children:k,render:z,hydrate:B,unmountComponentAtNode:sn,createPortal:I,createElement:s,createContext:_,createFactory:fn,cloneElement:an,createRef:b,Fragment:v,isValidElement:cn,findDOMNode:hn,Component:a,PureComponent:E,memo:g,forwardRef:x,unstable_batchedUpdates:pn,StrictMode:v,Suspense:L,SuspenseList:F,lazy:D,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:Q};export{ln as version,k as Children,z as render,B as hydrate,sn as unmountComponentAtNode,I as createPortal,fn as createFactory,an as cloneElement,cn as isValidElement,hn as findDOMNode,E as PureComponent,g as memo,x as forwardRef,pn as unstable_batchedUpdates,vn as StrictMode,L as Suspense,F as SuspenseList,D as lazy,Q as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,X as unstable_ImmediatePriority,nn as unstable_UserBlockingPriority,tn as unstable_NormalPriority,en as unstable_LowPriority,rn as unstable_IdlePriority,un as unstable_runWithPriority,on as unstable_now};\n//# sourceMappingURL=compat.module.js.map\n","var n,l,u,i,t,o,r={},f=[],e=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function c(n,l){for(var u in l)n[u]=l[u];return n}function s(n){var l=n.parentNode;l&&l.removeChild(n)}function a(n,l,u){var i,t,o,r=arguments,f={};for(o in l)\"key\"==o?i=l[o]:\"ref\"==o?t=l[o]:f[o]=l[o];if(arguments.length>3)for(u=[u],o=3;o<arguments.length;o++)u.push(r[o]);if(null!=u&&(f.children=u),\"function\"==typeof n&&null!=n.defaultProps)for(o in n.defaultProps)void 0===f[o]&&(f[o]=n.defaultProps[o]);return v(n,f,i,t,null)}function v(l,u,i,t,o){var r={type:l,props:u,key:i,ref:t,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==o?++n.__v:o};return null!=n.vnode&&n.vnode(r),r}function h(){return{current:null}}function y(n){return n.children}function p(n,l){this.props=n,this.context=l}function d(n,l){if(null==l)return n.__?d(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?d(n):null}function _(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return _(n)}}function k(l){(!l.__d&&(l.__d=!0)&&u.push(l)&&!b.__r++||t!==n.debounceRendering)&&((t=n.debounceRendering)||i)(b)}function b(){for(var n;b.__r=u.length;)n=u.sort(function(n,l){return n.__v.__b-l.__v.__b}),u=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=c({},t)).__v=t.__v+1,I(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?d(t):o,t.__h),T(u,t),t.__e!=o&&_(t)))})}function m(n,l,u,i,t,o,e,c,s,a){var h,p,_,k,b,m,w,A=i&&i.__k||f,P=A.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(y,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(_=A[h])||_&&k.key==_.key&&k.type===_.type)A[h]=void 0;else for(p=0;p<P;p++){if((_=A[p])&&k.key==_.key&&k.type===_.type){A[p]=void 0;break}_=null}I(n,k,_=_||r,t,o,e,c,s,a),b=k.__e,(p=k.ref)&&_.ref!=p&&(w||(w=[]),_.ref&&w.push(_.ref,null,k),w.push(p,k.__c||b,k)),null!=b?(null==m&&(m=b),\"function\"==typeof k.type&&null!=k.__k&&k.__k===_.__k?k.__d=s=g(k,s,n):s=x(n,k,_,A,b,s),a||\"option\"!==u.type?\"function\"==typeof u.type&&(u.__d=s):n.value=\"\"):s&&_.__e==s&&s.parentNode!=n&&(s=d(_))}for(u.__e=m,h=P;h--;)null!=A[h]&&(\"function\"==typeof u.type&&null!=A[h].__e&&A[h].__e==u.__d&&(u.__d=d(i,h+1)),L(A[h],A[h]));if(w)for(h=0;h<w.length;h++)z(w[h],w[++h],w[++h])}function g(n,l,u){var i,t;for(i=0;i<n.__k.length;i++)(t=n.__k[i])&&(t.__=n,l=\"function\"==typeof t.type?g(t,l,u):x(u,t,t,n.__k,t.__e,l));return l}function w(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){w(n,l)}):l.push(n)),l}function x(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function A(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||C(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||C(n,o,l[o],u[o],i)}function P(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||e.test(l)?u:u+\"px\"}function C(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||P(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||P(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?H:$,o):n.removeEventListener(l,o?H:$,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink[H:h]/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null!=u&&(!1!==u||\"a\"===l[0]&&\"r\"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function $(l){this.l[l.type+!1](n.event?n.event(l):l)}function H(l){this.l[l.type+!0](n.event?n.event(l):l)}function I(l,u,i,t,o,r,f,e,s){var a,v,h,d,_,k,b,g,w,x,A,P=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(s=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=n.__b)&&a(u);try{n:if(\"function\"==typeof P){if(g=u.props,w=(a=P.contextType)&&t[a.__c],x=a?w?w.props.value:a.__:t,i.__c?b=(v=u.__c=i.__c).__=v.__E:(\"prototype\"in P&&P.prototype.render?u.__c=v=new P(g,x):(u.__c=v=new p(g,x),v.constructor=P,v.render=M),w&&w.sub(v),v.props=g,v.state||(v.state={}),v.context=x,v.__n=t,h=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=P.getDerivedStateFromProps&&(v.__s==v.state&&(v.__s=c({},v.__s)),c(v.__s,P.getDerivedStateFromProps(g,v.__s))),d=v.props,_=v.state,h)null==P.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&v.__h.push(v.componentDidMount);else{if(null==P.getDerivedStateFromProps&&g!==d&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(g,x),!v.__e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(g,v.__s,x)||u.__v===i.__v){v.props=g,v.state=v.__s,u.__v!==i.__v&&(v.__d=!1),v.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),v.__h.length&&f.push(v);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(g,v.__s,x),null!=v.componentDidUpdate&&v.__h.push(function(){v.componentDidUpdate(d,_,k)})}v.context=x,v.props=g,v.state=v.__s,(a=n.__r)&&a(u),v.__d=!1,v.__v=u,v.__P=l,a=v.render(v.props,v.state,v.context),v.state=v.__s,null!=v.getChildContext&&(t=c(c({},t),v.getChildContext())),h||null==v.getSnapshotBeforeUpdate||(k=v.getSnapshotBeforeUpdate(d,_)),A=null!=a&&a.type===y&&null==a.key?a.props.children:a,m(l,Array.isArray(A)?A:[A],u,i,t,o,r,f,e,s),v.base=u.__e,u.__h=null,v.__h.length&&f.push(v),b&&(v.__E=v.__=null),v.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=j(i.__e,u,i,t,o,r,f,s);(a=n.diffed)&&a(u)}catch(l){u.__v=null,(s||null!=r)&&(u.__e=e,u.__h=!!s,r[r.indexOf(e)]=null),n.__e(l,u,i)}}function T(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u)})}catch(l){n.__e(l,u.__v)}})}function j(n,l,u,i,t,o,e,c){var a,v,h,y,p=u.props,d=l.props,_=l.type,k=0;if(\"svg\"===_&&(t=!0),null!=o)for(;k<o.length;k++)if((a=o[k])&&(a===n||(_?a.localName==_:3==a.nodeType))){n=a,o[k]=null;break}if(null==n){if(null===_)return document.createTextNode(d);n=t?document.createElementNS(\"http://www.w3.org/2000/svg\",_):document.createElement(_,d.is&&d),o=null,c=!1}if(null===_)p===d||c&&n.data===d||(n.data=d);else{if(o=o&&f.slice.call(n.childNodes),v=(p=u.props||r).dangerouslySetInnerHTML,h=d.dangerouslySetInnerHTML,!c){if(null!=o)for(p={},y=0;y<n.attributes.length;y++)p[n.attributes[y].name]=n.attributes[y].value;(h||v)&&(h&&(v&&h.__html==v.__html||h.__html===n.innerHTML)||(n.innerHTML=h&&h.__html||\"\"))}if(A(n,d,p,t,c),h)l.__k=[];else if(k=l.props.children,m(n,Array.isArray(k)?k:[k],l,u,i,t&&\"foreignObject\"!==_,o,e,n.firstChild,c),null!=o)for(k=o.length;k--;)null!=o[k]&&s(o[k]);c||(\"value\"in d&&void 0!==(k=d.value)&&(k!==n.value||\"progress\"===_&&!k)&&C(n,\"value\",k,p.value,!1),\"checked\"in d&&void 0!==(k=d.checked)&&k!==n.checked&&C(n,\"checked\",k,p.checked,!1))}return n}function z(l,u,i){try{\"function\"==typeof l?l(u):l.current=u}catch(l){n.__e(l,i)}}function L(l,u,i){var t,o,r;if(n.unmount&&n.unmount(l),(t=l.ref)&&(t.current&&t.current!==l.__e||z(t,null,u)),i||\"function\"==typeof l.type||(i=null!=(o=l.__e)),l.__e=l.__d=void 0,null!=(t=l.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(l){n.__e(l,u)}t.base=t.__P=null}if(t=l.__k)for(r=0;r<t.length;r++)t[r]&&L(t[r],u,i);null!=o&&s(o)}function M(n,l,u){return this.constructor(n,u)}function N(l,u,i){var t,o,e;n.__&&n.__(l,u),o=(t=\"function\"==typeof i)?null:i&&i.__k||u.__k,e=[],I(u,l=(!t&&i||u).__k=a(y,null,[l]),o||r,r,void 0!==u.ownerSVGElement,!t&&i?[i]:o?null:u.firstChild?f.slice.call(u.childNodes):null,e,!t&&i?i:o?o.__e:u.firstChild,t),T(e,l)}function O(n,l){N(n,l,O)}function S(n,l,u){var i,t,o,r=arguments,f=c({},n.props);for(o in l)\"key\"==o?i=l[o]:\"ref\"==o?t=l[o]:f[o]=l[o];if(arguments.length>3)for(u=[u],o=3;o<arguments.length;o++)u.push(r[o]);return null!=u&&(f.children=u),v(n.type,f,i||n.key,t||n.ref,null)}function q(n,l){var u={__c:l=\"__cC\"+o++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(k)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n={__e:function(n,l){for(var u,i,t;l=l.__;)if((u=l.__c)&&!u.__)try{if((i=u.constructor)&&null!=i.getDerivedStateFromError&&(u.setState(i.getDerivedStateFromError(n)),t=u.__d),null!=u.componentDidCatch&&(u.componentDidCatch(n),t=u.__d),t)return u.__E=u}catch(l){n=l}throw n},__v:0},l=function(n){return null!=n&&void 0===n.constructor},p.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=c({},this.state),\"function\"==typeof n&&(n=n(c({},u),this.props)),n&&c(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),k(this))},p.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),k(this))},p.prototype.render=y,u=[],i=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,b.__r=0,o=0;export{N as render,O as hydrate,a as createElement,a as h,y as Fragment,h as createRef,l as isValidElement,p as Component,S as cloneElement,q as createContext,w as toChildArray,n as options};\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"../..\";var t,u,r,o=0,i=[],c=n.__b,f=n.__r,e=n.diffed,a=n.__c,v=n.unmount;function m(t,r){n.__h&&n.__h(u,t,o||r),o=0;var i=u.__H||(u.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({}),i.__[t]}function l(n){return o=1,p(w,n)}function p(n,r,o){var i=m(t++,2);return i.t=n,i.__c||(i.__=[o?o(r):w(void 0,r),function(n){var t=i.t(i.__[0],n);i.__[0]!==t&&(i.__=[t,i.__[1]],i.__c.setState({}))}],i.__c=u),i.__}function y(r,o){var i=m(t++,3);!n.__s&&k(i.__H,o)&&(i.__=r,i.__H=o,u.__H.__h.push(i))}function h(r,o){var i=m(t++,4);!n.__s&&k(i.__H,o)&&(i.__=r,i.__H=o,u.__h.push(i))}function s(n){return o=5,d(function(){return{current:n}},[])}function _(n,t,u){o=6,h(function(){\"function\"==typeof n?n(t()):n&&(n.current=t())},null==u?u:u.concat(n))}function d(n,u){var r=m(t++,7);return k(r.__H,u)&&(r.__=n(),r.__H=u,r.__h=n),r.__}function A(n,t){return o=8,d(function(){return n},t)}function F(n){var r=u.context[n.__c],o=m(t++,9);return o.__c=n,r?(null==o.__&&(o.__=!0,r.sub(u)),r.props.value):n.__}function T(t,u){n.useDebugValue&&n.useDebugValue(u?u(t):t)}function q(n){var r=m(t++,10),o=l();return r.__=n,u.componentDidCatch||(u.componentDidCatch=function(n){r.__&&r.__(n),o[1](n)}),[o[0],function(){o[1](void 0)}]}function x(){i.forEach(function(t){if(t.__P)try{t.__H.__h.forEach(g),t.__H.__h.forEach(j),t.__H.__h=[]}catch(u){t.__H.__h=[],n.__e(u,t.__v)}}),i=[]}n.__b=function(n){u=null,c&&c(n)},n.__r=function(n){f&&f(n),t=0;var r=(u=n.__c).__H;r&&(r.__h.forEach(g),r.__h.forEach(j),r.__h=[])},n.diffed=function(t){e&&e(t);var o=t.__c;o&&o.__H&&o.__H.__h.length&&(1!==i.push(o)&&r===n.requestAnimationFrame||((r=n.requestAnimationFrame)||function(n){var t,u=function(){clearTimeout(r),b&&cancelAnimationFrame(t),setTimeout(n)},r=setTimeout(u,100);b&&(t=requestAnimationFrame(u))})(x)),u=void 0},n.__c=function(t,u){u.some(function(t){try{t.__h.forEach(g),t.__h=t.__h.filter(function(n){return!n.__||j(n)})}catch(r){u.some(function(n){n.__h&&(n.__h=[])}),u=[],n.__e(r,t.__v)}}),a&&a(t,u)},n.unmount=function(t){v&&v(t);var u=t.__c;if(u&&u.__H)try{u.__H.__.forEach(g)}catch(t){n.__e(t,u.__v)}};var b=\"function\"==typeof requestAnimationFrame;function g(n){var t=u;\"function\"==typeof n.__c&&n.__c(),u=t}function j(n){var t=u;n.__c=n.__(),u=t}function k(n,t){return!n||n.length!==t.length||t.some(function(t,u){return t!==n[u]})}function w(n,t){return\"function\"==typeof t?t(n):t}export{l as useState,p as useReducer,y as useEffect,h as useLayoutEffect,s as useRef,_ as useImperativeHandle,d as useMemo,A as useCallback,F as useContext,T as useDebugValue,q as useErrorBoundary};\n//# sourceMappingURL=hooks.module.js.map\n","import{options as r,Fragment as _}from\"../..\";export{Fragment}from\"../..\";function o(_,o,e,n,t){var f={};for(var l in o)\"ref\"!=l&&(f[l]=o[l]);var s,u,a={type:_,props:f,key:e,ref:o&&o.ref,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:++r.__v,__source:n,__self:t};if(\"function\"==typeof _&&(s=_.defaultProps))for(u in s)void 0===f[u]&&(f[u]=s[u]);return r.vnode&&r.vnode(a),a}export{o as jsx,o as jsxs,o as jsxDEV};\n//# sourceMappingURL=jsxRuntime.module.js.map\n","'use strict';\n\nconst arrayMoveMutate = (array, from, to) => {\n\tconst startIndex = from < 0 ? array.length + from : from;\n\n\tif (startIndex >= 0 && startIndex < array.length) {\n\t\tconst endIndex = to < 0 ? array.length + to : to;\n\n\t\tconst [item] = array.splice(from, 1);\n\t\tarray.splice(endIndex, 0, item);\n\t}\n};\n\nconst arrayMove = (array, from, to) => {\n\tarray = [...array];\n\tarrayMoveMutate(array, from, to);\n\treturn array;\n};\n\nmodule.exports = arrayMove;\nmodule.exports.mutate = arrayMoveMutate;\n","/**\n * Returns the moddelElement if it is a process, otherwise, returns the\n *\n * @param container\n */\n\n\nexport function findDataObjects(process) {\n  let dataObjects = [];\n  if (!process || !process.flowElements) {\n    return dataObjects;\n  }\n  for (const element of process.flowElements) {\n    if (element.$type === 'bpmn:DataObject') {\n      dataObjects.push(element);\n    }\n  }\n  return dataObjects;\n}\n\nexport function findDataObject(process, id) {\n  for (const dataObj of findDataObjects(process)) {\n    if (dataObj.id === id) {\n      return dataObj;\n    }\n  }\n}\n\nexport function findDataReferenceShapes(processShape, id) {\n  let refs = [];\n  for (const shape of processShape.children) {\n    if (shape.type === 'bpmn:DataObjectReference') {\n      if (shape.businessObject.dataObjectRef && shape.businessObject.dataObjectRef.id === id) {\n        refs.push(shape);\n      }\n    }\n  }\n  return refs;\n}\n","import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\nimport { findDataObjects } from './DataObjectHelpers';\nvar HIGH_PRIORITY = 1500;\n\n/**\n * This Command Interceptor functions like the BpmnUpdator in BPMN.js - It hooks into events\n * from Diagram.js and updates the underlying BPMN model accordingly.\n *\n * This handles some special cases we want to handle for DataObjects and DataObjectReferences,\n * for instance:\n * 1) Use existing data objects if possible when creating a new reference (don't create new objects each time)\n * 2) Don't automatically delete a data object when you delete the reference - unless all references are removed.\n * 3) Update the name of the DataObjectReference to match the id of the DataObject.\n * 4) Don't allow someone to move a DataObjectReference from one process to another process.\n */\nexport default class DataObjectInterceptor extends CommandInterceptor {\n  constructor(eventBus, bpmnFactory, bpmnUpdater) {\n    super(eventBus);\n\n    /**\n     * For DataObjectReferences only ...\n     * Prevent this from calling the CreateDataObjectBehavior in BPMN-js, as it will\n     * attempt to crete a dataObject immediately.  We can't create the dataObject until\n     * we know where it is placed - as we want to reuse data objects of the parent when\n     * possible */\n    this.preExecute([ 'shape.create' ], HIGH_PRIORITY, function(event) {\n      const context = event.context, shape = context.shape;\n      if (is(shape, 'bpmn:DataObjectReference') && shape.type !== 'label') {\n        event.stopPropagation();\n      }\n    });\n\n    /**\n     * Don't just create a new data object, use the first existing one if it already exists\n     */\n    this.executed([ 'shape.create' ], HIGH_PRIORITY, function(event) {\n      const context = event.context, shape = context.shape;\n      if (is(shape, 'bpmn:DataObjectReference') && shape.type !== 'label') {\n        let process = shape.parent.businessObject;\n        let existingDataObjects = findDataObjects(process);\n        let dataObject;\n        if (existingDataObjects.length > 0) {\n          dataObject = existingDataObjects[0];\n        } else {\n          dataObject = bpmnFactory.create('bpmn:DataObject');\n        }\n\n        // Update the name of the reference to match the data object's id.\n        shape.businessObject.name = dataObject.id;\n\n        // set the reference to the DataObject\n        shape.businessObject.dataObjectRef = dataObject;\n      }\n    });\n  }\n}\n\nDataObjectInterceptor.$inject = [ 'eventBus', 'bpmnFactory', 'bpmnUpdater' ];\n","import BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\n\nimport {\n  attr as svgAttr\n} from 'tiny-svg';\n\nimport { getBusinessObject, is } from 'bpmn-js/lib/util/ModelUtil';\nimport { isAny } from 'bpmn-js/lib/features/modeling/util/ModelingUtil';\nimport { findDataObject } from './DataObjectHelpers';\n\nconst HIGH_PRIORITY = 1500;\n\n/**\n * Work in progress -- render data object references in red if they are\n * not valid.\n */\nexport default class DataObjectRenderer extends BaseRenderer {\n  constructor(eventBus, bpmnRenderer) {\n    super(eventBus, HIGH_PRIORITY);\n    this.bpmnRenderer = bpmnRenderer;\n  }\n\n  canRender(element) {\n    return isAny(element, [ 'bpmn:DataObjectReference' ]) && !element.labelTarget;\n  }\n\n  drawShape(parentNode, element) {\n    const shape = this.bpmnRenderer.drawShape(parentNode, element);\n    if (is(element, 'bpmn:DataObjectReference')) {\n      let businessObject = getBusinessObject(element);\n      let dataObject = businessObject.dataObjectRef;\n      if (dataObject && dataObject.id) {\n        let parentObject = businessObject.$parent;\n        dataObject = findDataObject(parentObject, dataObject.id);\n      }\n      if (!dataObject) {\n        svgAttr(shape, 'stroke', 'red');\n      }\n      return shape;\n    }\n  }\n}\n\nDataObjectRenderer.$inject = [ 'eventBus', 'bpmnRenderer' ];\n","/**\n * Custom Rules for the DataObject - Rules allow you to prevent an\n * action from happening in the diagram, such as dropping an element\n * where it doesn't belong.\n *\n * Here we don't allow people to move a data object Reference\n * from one parent to another, as we can't move the data objects\n * from one parent to another.\n *\n */\nimport RuleProvider from 'diagram-js/lib/features/rules/RuleProvider';\nimport inherits from 'inherits-browser';\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\n\nexport default function DataObjectRules(eventBus) {\n  RuleProvider.call(this, eventBus);\n}\ninherits(DataObjectRules, RuleProvider);\nconst HIGH_PRIORITY = 1500;\n\nDataObjectRules.prototype.init = function() {\n  this.addRule('elements.move', HIGH_PRIORITY,function(context) {\n    let elements = context.shapes;\n    let target = context.target;\n    return canDrop(elements, target);\n  });\n};\n\nfunction canDrop(elements, target) {\n  for (let element of elements) {\n    if (is(element, 'bpmn:DataObjectReference') && element.parent && target) {\n      return target === element.parent;\n    }\n    // Intentionally returning null here to allow other rules to fire.\n  }\n}\n\nDataObjectRules.prototype.canDrop = canDrop;\nDataObjectRules.$inject = [ 'eventBus' ];\n","import { useService } from 'bpmn-js-properties-panel';\nimport {\n  isTextFieldEntryEdited,\n  TextFieldEntry,\n} from '@bpmn-io/properties-panel';\nimport { without } from 'min-dash';\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\nimport { findDataObjects, findDataReferenceShapes } from '../DataObjectHelpers';\n\n/**\n * Provides a list of data objects, and allows you to add / remove data objects, and change their ids.\n * @param props\n * @constructor\n */\nexport function DataObjectArray(props) {\n  const { moddle } = props;\n  const { element } = props;\n  const { commandStack } = props;\n  const { elementRegistry } = props;\n  let process;\n\n  // This element might be a process, or something that will reference a process.\n  if (is(element.businessObject, 'bpmn:Process')) {\n    process = element.businessObject;\n  } else if (element.businessObject.processRef) {\n    process = element.businessObject.processRef;\n  }\n\n  const dataObjects = findDataObjects(process);\n  const items = dataObjects.map((dataObject, index) => {\n    const id = `${process.id}-dataObj-${index}`;\n    return {\n      id,\n      label: dataObject.id,\n      entries: DataObjectGroup({\n        idPrefix: id,\n        element,\n        dataObject,\n      }),\n      autoFocusEntry: `${id}-dataObject`,\n      remove: removeFactory({\n        element,\n        dataObject,\n        process,\n        commandStack,\n        elementRegistry,\n      }),\n    };\n  });\n\n  function add(event) {\n    event.stopPropagation();\n    const newDataObject = moddle.create('bpmn:DataObject');\n    const newElements = process.get('flowElements');\n    newDataObject.id = moddle.ids.nextPrefixed('DataObject_');\n    newElements.push(newDataObject);\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: process,\n      properties: {\n        flowElements: newElements,\n      },\n    });\n  }\n\n  return { items, add };\n}\n\nfunction removeFactory(props) {\n  const { element, dataObject, process, commandStack } = props;\n\n  return function (event) {\n    event.stopPropagation();\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: process,\n      properties: {\n        flowElements: without(process.get('flowElements'), dataObject),\n      },\n    });\n    // Also update the label of all the references\n    const references = findDataReferenceShapes(element, dataObject.id);\n    for (const ref of references) {\n      commandStack.execute('element.updateProperties', {\n        element: ref,\n        moddleElement: ref.businessObject,\n        properties: {\n          name: '???',\n        },\n        changed: [ref], // everything is already marked as changed, don't recalculate.\n      });\n    }\n  };\n}\n\nfunction DataObjectGroup(props) {\n  const { idPrefix, dataObject } = props;\n\n  return [\n    {\n      id: `${idPrefix}-dataObject`,\n      component: DataObjectTextField,\n      isEdited: isTextFieldEntryEdited,\n      idPrefix,\n      dataObject,\n    },\n  ];\n}\n\nfunction DataObjectTextField(props) {\n  const { idPrefix, element, parameter, dataObject } = props;\n\n  const commandStack = useService('commandStack');\n  const debounce = useService('debounceInput');\n\n  const setValue = (value) => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: dataObject,\n      properties: {\n        id: value,\n      },\n    });\n\n    // Also update the label of all the references\n    const references = findDataReferenceShapes(element, dataObject.id);\n    for (const ref of references) {\n      commandStack.execute('element.updateProperties', {\n        element: ref,\n        moddleElement: ref.businessObject,\n        properties: {\n          name: value,\n        },\n        changed: [ref], // everything is already marked as changed, don't recalculate.\n      });\n    }\n  };\n\n  const getValue = () => {\n    return dataObject.id;\n  };\n\n  return TextFieldEntry({\n    element: parameter,\n    id: `${idPrefix}-id`,\n    label: 'Data Object Id',\n    getValue,\n    setValue,\n    debounce,\n  });\n}\n","import { is, isAny } from 'bpmn-js/lib/util/ModelUtil';\nimport { ListGroup, isTextFieldEntryEdited } from '@bpmn-io/properties-panel';\nimport { DataObjectSelect } from './DataObjectSelect';\nimport { DataObjectArray } from './DataObjectArray';\n\nconst LOW_PRIORITY = 500;\n\nexport default function DataObjectPropertiesProvider(\n  propertiesPanel,\n  translate,\n  moddle,\n  commandStack,\n  elementRegistry\n) {\n  this.getGroups = function (element) {\n    return function (groups) {\n      if (is(element, 'bpmn:DataObjectReference')) {\n        groups.push(\n          createDataObjectSelector(element, translate, moddle, commandStack)\n        );\n      }\n      if (\n        isAny(element, ['bpmn:Process', 'bpmn:SubProcess', 'bpmn:Participant'])\n      ) {\n        groups.push(\n          createDataObjectEditor(\n            element,\n            translate,\n            moddle,\n            commandStack,\n            elementRegistry\n          )\n        );\n      }\n      return groups;\n    };\n  };\n  propertiesPanel.registerProvider(LOW_PRIORITY, this);\n}\n\nDataObjectPropertiesProvider.$inject = [\n  'propertiesPanel',\n  'translate',\n  'moddle',\n  'commandStack',\n  'elementRegistry',\n];\n\n/**\n * Create a group on the main panel with a select box (for choosing the Data Object to connect)\n * @param element\n * @param translate\n * @param moddle\n * @returns entries\n */\nfunction createDataObjectSelector(element, translate, moddle, commandStack) {\n  return {\n    id: 'data_object_properties',\n    label: translate('Data Object Properties'),\n    entries: [\n      {\n        id: 'selectDataObject',\n        element,\n        component: DataObjectSelect,\n        isEdited: isTextFieldEntryEdited,\n        moddle,\n        commandStack,\n      },\n    ],\n  };\n}\n\n/**\n * Create a group on the main panel with a select box (for choosing the Data Object to connect) AND a\n * full Data Object Array for modifying all the data objects.\n * @param element\n * @param translate\n * @param moddle\n * @returns entries\n */\nfunction createDataObjectEditor(\n  element,\n  translate,\n  moddle,\n  commandStack,\n  elementRegistry\n) {\n  const dataObjectArray = {\n    id: 'editDataObjects',\n    element,\n    label: 'Data Objects',\n    component: ListGroup,\n    ...DataObjectArray({ element, moddle, commandStack, elementRegistry }),\n  };\n\n  if (dataObjectArray.items) {\n    return dataObjectArray;\n  }\n}\n","import {useService } from 'bpmn-js-properties-panel';\nimport { SelectEntry } from '@bpmn-io/properties-panel';\n\n/**\n * Finds the value of the given type within the extensionElements\n * given a type of \"spiff:preScript\", would find it in this, and return\n * the object.\n *\n *  <bpmn:\n <bpmn:userTask id=\"123\" name=\"My User Task!\">\n <bpmn:extensionElements>\n <spiffworkflow:preScript>\n me = \"100% awesome\"\n </spiffworkflow:preScript>\n </bpmn:extensionElements>\n ...\n </bpmn:userTask>\n *\n * @returns {string|null|*}\n */\nexport function DataObjectSelect(props) {\n  const element = props.element;\n  const commandStack = props.commandStack;\n  const debounce = useService('debounceInput');\n\n\n  const getValue = () => {\n    return element.businessObject.dataObjectRef.id\n  }\n\n  const setValue = value => {\n    const businessObject = element.businessObject;\n    for (const flowElem of businessObject.$parent.flowElements) {\n      if (flowElem.$type === 'bpmn:DataObject' && flowElem.id === value) {\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            dataObjectRef: flowElem\n          }\n        });\n        commandStack.execute('element.updateProperties', {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            'name': flowElem.id\n          }\n        });\n      }\n    }\n  }\n\n  const getOptions = value => {\n    const businessObject = element.businessObject;\n    const parent = businessObject.$parent;\n    let options = []\n    for (const element of parent.flowElements) {\n      if (element.$type === 'bpmn:DataObject') {\n        options.push({label: element.id, value: element.id})\n      }\n    }\n    return options\n  }\n\n  return <SelectEntry\n    id={'selectDataObject'}\n    element={element}\n    description={\"Select the Data Object this represents.\"}\n    label={\"Which Data Object does this reference?\"}\n    getValue={ getValue }\n    setValue={ setValue }\n    getOptions={ getOptions }\n    debounce={debounce}\n  />;\n\n}\n","import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { add as collectionAdd } from 'diagram-js/lib/util/Collections';\nimport { remove as collectionRemove } from 'diagram-js/lib/util/Collections';\nimport IdGenerator from 'diagram-js/lib/util/IdGenerator';\nvar HIGH_PRIORITY = 1500;\n\n/**\n * This Command Interceptor functions like the BpmnUpdator in BPMN.js - It hooks into events\n * from Diagram.js and updates the underlying BPMN model accordingly.\n *\n * This handles the case where a new DataInput or DataOutput is added to\n * the diagram, it assures that a place exists for the new Data object to go, and it places it there.\n * There were a number of paces where I had to patch things in to get it to work correctly:\n *   * Create a InputOutputSpecification on the BPMN Moddle if it doesn't exist.\n *   * Correctly connect a new DI (display element in BPMN xml) for the input/output element.\n *   * Create a new DataInput/DataOutput Object (maybe incorrectly)\n * Also handles delete, where it removes the objects from the BPMN Moddle (both the actual input/output and the DI)\n * fixme:  Assure that we need to create a new DataInput object here, already in IoPalette's call to ElementFactory\n * fixme:  If all inputs and outputs are deleted, remove the InputOutputSpecification completely.\n */\nexport default class IoInterceptor extends CommandInterceptor {\n  constructor(eventBus, bpmnFactory, bpmnUpdater) {\n    super(eventBus);\n\n    this.execute([ 'shape.create' ], HIGH_PRIORITY, function(event) {\n      let context = event.context;\n      if ([ 'bpmn:DataInput', 'bpmn:DataOutput' ].includes(context.shape.type)) {\n        let type = context.shape.type;\n        let type_name = type.split(':')[1];\n        let process = context.parent.businessObject;\n        let ioSpec = assureIOSpecificationExists(process, bpmnFactory);\n        let di = context.shape.di;\n        let generator = new IdGenerator(type_name), ioSpecification = process.get('ioSpecification');\n        let dataIO = bpmnFactory.create(type, { id: generator.next() });\n        context.shape.businessObject = dataIO;\n        dataIO.$parent = ioSpec;\n        di.businessObject = dataIO;\n        di.bpmnElement = dataIO;\n        di.id = dataIO.id + 'DI';\n        bpmnUpdater.updateBounds(context.shape);\n        if (type == 'bpmn:DataInput') {\n          collectionAdd(ioSpecification.get('dataInputs'), dataIO);\n        } else {\n          collectionAdd(ioSpecification.get('dataOutputs'), dataIO);\n        }\n      }\n    });\n\n    this.execute([ 'shape.delete' ], HIGH_PRIORITY, function(event) {\n      let context = event.context;\n      if ([ 'bpmn:DataInput', 'bpmn:DataOutput' ].includes(context.shape.type)) {\n        let type = context.shape.type;\n        let process = context.shape.parent.businessObject;\n        let ioSpec = assureIOSpecificationExists(process, bpmnFactory);\n        if (type == 'bpmn:DataInput') {\n          collectionRemove(ioSpec.get('dataInputs'), context.shape.businessObject);\n        } else {\n          collectionRemove(ioSpec.get('dataOutputs'), context.shape.businessObject);\n        }\n        if (context.shape.di.$parent) {\n          collectionRemove(context.shape.di.$parent.planeElement, context.shape.di);\n        }\n      }\n    });\n\n    // Stop propagation on executed, to avoid the BpmnUpdator.js from causing errors.\n    this.executed([ 'shape.delete', 'shape.create' ], HIGH_PRIORITY, function(event) {\n      if ([ 'bpmn:DataInput', 'bpmn:DataOutput' ].includes(event.context.shape.type)) {\n        event.stopPropagation(); // Don't let the main code execute, it will fail.\n      }\n    });\n  }\n}\n\n/**\n *       <bpmndi:BPMNShape id=\"dataInput_1\" bpmnElement=\"ID_3\">\n *         <dc:Bounds x=\"152\" y=\"195\" width=\"36\" height=\"50\" />\n *         <bpmndi:BPMNLabel>\n *           <dc:Bounds x=\"142\" y=\"245\" width=\"56\" height=\"14\" />\n *         </bpmndi:BPMNLabel>\n *       </bpmndi:BPMNShape>\n * @param process\n * @param bpmnFactory\n * @returns {bpmn:InputOutputSpecification}\n */\n\nfunction assureIOSpecificationExists(process, bpmnFactory) {\n  let ioSpecification = process.get('ioSpecification');\n\n  if (!ioSpecification) {\n\n    // Create the BPMN\n    ioSpecification = bpmnFactory.create('bpmn:InputOutputSpecification', {\n      dataInputs: [],\n      inputSets: [],\n      dataOutputs: [],\n      outputSets: []\n    });\n    ioSpecification.$parent = process;\n    process.ioSpecification = ioSpecification;\n  }\n  return ioSpecification;\n}\n\nIoInterceptor.$inject = [ 'eventBus', 'bpmnFactory', 'bpmnUpdater' ];\n\n","import { assign } from 'min-dash';\nimport translate from 'diagram-js/lib/i18n/translate/translate';\n\n/**\n * Add data inputs and data outputs to the panel.\n */\nexport default function IoPalette(palette, create, elementFactory,) {\n  this._create = create;\n  this._elementFactory = elementFactory;\n  palette.registerProvider(this);\n}\n\nIoPalette.$inject = [\n  'palette',\n  'create',\n  'elementFactory'\n];\n\nIoPalette.prototype.getPaletteEntries = function() {\n\n  let input_type = 'bpmn:DataInput';\n  let output_type = 'bpmn:DataOutput';\n  let elementFactory = this._elementFactory, create = this._create;\n\n  function createListener(event, type) {\n    let shape = elementFactory.createShape(assign({ type: type }, {}));\n    shape.width = 36; // Fix up the shape dimensions from the defaults.\n    shape.height = 50;\n    create.start(event, shape);\n  }\n\n  function createInputListener(event) {\n    createListener(event, input_type);\n  }\n\n  function createOutputListener(event) {\n    createListener(event, output_type);\n  }\n\n  return {\n    'create.data-input': {\n      group: 'data-object',\n      className: 'bpmn-icon-data-input',\n      title: translate('Create DataInput'),\n      action: {\n        dragstart: createInputListener,\n        click: createInputListener\n      }\n    },\n    'create.data-output': {\n      group: 'data-object',\n      className: 'bpmn-icon-data-output',\n      title: translate('Create DataOutput'),\n      action: {\n        dragstart: createOutputListener,\n        click: createOutputListener\n      }\n    }\n\n  };\n};\n\n","import inherits from 'inherits';\nimport RuleProvider from 'diagram-js/lib/features/rules/RuleProvider';\n\nconst HIGH_PRIORITY = 1500;\n\n/**\n * A custom rule provider that will permit Data Inputs and Data\n * Outputs to be placed within a process element (something BPMN.io currently denies)\n *\n * See {@link BpmnRules} for the default implementation\n * of BPMN 2.0 modeling rules provided by bpmn-js.\n *\n * @param {EventBus} eventBus\n */\nexport default function IoRules(eventBus) {\n  RuleProvider.call(this, eventBus);\n}\n\ninherits(IoRules, RuleProvider);\n\nIoRules.$inject = [ 'eventBus' ];\n\nIoRules.prototype.init = function() {\n  this.addRule('shape.create', HIGH_PRIORITY, function(context) {\n\n    let element = context.shape;\n    let target = context.target;\n    let position = context.position;\n\n    return canCreate(element, target, position);\n  });\n};\n\n/**\n * Allow folks to drop a dataInput or DataOutput only on the top level process.\n */\nfunction canCreate(element, target, position) {\n  if ([ 'bpmn:DataInput', 'bpmn:DataOutput' ].includes(element.type)) {\n    if (target.type == 'bpmn:Process') {\n      return true;\n    }\n  }\n}\n\nIoRules.prototype.canCreate = canCreate;\n","import { is } from 'bpmn-js/lib/util/ModelUtil';\nimport { TextFieldEntry } from '@bpmn-io/properties-panel';\nimport { useService } from 'bpmn-js-properties-panel';\n\nconst LOW_PRIORITY = 500;\n\nexport default function CallActivityPropertiesProvider(\n  propertiesPanel,\n  translate,\n  moddle,\n  commandStack,\n  _elementRegistry\n) {\n  this.getGroups = function getGroupsCallback(element) {\n    return function pushGroup(groups) {\n      if (is(element, 'bpmn:CallActivity')) {\n        groups.push(\n          createCalledElementGroup(element, translate, moddle, commandStack)\n        );\n      }\n      return groups;\n    };\n  };\n  propertiesPanel.registerProvider(LOW_PRIORITY, this);\n}\n\nCallActivityPropertiesProvider.$inject = [\n  'propertiesPanel',\n  'translate',\n  'moddle',\n  'commandStack',\n  'elementRegistry',\n];\n\nfunction createCalledElementGroup(element, translate, moddle, commandStack) {\n  return {\n    id: 'called_element',\n    label: translate('Called Element'),\n    entries: [\n      {\n        id: `called_element_text_field`,\n        element,\n        component: CalledElementTextField,\n        moddle,\n        commandStack,\n        translate,\n      },\n    ],\n  };\n}\n\nfunction CalledElementTextField(props) {\n  const { element } = props;\n  const { translate } = props;\n\n  const debounce = useService('debounceInput');\n  const getValue = () => {\n    const { calledElement } = element.businessObject;\n    if (calledElement) {\n      return calledElement;\n    }\n    return '';\n  };\n\n  const setValue = (value) => {\n    element.businessObject.calledElement = value;\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'process_id',\n    label: translate('Process ID'),\n    getValue,\n    setValue,\n    debounce,\n  });\n}\n","import { is } from 'bpmn-js/lib/util/ModelUtil';\nimport {\n  isTextFieldEntryEdited,\n  TextFieldEntry,\n} from '@bpmn-io/properties-panel';\nimport { useService } from 'bpmn-js-properties-panel';\n\nconst LOW_PRIORITY = 500;\n\nexport default function ConditionsPropertiesProvider(\n  propertiesPanel,\n  translate,\n  moddle,\n  commandStack,\n  _elementRegistry\n) {\n  this.getGroups = function getGroupsCallback(element) {\n    return function pushGroup(groups) {\n      if (is(element, 'bpmn:SequenceFlow')) {\n        const { source } = element;\n        if (is(source, 'bpmn:ExclusiveGateway')) {\n          groups.push(\n            createConditionsGroup(element, translate, moddle, commandStack)\n          );\n        }\n      }\n      return groups;\n    };\n  };\n  propertiesPanel.registerProvider(LOW_PRIORITY, this);\n}\n\nConditionsPropertiesProvider.$inject = [\n  'propertiesPanel',\n  'translate',\n  'moddle',\n  'commandStack',\n  'elementRegistry',\n];\n\nfunction createConditionsGroup(element, translate, moddle, commandStack) {\n  return {\n    id: 'conditions',\n    label: translate('Conditions'),\n    entries: conditionGroup(\n      element,\n      moddle,\n      'Condition Expression',\n      'Expression to Execute',\n      commandStack\n    ),\n  };\n}\n\nfunction conditionGroup(element, moddle, label, description, commandStack) {\n  return [\n    {\n      id: `condition_expression`,\n      element,\n      component: ConditionExpressionTextField,\n      moddle,\n      label,\n      description,\n      commandStack,\n    },\n  ];\n}\n\nfunction ConditionExpressionTextField(props) {\n  const { element } = props;\n  const { moddle } = props;\n  const { label } = props;\n\n  const debounce = useService('debounceInput');\n  const getValue = () => {\n    const { conditionExpression } = element.businessObject;\n    if (conditionExpression) {\n      return conditionExpression.body;\n    }\n    return '';\n  };\n\n  const setValue = (value) => {\n    let { conditionExpressionModdleElement } = element.businessObject;\n    if (!conditionExpressionModdleElement) {\n      conditionExpressionModdleElement = moddle.create('bpmn:Expression');\n    }\n    conditionExpressionModdleElement.body = value;\n    element.businessObject.conditionExpression =\n      conditionExpressionModdleElement;\n  };\n\n  return TextFieldEntry({\n    element,\n    id: `the-id`,\n    label,\n    getValue,\n    setValue,\n    debounce,\n  });\n}\n","export const SPIFFWORKFLOW_XML_NAMESPACE = 'spiffworkflow';\n","import { ListGroup } from '@bpmn-io/properties-panel';\nimport { is, isAny } from 'bpmn-js/lib/util/ModelUtil';\nimport scriptGroup, { SCRIPT_TYPE } from './SpiffScriptGroup';\nimport { SpiffExtensionCalledDecision } from './SpiffExtensionCalledDecision';\nimport { SpiffExtensionTextInput } from './SpiffExtensionTextInput';\nimport { SpiffExtensionInstructionsForEndUser } from './SpiffExtensionInstructionsForEndUser';\nimport {\n  ServiceTaskParameterArray,\n  ServiceTaskOperatorSelect,\n} from './SpiffExtensionServiceProperties';\n\nconst LOW_PRIORITY = 500;\n\nexport default function ExtensionsPropertiesProvider(\n  propertiesPanel,\n  translate,\n  moddle,\n  commandStack,\n  elementRegistry\n) {\n  this.getGroups = function (element) {\n    return function (groups) {\n      if (is(element, 'bpmn:ScriptTask')) {\n        groups.push(createScriptGroup(element, translate, moddle));\n      } else if (\n        isAny(element, ['bpmn:Task', 'bpmn:CallActivity', 'bpmn:SubProcess'])\n      ) {\n        groups.push(preScriptPostScriptGroup(element, translate, moddle));\n      }\n      if (is(element, 'bpmn:UserTask')) {\n        groups.push(createUserGroup(element, translate, moddle, commandStack));\n      }\n      if (is(element, 'bpmn:BusinessRuleTask')) {\n        groups.push(\n          createBusinessRuleGroup(element, translate, moddle, commandStack)\n        );\n      }\n      if (is(element, 'bpmn:ManualTask')) {\n        groups.push(\n          createManualTaskPropertiesGroup(\n            element,\n            translate,\n            moddle,\n            commandStack\n          )\n        );\n      }\n      if (is(element, 'bpmn:ServiceTask')) {\n        groups.push(\n          createServiceGroup(element, translate, moddle, commandStack)\n        );\n      }\n\n      return groups;\n    };\n  };\n  propertiesPanel.registerProvider(LOW_PRIORITY, this);\n}\n\nExtensionsPropertiesProvider.$inject = [\n  'propertiesPanel',\n  'translate',\n  'moddle',\n  'commandStack',\n  'elementRegistry',\n];\n\n/**\n * Adds a group to the properties panel for the script task that allows you\n * to set the script.\n * @param element\n * @param translate\n * @returns The components to add to the properties panel. */\nfunction createScriptGroup(element, translate, moddle, commandStack) {\n  return {\n    id: 'spiff_script',\n    label: translate('Script'),\n    entries: scriptGroup(\n      element,\n      moddle,\n      SCRIPT_TYPE.bpmn,\n      'Script',\n      'Code to execute.'\n    ),\n  };\n}\n\n/**\n * Adds a section to the properties' panel for NON-Script tasks, so that\n * you can define a pre-script and a post-script for modifying data as it comes and out.\n * @param element\n * @param translate\n * @param moddle  For altering the underlying XML File.\n * @returns The components to add to the properties panel.\n */\nfunction preScriptPostScriptGroup(element, translate, moddle) {\n  return {\n    id: 'spiff_pre_post_scripts',\n    label: translate('SpiffWorkflow Scripts'),\n    entries: [\n      ...scriptGroup(\n        element,\n        moddle,\n        SCRIPT_TYPE.pre,\n        'Pre-Script',\n        'code to execute prior to this task.'\n      ),\n      ...scriptGroup(\n        element,\n        moddle,\n        SCRIPT_TYPE.post,\n        'Post-Script',\n        'code to execute after this task.'\n      ),\n    ],\n  };\n}\n\n/**\n * Create a group on the main panel with a select box (for choosing the Data Object to connect)\n * @param element\n * @param translate\n * @param moddle\n * @returns entries\n */\nfunction createUserGroup(element, translate, moddle, commandStack) {\n  return {\n    id: 'user_task_properties',\n    label: translate('SpiffWorkflow Web Form'),\n    entries: [\n      {\n        element,\n        moddle,\n        commandStack,\n        component: SpiffExtensionTextInput,\n        label: translate('JSON Schema Filename'),\n        description: translate('RJSF Json Data Structure Filename'),\n        name: 'formJsonSchemaFilename',\n      },\n      {\n        element,\n        moddle,\n        commandStack,\n        component: SpiffExtensionTextInput,\n        label: translate('UI Schema Filename'),\n        description: translate('RJSF User Interface Filename'),\n        name: 'formUiSchemaFilename',\n      },\n    ],\n  };\n}\n\n/**\n * Create a group on the main panel with a text box (for choosing the dmn to connect)\n * @param element\n * @param translate\n * @param moddle\n * @returns entries\n */\nfunction createBusinessRuleGroup(element, translate, moddle, commandStack) {\n  return {\n    id: 'business_rule_properties',\n    label: translate('Business Rule Properties'),\n    entries: [\n      {\n        element,\n        moddle,\n        commandStack,\n        component: SpiffExtensionCalledDecision,\n        label: translate('Decision Id'),\n        description: translate('Id of the decision'),\n      },\n    ],\n  };\n}\n\n/**\n * Create a group on the main panel with a text box (for choosing the information to display to the user)\n * @param element\n * @param translate\n * @param moddle\n * @returns entries\n */\nfunction createManualTaskPropertiesGroup(\n  element,\n  translate,\n  moddle,\n  commandStack\n) {\n  return {\n    id: 'manual_task_properties',\n    label: translate('Manual Task Properties'),\n    entries: [\n      {\n        element,\n        moddle,\n        commandStack,\n        component: SpiffExtensionInstructionsForEndUser,\n        label: translate('Instructions For End User'),\n        description: translate(\n          'The instructions to show the user(s) who are responsible for completing the task.'\n        ),\n      },\n    ],\n  };\n}\n\n/**\n * Create a group on the main panel with a text box (for choosing the dmn to connect)\n * @param element\n * @param translate\n * @param moddle\n * @returns entries\n */\nfunction createServiceGroup(element, translate, moddle, commandStack) {\n  return {\n    id: 'service_task_properties',\n    label: translate('Spiffworkflow Service Properties'),\n    entries: [\n      {\n        element,\n        moddle,\n        commandStack,\n        component: ServiceTaskOperatorSelect,\n        translate,\n      },\n      {\n        id: 'serviceTaskParameters',\n        label: translate('Parameters'),\n        component: ListGroup,\n        ...ServiceTaskParameterArray({\n          element,\n          moddle,\n          translate,\n        }),\n      },\n    ],\n  };\n}\n","import {useService } from 'bpmn-js-properties-panel';\nimport { TextFieldEntry } from '@bpmn-io/properties-panel';\n\nconst SPIFF_PROP = \"spiffworkflow:calledDecisionId\"\n\n/**\n * A generic properties' editor for text input.\n * Allows you to provide additional SpiffWorkflow extension properties.  Just\n * uses whatever name is provide on the property, and adds or updates it as\n * needed.\n *\n *\n    <bpmn:businessRuleTask id=\"Activity_0t218za\">\n      <bpmn:extensionElements>\n        <spiffworkflow:calledDecisionId>my_id</spiffworkflow:calledDecisionId>\n      </bpmn:extensionElements>\n    </bpmn:businessRuleTask>\n *\n * @returns {string|null|*}\n */\nexport function SpiffExtensionCalledDecision(props) {\n  const element = props.element;\n  const commandStack = props.commandStack, moddle = props.moddle;\n  const label = props.label, description = props.description;\n  const debounce = useService('debounceInput');\n\n  const getPropertyObject = () => {\n    const bizObj = element.businessObject;\n    if (!bizObj.extensionElements) {\n      return null;\n    } else {\n      return bizObj.extensionElements.get(\"values\").filter(function (e) {\n        return e.$instanceOf(SPIFF_PROP)\n      })[0];\n    }\n  }\n\n  const getValue = () => {\n    const property = getPropertyObject()\n    if (property) {\n      return property.calledDecisionId;\n    }\n    return \"\"\n  }\n\n  const setValue = value => {\n    let property = getPropertyObject()\n    let businessObject = element.businessObject;\n    let extensions = businessObject.extensionElements;\n\n    if (!property) {\n      property = moddle.create(SPIFF_PROP);\n      if (!extensions) {\n        extensions = moddle.create('bpmn:ExtensionElements');\n      }\n      extensions.get('values').push(property);\n    }\n    property.calledDecisionId = value;\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        \"extensionElements\": extensions\n      }\n    });\n  };\n\n  return <TextFieldEntry\n    id='extension_called_decision'\n    element={element}\n    description={description}\n    label={label}\n    getValue={getValue}\n    setValue={setValue}\n    debounce={debounce}\n  />;\n\n}\n","import {useService } from 'bpmn-js-properties-panel';\nimport { TextAreaEntry } from '@bpmn-io/properties-panel';\n\nconst SPIFF_PROP = \"spiffworkflow:instructionsForEndUser\"\n\n/**\n * A generic properties' editor for text input.\n * Allows you to provide additional SpiffWorkflow extension properties.  Just\n * uses whatever name is provide on the property, and adds or updates it as\n * needed.\n *\n *\n *\n * @returns {string|null|*}\n */\nexport function SpiffExtensionInstructionsForEndUser(props) {\n  const element = props.element;\n  const commandStack = props.commandStack, moddle = props.moddle;\n  const label = props.label, description = props.description;\n  const debounce = useService('debounceInput');\n\n  const getPropertyObject = () => {\n    const bizObj = element.businessObject;\n    if (!bizObj.extensionElements) {\n      return null;\n    } else {\n      return bizObj.extensionElements.get(\"values\").filter(function (e) {\n        return e.$instanceOf(SPIFF_PROP)\n      })[0];\n    }\n  }\n\n  const getValue = () => {\n    const property = getPropertyObject()\n    if (property) {\n      return property.instructionsForEndUser;\n    }\n    return \"\"\n  }\n\n  const setValue = value => {\n    let property = getPropertyObject()\n    let businessObject = element.businessObject;\n    let extensions = businessObject.extensionElements;\n\n    if (!property) {\n      property = moddle.create(SPIFF_PROP);\n      if (!extensions) {\n        extensions = moddle.create('bpmn:ExtensionElements');\n      }\n      extensions.get('values').push(property);\n    }\n    property.instructionsForEndUser = value;\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        \"extensionElements\": extensions\n      }\n    });\n  };\n\n  return TextAreaEntry({\n    id: 'extension_instruction_for_end_user',\n    element: element,\n    description: description,\n    label: label,\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce,\n  })\n}\n","import { useService } from 'bpmn-js-properties-panel';\nimport { TextFieldEntry, SelectEntry } from '@bpmn-io/properties-panel';\nimport { SPIFFWORKFLOW_XML_NAMESPACE } from '../../constants';\n\nlet serviceTaskOperators = [];\n\n// This stores the parameters for a given service task operator\n//  so that we can remember the values when switching between them\n// the values should be the list of moddle elements that we push onto\n//  the parameterList of service task operator and the key should be\n//  the service task operator id\nconst previouslyUsedServiceTaskParameterValuesHash = {};\n\nconst LOW_PRIORITY = 500;\nconst SERVICE_TASK_OPERATOR_ELEMENT_NAME = `${SPIFFWORKFLOW_XML_NAMESPACE}:serviceTaskOperator`;\nconst SERVICE_TASK_PARAMETERS_ELEMENT_NAME = `${SPIFFWORKFLOW_XML_NAMESPACE}:parameters`;\nconst SERVICE_TASK_PARAMETER_ELEMENT_NAME = `${SPIFFWORKFLOW_XML_NAMESPACE}:parameter`;\n\n/**\n * A generic properties' editor for text input.\n * Allows you to provide additional SpiffWorkflow extension properties.  Just\n * uses whatever name is provide on the property, and adds or updates it as\n * needed.\n *\n *\n    <bpmn:serviceTask id=\"service_task_one\" name=\"Service Task One\">\n      <bpmn:extensionElements>\n        <spiffworkflow:serviceTaskOperator id=\"SlackWebhookOperator\">\n          <spiffworkflow:parameters>\n            <spiffworkflow:parameter name=\"webhook_token\" type=\"string\" value=\"token\" />\n            <spiffworkflow:parameter name=\"message\" type=\"string\" value=\"ServiceTask testing\" />\n            <spiffworkflow:parameter name=\"channel\" type=\"string\" value=\"#\" />\n          </spiffworkflow:parameters>\n        </spiffworkflow:serviceTaskOperator>\n      </bpmn:extensionElements>\n    </bpmn:serviceTask>\n *\n * @returns {string|null|*}\n */\n\nfunction requestServiceTaskOperators(eventBus, element, commandStack) {\n  eventBus.fire('spiff.service_tasks.requested', { eventBus });\n  eventBus.on('spiff.service_tasks.returned', (event) => {\n    if (event.serviceTaskOperators.length > 0) {\n      serviceTaskOperators = event.serviceTaskOperators.sort((a, b) =>\n        a.id.localeCompare(b.id)\n      );\n      commandStack.execute('element.updateProperties', {\n        element,\n        properties: {},\n      });\n    }\n  });\n}\n\nfunction getServiceTaskOperatorModdleElement(shapeElement) {\n  const { extensionElements } = shapeElement.businessObject;\n  if (extensionElements) {\n    for (const ee of extensionElements.values) {\n      if (ee.$type === SERVICE_TASK_OPERATOR_ELEMENT_NAME) {\n        return ee;\n      }\n    }\n  }\n  return null;\n}\n\nfunction getServiceTaskParameterModdleElements(shapeElement) {\n  const serviceTaskOperatorModdleElement =\n    getServiceTaskOperatorModdleElement(shapeElement);\n  if (serviceTaskOperatorModdleElement) {\n    const { parameterList } = serviceTaskOperatorModdleElement;\n    if (parameterList) {\n      return parameterList.parameters.sort((a, b) => a.id.localeCompare(b.id));\n    }\n  }\n  return [];\n}\n\nexport function ServiceTaskOperatorSelect(props) {\n  const { element } = props;\n  const { commandStack } = props;\n  const { translate } = props;\n  const { moddle } = props;\n\n  const debounce = useService('debounceInput');\n  const eventBus = useService('eventBus');\n\n  if (serviceTaskOperators.length === 0) {\n    requestServiceTaskOperators(eventBus, element, commandStack);\n  }\n\n  const getValue = () => {\n    const serviceTaskOperatorModdleElement =\n      getServiceTaskOperatorModdleElement(element);\n    if (serviceTaskOperatorModdleElement) {\n      return serviceTaskOperatorModdleElement.id;\n    }\n    return '';\n  };\n\n  const setValue = (value) => {\n    if (!value) {\n      return;\n    }\n\n    const serviceTaskOperator = serviceTaskOperators.find(\n      (sto) => sto.id === value\n    );\n    if (!serviceTaskOperator) {\n      console.error(`Could not find service task operator with id: ${value}`);\n      return;\n    }\n\n    const previouslyUsedServiceTaskParameterValues =\n      previouslyUsedServiceTaskParameterValuesHash[value];\n\n    const { businessObject } = element;\n    let extensions = businessObject.extensionElements;\n    if (!extensions) {\n      extensions = moddle.create('bpmn:ExtensionElements');\n    }\n\n    const oldServiceTaskOperatorModdleElement =\n      getServiceTaskOperatorModdleElement(element);\n\n    const newServiceTaskOperatorModdleElement = moddle.create(\n      SERVICE_TASK_OPERATOR_ELEMENT_NAME\n    );\n    newServiceTaskOperatorModdleElement.id = value;\n    let newParameterList;\n\n    if (previouslyUsedServiceTaskParameterValues) {\n      newParameterList = previouslyUsedServiceTaskParameterValues;\n    } else {\n      newParameterList = moddle.create(SERVICE_TASK_PARAMETERS_ELEMENT_NAME);\n      newParameterList.parameters = [];\n      serviceTaskOperator.parameters.forEach((stoParameter) => {\n        const newParameterModdleElement = moddle.create(\n          SERVICE_TASK_PARAMETER_ELEMENT_NAME\n        );\n        newParameterModdleElement.id = stoParameter.id;\n        newParameterModdleElement.type = stoParameter.type;\n        newParameterList.parameters.push(newParameterModdleElement);\n      });\n      previouslyUsedServiceTaskParameterValuesHash[value] = newParameterList;\n      if (oldServiceTaskOperatorModdleElement) {\n        previouslyUsedServiceTaskParameterValuesHash[\n          oldServiceTaskOperatorModdleElement.id\n        ] = oldServiceTaskOperatorModdleElement.parameterList;\n      }\n    }\n\n    newServiceTaskOperatorModdleElement.parameterList = newParameterList;\n\n    const newExtensionValues = extensions.get('values').filter((extValue) => {\n      return extValue.$type !== SERVICE_TASK_OPERATOR_ELEMENT_NAME;\n    });\n    newExtensionValues.push(newServiceTaskOperatorModdleElement);\n    extensions.values = newExtensionValues;\n    businessObject.extensionElements = extensions;\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {},\n    });\n  };\n\n  const getOptions = () => {\n    const optionList = [];\n    if (serviceTaskOperators) {\n      serviceTaskOperators.forEach((sto) => {\n        optionList.push({\n          label: sto.id,\n          value: sto.id,\n        });\n      });\n    }\n    return optionList;\n  };\n\n  return SelectEntry({\n    id: 'selectOperatorId',\n    element,\n    label: translate('Operator ID'),\n    getValue,\n    setValue,\n    getOptions,\n    debounce,\n  });\n}\n\nexport function ServiceTaskParameterArray(props) {\n  const { element, commandStack } = props;\n\n  const serviceTaskParameterModdleElements =\n    getServiceTaskParameterModdleElements(element);\n  const items = serviceTaskParameterModdleElements.map(\n    (serviceTaskParameterModdleElement, index) => {\n      const id = `serviceTaskParameter-${index}`;\n      return {\n        id,\n        label: serviceTaskParameterModdleElement.id,\n        entries: serviceTaskParameterEntries({\n          idPrefix: id,\n          element,\n          serviceTaskParameterModdleElement,\n          commandStack,\n        }),\n        autoFocusEntry: id,\n      };\n    }\n  );\n  return { items };\n}\n\nfunction serviceTaskParameterEntries(props) {\n  const { idPrefix, serviceTaskParameterModdleElement, commandStack } = props;\n  return [\n    {\n      idPrefix: `${idPrefix}-parameter`,\n      component: ServiceTaskParameterTextField,\n      serviceTaskParameterModdleElement,\n      commandStack,\n    },\n  ];\n}\n\nfunction ServiceTaskParameterTextField(props) {\n  const { idPrefix, element, serviceTaskParameterModdleElement } = props;\n\n  const debounce = useService('debounceInput');\n  const setValue = (value) => {\n    serviceTaskParameterModdleElement.value = value;\n  };\n\n  const getValue = () => {\n    return serviceTaskParameterModdleElement.value;\n  };\n\n  return TextFieldEntry({\n    element,\n    id: `${idPrefix}-textField`,\n    getValue,\n    setValue,\n    debounce,\n  });\n}\n","import {useService } from 'bpmn-js-properties-panel';\nimport { TextFieldEntry } from '@bpmn-io/properties-panel';\n\nconst SPIFF_PARENT_PROP = \"spiffworkflow:properties\"\nconst SPIFF_PROP = \"spiffworkflow:property\"\n\n/**\n * A generic properties' editor for text input.\n * Allows you to provide additional SpiffWorkflow extension properties.  Just\n * uses whatever name is provide on the property, and adds or updates it as\n * needed.\n *\n       <bpmn:extensionElements>\n           <spiffworkflow:properties>\n               <spiffworkflow:property name=\"formJsonSchemaFilename\" value=\"json_schema.json\" />\n               <spiffworkflow:property name=\"formUiSchemaFilename\" value=\"ui_schema.json\" />\n           </spiffworkflow:properties>\n       </bpmn:extensionElements>\n *\n * @returns {string|null|*}\n */\nexport function SpiffExtensionTextInput(props) {\n  const element = props.element;\n  const commandStack = props.commandStack, moddle = props.moddle;\n  const name = props.name, label = props.label, description = props.description;\n  const debounce = useService('debounceInput');\n\n  const getPropertiesObject = () => {\n    const bizObj = element.businessObject;\n    if (!bizObj.extensionElements) {\n      return null;\n    } else {\n      const extensionElements = bizObj.extensionElements.get(\"values\");\n      return extensionElements.filter(function (extensionElement) {\n        if (extensionElement.$instanceOf(SPIFF_PARENT_PROP)) {\n          return extensionElement;\n        }\n      })[0];\n    }\n  }\n\n  const getPropertyObject = () => {\n    const parentElement = getPropertiesObject();\n    if (parentElement) {\n      return parentElement.get(\"properties\").filter(function (propertyElement) {\n        return propertyElement.$instanceOf(SPIFF_PROP) && propertyElement.name === name;\n      })[0];\n    }\n    return null;\n  }\n\n  const getValue = () => {\n    const property = getPropertyObject()\n    if (property) {\n      return property.value;\n    }\n    return \"\"\n  }\n\n  const setValue = value => {\n    let properties = getPropertiesObject()\n    let property = getPropertyObject()\n    let businessObject = element.businessObject;\n    let extensions = businessObject.extensionElements;\n\n    if (!extensions) {\n      extensions = moddle.create('bpmn:ExtensionElements');\n    }\n    if (!properties) {\n      properties = moddle.create(SPIFF_PARENT_PROP);\n      extensions.get('values').push(properties);\n    }\n    if (!property) {\n      property = moddle.create(SPIFF_PROP);\n      properties.get('properties').push(property);\n    }\n    property.value = value;\n    property.name = name;\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        \"extensionElements\": extensions\n      }\n    });\n  };\n\n  return <TextFieldEntry\n    id={'extension_' + name}\n    element={element}\n    description={description}\n    label={label}\n    getValue={getValue}\n    setValue={setValue}\n    debounce={debounce}\n  />;\n\n}\n","import {\n  HeaderButton,\n  TextAreaEntry,\n  isTextFieldEntryEdited,\n} from '@bpmn-io/properties-panel';\nimport { useService } from 'bpmn-js-properties-panel';\n\nexport const SCRIPT_TYPE = {\n  bpmn: 'bpmn:script',\n  pre: 'spiffworkflow:preScript',\n  post: 'spiffworkflow:postScript',\n};\n\nfunction PythonScript(props) {\n  const { element, id } = props;\n  const { type } = props;\n  const { moddle } = props;\n  const { label } = props;\n  const { description } = props;\n\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  /**\n   * Finds the value of the given type within the extensionElements\n   * given a type of \"spiff:preScript\", would find it in this, and return\n   * the object.\n   *\n   *  <bpmn:\n   <bpmn:userTask id=\"123\" name=\"My User Task!\">\n      <bpmn:extensionElements>\n         <spiff:preScript>\n           me = \"100% awesome\"\n         </spiff:preScript>\n      </bpmn:extensionElements>\n   ...\n   </bpmn:userTask>\n   *\n   * @returns {string|null|*}\n   */\n  const getScriptObject = () => {\n    const bizObj = element.businessObject;\n    if (type === SCRIPT_TYPE.bpmn) {\n      return bizObj;\n    }\n    if (!bizObj.extensionElements) {\n      return null;\n    }\n    return bizObj.extensionElements\n      .get('values')\n      .filter(function getInstanceOfType(e) {\n        return e.$instanceOf(type);\n      })[0];\n  };\n\n  const getValue = () => {\n    const scriptObj = getScriptObject();\n    if (scriptObj) {\n      return scriptObj.script;\n    }\n    return '';\n  };\n\n  const setValue = (value) => {\n    const { businessObject } = element;\n    let scriptObj = getScriptObject();\n    // Create the script object if needed.\n    if (!scriptObj) {\n      scriptObj = moddle.create(type);\n      if (type !== SCRIPT_TYPE.bpmn) {\n        if (!businessObject.extensionElements) {\n          businessObject.extensionElements = moddle.create(\n            'bpmn:ExtensionElements'\n          );\n        }\n        businessObject.extensionElements.get('values').push(scriptObj);\n      }\n    }\n    scriptObj.script = value;\n  };\n\n  return (\n    <TextAreaEntry\n      id={id}\n      element={element}\n      description={translate(description)}\n      label={translate(label)}\n      getValue={getValue}\n      setValue={setValue}\n      debounce={debounce}\n    />\n  );\n}\n\nfunction LaunchEditorButton(props) {\n  const { element, type } = props;\n  const eventBus = useService('eventBus');\n  // fixme: add a call up date as a property\n  return (\n    <HeaderButton\n      className=\"spiffworkflow-properties-panel-button\"\n      onClick={() => {\n        eventBus.fire('launch.script.editor', { element, type });\n      }}\n    >\n      Launch Editor\n    </HeaderButton>\n  );\n}\n\n/**\n * Generates a python script.\n * @param element The elemment that should get the script task.\n * @param scriptType The type of script -- can be a preScript, postScript or a BPMN:Script for script tags\n * @param moddle For updating the underlying xml document when needed.\n * @returns {[{component: (function(*)), isEdited: *, id: string, element},{component: (function(*)), isEdited: *, id: string, element}]}\n */\nexport default function getEntries(\n  element,\n  moddle,\n  scriptType,\n  label,\n  description\n) {\n  return [\n    {\n      id: `pythonScript_${scriptType}`,\n      element,\n      type: scriptType,\n      component: PythonScript,\n      isEdited: isTextFieldEntryEdited,\n      moddle,\n      label,\n      description,\n    },\n    {\n      id: `launchEditorButton${scriptType}`,\n      type: scriptType,\n      element,\n      component: LaunchEditorButton,\n      isEdited: isTextFieldEntryEdited,\n      moddle,\n    },\n  ];\n}\n","// https://stackoverflow.com/a/5767357/6090676\nexport function removeFirstInstanceOfItemFromArrayInPlace(arr, value) {\n  const index = arr.indexOf(value);\n  if (index > -1) {\n    arr.splice(index, 1);\n  }\n  return arr;\n}\n","import RulesModule from 'diagram-js/lib/features/rules';\nimport IoPalette from './InputOutput/IoPalette';\nimport IoRules from './InputOutput/IoRules';\nimport IoInterceptor from './InputOutput/IoInterceptor';\nimport DataObjectInterceptor from './DataObject/DataObjectInterceptor';\nimport DataObjectRules from './DataObject/DataObjectRules';\nimport DataObjectRenderer from './DataObject/DataObjectRenderer';\nimport DataObjectPropertiesProvider from './DataObject/propertiesPanel/DataObjectPropertiesProvider';\nimport ConditionsPropertiesProvider from './conditions/propertiesPanel/ConditionsPropertiesProvider';\nimport ExtensionsPropertiesProvider from './extensions/propertiesPanel/ExtensionsPropertiesProvider';\nimport MessagesPropertiesProvider from './messages/propertiesPanel/MessagesPropertiesProvider';\nimport CallActivityPropertiesProvider from './callActivity/propertiesPanel/CallActivityPropertiesProvider';\n\nconst SpiffWorkflowModdle = require('./moddle/spiffworkflow.json');\n\nconst SpiffWorkflowModule = {\n  __depends__: [RulesModule],\n  __init__: [\n    'dataObjectInterceptor',\n    'dataObjectRules',\n    'dataObjectPropertiesProvider',\n    'conditionsPropertiesProvider',\n    'extensionsPropertiesProvider',\n    'messagesPropertiesProvider',\n    'callActivityPropertiesProvider',\n    'ioPalette',\n    'ioRules',\n    'ioInterceptor',\n    'dataObjectRenderer',\n  ],\n  dataObjectInterceptor: ['type', DataObjectInterceptor],\n  dataObjectRules: ['type', DataObjectRules],\n  dataObjectRenderer: ['type', DataObjectRenderer],\n  dataObjectPropertiesProvider: ['type', DataObjectPropertiesProvider],\n  conditionsPropertiesProvider: ['type', ConditionsPropertiesProvider],\n  extensionsPropertiesProvider: ['type', ExtensionsPropertiesProvider],\n  messagesPropertiesProvider: ['type', MessagesPropertiesProvider],\n  callActivityPropertiesProvider: ['type', CallActivityPropertiesProvider],\n  ioPalette: ['type', IoPalette],\n  ioRules: ['type', IoRules],\n  ioInterceptor: ['type', IoInterceptor],\n};\n\nmodule.exports = { SpiffWorkflowModdle, SpiffWorkflowModule };\n","import { is } from 'bpmn-js/lib/util/ModelUtil';\n\n/**\n * loops up until it can find the root.\n * @param element\n */\nexport function getRoot(businessObject, moddle) {\n  // HACK: get the root element. need a more formal way to do this\n  if (moddle) {\n    for (const elementId in moddle.ids._seed.hats) {\n      if (elementId.startsWith('Definitions_')) {\n        return moddle.ids._seed.hats[elementId];\n      }\n    }\n  } else {\n    // todo: Do we want businessObject to be a shape or moddle object?\n    if (businessObject.$type === 'bpmn:Definitions') {\n      return businessObject;\n    }\n    if (typeof businessObject.$parent !== 'undefined') {\n      return getRoot(businessObject.$parent);\n    }\n  }\n  return businessObject;\n}\n\nexport function isMessageElement(shapeElement) {\n  return (\n    is(shapeElement, 'bpmn:SendTask') ||\n    is(shapeElement, 'bpmn:ReceiveTask') ||\n    isMessageEvent(shapeElement)\n  );\n}\n\nexport function isMessageEvent(shapeElement) {\n  const { eventDefinitions } = shapeElement.businessObject;\n  if (eventDefinitions && eventDefinitions[0]) {\n    return eventDefinitions[0].$type === 'bpmn:MessageEventDefinition';\n  }\n  return false;\n}\n\nexport function canReceiveMessage(shapeElement) {\n  if (is(shapeElement, 'bpmn:ReceiveTask')) {\n    return true;\n  }\n  if (isMessageEvent(shapeElement)) {\n    return (\n      is(shapeElement, 'bpmn:StartEvent') || is(shapeElement, 'bpmn:CatchEvent')\n    );\n  }\n  return false;\n}\n\nexport function getMessageRefElement(shapeElement) {\n  if (isMessageEvent(shapeElement)) {\n    const messageEventDefinition =\n      shapeElement.businessObject.eventDefinitions[0];\n    if (messageEventDefinition && messageEventDefinition.messageRef) {\n      return messageEventDefinition.messageRef;\n    }\n  } else if (\n    isMessageElement(shapeElement) &&\n    shapeElement.businessObject.messageRef\n  ) {\n    return shapeElement.businessObject.messageRef;\n  }\n  return null;\n}\n\nexport function findCorrelationKeyForCorrelationProperty(shapeElement, moddle) {\n  const correlationKeyElements = findCorrelationKeys(shapeElement, moddle);\n  for (const cke of correlationKeyElements) {\n    if (cke.correlationPropertyRef) {\n      for (const correlationPropertyRef of cke.correlationPropertyRef) {\n        if (correlationPropertyRef.id === shapeElement.id) {\n          return cke;\n        }\n      }\n    }\n  }\n  return null;\n}\n\nexport function findCorrelationPropertiesAndRetrievalExpressionsForMessage(\n  shapeElement\n) {\n  const formalExpressions = [];\n  const messageRefElement = getMessageRefElement(shapeElement);\n  if (messageRefElement) {\n    const root = getRoot(shapeElement.businessObject);\n    if (root.$type === 'bpmn:Definitions') {\n      for (const childElement of root.rootElements) {\n        if (childElement.$type === 'bpmn:CorrelationProperty') {\n          const retrievalExpression =\n            getRetrievalExpressionFromCorrelationProperty(\n              childElement,\n              messageRefElement\n            );\n          if (retrievalExpression) {\n            const formalExpression = {\n              correlationPropertyModdleElement: childElement,\n              correlationPropertyRetrievalExpressionModdleElement:\n                retrievalExpression,\n            };\n            formalExpressions.push(formalExpression);\n          }\n        }\n      }\n    }\n  }\n  return formalExpressions;\n}\n\nexport function getMessageElementForShapeElement(shapeElement) {\n  const { businessObject } = shapeElement;\n  const taskMessage = getMessageRefElement(shapeElement);\n  const messages = findMessageModdleElements(businessObject);\n  if (taskMessage) {\n    for (const message of messages) {\n      if (message.id === taskMessage.id) {\n        return message;\n      }\n    }\n  }\n  return null;\n}\n\nfunction getRetrievalExpressionFromCorrelationProperty(\n  correlationProperty,\n  message\n) {\n  if (correlationProperty.correlationPropertyRetrievalExpression) {\n    for (const retrievalExpression of correlationProperty.correlationPropertyRetrievalExpression) {\n      if (\n        retrievalExpression.$type ===\n          'bpmn:CorrelationPropertyRetrievalExpression' &&\n        retrievalExpression.messageRef &&\n        retrievalExpression.messageRef.id === message.id\n      ) {\n        return retrievalExpression;\n      }\n    }\n  }\n  return null;\n}\n\nexport function findCorrelationProperties(businessObject, moddle) {\n  const root = getRoot(businessObject, moddle);\n  const correlationProperties = [];\n  for (const rootElement of root.rootElements) {\n    if (rootElement.$type === 'bpmn:CorrelationProperty') {\n      correlationProperties.push(rootElement);\n    }\n  }\n  return correlationProperties;\n}\n\nexport function findCorrelationKeys(businessObject, moddle) {\n  const root = getRoot(businessObject, moddle);\n  const correlationKeys = [];\n  if (root.rootElements) {\n    for (const rootElement of root.rootElements) {\n      if (rootElement.$type === 'bpmn:Collaboration') {\n        const currentKeys = rootElement.correlationKeys;\n        for (const correlationKey in currentKeys) {\n          const currentCorrelation = rootElement.correlationKeys[correlationKey];\n          correlationKeys.push(currentCorrelation);\n        }\n      }\n    }\n  }\n  return correlationKeys;\n}\n\nexport function findMessageModdleElements(businessObject) {\n  const messages = [];\n  const root = getRoot(businessObject);\n  if (root.rootElements) {\n    for (const rootElement of root.rootElements) {\n      if (rootElement.$type === 'bpmn:Message') {\n        messages.push(rootElement);\n      }\n    }\n  }\n  return messages;\n}\n","import { useService } from 'bpmn-js-properties-panel';\nimport { SimpleEntry, TextFieldEntry } from '@bpmn-io/properties-panel';\nimport { findCorrelationKeys, getRoot } from '../MessageHelpers';\nimport { removeFirstInstanceOfItemFromArrayInPlace } from '../../helpers';\n\n/**\n * Provides a list of data objects, and allows you to add / remove data objects, and change their ids.\n * @param props\n * @constructor\n */\nexport function CorrelationKeysArray(props) {\n  const { element, moddle, commandStack } = props;\n\n  const correlationKeyElements = findCorrelationKeys(element.businessObject);\n  const items = correlationKeyElements.map((correlationKeyElement, index) => {\n    const id = `correlationGroup-${index}`;\n    return {\n      id,\n      label: correlationKeyElement.name,\n      entries: correlationGroup({\n        idPrefix: id,\n        element,\n        correlationKeyElement,\n        commandStack,\n      }),\n      remove: removeFactory({\n        element,\n        correlationKeyElement,\n        commandStack,\n        moddle,\n      }),\n      autoFocusEntry: id,\n    };\n  });\n\n  function add(event) {\n    event.stopPropagation();\n    if (element.type === 'bpmn:Collaboration') {\n      const newCorrelationKeyElement = moddle.create('bpmn:CorrelationKey');\n      newCorrelationKeyElement.name =\n        moddle.ids.nextPrefixed('CorrelationKey_');\n      const currentCorrelationKeyElements =\n        element.businessObject.get('correlationKeys');\n      currentCorrelationKeyElements.push(newCorrelationKeyElement);\n      commandStack.execute('element.updateProperties', {\n        element,\n        properties: {}\n      });\n    }\n  }\n\n  return { items, add };\n}\n\nfunction removeFactory(props) {\n  const { element, correlationKeyElement, moddle, commandStack } = props;\n\n  return function (event) {\n    event.stopPropagation();\n    const currentCorrelationKeyElements =\n      element.businessObject.get('correlationKeys');\n    removeFirstInstanceOfItemFromArrayInPlace(\n      currentCorrelationKeyElements,\n      correlationKeyElement\n    );\n    commandStack.execute('element.updateProperties', {\n      element,\n      properties: {},\n    });\n  };\n}\n\n// <bpmn:correlationKey name=\"lover\"> <--- The correlationGroup\n//   <bpmn:correlationPropertyRef>lover_name</bpmn:correlationPropertyRef>\n//   <bpmn:correlationPropertyRef>lover_instrument</bpmn:correlationPropertyRef>\n// </bpmn:correlationKey>\n// <bpmn:correlationKey name=\"singer\" />\nfunction correlationGroup(props) {\n  const { idPrefix, correlationKeyElement, commandStack } = props;\n  const entries = [\n    {\n      id: `${idPrefix}-key`,\n      component: CorrelationKeyTextField,\n      correlationKeyElement,\n      commandStack,\n    },\n  ];\n  (correlationKeyElement.correlationPropertyRef || []).forEach(\n    (correlationProperty, index) => {\n      entries.push({\n        id: `${idPrefix}-${index}-text`,\n        component: CorrelationPropertyText,\n        correlationProperty,\n      });\n    }\n  );\n  return entries;\n}\n\nfunction CorrelationKeyTextField(props) {\n  const { id, element, correlationKeyElement, commandStack } = props;\n\n  const debounce = useService('debounceInput');\n  const setValue = (value) => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: correlationKeyElement,\n      properties: {\n        name: value,\n      },\n    });\n  };\n\n  const getValue = () => {\n    return correlationKeyElement.name;\n  };\n\n  return TextFieldEntry({\n    element,\n    id: `${id}-textField`,\n    getValue,\n    setValue,\n    debounce,\n  });\n}\n\nfunction CorrelationPropertyText(props) {\n  const { id, parameter, correlationProperty } = props;\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return correlationProperty.id;\n  };\n\n  return SimpleEntry({\n    element: parameter,\n    id: `${id}-textField`,\n    label: correlationProperty.id,\n    getValue,\n    disabled: true,\n    debounce,\n  });\n}\n","import { useService } from 'bpmn-js-properties-panel';\nimport {\n  SelectEntry,\n  isTextFieldEntryEdited,\n  TextFieldEntry,\n} from '@bpmn-io/properties-panel';\nimport {\n  getRoot,\n  findCorrelationKeys,\n  findCorrelationProperties,\n  findCorrelationKeyForCorrelationProperty,\n} from '../MessageHelpers';\nimport { removeFirstInstanceOfItemFromArrayInPlace } from '../../helpers';\n\n/**\n * Allows the creation, or editing of messageCorrelations at the bpmn:sendTask level of a BPMN document.\n */\nexport function CorrelationPropertiesArray(props) {\n  const { moddle } = props;\n  const { element } = props;\n  const { commandStack } = props;\n  const { translate } = props;\n\n  const correlationPropertyArray = findCorrelationProperties(\n    element.businessObject\n  );\n  const items = correlationPropertyArray.map(\n    (correlationPropertyModdleElement, index) => {\n      const id = `correlation-${index}`;\n      const entries = MessageCorrelationPropertyGroup({\n        idPrefix: id,\n        correlationPropertyModdleElement,\n        translate,\n        element,\n        commandStack,\n        moddle,\n      });\n      return {\n        id,\n        label: correlationPropertyModdleElement.id,\n        entries,\n        autoFocusEntry: id,\n        remove: removeFactory({\n          element,\n          correlationPropertyModdleElement,\n          commandStack,\n          moddle,\n        }),\n      };\n    }\n  );\n\n  function add(event) {\n    event.stopPropagation();\n    const newCorrelationPropertyElement = moddle.create(\n      'bpmn:CorrelationProperty'\n    );\n    const correlationPropertyId = moddle.ids.nextPrefixed(\n      'CorrelationProperty_'\n    );\n    newCorrelationPropertyElement.id = correlationPropertyId;\n    newCorrelationPropertyElement.name = correlationPropertyId;\n    const rootElement = getRoot(element.businessObject);\n    const { rootElements } = rootElement;\n    rootElements.push(newCorrelationPropertyElement);\n\n    const correlationKeyElements = findCorrelationKeys(\n      newCorrelationPropertyElement,\n      moddle\n    );\n    const correlationKeyElement = correlationKeyElements[0];\n    if (correlationKeyElement.correlationPropertyRef) {\n      correlationKeyElement.correlationPropertyRef.push(\n        newCorrelationPropertyElement\n      );\n    } else {\n      correlationKeyElement.correlationPropertyRef = [\n        newCorrelationPropertyElement,\n      ];\n    }\n\n    commandStack.execute('element.updateProperties', {\n      element,\n      properties: {},\n    });\n  }\n\n  return { items, add };\n}\n\nfunction removeFactory(props) {\n  const { element, correlationPropertyModdleElement, moddle, commandStack } =\n    props;\n\n  return function (event) {\n    event.stopPropagation();\n    const rootElement = getRoot(element.businessObject);\n    const { rootElements } = rootElement;\n\n    const oldCorrelationKeyElement = findCorrelationKeyForCorrelationProperty(\n      correlationPropertyModdleElement,\n      moddle\n    );\n    if (oldCorrelationKeyElement) {\n      removeFirstInstanceOfItemFromArrayInPlace(\n        oldCorrelationKeyElement.correlationPropertyRef,\n        correlationPropertyModdleElement\n      );\n    }\n\n    removeFirstInstanceOfItemFromArrayInPlace(\n      rootElements,\n      correlationPropertyModdleElement\n    );\n    commandStack.execute('element.updateProperties', {\n      element,\n      properties: {\n        messages: rootElements,\n      },\n    });\n  };\n}\n\nfunction MessageCorrelationPropertyGroup(props) {\n  const {\n    idPrefix,\n    correlationPropertyModdleElement,\n    translate,\n    element,\n    commandStack,\n    moddle,\n  } = props;\n  return [\n    {\n      id: `${idPrefix}-correlation-key`,\n      component: MessageCorrelationKeySelect,\n      isEdited: isTextFieldEntryEdited,\n      idPrefix,\n      element,\n      correlationPropertyModdleElement,\n      translate,\n      moddle,\n      commandStack,\n    },\n    {\n      id: `${idPrefix}-correlation-property-id`,\n      component: CorrelationPropertyIdTextField,\n      isEdited: isTextFieldEntryEdited,\n      idPrefix,\n      element,\n      correlationPropertyModdleElement,\n      translate,\n      commandStack,\n    },\n    {\n      id: `${idPrefix}-correlation-property-name`,\n      component: CorrelationPropertyNameTextField,\n      isEdited: isTextFieldEntryEdited,\n      idPrefix,\n      element,\n      correlationPropertyModdleElement,\n      translate,\n      commandStack,\n    },\n  ];\n}\n\nfunction MessageCorrelationKeySelect(props) {\n  const {\n    idPrefix,\n    correlationPropertyModdleElement,\n    translate,\n    element,\n    moddle,\n    commandStack,\n  } = props;\n  const debounce = useService('debounceInput');\n\n  const setValue = (value) => {\n    if (\n      value === 'placeholder-never-should-be-used-as-an-actual-correlation-key'\n    ) {\n      return;\n    }\n    const correlationKeyElements = findCorrelationKeys(\n      correlationPropertyModdleElement,\n      moddle\n    );\n    let newCorrelationKeyElement;\n    for (const cke of correlationKeyElements) {\n      if (cke.name === value) {\n        newCorrelationKeyElement = cke;\n      }\n    }\n    const oldCorrelationKeyElement = findCorrelationKeyForCorrelationProperty(\n      correlationPropertyModdleElement,\n      moddle\n    );\n\n    if (newCorrelationKeyElement.correlationPropertyRef) {\n      newCorrelationKeyElement.correlationPropertyRef.push(\n        correlationPropertyModdleElement\n      );\n    } else {\n      newCorrelationKeyElement.correlationPropertyRef = [\n        correlationPropertyModdleElement,\n      ];\n    }\n\n    if (oldCorrelationKeyElement) {\n      removeFirstInstanceOfItemFromArrayInPlace(\n        oldCorrelationKeyElement.correlationPropertyRef,\n        correlationPropertyModdleElement\n      );\n    }\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: correlationPropertyModdleElement,\n      properties: {},\n    });\n  };\n\n  const getValue = () => {\n    const correlationKeyElement = findCorrelationKeyForCorrelationProperty(\n      correlationPropertyModdleElement,\n      moddle\n    );\n    if (correlationKeyElement) {\n      return correlationKeyElement.name;\n    }\n    return null;\n  };\n\n  const getOptions = () => {\n    const correlationKeyElements = findCorrelationKeys(\n      correlationPropertyModdleElement,\n      moddle\n    );\n    const options = [];\n    if (correlationKeyElements.length === 0) {\n      options.push({\n        label: 'Please Create a Correlation Key',\n        value: 'placeholder-never-should-be-used-as-an-actual-correlation-key',\n        disabled: true,\n      });\n    }\n    for (const correlationKeyElement of correlationKeyElements) {\n      options.push({\n        label: correlationKeyElement.name,\n        value: correlationKeyElement.name,\n      });\n    }\n    return options;\n  };\n\n  return SelectEntry({\n    id: `${idPrefix}-select`,\n    element,\n    label: translate('Correlation Key'),\n    getValue,\n    setValue,\n    getOptions,\n    debounce,\n  });\n}\n\nfunction CorrelationPropertyIdTextField(props) {\n  const {\n    id,\n    element,\n    correlationPropertyModdleElement,\n    commandStack,\n    translate,\n  } = props;\n\n  const debounce = useService('debounceInput');\n  const setValue = (value) => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: correlationPropertyModdleElement,\n      properties: {\n        id: value,\n      },\n    });\n  };\n\n  const getValue = () => {\n    return correlationPropertyModdleElement.id;\n  };\n\n  return TextFieldEntry({\n    element,\n    id: `${id}-id-textField`,\n    label: translate('ID'),\n    getValue,\n    setValue,\n    debounce,\n  });\n}\n\nfunction CorrelationPropertyNameTextField(props) {\n  const {\n    id,\n    element,\n    correlationPropertyModdleElement,\n    commandStack,\n    translate,\n  } = props;\n\n  const debounce = useService('debounceInput');\n  const setValue = (value) => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: correlationPropertyModdleElement,\n      properties: {\n        name: value,\n      },\n    });\n  };\n\n  const getValue = () => {\n    return correlationPropertyModdleElement.name;\n  };\n\n  return TextFieldEntry({\n    element,\n    id: `${id}-name-textField`,\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce,\n  });\n}\n","import { useService } from 'bpmn-js-properties-panel';\nimport { TextFieldEntry } from '@bpmn-io/properties-panel';\nimport { getRoot, findMessageModdleElements } from '../MessageHelpers';\nimport { removeFirstInstanceOfItemFromArrayInPlace } from '../../helpers';\n\n/**\n * Provides a list of data objects, and allows you to add / remove data objects, and change their ids.\n * @param props\n * @constructor\n */\nexport function MessageArray(props) {\n  const { element, moddle, commandStack, translate } = props;\n\n  const messageElements = findMessageModdleElements(element.businessObject);\n  const items = messageElements.map((messageElement, index) => {\n    const id = `messageElement-${index}`;\n    return {\n      id,\n      label: messageElement.name,\n      entries: messageGroup({\n        idPrefix: id,\n        element,\n        messageElement,\n        commandStack,\n        translate,\n      }),\n      autoFocusEntry: id,\n      remove: removeFactory({\n        element,\n        messageElement,\n        commandStack,\n        moddle,\n      }),\n    };\n  });\n\n  function add(event) {\n    event.stopPropagation();\n    if (element.type === 'bpmn:Collaboration') {\n      const newMessageElement = moddle.create('bpmn:Message');\n      const messageId = moddle.ids.nextPrefixed('Message_');\n      newMessageElement.id = messageId;\n      newMessageElement.name = messageId;\n      const rootElement = getRoot(element.businessObject);\n      const { rootElements } = rootElement;\n      rootElements.push(newMessageElement);\n      commandStack.execute('element.updateProperties', {\n        element,\n        properties: {},\n      });\n    }\n  }\n\n  return { items, add };\n}\n\nfunction removeMessageRefs(messageElement, moddleElement) {\n  if (\n    moddleElement.messageRef &&\n    moddleElement.messageRef.id === messageElement.id\n  ) {\n    moddleElement.messageRef = null;\n  } else if (moddleElement.correlationPropertyRetrievalExpression) {\n    moddleElement.correlationPropertyRetrievalExpression.forEach((cpre) => {\n      removeMessageRefs(messageElement, cpre);\n    });\n  } else if (moddleElement.flowElements) {\n    moddleElement.flowElements.forEach((fe) => {\n      removeMessageRefs(messageElement, fe);\n    });\n  } else if (moddleElement.eventDefinitions) {\n    moddleElement.eventDefinitions.forEach((ed) => {\n      removeMessageRefs(messageElement, ed);\n    });\n  }\n}\n\nfunction removeFactory(props) {\n  const { element, messageElement, commandStack } = props;\n\n  return function (event) {\n    event.stopPropagation();\n    const rootElement = getRoot(element.businessObject);\n    const { rootElements } = rootElement;\n    removeFirstInstanceOfItemFromArrayInPlace(rootElements, messageElement);\n    rootElements.forEach((moddleElement) => {\n      removeMessageRefs(messageElement, moddleElement);\n    });\n    commandStack.execute('element.updateProperties', {\n      element,\n      properties: {},\n    });\n  };\n}\n\nfunction messageGroup(props) {\n  const { messageElement, commandStack, translate, idPrefix } = props;\n  return [\n    {\n      id: `${idPrefix}-id`,\n      component: MessageIdTextField,\n      messageElement,\n      commandStack,\n      translate,\n    },\n    {\n      id: `${idPrefix}-name`,\n      component: MessageNameTextField,\n      messageElement,\n      commandStack,\n      translate,\n    },\n  ];\n}\n\nfunction MessageIdTextField(props) {\n  const { id, element, messageElement, commandStack, translate } = props;\n\n  const debounce = useService('debounceInput');\n  const setValue = (value) => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: messageElement,\n      properties: {\n        id: value,\n      },\n    });\n  };\n\n  const getValue = () => {\n    return messageElement.id;\n  };\n\n  return TextFieldEntry({\n    element,\n    id: `${id}-id-textField`,\n    label: translate('ID'),\n    getValue,\n    setValue,\n    debounce,\n  });\n}\n\nfunction MessageNameTextField(props) {\n  const { id, element, messageElement, commandStack, translate } = props;\n\n  const debounce = useService('debounceInput');\n  const setValue = (value) => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: messageElement,\n      properties: {\n        name: value,\n      },\n    });\n  };\n\n  const getValue = () => {\n    return messageElement.name;\n  };\n\n  return TextFieldEntry({\n    element,\n    id: `${id}-name-textField`,\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce,\n  });\n}\n","import { useService } from 'bpmn-js-properties-panel';\nimport {\n  SelectEntry,\n  isTextFieldEntryEdited,\n  TextFieldEntry,\n} from '@bpmn-io/properties-panel';\nimport {\n  findCorrelationPropertiesAndRetrievalExpressionsForMessage,\n  findCorrelationProperties,\n  getMessageRefElement,\n} from '../MessageHelpers';\nimport { removeFirstInstanceOfItemFromArrayInPlace } from '../../helpers';\n\n/**\n * Allows the creation, or editing of messageCorrelations at the bpmn:sendTask level of a BPMN document.\n */\nexport function MessageCorrelationPropertiesArray(props) {\n  const { moddle } = props;\n  const { element } = props;\n  const { commandStack } = props;\n  const { translate } = props;\n\n  const correlationPropertyObjectsForCurrentMessage =\n    findCorrelationPropertiesAndRetrievalExpressionsForMessage(element);\n  const allCorrelationPropertyModdleElements = findCorrelationProperties(\n    element,\n    moddle\n  );\n  const items = correlationPropertyObjectsForCurrentMessage.map(\n    (correlationPropertyObject, index) => {\n      const {\n        correlationPropertyModdleElement,\n        correlationPropertyRetrievalExpressionModdleElement,\n      } = correlationPropertyObject;\n      const id = `correlation-${index}`;\n      const entries = MessageCorrelationPropertyGroup({\n        idPrefix: id,\n        correlationPropertyModdleElement,\n        correlationPropertyRetrievalExpressionModdleElement,\n        translate,\n        moddle,\n        element,\n        commandStack,\n      });\n      return {\n        id,\n        label: correlationPropertyModdleElement.id,\n        entries,\n        autoFocusEntry: id,\n        remove: removeFactory({\n          element,\n          correlationPropertyModdleElement,\n          correlationPropertyRetrievalExpressionModdleElement,\n          commandStack,\n        }),\n      };\n    }\n  );\n\n  function add(event) {\n    event.stopPropagation();\n\n    let correlationPropertyElement;\n    allCorrelationPropertyModdleElements.forEach((cpe) => {\n      let foundElement = false;\n      correlationPropertyObjectsForCurrentMessage.forEach((cpo) => {\n        const cpme = cpo.correlationPropertyModdleElement;\n        if (cpme.id === cpe.id) {\n          foundElement = true;\n        }\n      });\n      if (!foundElement) {\n        correlationPropertyElement = cpe;\n      }\n    });\n\n    // TODO: we should have some way to show an error if element is not found instead\n    // we need to check this since the code assumes each message only has one ref\n    // and will not display all properties if there are multiple\n    if (correlationPropertyElement) {\n      const newRetrievalExpressionElement = moddle.create(\n        'bpmn:CorrelationPropertyRetrievalExpression'\n      );\n      const messageRefElement = getMessageRefElement(element);\n      const newFormalExpression = moddle.create('bpmn:FormalExpression');\n      newFormalExpression.body = '';\n\n      newRetrievalExpressionElement.messageRef = messageRefElement;\n      newRetrievalExpressionElement.messagePath = newFormalExpression;\n\n      if (!correlationPropertyElement.correlationPropertyRetrievalExpression) {\n        correlationPropertyElement.correlationPropertyRetrievalExpression = [];\n      }\n      correlationPropertyElement.correlationPropertyRetrievalExpression.push(\n        newRetrievalExpressionElement\n      );\n      commandStack.execute('element.updateProperties', {\n        element,\n        properties: {},\n      });\n    } else {\n      console.error(\n        'ERROR: There are not any more correlation properties this message can be added to'\n      );\n    }\n  }\n\n  const returnObject = { items };\n  if (allCorrelationPropertyModdleElements.length !== 0) {\n    returnObject.add = add;\n  }\n  return returnObject;\n}\n\nfunction removeFactory(props) {\n  const {\n    element,\n    correlationPropertyModdleElement,\n    correlationPropertyRetrievalExpressionModdleElement,\n    commandStack,\n  } = props;\n\n  return function (event) {\n    event.stopPropagation();\n    removeFirstInstanceOfItemFromArrayInPlace(\n      correlationPropertyModdleElement.correlationPropertyRetrievalExpression,\n      correlationPropertyRetrievalExpressionModdleElement\n    );\n    commandStack.execute('element.updateProperties', {\n      element,\n      properties: {},\n    });\n  };\n}\n\nfunction MessageCorrelationPropertyGroup(props) {\n  const {\n    idPrefix,\n    correlationPropertyModdleElement,\n    correlationPropertyRetrievalExpressionModdleElement,\n    translate,\n    moddle,\n    element,\n    commandStack,\n  } = props;\n  return [\n    {\n      id: `${idPrefix}-correlation-key`,\n      component: MessageCorrelationPropertySelect,\n      isEdited: isTextFieldEntryEdited,\n      idPrefix,\n      correlationPropertyModdleElement,\n      correlationPropertyRetrievalExpressionModdleElement,\n      translate,\n      moddle,\n      element,\n      commandStack,\n    },\n    {\n      id: `${idPrefix}-expression`,\n      component: MessageCorrelationExpressionTextField,\n      isEdited: isTextFieldEntryEdited,\n      idPrefix,\n      correlationPropertyRetrievalExpressionModdleElement,\n      translate,\n    },\n  ];\n}\n\nfunction MessageCorrelationPropertySelect(props) {\n  const {\n    idPrefix,\n    correlationPropertyModdleElement,\n    correlationPropertyRetrievalExpressionModdleElement,\n    translate,\n    parameter,\n    moddle,\n    element,\n    commandStack,\n  } = props;\n  const debounce = useService('debounceInput');\n\n  const setValue = (value) => {\n    const allCorrelationPropertyModdleElements = findCorrelationProperties(\n      correlationPropertyModdleElement,\n      moddle\n    );\n    const newCorrelationPropertyElement =\n      allCorrelationPropertyModdleElements.find((cpe) => cpe.id === value);\n\n    if (!newCorrelationPropertyElement.correlationPropertyRetrievalExpression) {\n      newCorrelationPropertyElement.correlationPropertyRetrievalExpression = [];\n    }\n    newCorrelationPropertyElement.correlationPropertyRetrievalExpression.push(\n      correlationPropertyRetrievalExpressionModdleElement\n    );\n    removeFirstInstanceOfItemFromArrayInPlace(\n      correlationPropertyModdleElement.correlationPropertyRetrievalExpression,\n      correlationPropertyRetrievalExpressionModdleElement\n    );\n    commandStack.execute('element.updateProperties', {\n      element,\n      properties: {},\n    });\n  };\n\n  const getValue = () => {\n    return correlationPropertyModdleElement.id;\n  };\n\n  const getOptions = () => {\n    const allCorrelationPropertyModdleElements = findCorrelationProperties(\n      correlationPropertyModdleElement,\n      moddle\n    );\n    const correlationPropertyObjectsForCurrentMessage =\n      findCorrelationPropertiesAndRetrievalExpressionsForMessage(element);\n    const options = [];\n    for (const cpe of allCorrelationPropertyModdleElements) {\n      const foundElement = correlationPropertyObjectsForCurrentMessage.find(\n        (cpo) => {\n          const cpme = cpo.correlationPropertyModdleElement;\n          return cpme.id === cpe.id;\n        }\n      );\n      if (\n        !foundElement ||\n        foundElement.correlationPropertyModdleElement ===\n          correlationPropertyModdleElement\n      ) {\n        options.push({\n          label: cpe.name,\n          value: cpe.id,\n        });\n      }\n    }\n    return options;\n  };\n\n  return SelectEntry({\n    id: `${idPrefix}-select`,\n    element: parameter,\n    label: translate('Correlation Property'),\n    getValue,\n    setValue,\n    getOptions,\n    debounce,\n  });\n}\n\nfunction MessageCorrelationExpressionTextField(props) {\n  const {\n    idPrefix,\n    parameter,\n    correlationPropertyRetrievalExpressionModdleElement,\n    translate,\n  } = props;\n\n  const debounce = useService('debounceInput');\n\n  const setValue = (value) => {\n    correlationPropertyRetrievalExpressionModdleElement.messagePath.body =\n      value;\n  };\n\n  const getValue = (_parameter) => {\n    return correlationPropertyRetrievalExpressionModdleElement.messagePath.body;\n  };\n\n  return TextFieldEntry({\n    element: parameter,\n    id: `${idPrefix}-textField`,\n    label: translate('Expression'),\n    getValue,\n    setValue,\n    debounce,\n  });\n}\n","import { useService } from 'bpmn-js-properties-panel';\nimport { TextAreaEntry } from '@bpmn-io/properties-panel';\nimport { getMessageElementForShapeElement } from '../MessageHelpers';\n\n/**\n * Allows the creation, or editing of messagePayload at the bpmn:sendTask level of a BPMN document.\n */\nexport function MessagePayload(props) {\n  const shapeElement = props.element;\n  const debounce = useService('debounceInput');\n  const messageElement = getMessageElementForShapeElement(shapeElement);\n  const disabled = !messageElement;\n\n  const getMessagePayloadObject = () => {\n    if (messageElement) {\n      const { extensionElements } = messageElement;\n      if (extensionElements) {\n        return messageElement.extensionElements\n          .get('values')\n          .filter(function getInstanceOfType(e) {\n            return e.$instanceOf('spiffworkflow:messagePayload');\n          })[0];\n      }\n    }\n    return null;\n  };\n\n  const getValue = () => {\n    const messagePayloadObject = getMessagePayloadObject();\n    if (messagePayloadObject) {\n      return messagePayloadObject.messagePayload;\n    }\n    return '';\n  };\n\n  const setValue = (value) => {\n    let messagePayloadObject = getMessagePayloadObject();\n    if (!messagePayloadObject) {\n      messagePayloadObject = messageElement.$model.create(\n        'spiffworkflow:messagePayload'\n      );\n      if (!messageElement.extensionElements) {\n        messageElement.extensionElements = messageElement.$model.create(\n          'bpmn:ExtensionElements'\n        );\n      }\n      messageElement.extensionElements.get('values').push(messagePayloadObject);\n    }\n    messagePayloadObject.messagePayload = value;\n  };\n\n  return (\n    <TextAreaEntry\n      id=\"messagePayload\"\n      element={shapeElement}\n      description=\"The payload of the message.\"\n      label=\"Payload\"\n      disabled={disabled}\n      getValue={getValue}\n      setValue={setValue}\n      debounce={debounce}\n    />\n  );\n}\n","import { useService } from 'bpmn-js-properties-panel';\nimport { SelectEntry } from '@bpmn-io/properties-panel';\nimport {\n  findMessageModdleElements,\n  getMessageRefElement,\n  isMessageEvent,\n} from '../MessageHelpers';\n\n/**\n * Allows the selection, or creation, of Message at the Definitions level of a BPMN document.\n */\nexport function MessageSelect(props) {\n  const shapeElement = props.element;\n  const { commandStack } = props;\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    const messageRefElement = getMessageRefElement(shapeElement);\n    if (messageRefElement) {\n      return messageRefElement.id;\n    }\n    return '';\n  };\n\n  const setValue = (value) => {\n    /* Need to add the selected message as the messageRef on the current message task */\n    const { businessObject } = shapeElement;\n    const messages = findMessageModdleElements(shapeElement.businessObject);\n    for (const message of messages) {\n      if (message.id === value) {\n        if (isMessageEvent(shapeElement)) {\n          const messageEventDefinition = businessObject.eventDefinitions[0];\n          messageEventDefinition.messageRef = message;\n          // call this to update the other elements in the props panel like payload\n          commandStack.execute('element.updateModdleProperties', {\n            element: shapeElement,\n            moddleElement: businessObject,\n          });\n        } else if (\n          businessObject.$type === 'bpmn:ReceiveTask' ||\n          businessObject.$type === 'bpmn:SendTask'\n        ) {\n          commandStack.execute('element.updateModdleProperties', {\n            element: shapeElement,\n            moddleElement: businessObject,\n            properties: {\n              messageRef: message,\n            },\n          });\n          commandStack.execute('element.updateProperties', {\n            element: shapeElement,\n            moddleElement: businessObject,\n            properties: {\n              messageRef: message,\n            },\n          });\n        }\n      }\n    }\n  };\n\n  const getOptions = (_value) => {\n    const messages = findMessageModdleElements(shapeElement.businessObject);\n    const options = [];\n    for (const message of messages) {\n      options.push({ label: message.name, value: message.id });\n    }\n    return options;\n  };\n\n  return (\n    <SelectEntry\n      id=\"selectMessage\"\n      element={shapeElement}\n      description=\"Select the Message to associate with this task or event.\"\n      label=\"Which message is this associated with?\"\n      getValue={getValue}\n      setValue={setValue}\n      getOptions={getOptions}\n      debounce={debounce}\n    />\n  );\n}\n","import { useService } from 'bpmn-js-properties-panel';\nimport { TextFieldEntry } from '@bpmn-io/properties-panel';\nimport { getMessageElementForShapeElement } from '../MessageHelpers';\n\n/**\n * Allows the creation, or editing of messageVariable at the bpmn:sendTask level of a BPMN document.\n */\nexport function MessageVariable(props) {\n  const shapeElement = props.element;\n  const debounce = useService('debounceInput');\n  const messageElement = getMessageElementForShapeElement(shapeElement);\n  const disabled = !messageElement;\n\n  const getMessageVariableObject = () => {\n    if (messageElement) {\n      const { extensionElements } = messageElement;\n      if (extensionElements) {\n        return messageElement.extensionElements\n          .get('values')\n          .filter(function getInstanceOfType(e) {\n            return e.$instanceOf('spiffworkflow:messageVariable');\n          })[0];\n      }\n    }\n    return null;\n  };\n\n  const getValue = () => {\n    const messageVariableObject = getMessageVariableObject();\n    if (messageVariableObject) {\n      return messageVariableObject.messageVariable;\n    }\n    return '';\n  };\n\n  const setValue = (value) => {\n    let messageVariableObject = getMessageVariableObject();\n    if (!messageVariableObject) {\n      messageVariableObject = messageElement.$model.create(\n        'spiffworkflow:messageVariable'\n      );\n      if (!messageElement.extensionElements) {\n        messageElement.extensionElements = messageElement.$model.create(\n          'bpmn:ExtensionElements'\n        );\n      }\n      messageElement.extensionElements\n        .get('values')\n        .push(messageVariableObject);\n    }\n    messageVariableObject.messageVariable = value;\n  };\n\n  return (\n    <TextFieldEntry\n      id=\"messageVariable\"\n      element={shapeElement}\n      description=\"The name of the variable where we should store payload.\"\n      label=\"Variable Name\"\n      disabled={disabled}\n      getValue={getValue}\n      setValue={setValue}\n      debounce={debounce}\n    />\n  );\n}\n","import { ListGroup, isTextFieldEntryEdited } from '@bpmn-io/properties-panel';\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\nimport { CorrelationKeysArray } from './CorrelationKeysArray';\nimport { MessageSelect } from './MessageSelect';\nimport { MessagePayload } from './MessagePayload';\nimport { MessageVariable } from './MessageVariable';\nimport { CorrelationPropertiesArray } from './CorrelationPropertiesArray';\nimport { MessageCorrelationPropertiesArray } from './MessageCorrelationPropertiesArray';\nimport { MessageArray } from './MessageArray';\nimport { isMessageElement, canReceiveMessage } from '../MessageHelpers';\n\nconst LOW_PRIORITY = 500;\n\nexport default function MessagesPropertiesProvider(\n  propertiesPanel,\n  translate,\n  moddle,\n  commandStack,\n  elementRegistry\n) {\n  this.getGroups = function getGroupsCallback(element) {\n    return function pushGroup(groups) {\n      if (is(element, 'bpmn:Collaboration')) {\n        groups.push(\n          ...createCollaborationGroup(\n            element,\n            translate,\n            moddle,\n            commandStack,\n            elementRegistry\n          )\n        );\n      } else if (isMessageElement(element)) {\n        const messageIndex = findEntry(groups, 'message');\n        if (messageIndex) {\n          groups.splice(messageIndex, 1);\n        }\n        groups.push(\n          createMessageGroup(\n            element,\n            translate,\n            moddle,\n            commandStack,\n            elementRegistry\n          )\n        );\n      }\n      return groups;\n    };\n  };\n\n  function findEntry(entries, entryId) {\n    let entryIndex = null;\n    entries.forEach(function (value, index) {\n      if (value.id === entryId) {\n        entryIndex = index;\n      }\n    });\n    return entryIndex;\n  }\n  propertiesPanel.registerProvider(LOW_PRIORITY, this);\n}\n\nMessagesPropertiesProvider.$inject = [\n  'propertiesPanel',\n  'translate',\n  'moddle',\n  'commandStack',\n  'elementRegistry',\n];\n\n/**\n * Adds a group to the properties panel for the script task that allows you\n * to set the script.\n * @param element\n * @param translate\n * @returns The components to add to the properties panel. */\nfunction createCollaborationGroup(\n  element,\n  translate,\n  moddle,\n  commandStack,\n  elementRegistry\n) {\n  return [\n    {\n      id: 'correlation_keys',\n      label: translate('Correlation Keys'),\n      component: ListGroup,\n      ...CorrelationKeysArray({\n        element,\n        moddle,\n        commandStack,\n        elementRegistry,\n        translate,\n      }),\n    },\n    {\n      id: 'correlation_properties',\n      label: translate('Correlation Properties'),\n      component: ListGroup,\n      ...CorrelationPropertiesArray({\n        element,\n        moddle,\n        commandStack,\n        elementRegistry,\n        translate,\n      }),\n    },\n    {\n      id: 'messages',\n      label: translate('Messages'),\n      component: ListGroup,\n      ...MessageArray({\n        element,\n        moddle,\n        commandStack,\n        elementRegistry,\n        translate,\n      }),\n    },\n  ];\n}\n\n/**\n * Adds a group to the properties panel for editing messages for the SendTask\n * @param element\n * @param translate\n * @returns The components to add to the properties panel. */\nfunction createMessageGroup(\n  element,\n  translate,\n  moddle,\n  commandStack,\n  elementRegistry\n) {\n  const entries = [\n    {\n      id: 'selectMessage',\n      element,\n      component: MessageSelect,\n      isEdited: isTextFieldEntryEdited,\n      moddle,\n      commandStack,\n    },\n  ];\n\n  if (canReceiveMessage(element)) {\n    entries.push({\n      id: 'messageVariable',\n      element,\n      component: MessageVariable,\n      isEdited: isTextFieldEntryEdited,\n      moddle,\n      commandStack,\n    });\n  } else {\n    entries.push({\n      id: 'messagePayload',\n      element,\n      component: MessagePayload,\n      isEdited: isTextFieldEntryEdited,\n      moddle,\n      commandStack,\n    });\n  }\n\n  entries.push({\n    id: 'correlationProperties',\n    label: translate('Correlation'),\n    component: ListGroup,\n    ...MessageCorrelationPropertiesArray({\n      element,\n      moddle,\n      commandStack,\n      elementRegistry,\n      translate,\n    }),\n  });\n\n  return {\n    id: 'messages',\n    label: translate('Message'),\n    entries,\n  };\n}\n","import { useContext, useState, useEffect, useMemo } from '@bpmn-io/properties-panel/preact/hooks';\nimport { reduce, isArray, find, forEach, sortBy, without, isUndefined, has, findIndex, isDefined, filter, groupBy, keys, map, flatten, isString, values, isObject, isFunction, assign } from 'min-dash';\nimport { PropertiesPanel, DebounceInputModule, usePrevious, SelectEntry, isCheckboxEntryEdited, isSelectEntryEdited, CheckboxEntry, isTextAreaEntryEdited, TextAreaEntry, isTextFieldEntryEdited, TextFieldEntry, Group, isFeelEntryEdited, FeelEntry, isToggleSwitchEntryEdited, ToggleSwitchEntry, ListGroup, ListEntry, SimpleEntry, CollapsibleEntry, useLayoutState, HeaderButton, ArrowIcon, CreateIcon, DropdownButton, FeelTextAreaEntry } from '@bpmn-io/properties-panel';\nimport { createContext, render, createElement as createElement$1, h, Component } from '@bpmn-io/properties-panel/preact';\nimport { getLabel, setLabel } from 'bpmn-js/lib/features/label-editing/LabelUtil';\nimport { is, getBusinessObject } from 'bpmn-js/lib/util/ModelUtil';\nimport { isInterrupting, isEventSubProcess, isExpanded } from 'bpmn-js/lib/util/DiUtil';\nimport React from '@bpmn-io/properties-panel/preact/compat';\nimport { jsx, jsxs } from '@bpmn-io/properties-panel/preact/jsx-runtime';\nimport { isUndo, isRedo } from 'diagram-js/lib/features/keyboard/KeyboardUtil';\nimport { domify, query, event } from 'min-dom';\nimport { isAny } from 'bpmn-js/lib/features/modeling/util/ModelingUtil';\nimport Ids from 'ids';\nimport { add } from 'diagram-js/lib/util/Collections';\nimport { getVariablesForElement } from '@bpmn-io/extract-process-variables/zeebe';\nimport { mutate } from 'array-move';\nimport { getVariablesForScope } from '@bpmn-io/extract-process-variables';\nimport translateModule from 'diagram-js/lib/i18n/translate';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport semverCompare from 'semver-compare';\nimport { getSchemaVersion as getSchemaVersion$1, validate as validate$1, getZeebeSchemaVersion, getZeebeSchemaPackage, validateZeebe } from '@bpmn-io/element-templates-validator';\nimport classnames from 'classnames';\n\nconst BpmnPropertiesPanelContext = createContext({\n  selectedElement: null,\n  injector: null,\n\n  getService() {\n    return null;\n  }\n\n});\n\nfunction useService(type, strict) {\n  const {\n    getService\n  } = useContext(BpmnPropertiesPanelContext);\n  return getService(type, strict);\n}\n\nfunction _extends$1o() { _extends$1o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1o.apply(this, arguments); }\nvar AssociationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1o({\n  width: \"32\",\n  height: \"32\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  stroke: \"#000\",\n  strokeWidth: \"2\",\n  fill: \"none\",\n  strokeDasharray: \"3.3,6\",\n  strokeLinecap: \"square\",\n  d: \"M1.5 30.5l29-29\"\n})));\n\nfunction _extends$1n() { _extends$1n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1n.apply(this, arguments); }\nvar BusinessRuleTaskIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1n({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.494 3C2.916 3 0 5.903 0 9.475v13.383c0 3.572 2.916 6.475 6.494 6.475h19.012c3.578 0 6.494-2.903 6.494-6.475V9.475C32 5.903 29.084 3 25.506 3H6.494zm0 2h19.012C28.015 5 30 6.98 30 9.475v13.383c0 2.495-1.985 4.475-4.494 4.475H6.494C3.985 27.333 2 25.353 2 22.858V9.475C2 6.98 3.985 5 6.494 5zM5.296 7.398v12.665h16.87V7.398H5.296zm.718 4.386h15.433v3.44H9.985v-3.432h-.719v3.431H6.014v-3.44zm0 4.158h3.252v3.403H6.014v-3.403zm3.97 0h11.463v3.403H9.985v-3.403z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.079 8.209v3.587H21.44V8.209z\"\n})));\n\nfunction _extends$1m() { _extends$1m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1m.apply(this, arguments); }\nvar CallActivityIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1m({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.978 3c3.761 0 6.89 2.979 7.018 6.695l.004.238V22.4c0 3.747-3.05 6.804-6.783 6.93l-.24.003H7.023c-3.761 0-6.89-2.978-7.018-6.695L0 22.4V9.933C0 6.187 3.05 3.13 6.783 3.004L7.023 3h17.955zm0 3.667H7.022c-1.842 0-3.255 1.344-3.35 3.079l-.005.187V22.4c0 1.761 1.35 3.167 3.16 3.262l.195.005L10 25.666V15h12v10.666h2.978c1.842 0 3.255-1.344 3.35-3.079l.005-.187V9.933c0-1.761-1.35-3.166-3.16-3.261l-.195-.005zm-3.732 9.087H10.754v9.912h10.491v-9.912zm-4.475 1.817v2.658h2.658v1.542H16.77v2.658H15.23V21.77H12.57V20.23h2.658V17.57h1.542z\"\n})));\n\nfunction _extends$1l() { _extends$1l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1l.apply(this, arguments); }\nvar CollaborationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1l({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"g\", {\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"nonzero\",\n  d: \"M0 0v8.62h32V0H0zm1.655 7.054v-5.37h28.62v5.37H1.656zM0 23.38V32h32v-8.62H0zm1.655 7.054v-5.37h28.62v5.37H1.656z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 8l4 7h-8l4-7zm0 2l-2.28 4h4.56L24 10zM23.5 21h1v3h-1zM23.5 15h1v3h-1zM8 24l-4-7h8l-4 7zm0-2l2.28-4H5.72L8 22zM7.5 8h1v3h-1zM7.5 14h1v3h-1z\"\n}))));\n\nfunction _extends$1k() { _extends$1k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1k.apply(this, arguments); }\nvar ConditionalFlowIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1k({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32 .041S20.42 5.95 14.537 8.713c1.26 1.15 2.432 2.392 3.648 3.588-5.703 5.78-3.15 3.303-8.087 8.316l-8.472 1.377L0 32l10.006-1.626.098-.598 1.279-7.873c4.975-5.052 2.403-2.555 8.118-8.346 1.218 1.214 2.43 2.435 3.648 3.648C26.29 11.018 32 .041 32 .041zM9.603 22.397L8.54 28.91 2.03 29.97l1.061-6.515 6.512-1.058z\"\n})));\n\nfunction _extends$1j() { _extends$1j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1j.apply(this, arguments); }\nvar ConnectionIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1j({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32 .06S20.33 6.014 14.403 8.798c1.27 1.16 2.451 2.41 3.676 3.616L0 30.734 1.325 32l18.08-18.32c1.227 1.223 2.448 2.453 3.676 3.676C26.247 11.12 32 .06 32 .06z\"\n})));\n\nfunction _extends$1i() { _extends$1i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1i.apply(this, arguments); }\nvar DataInputOutputAssociationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1i({\n  width: \"32\",\n  height: \"32\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  stroke: \"#000\",\n  strokeWidth: \"2\",\n  strokeLinecap: \"round\",\n  strokeDasharray: \"1.1,4.3\",\n  d: \"M1.5 30.5L27 5\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M31.803.197L26.5 16.107l-1.52-1.52 3.783-11.35-11.35 3.783-1.52-1.52z\"\n})));\n\nfunction _extends$1h() { _extends$1h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1h.apply(this, arguments); }\nvar DataInputIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1h({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20.833 0H3.488v32H28V7.36L20.833 0zm-2.105 1.818v7.507h7.454v20.857H5.306V1.818h13.422zm1.818.493l5.06 5.196h-5.06V2.311zm-9.182.86v3.744H7.081v3.222h4.283v3.743l5.7-5.354-5.7-5.354zm.808 1.868l3.711 3.487-3.71 3.487V9.329H7.888V7.723h4.283V5.039z\"\n})));\n\nfunction _extends$1g() { _extends$1g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1g.apply(this, arguments); }\nvar DataObjectIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1g({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21.345 0H4v32h24.512V7.36L21.345 0zM19.24 1.818v7.507h7.454v20.857H5.818V1.818H19.24zm1.818.493l5.06 5.196h-5.06V2.311z\"\n})));\n\nfunction _extends$1f() { _extends$1f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1f.apply(this, arguments); }\nvar DataOutputIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1f({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20.833 0H3.488v32H28V7.36L20.833 0zm-2.105 1.818v7.507h7.454v20.857H5.306V1.818h13.422zm1.818.493l5.06 5.196h-5.06V2.311zm-9.182.86v3.744H7.081v3.222h4.283v3.743l5.7-5.354-5.7-5.354z\"\n})));\n\nfunction _extends$1e() { _extends$1e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1e.apply(this, arguments); }\nvar DataStoreIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1e({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.008 1c-3.712 0-7.417.306-10.319.939-1.45.316-2.7.71-3.68 1.226C1.065 3.662.297 4.304.061 5.23a.823.823 0 00-.035.15L0 5.502l.017.084c-.012 7.41 0 14.46 0 22.08l.017.082c.203.985.995 1.656 1.975 2.172.98.517 2.23.91 3.68 1.226 2.902.633 6.607.94 10.319.94 3.711 0 7.416-.307 10.318-.94 1.451-.316 2.701-.71 3.68-1.226.98-.516 1.772-1.187 1.975-2.172l.017-.082V5.541a.825.825 0 000-.106v-.016l-.002-.013a.823.823 0 00-.046-.197c-.244-.916-1.007-1.55-1.943-2.044-.98-.516-2.23-.91-3.68-1.226C23.423 1.306 19.718 1 16.006 1zm0 1.646c3.62 0 7.245.308 9.968.901 1.36.297 2.497.67 3.263 1.074.612.323.932.643 1.063.882-.131.24-.451.56-1.063.882-.766.404-1.902.777-3.263 1.074-2.723.594-6.349.901-9.968.901-3.62 0-7.245-.307-9.968-.901-1.361-.297-2.497-.67-3.264-1.074-.611-.322-.931-.642-1.062-.882.13-.24.451-.56 1.062-.882.767-.403 1.903-.777 3.264-1.074 2.723-.593 6.348-.9 9.968-.9zM1.664 7.647c.112.067.227.132.345.194.98.517 2.23.91 3.68 1.226 2.902.633 6.607.94 10.319.94 3.711 0 7.416-.307 10.318-.94 1.451-.316 2.701-.71 3.68-1.226.119-.062.234-.127.346-.194v1.93c-.08.245-.398.619-1.113.995-.766.404-1.902.777-3.263 1.074-2.723.594-6.349.901-9.968.901-3.62 0-7.245-.307-9.968-.9-1.361-.298-2.497-.671-3.264-1.075-.714-.376-1.032-.75-1.112-.995v-1.93zm0 4.187c.112.067.227.132.345.195.98.516 2.23.91 3.68 1.226 2.902.632 6.607.938 10.319.938 3.711 0 7.416-.306 10.318-.938 1.451-.317 2.701-.71 3.68-1.226.119-.063.234-.128.346-.195v1.93c-.08.245-.398.619-1.113.995-.766.404-1.902.777-3.263 1.074-2.723.594-6.349.901-9.968.901-3.62 0-7.245-.307-9.968-.9-1.361-.298-2.497-.67-3.264-1.075-.714-.376-1.032-.75-1.112-.995v-1.93zm0 4.188c.112.067.227.131.345.194.98.516 2.23.91 3.68 1.226 2.902.633 6.607.939 10.319.939 3.711 0 7.416-.306 10.318-.94 1.451-.316 2.701-.709 3.68-1.225.119-.063.234-.127.346-.194V27.47c-.08.245-.398.618-1.113.995-.766.404-1.902.777-3.263 1.074-2.723.594-6.349.9-9.968.9-3.62 0-7.245-.306-9.968-.9-1.361-.297-2.497-.67-3.264-1.074-.714-.377-1.032-.75-1.112-.995V16.022z\"\n})));\n\nfunction _extends$1d() { _extends$1d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1d.apply(this, arguments); }\nvar DefaultFlowIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1d({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32 .06S20.33 6.014 14.403 8.798c1.27 1.16 2.451 2.41 3.676 3.616L6.84 23.804H.046v1.755h5.063L0 30.735 1.325 32l6.357-6.441h7.145v-1.756H9.414l9.99-10.123c1.228 1.223 2.45 2.453 3.677 3.676C26.247 11.12 32 .06 32 .06z\"\n})));\n\nfunction _extends$1c() { _extends$1c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1c.apply(this, arguments); }\nvar EndEventCancelIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1c({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.676.051C7.943.058.834 6.501.104 14.21c-.783 6.565 2.912 13.427 8.942 16.216 5.6 2.737 12.789 1.87 17.434-2.344 4.725-4.09 6.79-11.06 4.714-17.006C29.22 5.009 23.394.364 16.978.083A18.532 18.532 0 0015.676.05zm.317 5.006c5.695-.165 10.916 4.858 10.983 10.555.246 5.212-3.67 10.33-8.864 11.204-5.026 1.007-10.6-1.898-12.36-6.777-1.894-4.826.039-10.928 4.649-13.46a11.082 11.082 0 015.592-1.522zm-3.955 3.918L8.94 12.072l3.985 3.985-3.913 3.913 3.048 3.047 3.913-3.913 3.987 3.987 3.096-3.096-3.987-3.987 3.913-3.913-3.047-3.048-3.913 3.913-3.985-3.985z\"\n})));\n\nfunction _extends$1b() { _extends$1b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1b.apply(this, arguments); }\nvar EndEventCompensationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1b({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.676.051C7.943.058.834 6.501.104 14.21c-.783 6.565 2.912 13.427 8.942 16.216 5.6 2.737 12.789 1.87 17.434-2.344 4.725-4.09 6.79-11.06 4.714-17.006C29.22 5.009 23.394.364 16.978.083A18.532 18.532 0 0015.676.05zm.317 5.006c5.695-.165 10.916 4.858 10.983 10.555.246 5.212-3.67 10.33-8.864 11.204-5.026 1.007-10.6-1.898-12.36-6.777-1.894-4.826.039-10.928 4.649-13.46a11.082 11.082 0 015.592-1.522zm-.56 5.744l-7.407 5.23 7.408 5.234v-5.057c2.384 1.687 4.771 3.371 7.157 5.057V10.801l-7.157 5.054v-5.054z\"\n})));\n\nfunction _extends$1a() { _extends$1a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1a.apply(this, arguments); }\nvar EndEventErrorIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1a({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.676.051C7.943.058.834 6.501.104 14.21c-.783 6.565 2.912 13.427 8.942 16.216 5.6 2.737 12.789 1.87 17.434-2.344 4.725-4.09 6.79-11.06 4.714-17.006C29.22 5.009 23.394.364 16.978.083A18.532 18.532 0 0015.676.05zm.317 5.006c5.695-.165 10.916 4.858 10.983 10.555.246 5.212-3.67 10.33-8.864 11.204-5.026 1.007-10.6-1.898-12.36-6.777-1.894-4.826.039-10.928 4.649-13.46a11.082 11.082 0 015.592-1.522zm6.132 4.166l-3.633 7.363-4.516-5.874-4.102 12.131 4.599-5.91 4.743 5.427 2.909-13.137z\"\n})));\n\nfunction _extends$19() { _extends$19 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$19.apply(this, arguments); }\nvar EndEventEscalationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$19({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.676.051C7.943.058.834 6.501.104 14.21c-.783 6.565 2.912 13.427 8.942 16.216 5.6 2.737 12.789 1.87 17.434-2.344 4.725-4.09 6.79-11.06 4.714-17.006C29.22 5.009 23.394.364 16.978.083A18.532 18.532 0 0015.676.05zm.317 5.006c5.695-.165 10.916 4.858 10.983 10.555.246 5.212-3.67 10.33-8.864 11.204-5.026 1.007-10.6-1.898-12.36-6.777-1.894-4.826.039-10.928 4.649-13.46a11.082 11.082 0 015.592-1.522zm.006 3.9c-1.672 4.653-2.733 9.5-4.406 14.153 1.535-1.525 2.872-3.234 4.406-4.759l4.406 4.76c-1.497-4.71-2.91-9.445-4.406-14.155z\"\n})));\n\nfunction _extends$18() { _extends$18 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$18.apply(this, arguments); }\nvar EndEventLinkIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$18({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.676 0C7.943.007.834 6.45.104 14.16c-.783 6.565 2.912 13.427 8.942 16.216 5.6 2.737 12.789 1.87 17.434-2.344 4.725-4.09 6.79-11.06 4.714-17.006C29.22 4.958 23.394.313 16.978.032A18.532 18.532 0 0015.676 0zm.317 5.006c5.695-.165 10.916 4.858 10.983 10.555.246 5.212-3.67 10.33-8.864 11.204-5.026 1.007-10.6-1.898-12.36-6.777-1.894-4.826.039-10.928 4.649-13.46a11.082 11.082 0 015.592-1.522zm1.78 4.065v3.555H9.779v6.713h7.994v3.554l5.828-6.91-5.828-6.912z\"\n})));\n\nfunction _extends$17() { _extends$17 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$17.apply(this, arguments); }\nvar EndEventMessageIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$17({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.676 0C7.943.007.834 6.45.104 14.16c-.783 6.565 2.912 13.427 8.942 16.216 5.6 2.737 12.789 1.87 17.434-2.344 4.725-4.09 6.79-11.06 4.714-17.006C29.22 4.958 23.394.313 16.978.032A18.532 18.532 0 0015.676 0zm.317 5.006c5.695-.165 10.916 4.858 10.983 10.555.246 5.212-3.67 10.33-8.864 11.204-5.026 1.007-10.6-1.898-12.36-6.777-1.894-4.826.039-10.928 4.649-13.46a11.082 11.082 0 015.592-1.522zm-5.91 5.448l6.041 4.9 6.04-4.9H10.084zm-1.34 1.137v9.92h14.513v-9.718l-7.132 5.786-7.381-5.988z\"\n})));\n\nfunction _extends$16() { _extends$16 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$16.apply(this, arguments); }\nvar EndEventMultipleIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$16({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.676 0C7.943.007.834 6.45.104 14.16c-.783 6.565 2.912 13.427 8.942 16.216 5.6 2.737 12.789 1.87 17.434-2.344 4.725-4.09 6.79-11.06 4.714-17.006C29.22 4.958 23.394.313 16.978.032A18.529 18.529 0 0015.676 0zm.317 5.006c5.695-.165 10.916 4.858 10.983 10.555.246 5.212-3.67 10.33-8.864 11.204-5.026 1.007-10.6-1.898-12.36-6.777-1.894-4.826.039-10.928 4.649-13.46a11.082 11.082 0 015.592-1.522zm.011 3.039l-7.619 5.53 2.91 8.95h9.418l2.91-8.95-7.619-5.53z\"\n})));\n\nfunction _extends$15() { _extends$15 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$15.apply(this, arguments); }\nvar EndEventNoneIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$15({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.84.042C8.654-.01 1.913 5.437.4 12.454-1.057 18.62 1.554 25.495 6.784 29.09c5.076 3.636 12.31 3.92 17.59.544 5.309-3.251 8.435-9.744 7.445-15.921C30.91 7.307 25.795 1.738 19.442.422a16.064 16.064 0 00-3.602-.38zm.382 5.01c5.28-.017 10.13 4.353 10.669 9.61.687 5.025-2.552 10.281-7.423 11.792-4.754 1.617-10.486-.447-12.962-4.856-2.74-4.575-1.574-11.094 2.768-14.27a11.05 11.05 0 016.948-2.276z\"\n})));\n\nfunction _extends$14() { _extends$14 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$14.apply(this, arguments); }\nvar EndEventSignalIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$14({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.676.051C7.943.058.834 6.501.104 14.21c-.783 6.565 2.912 13.427 8.942 16.216 5.6 2.737 12.789 1.87 17.434-2.344 4.725-4.09 6.79-11.06 4.714-17.006C29.22 5.009 23.394.364 16.978.083A18.532 18.532 0 0015.676.05zm.317 5.006c5.695-.165 10.916 4.858 10.983 10.555.246 5.212-3.67 10.33-8.864 11.204-5.026 1.007-10.6-1.898-12.36-6.777-1.894-4.826.039-10.928 4.649-13.46a11.082 11.082 0 015.592-1.522zm.006 3.492c-2.261 4.07-4.532 8.136-6.797 12.204h13.595L15.999 8.55z\"\n})));\n\nfunction _extends$13() { _extends$13 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$13.apply(this, arguments); }\nvar EndEventTerminateIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$13({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.676.051C7.943.058.834 6.501.104 14.21c-.783 6.565 2.912 13.427 8.942 16.216 5.6 2.737 12.789 1.87 17.434-2.344 4.725-4.09 6.79-11.06 4.714-17.006C29.22 5.009 23.394.364 16.978.083A18.532 18.532 0 0015.676.05zm.317 5.006c5.695-.165 10.916 4.858 10.983 10.555.246 5.212-3.67 10.33-8.864 11.204-5.026 1.007-10.6-1.898-12.36-6.777-1.894-4.826.039-10.928 4.649-13.46a11.082 11.082 0 015.592-1.522zm.006 2.859c-5.264-.2-9.495 5.551-7.755 10.516 1.366 5.085 8.108 7.436 12.339 4.301 4.455-2.807 4.708-9.943.462-13.058A8.128 8.128 0 0016 7.915z\"\n})));\n\nfunction _extends$12() { _extends$12 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$12.apply(this, arguments); }\nvar EventSubProcessExpandedIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$12({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.295 4.78h1.779V3.003h-1.78V4.78zm3.558 0h1.779V3.003h-1.78V4.78zm3.557 0h1.78V3.003h-1.78V4.78zm3.558 0h1.78V3.003h-1.78V4.78zm3.558 0h1.779V3.003h-1.779V4.78zm3.558 0c.55.014 1.106-.034 1.654.045l.245-1.762c-.629-.096-1.266-.05-1.9-.061V4.78zM5.732 3.004a5.933 5.933 0 00-.915.093c.111.582.226 1.164.315 1.75.358-.101.947.098.746-.483-.096-.382.164-1.208-.146-1.36zm22.372 2.281c.427.234.812.547 1.13.915.42-.4 1.002-.777 1.33-1.18a5.863 5.863 0 00-1.593-1.289l-.867 1.554zm-25.27-1.44c-.587.354-1.11.811-1.539 1.345.47.333.96.86 1.417 1.077.299-.362.66-.673 1.065-.913-.328-.493-.55-1.055-.944-1.509zM30.515 7.26c-.563.046-.557.342-.378.784.154.25-.097.862.25.85.525-.023 1.14.043 1.612-.032a5.891 5.891 0 00-.362-2.027l-1.122.425zM.268 7.114A6.042 6.042 0 000 9.052h1.78c-.013-.5.047-1.003.208-1.478L.296 7.027l-.026.079-.002.008zM30.22 12.45H32v-1.779h-1.779v1.779zm-30.22.16h1.78v-1.779H0v1.78zm30.22 3.398H32v-1.78h-1.779v1.78zm-30.22.16h1.78v-1.779H0v1.779zm30.22 3.398H32v-1.78h-1.779v1.78zm-30.22.16h1.78v-1.78H0v1.78zm30.22 3.397H32v-1.779h-1.779v1.78zm-30.22.16h1.78v-1.778H0v1.778zm30.137 1.47a4.059 4.059 0 01-.522 1.32c.506.283 1.046.715 1.53.908a5.836 5.836 0 00.744-1.918c-.576-.094-1.209-.264-1.752-.31zm-29.984.51c.157.676.435 1.325.82 1.904l1.486-.977a4.065 4.065 0 01-.577-1.347l-1.73.42zm28.427 1.943c-.371.277-.79.49-1.234.627l.548 1.693a5.84 5.84 0 001.835-.96l-1.082-1.412-.066.05-.001.002zm-26.164 1.47c.567.413 1.21.722 1.886.907.14-.569.343-1.175.444-1.722a4.062 4.062 0 01-1.283-.624l-1.047 1.438zm3.88 1.119h1.779v-1.78h-1.78v1.78zm3.55 0h1.787v-1.78H9.846v1.78zm3.565 0h1.78v-1.78h-1.78v1.78zm3.558 0h1.78v-1.78h-1.78v1.78zm3.451 0h1.743v-1.78h-1.743v1.78zm3.665 0h1.779v-1.78h-1.78v1.78zm-1.922-.545V16.776H9.846V29.25h12.318zM10.967 17.905h10.068V27.97H10.967V17.905zm1.336 3.998v1.711h7.396v-1.711h-7.396z\",\n  opacity: \".97\"\n})));\n\nfunction _extends$11() { _extends$11 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$11.apply(this, arguments); }\nvar GatewayComplexIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$11({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.001 0a1.29 1.29 0 00-.917.373L.373 15.084a1.316 1.316 0 00.002 1.834l14.71 14.709a1.313 1.313 0 001.833 0l14.711-14.711a1.316 1.316 0 00-.002-1.834L16.917.372A1.294 1.294 0 0016.002 0zM16 2.181l13.821 13.821L16 29.823 2.179 16.003 16 2.18zm-.327 6.79v.007l-.145.027-.118.08-.083.123-.028.145v4.954L11.793 10.8l-.125-.08-.14-.029-.144.027-.122.082-.46.46-.085.125-.026.142.028.14.08.125 3.505 3.505H9.347l-.001-.002-.145.032-.118.08-.083.122-.028.146v.652l.029.147.082.119.12.08.144.032h4.956L10.8 20.207v-.001l-.084.124-.026.142.028.14.08.124.46.461.126.082.14.029.143-.027.124-.084L15.3 17.69v4.964-.001l.028.147.082.12.12.08.144.031h.652l.148-.03.118-.08.083-.12.028-.146v-4.962l3.505 3.505.126.082.14.027.142-.027.124-.084.461-.46.083-.123s.028-.144.027-.146l-.028-.14-.082-.126-3.496-3.496h4.948l.148-.03.119-.08.082-.12.028-.147v-.652l-.028-.145-.083-.122-.119-.08s-.147-.033-.147-.031h-4.964l3.512-3.512.082-.122.029-.144-.028-.14-.084-.124-.46-.461-.123-.082-.14-.027-.145.027-.122.082-3.507 3.507V9.348l-.028-.146-.082-.122-.12-.08-.147-.029h-.652z\"\n})));\n\nfunction _extends$10() { _extends$10 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$10.apply(this, arguments); }\nvar GatewayEventBasedIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$10({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 0a1.29 1.29 0 00-.918.373L.371 15.084a1.316 1.316 0 00.002 1.834l14.71 14.709a1.313 1.313 0 001.833 0l14.711-14.711a1.316 1.316 0 00-.002-1.834L16.915.372A1.294 1.294 0 0016 0zm-.002 2.181l13.821 13.821-13.821 13.821-13.821-13.82L15.998 2.18zm0 5.876l-.254.185-7.377 5.355 2.915 8.964h9.433l2.915-8.964-7.631-5.54zm0 1.07l6.614 4.8-2.526 7.769h-8.175l-2.526-7.768 6.614-4.802z\"\n})));\n\nfunction _extends$$() { _extends$$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$$.apply(this, arguments); }\nvar GatewayNoneIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$$({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M.373 15.084a1.316 1.316 0 00.002 1.834l14.71 14.709a1.313 1.313 0 001.833 0l14.711-14.711a1.316 1.316 0 00-.002-1.834L16.917.373a1.313 1.313 0 00-1.833 0L.373 15.084zm1.806.918L16 2.182l13.821 13.82L16 29.823 2.179 16.003z\"\n})));\n\nfunction _extends$_() { _extends$_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$_.apply(this, arguments); }\nvar GatewayOrIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$_({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.001 0a1.29 1.29 0 00-.917.373L.373 15.084a1.316 1.316 0 00.002 1.834l14.71 14.709a1.313 1.313 0 001.833 0l14.711-14.711a1.316 1.316 0 00-.002-1.834L16.917.372A1.294 1.294 0 0016.002 0zM16 2.181l13.821 13.821L16 29.823 2.179 16.003 16 2.18zm0 6.379a7.447 7.447 0 00-7.44 7.441A7.447 7.447 0 0016 23.443 7.447 7.447 0 0023.443 16a7.447 7.447 0 00-7.441-7.441zm0 .825a6.61 6.61 0 016.617 6.616A6.61 6.61 0 0116 22.618 6.61 6.61 0 019.385 16 6.61 6.61 0 0116 9.385z\"\n})));\n\nfunction _extends$Z() { _extends$Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$Z.apply(this, arguments); }\nvar GatewayParallelIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$Z({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.001 0a1.29 1.29 0 00-.917.373L.373 15.084a1.316 1.316 0 00.002 1.834l14.71 14.709a1.313 1.313 0 001.833 0l14.711-14.711a1.316 1.316 0 00-.002-1.834L16.917.372A1.294 1.294 0 0016.002 0zM16 2.181l13.821 13.821L16 29.823 2.179 16.003 16 2.18zm-.377 5.708l-.168.032-.136.092-.096.14-.032.168v6.868h-6.87l-.002-.002-.166.037-.137.092v-.002l-.095.141-.033.167v.753s.032.169.034.17l.094.138.138.092.167.036h6.87v6.867l-.001-.001.033.17.095.138.138.092s.166.035.167.037h.752l.17-.036.137-.092.095-.137.033-.17v-6.867h6.868l.17-.035.137-.092.095-.137.033-.17v-.753s-.033-.165-.032-.167l-.096-.14-.138-.093s-.17-.037-.17-.035H16.81V8.323l-.033-.168-.094-.14-.138-.092-.17-.034h-.752z\"\n})));\n\nfunction _extends$Y() { _extends$Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$Y.apply(this, arguments); }\nvar GatewayXorIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$Y({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 0a1.29 1.29 0 00-.918.373L.371 15.084a1.316 1.316 0 00.002 1.834l14.71 14.709a1.313 1.313 0 001.833 0l14.711-14.711a1.316 1.316 0 00-.002-1.834L16.915.372A1.294 1.294 0 0016 0zm-.002 2.181l13.821 13.821-13.821 13.821-13.821-13.82L15.998 2.18zm-5.162 7.69l-.166.032-.141.096-.532.532s-.097.142-.097.144l-.03.164.032.162.093.144 4.857 4.858-4.855 4.855v-.001L9.9 21l-.03.164.032.162s.093.142.093.144l.531.532.146.095.162.032.164-.03.144-.097 4.855-4.856 4.857 4.857.145.095.162.032.164-.03.144-.097.531-.532.095-.14.033-.168-.033-.162-.095-.146L17.144 16 22 11.144l.095-.14.033-.166-.033-.163-.097-.144-.532-.532-.14-.095-.163-.032-.166.032-.141.095L16 14.855l-4.858-4.858v-.002l-.144-.092-.162-.032z\"\n})));\n\nfunction _extends$X() { _extends$X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$X.apply(this, arguments); }\nvar GroupIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$X({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.34.016c-2.333.025-4.684 1.77-5.29 4.17C.608 5.848.88 7.608.804 9.314v2.922h2.041c.038-2.332-.076-4.673.062-7C3.14 3.355 4.869 1.938 6.643 2.04h8.956V.009c-3.086 0-6.173-.02-9.258 0v.007zm13.094 2.023h1.92V.009h-1.92v2.03zm5.756 0c1.265-.069 2.66.045 3.602 1.055 1.036.983 1.201 2.523 1.122 3.91v6.313h2.078c-.03-2.677.062-5.36-.047-8.032-.17-2.743-2.62-5.111-5.215-5.236-.511-.064-1.027-.02-1.54-.033v2.023zM.803 18.319h2.041v-2.026H.804v2.026zm29.11 1.084h2.08v-2.03h-2.08v2.03zM.804 26.148c.004 2.218 1.393 4.366 3.313 5.28 1.728.853 3.681.448 5.521.544.43-.112 1.29.231 1.435-.183v-1.847c-1.788-.043-3.584.094-5.365-.082-1.67-.354-2.919-2.048-2.863-3.844v-3.644H.804v3.777zm29.11-.068c.04 1.961-1.508 3.787-3.381 3.842-1.954.06-3.914.02-5.87.026v2.03c2.118-.042 4.242.08 6.355-.063 2.524-.264 4.818-2.644 4.94-5.323.08-1.039.014-2.085.035-3.126h-2.078v2.613zm-15.006 5.898h1.92v-2.03h-1.92v2.03z\"\n})));\n\nfunction _extends$W() { _extends$W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$W.apply(this, arguments); }\nvar IntermediateEventCatchCancelIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$W({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.049C8.195-.111.935 6.286.125 14.03c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.93 23.445.454 17.201.095c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.22.872 11.725 4.985 6.962c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.215-2.282-2.022-5.3-3.217-8.357-3.22zM16 5.021c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.082 11.082 0 0116 5.021zm-3.956 3.946l-3.096 3.097 3.985 3.985-3.913 3.913 3.047 3.048 3.913-3.913 3.988 3.987 3.097-3.096L19.076 16l3.914-3.913-3.048-3.048-3.913 3.913-3.986-3.985zm-.002 1.222l3.988 3.987 3.913-3.913 1.826 1.826-3.913 3.913 3.985 3.986-1.873 1.873-3.985-3.985-3.913 3.913-1.827-1.827 3.914-3.913-3.988-3.987 1.873-1.873z\"\n})));\n\nfunction _extends$V() { _extends$V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$V.apply(this, arguments); }\nvar IntermediateEventCatchCompensationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$V({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.049C8.195-.11.935 6.286.125 14.03c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.93 23.445.453 17.201.095c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.22.872 11.725 4.985 6.962c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 5.021c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 5.021zm-.56 5.772l-7.408 5.231 7.409 5.234v-5.057c2.385 1.687 4.771 3.371 7.157 5.057V10.793l-7.157 5.055v-5.055zm-.865 1.665v7.125l-5.048-3.562 5.048-3.563zm7.161 0v7.132l-5.048-3.566 5.048-3.566z\"\n})));\n\nfunction _extends$U() { _extends$U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$U.apply(this, arguments); }\nvar IntermediateEventCatchConditionIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$U({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.97.04h-.127C8.713-.018 2.003 5.334.437 12.286c-1.51 6.123.98 13.005 6.136 16.665 5.125 3.788 12.546 4.105 17.912.623 5.272-3.276 8.33-9.766 7.325-15.916-.904-6.241-5.79-11.7-11.95-13.143A16.082 16.082 0 0015.97.04zm-.181 1.724c.115 0 .23 0 .347.003 6.625-.066 12.823 5.149 13.89 11.69 1.13 5.91-1.908 12.349-7.262 15.138-5.473 3.013-12.866 1.884-17.116-2.726C1.291 21.372.444 13.914 3.802 8.602c2.493-4.112 7.169-6.819 11.987-6.838zm.283 1.554c-.117 0-.234.002-.351.005-6.1 0-11.691 5.049-12.346 11.114-.78 5.684 2.795 11.612 8.218 13.52 5.139 1.943 11.416.101 14.624-4.38 3.461-4.583 3.262-11.538-.596-15.831-2.36-2.747-5.924-4.423-9.549-4.428zm-.078 1.695c.078 0 .156 0 .234.003 5.4 0 10.321 4.556 10.734 9.942.563 5.13-2.958 10.364-7.971 11.678-4.832 1.41-10.457-.935-12.746-5.446-2.463-4.559-1.2-10.795 3.014-13.883a11.072 11.072 0 016.735-2.294zm-5.352 4.266V22.761h10.716V9.279H10.642zm.863.866h8.987v11.75h-8.987v-11.75zm.927 1.323v.862h7.133v-.862h-7.133zm0 2.602v.866h7.133v-.866h-7.133zm0 3.008v.862h7.133v-.862h-7.133zm0 2.717v.863h7.133v-.863h-7.133z\"\n})));\n\nfunction _extends$T() { _extends$T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$T.apply(this, arguments); }\nvar IntermediateEventCatchErrorIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$T({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.049C8.195-.11.935 6.286.125 14.03c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.93 23.445.453 17.201.095c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.22.872 11.725 4.985 6.962c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 5.021c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 5.021zm6.132 4.194c-1.21 2.455-2.422 4.91-3.633 7.364l-4.516-5.875-4.103 12.133 4.6-5.912c1.58 1.81 3.162 3.619 4.744 5.429L22.13 9.215zM14.383 13.1l4.295 5.445 1.073-2.387-1.027 4.131-4.384-5.157-1.778 2.75 1.821-4.782z\"\n})));\n\nfunction _extends$S() { _extends$S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$S.apply(this, arguments); }\nvar IntermediateEventCatchEscalationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$S({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.049C8.195-.11.935 6.286.125 14.03c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.93 23.445.453 17.201.095c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.22.872 11.725 4.985 6.962c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 5.021c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 5.021zm.006 3.927c-1.672 4.654-2.734 9.502-4.406 14.155 1.534-1.525 2.872-3.234 4.406-4.759l4.406 4.76c-1.496-4.71-2.91-9.446-4.406-14.156zm.032 2.929c.822 2.586 1.598 5.186 2.42 7.771l-2.42-2.612c-.682.597-2.452 2.884-2.338 2.388.87-2.487 1.447-5.067 2.338-7.547z\"\n})));\n\nfunction _extends$R() { _extends$R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$R.apply(this, arguments); }\nvar IntermediateEventCatchLinkIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$R({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.049C8.195-.11.935 6.286.125 14.03c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.93 23.445.453 17.201.095c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.22.872 11.725 4.985 6.962c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 5.021c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 5.021zm1.78 4.093v3.555H9.785v6.714h7.994v3.554l5.829-6.911-5.83-6.912zm.974 2.584l3.61 4.295-3.61 4.294v-1.933h-7.88v-4.688h7.88v-1.968z\"\n})));\n\nfunction _extends$Q() { _extends$Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$Q.apply(this, arguments); }\nvar IntermediateEventCatchMessageIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$Q({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.049C8.195-.11.935 6.286.125 14.03c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.93 23.445.453 17.201.095c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.22.872 11.725 4.985 6.962c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 5.021c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 5.021zm-7.245 5.475v11.06h14.502v-11.06H8.754zm3.222 1.728h8.057c-1.427.878-2.854 2.806-4.281 3.016l-3.776-3.016zm9.554 1.017v6.587H10.48V13.24l5.524 4.414 5.526-4.414z\"\n})));\n\nfunction _extends$P() { _extends$P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$P.apply(this, arguments); }\nvar IntermediateEventCatchMultipleIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$P({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.003C8.195-.156.935 6.24.125 13.985c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.884 23.445.407 17.201.049c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.174.872 11.679 4.985 6.916c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 4.975c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 4.975zm.006 3.073l-7.62 5.531 2.91 8.95h9.42l2.91-8.95-7.62-5.53zm0 1.067l6.604 4.794-2.523 7.757h-8.162l-2.522-7.757 6.603-4.794z\"\n})));\n\nfunction _extends$O() { _extends$O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$O.apply(this, arguments); }\nvar IntermediateEventCatchNonInterruptingConditionIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$O({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.638 9.563V23.056h10.724V9.563H10.638zm.863.866h8.995v11.76H11.5V10.43zm.928 1.324v.862h7.139v-.862h-7.14zm0 2.605v.866h7.139v-.866h-7.14zm0 3.01v.863h7.139v-.863h-7.14zm0 2.72v.863h7.139v-.864h-7.14zM15.999.308h-.004l-.188.001h-.011l-.188.004h-.011L15.41.32h-.011l-.187.008h-.005L15.2.33l-.187.01h-.005l-.005.001-.187.013h-.011L14.62.37h-.01l-.186.018h-.011l-.185.02-.005.001h-.006l-.185.022-.005.001h-.005l-.185.025h-.005l-.005.001-.185.027h-.005l-.005.001-.184.029h-.005l-.005.001-.183.031-.006.001-.005.001-.182.033-.006.001-.005.001-.182.035-.005.001-.005.001-.182.038h-.005l-.005.002-.181.04h-.005l-.005.002-.18.042-.006.001-.005.001-.18.044-.005.002h-.005l-.17.045-.152.054-.139.082-.121.106-.1.127-.074.143-.046.155-.017.16.013.16.043.156.07.145.097.13.119.108.137.085.15.058.159.03.16-.001.133-.023.165-.043.168-.041.171-.04.171-.037.172-.036.17-.033.173-.03.17-.03.177-.027.171-.025.175-.022.175-.02.175-.02.176-.016.175-.014.177-.012.176-.01.177-.007.174-.006.177-.003.178-.001h.177l.178.004.174.006.177.007.176.01.177.012.175.014.176.017.175.018.175.02.175.023.171.025.176.027.17.03.174.03.17.033.171.036.154.033.16.02.161-.01.156-.04.146-.069.131-.094.111-.117.087-.135.061-.15.032-.158.002-.16-.027-.16-.057-.15L20 1.023l-.108-.12-.128-.097-.145-.073-.128-.038-.158-.035-.005-.001-.005-.001L19.14.62h-.005l-.005-.002-.182-.035h-.006L18.938.58l-.182-.033h-.006l-.005-.002-.183-.03-.005-.001-.006-.001-.183-.029h-.005l-.006-.001-.184-.027h-.005l-.005-.001-.185-.024h-.005L17.968.43 17.783.41l-.006-.001h-.005l-.185-.02h-.006l-.005-.001L17.39.37h-.005L17.38.368l-.187-.015h-.005l-.005-.001-.187-.013h-.011L16.8.328h-.011L16.6.32h-.011l-.187-.006h-.011L16.204.31h-.011L16.005.31H16zm9.016 2.935l-.16.004-.158.033-.15.062-.134.09-.116.111-.093.132-.067.147-.038.156-.01.161.022.16.05.153.078.141.103.124.102.087.045.034.142.106.137.105.14.11.136.11.135.112.134.115.134.117.13.115.132.122.128.12.127.122.126.125.124.126.124.128.121.13.118.128.118.132.117.133.113.134.113.136.11.136.109.137.109.142.104.14.103.14.101.142.1.144.099.146.095.145.094.147.093.15.092.15.087.149.087.15.084.152.084.155.08.152.08.155.04.081.084.138.11.119.128.096.145.072.155.043.16.013.16-.016.155-.046.144-.074.127-.099.106-.12.083-.14.055-.151.026-.16-.004-.16-.034-.158-.05-.124-.042-.085-.002-.004-.003-.005-.084-.165-.002-.004-.003-.005-.086-.164-.002-.004-.003-.005-.088-.162-.002-.005-.003-.005-.09-.161-.002-.005-.003-.004-.092-.16-.003-.005-.002-.005-.094-.16-.003-.004-.003-.004-.096-.159-.002-.004-.003-.005-.098-.157-.003-.004-.003-.005-.1-.156-.003-.004-.003-.005-.101-.154-.003-.005-.003-.004-.104-.154-.003-.004-.003-.005-.106-.152-.003-.005-.003-.004-.108-.151-.003-.004-.003-.005-.11-.15-.003-.004-.003-.004-.111-.15-.004-.003-.003-.005-.113-.147-.004-.004-.003-.005-.115-.146-.004-.004-.003-.004-.117-.145-.004-.004-.003-.004-.12-.144-.003-.004-.003-.004-.121-.142-.004-.004-.003-.004-.123-.141-.003-.004-.004-.004-.125-.14-.003-.004-.004-.004-.127-.138-.003-.004-.004-.004-.128-.136-.004-.004-.004-.004-.13-.135-.004-.004-.004-.004-.132-.134-.003-.004-.004-.003-.134-.133-.004-.003-.004-.004-.135-.13-.004-.004-.004-.004-.136-.128-.004-.004-.004-.004-.138-.126-.004-.004-.004-.003-.14-.125-.004-.004-.004-.003-.14-.123-.005-.004-.004-.003-.142-.121-.004-.004-.004-.003-.144-.12-.004-.003-.004-.003-.145-.117-.004-.004-.004-.003-.147-.115-.004-.004-.004-.003-.148-.113-.004-.003-.004-.004-.149-.111-.004-.003-.004-.004-.05-.036-.14-.083-.15-.055-.16-.027zm-18.381.344l-.161.008-.157.037-.147.066-.111.074-.04.032-.005.003-.004.004-.145.117-.004.003-.004.004-.144.119-.004.003-.004.004-.142.12-.004.004-.004.004-.141.123-.004.003-.004.004-.14.125-.004.003-.004.004-.138.126-.004.004-.004.004-.136.128-.004.004-.004.004-.135.13-.004.004-.004.003-.134.133-.004.003L4.682 5l-.132.134-.003.004-.004.004-.13.135-.004.004-.004.004-.128.136-.004.004-.004.004-.126.138-.004.004-.003.004-.125.14-.004.004-.003.004-.123.14-.004.005-.003.004-.121.142-.004.004-.003.004-.12.144-.003.004-.003.004-.117.145-.004.004-.003.004-.115.146-.004.005-.003.004-.113.147-.003.005-.004.004-.111.149-.003.004-.004.004-.11.15-.002.005-.003.004-.108.151-.003.004-.003.005-.106.152-.003.005-.003.004-.104.154-.003.004-.003.005-.102.154-.003.005-.002.004-.1.156-.003.005-.003.004-.098.157-.003.005-.003.004-.096.159-.002.004-.003.005-.094.16-.003.004-.002.004-.092.16-.003.005-.003.005-.09.161-.002.005-.003.005-.088.162-.002.005-.003.004-.086.164-.002.005-.002.004-.084.165-.003.005-.002.004-.082.166-.002.004-.003.005-.08.167-.002.004-.002.005-.078.168-.002.004-.002.005-.045.1-.053.153-.023.16.007.16.037.157.065.148.092.132.114.114.134.09.148.064.157.035.161.006.16-.025.152-.054.14-.08.121-.106.1-.126.065-.118.043-.095.074-.16.075-.155.077-.157.08-.155.08-.152.083-.155.085-.152.086-.15.088-.149.091-.15.094-.15.094-.147.095-.145.099-.146.1-.144.1-.142.104-.14.104-.14.11-.142.107-.137.11-.136.114-.136.113-.134.117-.133.118-.132.117-.129.122-.13.124-.127.123-.126.127-.125.127-.122.128-.12.132-.122.13-.115.133-.117.135-.115.135-.111.136-.11.037-.03.117-.11.094-.132.068-.146.04-.156.01-.161-.02-.16-.05-.154-.076-.141-.102-.125-.123-.104-.14-.08-.153-.051-.16-.023zM16 3.595h-.005l-.148.001h-.01l-.147.003h-.011l-.147.005h-.011l-.146.007h-.011l-.146.009h-.011l-.146.01h-.005l-.005.001-.146.012h-.011l-.145.014h-.006l-.005.001-.05.006-.158.031-.15.06-.135.088-.117.111-.094.13-.069.147-.04.156-.01.16.019.16.049.154.076.142.102.125.123.105.14.08.152.051.16.023.134-.003.045-.005.135-.013.133-.01.136-.01.135-.007.137-.006.136-.004.136-.003h.274l.136.003.136.004.136.006.136.007.136.01.133.01.135.013.135.014.135.016.134.018.132.018.134.021.133.023.133.024.133.025.13.027.132.03.132.03.129.031.13.034.129.035.129.036.13.04.126.038.128.042.126.042.128.045.127.047.126.047.12.048.127.051.123.052.006.002.147.048.16.021.16-.009.157-.038.147-.067.131-.093.112-.116.089-.135.062-.149.033-.158.004-.16-.027-.16-.055-.151-.083-.139-.107-.12-.127-.099-.118-.063-.004-.001-.005-.003-.005-.002-.133-.056-.005-.002-.005-.002-.134-.054-.004-.002-.005-.002-.135-.053-.005-.002-.005-.002-.135-.051-.005-.002-.005-.002-.135-.05-.005-.001-.005-.002-.137-.048-.005-.001-.005-.002-.137-.046-.005-.002-.005-.002-.137-.044-.005-.002-.005-.001-.138-.043-.006-.002-.005-.001-.138-.042-.005-.001-.005-.002-.14-.04H19.4l-.005-.002-.14-.038-.005-.001-.005-.002-.14-.036-.005-.001-.005-.001-.141-.035-.005-.001-.005-.001-.142-.033-.005-.001-.005-.001-.142-.031-.005-.002h-.005l-.142-.03-.005-.001-.005-.001-.143-.028h-.005l-.005-.002-.143-.025-.006-.001-.005-.001-.143-.024-.005-.001-.006-.001-.143-.022-.006-.001h-.005l-.144-.022h-.005l-.006-.001-.144-.019h-.005l-.006-.001-.144-.017h-.006l-.005-.001-.145-.016h-.011l-.145-.014H17.1l-.005-.001-.146-.012h-.01l-.146-.01-.006-.001h-.005l-.146-.009h-.011l-.147-.006h-.01L16.32 3.6h-.011l-.147-.003h-.011l-.147-.001H16zm-5.482 1.366l-.16.008-.157.037-.123.053-.06.032-.005.002-.004.003-.128.069-.004.002-.005.003-.126.07-.005.003-.004.002-.126.072-.005.003-.004.003-.125.073-.004.003-.005.003-.124.075-.004.003-.005.002-.123.077-.004.003-.005.003-.122.078-.004.003-.005.003-.121.08-.004.002-.005.003-.12.082-.005.003-.004.003-.12.083-.004.003-.004.003-.118.084-.005.003-.004.003-.118.086-.004.003-.004.003-.117.088-.004.003-.004.003-.116.089-.004.003-.004.004-.114.09-.005.003-.004.003-.113.092-.004.004-.004.003-.113.093-.004.004-.004.003-.111.095-.005.003-.004.004-.11.096-.004.004-.004.003-.11.098-.003.003-.004.004-.108.1-.004.003-.004.003-.107.101-.004.004-.004.003-.106.102-.004.004-.003.004-.105.103-.004.004-.004.004-.103.105-.004.004-.004.003-.102.106-.003.004-.004.004-.1.107-.004.004-.004.004-.099.108-.004.004-.003.004-.098.11-.003.003-.004.004-.096.11-.004.005-.003.004-.095.111-.003.004-.004.004-.093.113-.003.004-.004.004-.092.113-.003.004-.003.005-.09.114-.004.004-.003.004-.089.116-.003.004-.003.004-.088.117-.003.004-.003.004-.086.118-.003.004-.003.005-.084.118-.003.004-.003.005-.083.12-.003.003-.003.005-.082.12-.003.005-.002.004-.068.103-.076.142-.048.154-.018.16.011.161.041.156.07.146.095.13.117.11.136.086.15.06.158.03.162.002.158-.03.15-.057.138-.085.119-.109.082-.105.065-.099.075-.11.077-.113.077-.107.08-.11.08-.108.084-.108.083-.105.086-.106.086-.104.088-.104.089-.101.09-.102.093-.101.093-.099.094-.097.095-.096.098-.097.098-.095.099-.093.1-.092.103-.091.101-.089.104-.088.104-.086.106-.086.106-.083.106-.082.109-.082.108-.079.11-.078.11-.076.112-.076.112-.074.113-.072.113-.071.115-.07.115-.068.118-.067.117-.065.12-.065.054-.029.135-.088.116-.111.094-.132.068-.146.04-.156.009-.161-.02-.16-.05-.153-.078-.142-.102-.125-.123-.103-.141-.079-.153-.051-.16-.022zm13.91 2.116l-.162.008-.157.037-.147.066-.132.092-.113.116-.09.134-.063.148-.034.157-.005.162.025.159.055.152.082.138.086.103.09.09.094.098.092.099.093.1.091.103.089.101.088.104.086.104.086.106.083.105.083.108.08.108.081.11.077.107.077.112.075.111.075.114.072.113.071.113.07.114.068.118.067.115.065.118.064.117.062.117.061.121.059.119.059.122.056.121.054.12.055.125.051.123.051.125.048.123.048.127.047.126.044.125.043.128.042.129.039.126.038.13.022.076.058.15.085.137.11.119.129.096.145.07.155.043.16.013.161-.017.154-.046.144-.075.126-.1.106-.12.082-.14.055-.151.025-.16-.005-.16-.026-.132-.023-.082-.002-.005-.001-.005-.042-.139-.001-.005-.002-.005-.043-.138-.001-.005-.002-.005-.044-.137-.002-.005-.002-.005-.046-.137-.002-.005-.001-.005-.048-.137-.002-.005-.002-.005-.05-.135-.001-.005-.002-.005-.051-.135-.002-.005-.002-.005-.053-.135-.002-.005-.002-.005-.054-.133-.002-.005-.002-.005-.057-.133-.002-.005-.002-.005-.057-.132-.003-.005-.002-.005-.06-.132-.001-.005-.002-.004-.061-.132-.003-.004-.002-.005-.063-.13-.002-.005-.002-.005-.064-.13-.003-.004-.002-.005-.066-.129-.002-.004-.003-.005-.067-.128-.002-.005-.003-.004-.069-.128-.002-.004-.003-.005-.07-.126-.003-.005-.003-.004-.072-.126-.002-.005-.003-.004-.074-.125-.002-.004-.003-.005-.075-.124-.003-.004-.003-.005-.076-.123-.003-.004-.003-.005-.078-.122-.003-.004-.003-.005-.08-.121-.003-.004-.003-.005-.081-.12-.003-.005-.003-.004-.083-.12-.003-.004-.003-.004-.084-.118-.003-.005-.003-.004-.086-.118-.003-.004-.004-.004-.087-.117-.003-.004-.003-.004-.09-.116-.002-.004-.004-.004-.09-.114-.003-.005-.004-.004-.091-.113-.004-.004-.003-.004-.094-.113-.003-.004-.003-.004-.095-.111-.004-.004-.003-.004-.096-.11-.004-.005-.003-.004-.098-.11-.004-.003-.003-.004-.1-.108-.003-.004-.004-.004-.1-.107-.004-.004-.004-.004-.102-.106-.003-.003-.004-.004-.093-.095-.124-.103-.14-.08-.153-.05-.16-.023zM4.45 13.135l-.161.002-.158.032-.15.06-.135.088-.118.11-.094.131-.069.146-.035.129-.026.132v.005l-.002.005-.025.143-.001.005-.001.006-.024.143-.001.005-.001.006-.022.143-.001.006-.001.005-.02.144-.001.005-.001.005-.019.145v.005l-.001.006-.017.144v.006l-.001.005-.016.145v.011l-.014.145v.005l-.001.006-.012.146v.01l-.01.146-.001.006v.005l-.009.146v.011l-.007.146v.011l-.004.147v.011l-.003.147v.01l-.002.148v.01l.001.148v.01l.003.147v.011l.005.147v.01l.007.147v.011l.009.146v.011l.01.146v.01l.013.146v.011l.014.145v.005l.001.006.016.145v.011l.018.144v.006l.001.005.019.144v.006l.001.005.021.144v.005l.002.006.022.143v.006l.002.005.024.143v.005l.002.006.025.143.001.005.001.005.028.143.001.005.001.005.03.142v.005l.002.006.03.141.002.005.001.005.033.142v.005l.002.005.035.14v.006l.002.005.036.14.002.005.001.005.038.14.001.005.002.005.04.14v.005l.002.005.042.138.001.006.002.005.042.138.002.005.002.005.017.054.064.148.09.134.114.114.132.092.148.065.157.037.16.007.16-.023.153-.052.14-.08.123-.104.102-.125.076-.142.049-.153.02-.16-.011-.161-.031-.13-.017-.051-.039-.126-.038-.13-.037-.128-.035-.13-.033-.128-.033-.134-.03-.13-.029-.131-.026-.13-.026-.133-.024-.133-.023-.133-.02-.132-.02-.136-.017-.132-.016-.135-.014-.135-.012-.133-.012-.138-.009-.133-.007-.136-.006-.138-.004-.134-.003-.136v-.274l.003-.136.004-.134.006-.139.007-.136.01-.133.01-.138.013-.132.014-.135.016-.135.017-.132.02-.137.02-.13.023-.134.024-.133.024-.126.016-.16-.014-.161-.044-.155-.072-.145-.098-.128-.12-.108-.137-.084-.15-.057-.16-.029zm26.698 1.601l-.161.01-.157.04-.146.067-.131.093-.112.117-.088.135-.061.149-.033.157-.005.134.006.14.006.176.003.177.001.178-.001.177-.003.178-.006.177-.007.176-.01.177-.012.176-.015.176-.016.173-.018.175-.02.175-.024.174-.025.175-.026.17-.03.174-.03.173-.033.17-.036.172-.037.17-.04.17-.042.172-.043.168-.045.166-.048.169-.05.167-.052.168-.053.164-.056.166-.058.166-.06.16-.062.165-.062.158-.066.165-.068.16-.07.16-.07.158-.075.159-.074.155-.079.158-.08.158-.06.15-.03.158-.001.161.029.159.058.15.085.137.108.119.13.097.144.07.156.044.16.013.16-.017.155-.046.143-.074.127-.1.107-.12.07-.115.083-.164.003-.005.002-.004.082-.166.002-.005.003-.004.08-.167.002-.005.002-.004.078-.168.002-.005.002-.004.076-.169.002-.004.002-.005.074-.17.002-.004.002-.005.072-.17.002-.005.002-.005.07-.171.001-.005.002-.005.068-.172.002-.004.002-.005.065-.173.002-.005.002-.005.063-.173.002-.005.002-.005.06-.174.003-.005.001-.005.06-.175.001-.005.002-.005.057-.176.001-.005.002-.005.055-.177.001-.005.002-.005.052-.177.002-.005.001-.005.051-.178.001-.005.002-.005.048-.179.002-.005v-.005l.047-.179.001-.005.002-.005.044-.18v-.005l.002-.005.042-.18.001-.006.001-.005.04-.181.001-.005.001-.005.037-.182.002-.005v-.005l.036-.182v-.006l.002-.005.033-.182v-.006l.002-.005.03-.183.001-.005.001-.005.029-.184v-.005l.001-.006.027-.184v-.005l.001-.005.024-.185v-.005l.001-.005.022-.185v-.006l.001-.005.02-.185v-.006l.001-.005.017-.186v-.005l.001-.005.015-.187v-.005l.001-.005.013-.187v-.01l.01-.187.001-.006v-.005l.009-.187v-.011l.006-.187V16.7l.004-.188v-.011l.001-.188v-.01l-.001-.188v-.011l-.004-.188v-.011l-.006-.187v-.011l-.007-.145-.022-.16-.05-.152-.08-.141-.103-.124-.125-.102-.141-.077-.153-.05-.16-.02zm-30.21.572l-.161.001-.158.032-.15.06-.136.087-.117.11-.095.131-.068.146-.04.156-.012.133-.001.14v.01l.001.188v.011l.004.188v.011l.006.187v.011l.008.187v.011l.011.187v.005l.001.005.013.187v.01l.016.187v.01l.018.186v.011l.02.185.001.005v.006l.022.185.001.005v.005l.025.185v.005l.001.005.027.184v.006l.001.005.029.184v.005l.001.005.031.183.001.005.001.006.033.182.001.005.001.006.035.182.001.005.001.005.038.182v.005l.002.005.04.181v.005l.002.005.042.18.001.006.001.005.044.18.002.005v.005l.047.18.001.004.002.005.048.179.002.005.001.005.05.178.002.005.001.005.053.177.002.005.001.005.055.177.002.005.001.005.057.176.002.005.001.005.06.175.001.005.002.005.061.174.002.005.002.005.063.173.002.005.002.005.065.173.002.005.002.004.067.172.002.005.002.005.07.171.002.005.002.005.072.17.002.005.002.004.074.17.002.005.002.004.076.169.002.004.002.005.078.168.002.004.002.005.08.167.003.004.002.005.082.166.002.004.003.005.02.04.086.136.11.118.13.095.146.07.156.041.16.012.16-.019.155-.048.142-.075.126-.1.105-.123.08-.14.054-.152.024-.16-.006-.16-.036-.158-.051-.123-.018-.034-.078-.158-.074-.155-.074-.16-.071-.157-.07-.16-.068-.16-.067-.165-.062-.158-.062-.164-.059-.161-.058-.166-.056-.166-.053-.164-.052-.168-.05-.167-.048-.17-.045-.165-.043-.168-.043-.172-.039-.17-.037-.17-.036-.172-.033-.17-.03-.173-.03-.174-.027-.17-.025-.175-.022-.174-.021-.175-.018-.175-.017-.173-.014-.176-.012-.176-.01-.177-.007-.176-.006-.177-.003-.178-.001-.177v-.134l-.013-.16-.044-.156-.072-.144-.097-.129-.12-.108-.137-.085-.15-.057-.159-.028zm26.798 2.024l-.16.007-.157.038-.148.066-.132.092-.113.115-.09.134-.062.148-.03.127-.001.004-.023.134-.024.133-.026.133-.026.13-.03.132-.03.129-.032.134-.033.128-.035.13-.037.128-.038.13-.04.126-.04.128-.044.128-.044.126-.046.126-.048.126-.05.125-.05.125-.051.122-.054.123-.055.122-.056.12-.058.122-.06.12-.061.12-.063.119-.062.116-.067.119-.066.116-.069.115-.069.115-.07.113-.073.113-.074.112-.076.113-.077.112-.077.107-.08.11-.08.107-.085.11-.044.056-.088.135-.06.15-.033.158-.002.16.027.16.057.15.083.138.108.12.128.098.144.072.155.045.16.015.161-.016.155-.044.144-.073.128-.098.09-.099.05-.061.003-.004.003-.005.089-.115.003-.004.003-.005.088-.116.003-.004.003-.005.086-.117.003-.004.003-.005.084-.118.003-.004.003-.005.083-.12.003-.004.003-.004.081-.12.003-.005.003-.004.08-.121.003-.005.003-.004.078-.122.003-.005.003-.004.077-.123.002-.005.003-.004.075-.124.003-.005.003-.004.073-.125.003-.005.003-.004.072-.126.002-.004.003-.005.07-.126.003-.005.002-.005.07-.127.002-.004.002-.005.068-.128.002-.005.002-.004.066-.13.003-.004.002-.005.064-.13.002-.004.003-.005.062-.13.002-.005.003-.005.06-.13.003-.005.002-.005.06-.132.002-.005.002-.005.057-.132.003-.005.002-.005.056-.133.002-.005.002-.005.054-.134.002-.004.002-.005.053-.135.002-.005.002-.005.051-.135.002-.005.002-.005.05-.135.001-.005.002-.005.048-.137.001-.005.002-.005.046-.137.002-.005.002-.005.044-.137.002-.005.002-.005.042-.138.002-.005.001-.006.042-.138.001-.005.002-.005.04-.14v-.005l.002-.005.038-.14.001-.005.002-.005.036-.14.001-.005.001-.005.035-.141.001-.005.001-.005.033-.142.001-.005.001-.005.031-.141.001-.006.002-.005.029-.142v-.005l.002-.005.028-.143v-.005l.002-.005.025-.143.001-.006.001-.005.024-.143.001-.005.001-.006.001-.006.01-.161-.02-.16-.05-.154-.077-.141-.102-.125-.123-.104-.141-.079-.153-.051-.16-.022zM6.841 23.019l-.16.024-.152.053-.14.08-.122.105-.101.126-.076.142-.048.154-.018.16.011.161.041.156.07.146.077.109.04.048.003.004.003.004.095.111.003.004.004.004.096.11.004.005.003.004.098.109.003.004.004.004.1.108.003.004.003.004.101.107.004.004.003.004.102.105.004.004.004.004.103.105.004.004.004.003.105.104.003.004.004.003.106.102.004.004.004.004.107.1.004.004.004.004.108.099.004.003.004.004.11.098.003.003.004.004.11.096.004.003.005.004.11.095.005.003.004.004.113.093.004.003.004.004.113.091.004.004.005.003.114.09.004.004.004.003.116.089.004.003.004.003.117.088.004.003.004.003.118.086.004.003.005.003.118.084.004.003.005.003.119.083.004.003.005.003.12.081.005.003.004.003.121.08.005.003.004.003.122.078.005.003.004.003.123.076.005.003.004.003.124.075.005.003.004.003.125.073.004.003.005.002.126.073.004.002.005.003.126.07.005.003.004.002.128.07.004.002.005.002.128.067.005.003.004.002.13.066.004.002.005.003.13.064.004.002.005.003.13.062.005.002.004.003.132.06.004.003.005.002.132.06.005.002.005.002.132.057.005.002.005.002.133.057.005.002.005.002.133.054.005.002.005.002.13.05.154.045.16.016.16-.015.156-.045.144-.072.128-.098.108-.12.083-.138.057-.15.028-.16-.003-.16-.032-.159-.061-.149-.088-.135-.11-.117-.132-.094-.12-.058-.124-.049-.126-.051-.122-.051-.122-.054-.12-.054-.126-.058-.119-.057-.12-.06-.12-.06-.118-.063-.117-.064-.119-.066-.116-.066-.115-.068-.115-.07-.113-.07-.115-.074-.112-.074-.11-.075-.11-.076-.112-.08-.11-.08-.109-.081-.106-.082-.104-.082-.106-.086-.105-.087-.101-.086-.105-.091-.1-.09-.1-.091-.1-.094-.097-.094-.1-.098-.093-.095-.096-.1-.093-.098-.092-.101-.089-.1-.09-.102-.088-.104-.036-.043-.114-.114-.133-.091-.148-.065-.157-.036-.161-.006zm15.063 2.701l-.16.014-.156.044-.12.057-.06.034-.12.066-.117.064-.118.062-.12.061-.12.06-.118.057-.126.058-.12.054-.122.054-.122.05-.126.052-.125.05-.124.046-.127.047-.125.044-.129.043-.126.04-.13.042-.128.038-.127.035-.13.036-.131.034-.129.031-.132.03-.13.03-.135.027-.133.026-.13.023-.13.022-.137.021-.132.02-.134.017-.132.015-.138.015-.135.013-.133.01-.138.01-.136.007-.134.006-.136.004-.14.003-.16.018-.155.047-.142.076-.127.1-.105.122-.08.14-.054.151-.025.16.006.16.035.158.064.148.09.134.114.114.133.092.147.065.157.036.134.008.145-.002h.011l.147-.005h.01l.147-.007h.011l.146-.009h.011l.146-.01h.005l.005-.001.146-.012h.011l.145-.014h.005l.006-.001.145-.016h.011l.144-.018h.006l.005-.001.144-.02h.011l.144-.021.005-.001h.006l.143-.023.006-.001h.005l.143-.025h.005l.006-.002.143-.026h.005l.005-.002.143-.027.005-.001.005-.001.142-.03h.005l.005-.002.142-.03.005-.002.005-.001.142-.033.005-.001.005-.001.14-.035.006-.001.005-.001.14-.037h.005l.005-.002.14-.038.005-.002h.005l.14-.04.005-.002.005-.001.138-.042.005-.001.006-.002.138-.043.005-.001.005-.002.137-.044.005-.002.005-.002.137-.046.005-.002.005-.001.137-.048.005-.002.005-.002.135-.05.005-.001.005-.002.135-.051.005-.002.005-.002.135-.053.005-.002.004-.002.134-.054.005-.002.005-.002.133-.057.005-.002.005-.002.132-.057.005-.003.005-.002.132-.06.005-.001.004-.002.131-.061.005-.003.005-.002.13-.062.005-.003.005-.002.13-.064.004-.003.005-.002.128-.066.005-.002.005-.003.128-.067.005-.002.004-.003.127-.069.005-.002.005-.003.126-.07.005-.003.004-.003.065-.037.132-.093.112-.115.089-.135.062-.149.034-.157.003-.161-.026-.16-.055-.15-.082-.14-.107-.12-.127-.1-.144-.073-.154-.046-.16-.016zM6.33 27.127l-.16.023-.152.053-.14.08-.122.105-.101.126-.076.142-.048.154-.02.16.012.161.041.156.07.146.094.13.096.093.032.026.004.003.004.004.145.117.004.003.004.004.146.115.005.003.004.004.147.113.005.003.004.004.149.111.004.003.004.003.15.11.005.003.004.003.151.108.004.003.005.003.152.106.005.003.004.003.154.104.004.003.005.003.154.102.005.002.004.003.156.1.005.003.004.003.157.098.005.003.004.002.159.096.004.003.005.003.16.094.004.003.004.002.16.092.005.003.005.002.161.09.005.003.005.002.162.088.005.003.004.002.164.086.005.003.004.002.165.084.005.003.004.002.166.082.004.002.005.003.167.08.004.002.005.002.168.078.004.002.005.002.168.076.005.002.005.002.17.074.004.002.005.002.17.072.005.002.005.002.17.07.006.002.005.001.171.068.005.002.005.002.173.065.005.002.005.002.173.063.005.002.005.002.174.06.005.003.005.001.175.06.005.001.005.002.176.057.005.001.005.002.176.055.006.001.005.002.177.052.005.002.005.001.178.05.005.002.005.002.178.048.006.001.005.002.179.046.005.001.005.002.18.044h.005l.005.002.18.042.006.001.005.001.159.035.16.02.16-.01.157-.04.146-.069.13-.094.112-.117.087-.136.06-.149.033-.158.002-.161-.028-.159-.057-.15-.084-.138-.108-.12-.128-.098-.144-.072-.128-.039-.154-.033-.168-.04-.171-.041-.17-.044-.168-.046-.167-.047-.168-.05-.165-.051-.166-.054-.166-.056-.163-.057-.165-.06-.161-.062-.164-.064-.16-.065-.16-.068-.162-.07-.157-.07-.157-.074-.157-.075-.156-.077-.153-.079-.156-.082-.153-.082-.154-.086-.15-.086-.152-.09-.148-.09-.147-.092-.149-.095-.145-.095-.144-.098-.145-.1-.143-.102-.14-.103-.14-.104-.14-.108-.139-.11-.136-.11-.027-.022-.133-.091-.148-.065-.157-.036-.161-.006zm19.215.087l-.16.01-.157.039-.146.067-.11.076-.064.051-.139.11-.14.108-.14.104-.14.103-.143.101-.145.101-.144.098-.145.095-.149.095-.148.093-.147.089-.152.09-.15.086-.154.086-.153.082-.156.082-.153.079-.156.077-.157.075-.158.073-.157.071-.16.07-.16.068-.161.065-.164.064-.161.061-.165.06-.163.058-.166.056-.166.054-.166.051-.167.05-.167.047-.17.046-.168.044-.171.042-.168.039-.17.037-.11.023-.154.047-.143.075-.126.1-.106.122-.081.139-.054.152-.025.16.006.16.035.158.063.148.09.133.114.115.132.092.148.065.157.037.16.007.133-.016.115-.024.005-.001.005-.001.181-.04h.005l.005-.002.18-.042.006-.001.005-.001.18-.044.005-.002.005-.001.18-.046.004-.002h.005l.179-.05h.005l.005-.002.178-.05.005-.002.005-.002.177-.052.005-.002.005-.001.177-.055.005-.002.005-.001.176-.057.005-.002.005-.002.175-.059.005-.001.005-.002.174-.061.005-.002.005-.002.173-.063.005-.002.005-.002.173-.065.004-.002.005-.002.172-.068.005-.002.005-.002.171-.07.005-.001.005-.002.17-.072.005-.002.004-.002.17-.074.005-.002.004-.002.169-.076.004-.002.005-.002.168-.078.004-.002.005-.003.167-.08.004-.002.005-.002.166-.082.004-.002.005-.003.165-.084.004-.002.005-.003.163-.086.005-.002.005-.003.162-.088.005-.002.005-.003.161-.09.005-.002.004-.003.16-.092.005-.003.005-.002.16-.094.004-.003.004-.003.158-.096.005-.002.004-.003.158-.098.004-.003.005-.003.156-.1.004-.003.004-.003.155-.101.005-.003.004-.003.154-.104.004-.003.004-.003.153-.106.004-.003.005-.003.151-.108.004-.003.005-.003.15-.11.004-.003.004-.003.149-.112.004-.003.004-.003.148-.113.004-.004.004-.003.147-.115.004-.004.004-.003.068-.055.116-.113.092-.132.066-.147.038-.157.008-.16-.022-.16-.05-.153-.08-.14-.103-.125-.124-.102-.142-.077-.153-.05-.16-.02z\"\n})));\n\nfunction _extends$N() { _extends$N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$N.apply(this, arguments); }\nvar IntermediateEventCatchNonInterruptingEscalationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$N({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.012 9.222c-1.673 4.657-2.735 9.508-4.409 14.164 1.536-1.526 2.874-3.236 4.41-4.762l4.408 4.762c-1.497-4.712-2.911-9.451-4.409-14.164zm.032 2.93c.823 2.588 1.599 5.19 2.421 7.777l-2.42-2.614c-.683.598-2.454 2.886-2.34 2.39.871-2.489 1.448-5.07 2.34-7.552zM16.012.312c-1.448.02-2.93.157-4.302.628-.852.447-.255 1.863.66 1.574 2.255-.608 4.648-.607 6.922-.108.934.075 1.228-1.376.338-1.67C18.451.44 17.227.317 16.012.311zm9.012 2.934c-.913-.104-1.272 1.258-.454 1.648 1.834 1.36 3.293 3.185 4.31 5.22.526.776 1.842.098 1.515-.78a15.522 15.522 0 00-5.06-6.006c-.1-.044-.203-.07-.31-.082zM6.65 3.59c-.762.089-1.24.809-1.805 1.267C3.38 6.295 2.163 8.007 1.37 9.905c-.266.898 1.094 1.484 1.564.675a14.825 14.825 0 014.327-5.56c.476-.515.09-1.419-.612-1.431zm9.362.007c-.698.066-1.689-.16-2.033.635-.282.733.535 1.358 1.217 1.125 1.806-.147 3.63.203 5.293.907.902.255 1.472-1.112.656-1.573-1.6-.735-3.374-1.089-5.133-1.094zm-5.479 1.365c-.835.15-1.517.76-2.21 1.226-1.203.94-2.318 2.061-3.057 3.402-.33.904 1.063 1.552 1.547.723 1.045-1.656 2.596-2.925 4.285-3.873.545-.499.171-1.463-.565-1.478zm13.903 2.115c-.875-.07-1.22 1.173-.501 1.627 1.325 1.34 2.188 3.062 2.748 4.84.468.84 1.869.21 1.557-.699-.604-2.118-1.751-4.097-3.351-5.615a.93.93 0 00-.453-.153zM4.467 13.132c-.822-.07-.996.826-1.046 1.455-.256 1.93-.094 3.933.562 5.769.406.844 1.807.365 1.612-.551a11.498 11.498 0 01-.334-5.808.874.874 0 00-.794-.865zm26.687 1.6c-.746-.037-1.014.785-.879 1.395.043 2.393-.57 4.771-1.66 6.894-.31.884 1.02 1.536 1.53.75a15.632 15.632 0 001.821-8.372.876.876 0 00-.812-.667zm-30.197.571c-.782-.073-1.044.775-.933 1.404.068 2.414.661 4.833 1.809 6.962.534.77 1.842.076 1.505-.798a14.833 14.833 0 01-1.603-6.861.876.876 0 00-.778-.707zm26.787 2.024c-.777-.048-.952.797-1.021 1.392-.354 1.692-1.202 3.231-2.216 4.608-.407.872.925 1.638 1.48.852 1.361-1.733 2.296-3.827 2.582-6.017a.874.874 0 00-.825-.835zM6.857 23.012c-.808.018-1.082 1.122-.47 1.59 1.393 1.607 3.187 2.886 5.194 3.599.91.222 1.43-1.165.598-1.596a11.495 11.495 0 01-4.723-3.396.899.899 0 00-.599-.197zm15.057 2.7c-.81.194-1.504.76-2.325.972-1.203.458-2.5.536-3.758.664-.869.307-.573 1.728.346 1.663 2.201-.034 4.412-.626 6.293-1.778.604-.495.227-1.532-.556-1.521zM6.346 27.118c-.833.008-1.11 1.218-.395 1.617 1.986 1.602 4.358 2.749 6.868 3.226.933.076 1.227-1.376.338-1.67a14.838 14.838 0 01-6.345-3.066.929.929 0 00-.466-.107zm19.208.087c-.766.09-1.241.841-1.922 1.158-1.516.991-3.251 1.58-4.996 2.005-.872.405-.346 1.849.584 1.604 2.543-.526 4.98-1.66 6.963-3.344.47-.52.072-1.42-.63-1.423z\"\n})));\n\nfunction _extends$M() { _extends$M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$M.apply(this, arguments); }\nvar IntermediateEventCatchNonInterruptingMessageIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$M({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.742 10.464v11.072h14.516V10.464H8.742zm3.224 1.73h8.066a69569 69569 0 00-4.034 3.22l-4.032-3.22zm9.565 1.018v6.594H10.469v-6.593L16 17.63l5.532-4.419zM16 0h-.005l-.188.001h-.011l-.188.004h-.011l-.187.006h-.011l-.187.008h-.005L15.2.02l-.187.01h-.005l-.005.001-.187.013h-.011L14.62.06h-.01l-.186.018h-.011l-.185.02-.005.001h-.006l-.185.022-.005.001h-.005l-.185.025h-.005l-.005.001-.185.027h-.005l-.005.001-.184.029h-.005l-.005.001-.183.031-.006.001-.005.001-.182.033-.006.001-.005.001-.182.035-.005.001-.005.001-.182.038h-.005l-.005.002-.181.04h-.005l-.005.002-.18.042-.006.001-.005.001-.18.044-.005.002h-.005l-.17.045-.152.054-.139.082-.121.106-.1.127-.074.143-.046.155-.017.16.013.16.043.156.07.145.097.13.119.108.137.085.15.058.159.03.16-.001.133-.023.165-.043.168-.041.171-.04.171-.037.172-.036.17-.033.173-.03.17-.03.177-.027.171-.025.175-.022.175-.02.175-.02.176-.016.175-.014.177-.012.176-.01.177-.007.174-.006.177-.003L16 1.73h.177l.178.004.174.006.177.007.176.01.177.012.175.014.176.017.175.018.175.02.175.023.171.025.176.027.17.03.174.03.17.033.171.036.154.033.16.02.161-.01.156-.04.146-.069.131-.094.111-.117.087-.135.061-.15.032-.158.002-.16-.027-.16-.057-.15L20 .714l-.108-.12-.128-.097-.145-.073-.128-.038-.158-.035-.005-.001-.005-.001L19.14.31h-.005l-.005-.002-.182-.035h-.006l-.005-.002-.182-.033h-.006l-.005-.002-.183-.03-.005-.001-.006-.001-.183-.029h-.005l-.006-.001-.184-.027h-.005l-.005-.001-.185-.024h-.005L17.968.12 17.783.1l-.006-.001h-.005l-.185-.02h-.006l-.005-.001L17.39.06h-.005L17.38.06l-.187-.015h-.005l-.005-.001-.187-.013h-.011L16.8.02h-.011L16.6.01h-.011l-.187-.006h-.011L16.204 0h-.011L16.005 0H16zm9.015 2.935l-.16.004-.158.033-.15.062-.134.09-.116.111-.093.132-.067.147-.038.156-.01.161.022.16.05.153.078.141.103.124.102.087.045.034.142.106.137.105.14.11.136.11.135.112.134.115.134.117.13.115.132.122.128.12.127.122.126.125.124.126.124.128.121.13.118.128.118.132.117.133.113.134.113.136.11.136.109.137.109.142.104.14.103.14.101.142.1.144.099.146.095.145.094.147.093.15.092.15.087.149.087.15.084.152.084.155.08.152.08.155.04.081.084.138.11.119.128.096.145.072.155.043.16.013.16-.016.155-.046.144-.074.127-.099.106-.12.083-.14.055-.151.026-.16-.004-.16-.034-.158-.05-.124-.042-.085-.002-.004-.003-.005-.084-.165-.002-.004-.003-.005-.086-.164-.002-.004-.003-.005-.088-.162-.002-.005-.003-.005-.09-.161-.002-.005-.003-.004-.092-.16-.003-.005-.002-.005-.094-.16-.003-.004-.003-.004-.096-.159-.002-.004-.003-.005-.098-.157-.003-.004-.003-.005-.1-.156-.003-.004-.003-.005-.101-.154-.003-.005-.003-.004-.104-.154-.003-.004-.003-.005-.106-.152-.003-.005-.003-.004-.108-.151-.003-.004-.003-.005-.11-.15-.003-.004-.003-.004-.111-.15-.004-.003-.003-.005-.113-.147-.004-.004-.003-.005-.115-.146-.004-.004-.003-.004-.117-.145-.004-.004-.003-.004-.12-.144-.003-.004-.003-.004-.121-.142-.004-.004-.003-.004-.123-.141-.003-.004-.004-.004-.125-.14-.003-.004-.004-.004-.127-.138-.003-.004-.004-.004-.128-.136-.004-.004-.004-.004-.13-.135-.004-.004-.004-.004-.132-.134-.003-.004-.004-.003-.134-.133-.004-.003-.004-.004-.135-.13-.004-.004-.004-.004-.136-.128-.004-.004-.004-.004-.138-.126-.004-.004-.004-.003-.14-.125-.004-.004-.004-.003-.14-.123-.005-.004-.004-.003-.142-.121-.004-.004-.004-.003-.144-.12-.004-.003-.004-.003-.145-.117-.004-.004-.004-.003-.147-.115-.004-.004-.004-.003-.148-.113-.004-.003-.004-.004-.149-.111-.004-.003-.004-.004-.05-.036-.14-.083-.15-.055-.16-.027zM6.634 3.28l-.161.008-.157.037-.147.066-.111.074-.04.032-.005.003-.004.004-.145.117-.004.003-.004.004-.144.119-.004.003-.004.004-.142.12-.004.004-.004.004-.141.123-.004.003-.004.004-.14.125-.004.003-.004.004-.138.126-.004.004-.004.004-.136.128-.004.004-.004.004-.135.13-.004.004-.004.003-.134.133-.004.003-.004.004-.132.134-.003.004-.004.004-.13.135-.004.004-.004.004-.128.136-.004.004-.004.004-.126.138-.004.004-.003.004-.125.14-.004.004-.003.004-.123.14-.004.005-.003.004-.121.142-.004.004-.003.004-.12.144-.003.004-.003.004-.117.145-.004.004-.003.004-.115.146-.004.005-.003.004-.113.147-.003.005-.004.004-.111.149-.003.004-.004.004-.11.15-.002.005-.003.004-.108.151-.003.004-.003.005-.106.152-.003.005-.003.004-.104.154-.003.004-.003.005-.102.154-.003.005-.002.004-.1.156-.003.005-.003.004-.098.157-.003.005-.003.004-.096.159-.002.004-.003.005-.094.16-.003.004-.002.004-.092.16-.003.005-.003.005-.09.161-.002.005-.003.005-.088.162-.002.005-.003.004-.086.164-.002.005-.002.004-.084.165-.003.005-.002.004-.082.166-.002.004-.003.005-.08.167-.002.004-.002.005-.078.168-.002.004-.002.005-.045.1-.053.153-.023.16.007.16.037.157.065.148.092.132.114.114.134.09.148.064.157.035.161.006.16-.025.152-.054.14-.08.121-.106.1-.126.065-.118.043-.095.074-.16.075-.155.077-.157.08-.155.08-.152.083-.155.085-.152.086-.15.088-.149.091-.15.094-.15.094-.147.095-.145.099-.146.1-.144.1-.142.104-.14.104-.14.11-.142.107-.137.11-.136.114-.136.113-.134.117-.133.118-.132.117-.129.122-.13.124-.127.123-.126.127-.125.127-.122.128-.12.132-.122.13-.115.133-.117.135-.115.135-.111.136-.11.037-.03.117-.11.094-.132.068-.146.04-.156.01-.161-.02-.16-.05-.154-.076-.141-.102-.125-.123-.104-.14-.08-.153-.051-.16-.023zM16 3.286h-.005l-.148.001h-.01l-.147.003h-.011l-.147.005h-.011l-.146.007h-.011l-.146.009h-.011l-.146.01h-.005l-.005.001-.146.012h-.011l-.145.014h-.006l-.005.001-.05.006-.158.031-.15.06-.135.088-.117.111-.094.13-.069.147-.04.156-.01.16.019.16.049.154.076.142.102.125.123.105.14.08.152.051.16.023.134-.003.045-.005.135-.013.133-.01.136-.01.135-.007.137-.006.136-.004.136-.003h.274l.136.003.136.004.136.006.136.007.136.01.133.01.135.013.135.014.135.016.134.018.132.018.134.021.133.023.133.024.133.025.13.027.132.03.132.03.129.031.13.034.129.035.129.036.13.04.126.038.128.042.126.042.128.045.127.047.126.047.12.048.127.051.123.052.006.002.147.048.16.021.16-.009.157-.038.147-.067.131-.093.112-.116.089-.135.062-.149.033-.158.004-.16-.027-.16-.055-.151-.083-.139-.107-.12-.127-.099-.118-.063-.004-.001-.005-.003-.005-.002-.133-.056-.005-.002-.005-.002-.134-.054-.004-.002-.005-.002-.135-.053-.005-.002-.005-.002-.135-.051-.005-.002-.005-.002-.135-.05-.005-.001-.005-.002-.137-.048-.005-.001-.005-.002-.137-.046-.005-.002-.005-.002-.137-.044-.005-.002-.005-.001-.138-.043-.006-.002-.005-.001-.138-.042-.005-.001-.005-.002-.14-.04H19.4l-.005-.002-.14-.038-.005-.001-.005-.002-.14-.036-.005-.001-.005-.001-.141-.035-.005-.001-.005-.001-.142-.033-.005-.001-.005-.001-.142-.031-.005-.002h-.005l-.142-.03-.005-.001-.005-.001-.143-.028h-.005l-.005-.002-.143-.025-.006-.001-.005-.001-.143-.024-.005-.001-.006-.001-.143-.022-.006-.001h-.005l-.144-.022h-.005l-.006-.001-.144-.019h-.005l-.006-.001-.144-.017h-.006l-.005-.001-.145-.016h-.011l-.145-.014H17.1l-.005-.001-.146-.012h-.01l-.146-.01-.006-.001h-.005l-.146-.009h-.011l-.147-.006h-.01l-.147-.005h-.011l-.147-.003h-.011l-.147-.001H16zm-5.482 1.366l-.16.008-.157.037-.123.053-.06.032-.005.002-.004.003-.128.069-.004.002-.005.003-.126.07-.005.003-.004.002-.126.072-.005.003-.004.003-.125.073-.004.003-.005.003-.124.075-.004.003-.005.002-.123.077-.004.003-.005.003-.122.078-.004.003-.005.003-.121.08-.004.002-.005.003-.12.082-.005.003-.004.003-.12.083-.004.003-.004.003-.118.084-.005.003-.004.003-.118.086-.004.003-.004.003-.117.088-.004.003-.004.003-.116.089-.004.003-.004.004-.114.09-.005.003-.004.003-.113.092-.004.004-.004.003-.113.093-.004.004-.004.003-.111.095-.005.003-.004.004-.11.096-.004.004-.004.003-.11.098-.003.003-.004.004-.108.1-.004.003-.004.003-.107.101-.004.004-.004.003-.106.102-.004.004-.003.004-.105.103-.004.004-.004.004-.103.105-.004.004-.004.003-.102.106-.003.004-.004.004-.1.107-.004.004-.004.004-.099.108-.004.004-.003.004-.098.11-.003.003-.004.004-.096.11-.004.005-.003.004-.095.111-.003.004-.004.004-.093.113-.003.004-.004.004-.092.113-.003.004-.003.005-.09.114-.004.004-.003.004-.089.116-.003.004-.003.004-.088.117-.003.004-.003.004-.086.118-.003.004-.003.005-.084.118-.003.004-.003.005-.083.12-.003.003-.003.005-.082.12-.003.005-.002.004-.068.103-.076.142-.048.154-.018.16.011.161.041.156.07.146.095.13.117.11.136.086.15.06.158.03.162.002.158-.03.15-.057.138-.085.119-.109.082-.105.065-.099.075-.11.077-.113.077-.107.08-.11.08-.108.084-.108.083-.105.086-.106.086-.104.088-.104.089-.101.09-.102.093-.101.093-.099.094-.097.095-.096.098-.097.098-.095.099-.093.1-.092.103-.091.101-.089.104-.088.104-.086.106-.086.106-.083.106-.082.109-.082.108-.079.11-.078.11-.076.112-.076.112-.074.113-.072.113-.071.115-.07.115-.068.118-.067.117-.065.12-.065.054-.029.135-.088.116-.111.094-.132.068-.146.04-.156.009-.161-.02-.16-.05-.153-.078-.142-.102-.125-.123-.103-.141-.079-.153-.051-.16-.022zm13.91 2.116l-.162.008-.157.037-.147.066-.132.092-.113.116-.09.134-.063.148-.034.157-.005.162.025.159.055.152.082.138.086.103.09.09.094.098.092.099.093.1.091.103.089.101.088.104.086.104.086.106.083.105.083.108.08.108.081.11.077.107.077.112.075.111.075.114.072.113.071.113.07.114.068.118.067.115.065.118.064.117.062.117.061.121.059.119.059.122.056.121.054.12.055.125.051.123.051.125.048.123.048.127.047.126.044.125.043.128.042.129.039.126.038.13.022.076.058.15.085.137.11.119.129.096.145.07.155.043.16.013.161-.017.154-.046.144-.075.126-.1.106-.12.082-.14.055-.151.025-.16-.005-.16-.026-.132-.023-.082-.002-.005-.001-.005-.042-.139-.001-.005-.002-.005-.043-.138-.001-.005-.002-.005-.044-.137-.002-.005-.002-.005-.046-.137-.002-.005-.001-.005-.048-.137-.002-.005-.002-.005-.05-.135-.001-.005-.002-.005-.051-.135-.002-.005-.002-.005-.053-.135-.002-.005-.002-.005-.054-.133-.002-.005-.002-.005-.057-.133-.002-.005-.002-.005-.057-.132-.003-.005-.002-.005-.06-.132-.001-.005-.002-.004-.061-.132-.003-.004-.002-.005-.063-.13-.002-.005-.002-.005-.064-.13-.003-.004-.002-.005-.066-.129-.002-.004-.003-.005-.067-.128-.002-.005-.003-.004-.069-.128-.002-.004-.003-.005-.07-.126-.003-.005-.003-.004-.072-.126-.002-.005-.003-.004-.074-.125-.002-.004-.003-.005-.075-.124-.003-.004-.003-.005-.076-.123-.003-.004-.003-.005-.078-.122-.003-.004-.003-.005-.08-.121-.003-.004-.003-.005-.081-.12-.003-.005-.003-.004-.083-.12-.003-.004-.003-.004-.084-.118-.003-.005-.003-.004-.086-.118-.003-.004-.004-.004-.087-.117-.003-.004-.003-.004-.09-.116-.002-.004-.004-.004-.09-.114-.003-.005-.004-.004-.091-.113-.004-.004-.003-.004-.094-.113-.003-.004-.003-.004-.095-.111-.004-.004-.003-.004-.096-.11-.004-.005-.003-.004-.098-.11-.004-.003-.003-.004-.1-.108-.003-.004-.004-.004-.1-.107-.004-.004-.004-.004-.102-.106-.003-.003-.004-.004-.093-.095-.124-.103-.14-.08-.153-.05-.16-.023zM4.45 12.826l-.161.002-.158.032-.15.06-.135.088-.118.11-.094.131-.069.146-.035.129-.026.132v.005l-.002.005-.025.143-.001.005-.001.006-.024.143-.001.005-.001.006-.022.143-.001.006-.001.005-.02.144-.001.005-.001.005-.019.145v.005l-.001.006-.017.144v.006l-.001.005-.016.145v.011l-.014.145v.005l-.001.006-.012.146v.01l-.01.146-.001.006v.005l-.009.146v.011l-.007.146v.011l-.004.147v.011l-.003.147v.01l-.002.148v.01l.001.148v.01l.003.147v.011l.005.147v.01l.007.147v.011l.009.146v.011l.01.146v.01l.013.146v.011l.014.145v.005l.001.006.016.145v.011l.018.144v.006l.001.005.019.144v.006l.001.005.021.144v.005l.002.006.022.143v.006l.002.005.024.143v.005l.002.006.025.143.001.005.001.005.028.143.001.005.001.005.03.142v.005l.002.006.03.141.002.005.001.005.033.142v.005l.002.005.035.14v.006l.002.005.036.14.002.005.001.005.038.14.001.005.002.005.04.14v.005l.002.005.042.138.001.006.002.005.042.138.002.005.002.005.017.054.064.148.09.134.114.114.132.092.148.065.157.037.16.007.16-.023.153-.052.14-.08.123-.104.102-.125.076-.142.049-.153.02-.16-.011-.161-.031-.13-.017-.051-.039-.126-.038-.13-.037-.128-.035-.13-.033-.128-.033-.134-.03-.13-.029-.131-.026-.13-.026-.133-.024-.133-.023-.133-.02-.132-.02-.136-.017-.132-.016-.135-.014-.135-.012-.133-.012-.138-.009-.133-.007-.136-.006-.138-.004-.134-.003-.136v-.274l.003-.136.004-.134.006-.139.007-.136.01-.133.01-.138.013-.132.014-.135.016-.135.017-.132.02-.137.02-.13.023-.134.024-.133.024-.126.016-.16-.014-.161-.044-.155-.072-.145-.098-.128-.12-.108-.137-.084-.15-.057-.16-.029zm26.698 1.601l-.161.01-.157.04-.146.067-.131.093-.112.117-.088.135-.061.149-.033.157-.005.134.006.14.006.176.003.177.001.178-.001.177-.003.178-.006.177-.007.176-.01.177-.012.176-.015.176-.016.173-.018.175-.02.175-.024.174-.025.175-.026.17-.03.174-.03.173-.033.17-.036.172-.037.17-.04.17-.042.172-.043.168-.045.166-.048.169-.05.167-.052.168-.053.164-.056.166-.058.166-.06.16-.062.165-.062.158-.066.165-.068.16-.07.16-.07.158-.075.159-.074.155-.079.158-.08.158-.06.15-.03.158-.001.161.029.159.058.15.085.137.108.119.13.097.144.07.156.044.16.013.16-.017.155-.046.143-.074.127-.1.107-.12.07-.115.083-.164.003-.005.002-.004.082-.166.002-.005.003-.004.08-.167.002-.005.002-.004.078-.168.002-.005.002-.004.076-.169.002-.004.002-.005.074-.17.002-.004.002-.005.072-.17.002-.005.002-.005.07-.171.001-.005.002-.005.068-.172.002-.004.002-.005.065-.173.002-.005.002-.005.063-.173.002-.005.002-.005.06-.174.003-.005.001-.005.06-.175.001-.005.002-.005.057-.176.001-.005.002-.005.055-.177.001-.005.002-.005.052-.177.002-.005.001-.005.051-.178.001-.005.002-.005.048-.179.002-.005v-.005l.047-.179.001-.005.002-.005.044-.18v-.005l.002-.005.042-.18.001-.006.001-.005.04-.181.001-.005.001-.005.037-.182.002-.005v-.005l.036-.182v-.006l.002-.005.033-.182v-.006l.002-.005.03-.183.001-.005.001-.005.029-.184v-.005l.001-.006.027-.184v-.005l.001-.005.024-.185v-.005l.001-.005.022-.185v-.006l.001-.005.02-.185v-.006l.001-.005.017-.186v-.005l.001-.005.015-.187v-.005l.001-.005.013-.187v-.01l.01-.187.001-.006v-.005l.009-.187v-.011l.006-.187v-.011l.004-.188v-.011l.001-.188v-.01l-.001-.188v-.011l-.004-.188v-.011l-.006-.187v-.011l-.007-.145-.022-.16-.05-.152-.08-.141-.103-.124-.125-.102-.141-.077-.153-.05-.16-.02zM.938 15L.777 15l-.158.032-.15.06-.136.087-.117.11-.095.131-.068.146-.04.156-.012.133-.001.14v.01l.001.188v.011l.004.188v.011l.006.187v.011l.008.187v.011l.011.187v.005l.001.005.013.187v.01l.016.187v.01l.018.186v.011l.02.185.001.005v.006l.022.185.001.005v.005l.025.185v.005l.001.005.027.184v.006l.001.005.029.184v.005l.001.005.031.183.001.005.001.006.033.182.001.005.001.006.035.182.001.005.001.005.038.182v.005l.002.005.04.181v.005l.002.005.042.18.001.006.001.005.044.18.002.005v.005l.047.18.001.004.002.005.048.179.002.005.001.005.05.178.002.005.001.005.053.177.002.005.001.005.055.177.002.005.001.005.057.176.002.005.001.005.06.175.001.005.002.005.061.174.002.005.002.005.063.173.002.005.002.005.065.173.002.005.002.004.067.172.002.005.002.005.07.171.002.005.002.005.072.17.002.005.002.004.074.17.002.005.002.004.076.169.002.004.002.005.078.168.002.004.002.005.08.167.003.004.002.005.082.166.002.004.003.005.02.04.086.136.11.118.13.095.146.07.156.041.16.012.16-.019.155-.048.142-.075.126-.1.105-.123.08-.14.054-.152.024-.16-.006-.16-.036-.158-.051-.123-.018-.034-.078-.158L3.1 22.1l-.074-.16-.071-.157-.07-.16-.068-.16-.067-.165-.062-.158-.062-.164-.059-.161-.058-.166-.056-.166-.053-.164-.052-.168-.05-.167-.048-.17-.045-.165-.043-.168-.043-.172-.039-.17-.037-.17-.036-.172-.033-.17-.03-.173-.03-.174-.027-.17-.025-.175-.022-.174-.021-.175-.018-.175-.017-.173-.014-.176-.012-.176-.01-.177-.007-.176-.006-.177-.003-.178L1.73 16v-.134l-.013-.16-.044-.156-.072-.144-.097-.129-.12-.108-.137-.085-.15-.057L.938 15zm26.798 2.024l-.16.007-.157.038-.148.066-.132.092-.113.115-.09.134-.062.148-.03.127-.001.004-.023.134-.024.133-.026.133-.026.13-.03.132-.03.129-.032.134-.033.128-.035.13-.037.128-.038.13-.04.126-.04.128-.044.128-.044.126-.046.126-.048.126-.05.125-.05.125-.051.122-.054.123-.055.122-.056.12-.058.122-.06.12-.061.12-.063.119-.062.116-.067.119-.066.116-.069.115-.069.115-.07.113-.073.113-.074.112-.076.113-.077.112-.077.107-.08.11-.08.107-.085.11-.044.056-.088.135-.06.15-.033.158-.002.16.027.16.057.15.083.138.108.12.128.098.144.072.155.045.16.015.161-.016.155-.044.144-.073.128-.098.09-.099.05-.061.003-.004.003-.005.089-.115.003-.004.003-.005.088-.116.003-.004.003-.005.086-.117.003-.004.003-.005.084-.118.003-.004.003-.005.083-.12.003-.004.003-.004.081-.12.003-.005.003-.004.08-.121.003-.005.003-.004.078-.122.003-.005.003-.004.077-.123.002-.005.003-.004.075-.124.003-.005.003-.004.073-.125.003-.005.003-.004.072-.126.002-.004.003-.005.07-.126.003-.005.002-.005.07-.127.002-.004.002-.005.068-.128.002-.005.002-.004.066-.13.003-.004.002-.005.064-.13.002-.004.003-.005.062-.13.002-.005.003-.005.06-.13.003-.005.002-.005.06-.132.002-.005.002-.005.057-.132.003-.005.002-.005.056-.133.002-.005.002-.005.054-.134.002-.004.002-.005.053-.135.002-.005.002-.005.051-.135.002-.005.002-.005.05-.135.001-.005.002-.005.048-.137.001-.005.002-.005.046-.137.002-.005.002-.005.044-.137.002-.005.002-.005.042-.138.002-.005.001-.006.042-.138.001-.005.002-.005.04-.14V19.4l.002-.005.038-.14.001-.005.002-.005.036-.14.001-.005.001-.005.035-.141.001-.005.001-.005.033-.142.001-.005.001-.005.031-.141.001-.006.002-.005.029-.142v-.005l.002-.005.028-.143v-.005l.002-.005.025-.143.001-.006.001-.005.024-.143.001-.005.001-.006.001-.006.01-.161-.02-.16-.05-.154-.077-.141-.102-.125-.123-.104-.141-.079-.153-.051-.16-.022zM6.841 22.71l-.16.024-.152.053-.14.08-.122.105-.101.126-.076.142-.048.154-.018.16.011.161.041.156.07.146.077.109.04.048.003.004.003.004.095.111.003.004.004.004.096.11.004.005.003.004.098.109.003.004.004.004.1.108.003.004.003.004.101.107.004.004.003.004.102.105.004.004.004.004.103.105.004.004.004.003.105.104.003.004.004.003.106.102.004.004.004.004.107.1.004.004.004.004.108.099.004.003.004.004.11.098.003.003.004.004.11.096.004.003.005.004.11.095.005.003.004.004.113.093.004.003.004.004.113.091.004.004.005.003.114.09.004.004.004.003.116.089.004.003.004.003.117.088.004.003.004.003.118.086.004.003.005.003.118.084.004.003.005.003.119.083.004.003.005.003.12.081.005.003.004.003.121.08.005.003.004.003.122.078.005.003.004.003.123.076.005.003.004.003.124.075.005.003.004.003.125.073.004.003.005.002.126.073.004.002.005.003.126.07.005.003.004.002.128.07.004.002.005.002.128.067.005.003.004.002.13.066.004.002.005.003.13.064.004.002.005.003.13.062.005.002.004.003.132.06.004.003.005.002.132.06.005.002.005.002.132.057.005.002.005.002.133.057.005.002.005.002.133.054.005.002.005.002.13.05.154.045.16.016.16-.015.156-.045.144-.072.128-.098.108-.12.083-.138.057-.15.028-.16-.003-.16-.032-.159-.061-.149-.088-.135-.11-.117-.132-.094-.12-.058-.124-.049-.126-.051-.122-.051-.122-.054-.12-.054-.126-.058-.119-.057-.12-.06-.12-.06-.118-.063-.117-.064-.119-.066-.116-.066-.115-.068-.115-.07-.113-.07-.115-.074-.112-.074-.11-.075-.11-.076-.112-.08-.11-.08-.109-.081-.106-.082-.104-.082-.106-.086-.105-.087-.101-.086-.105-.091-.1-.09-.1-.091-.1-.094-.097-.094-.1-.098-.093-.095-.096-.1-.093-.098-.092-.101-.089-.1-.09-.102-.088-.104-.036-.043-.114-.114-.133-.091-.148-.065-.157-.036-.161-.006zm15.063 2.701l-.16.014-.156.044-.12.057-.06.034-.12.066-.117.064-.118.062-.12.061-.12.06-.118.057-.126.058-.12.054-.122.054-.122.05-.126.052-.125.05-.124.046-.127.047-.125.044-.129.043-.126.04-.13.042-.128.038-.127.035-.13.036-.131.034-.129.031-.132.03-.13.03-.135.027-.133.026-.13.023-.13.022-.137.021-.132.02-.134.017-.132.015-.138.015-.135.013-.133.01-.138.01-.136.007-.134.006-.136.004-.14.003-.16.018-.155.047-.142.076-.127.1-.105.122-.08.14-.054.151-.025.16.006.16.035.158.064.148.09.134.114.114.133.092.147.065.157.036.134.008.145-.002h.011l.147-.005h.01l.147-.007h.011l.146-.009h.011l.146-.01h.005l.005-.001.146-.012h.011l.145-.014h.005l.006-.001.145-.016h.011l.144-.018h.006l.005-.001.144-.02h.011l.144-.021.005-.001h.006l.143-.023.006-.001h.005l.143-.025h.005l.006-.002.143-.026h.005l.005-.002.143-.027.005-.001.005-.001.142-.03h.005l.005-.002.142-.03.005-.002.005-.001.142-.033.005-.001.005-.001.14-.035.006-.001.005-.001.14-.037h.005l.005-.002.14-.038.005-.002h.005l.14-.04.005-.002.005-.001.138-.042.005-.001.006-.002.138-.043.005-.001.005-.002.137-.044.005-.002.005-.002.137-.046.005-.002.005-.001.137-.048.005-.002.005-.002.135-.05.005-.001.005-.002.135-.051.005-.002.005-.002.135-.053.005-.002.004-.002.134-.054.005-.002.005-.002.133-.057.005-.002.005-.002.132-.057.005-.003.005-.002.132-.06.005-.001.004-.002.131-.061.005-.003.005-.002.13-.062.005-.003.005-.002.13-.064.004-.003.005-.002.128-.066.005-.002.005-.003.128-.067.005-.002.004-.003.127-.069.005-.002.005-.003.126-.07.005-.003.004-.003.065-.037.132-.093.112-.115.089-.135.062-.149.034-.157.003-.161-.026-.16-.055-.15-.082-.14-.107-.12-.127-.1-.144-.073-.154-.046-.16-.016zM6.33 26.818l-.16.023-.152.053-.14.08-.122.105-.101.126-.076.142-.048.154-.02.16.012.161.041.156.07.146.094.13.096.093.032.026.004.003.004.004.145.117.004.003.004.004.146.115.005.003.004.004.147.113.005.003.004.004.149.111.004.003.004.003.15.11.005.003.004.003.151.108.004.003.005.003.152.106.005.003.004.003.154.104.004.003.005.003.154.102.005.002.004.003.156.1.005.003.004.003.157.098.005.003.004.002.159.096.004.003.005.003.16.094.004.003.004.002.16.092.005.003.005.002.161.09.005.003.005.002.162.088.005.003.004.002.164.086.005.003.004.002.165.084.005.003.004.002.166.082.004.002.005.003.167.08.004.002.005.002.168.078.004.002.005.002.168.076.005.002.005.002.17.074.004.002.005.002.17.072.005.002.005.002.17.07.006.002.005.001.171.068.005.002.005.002.173.065.005.002.005.002.173.063.005.002.005.002.174.06.005.003.005.001.175.06.005.001.005.002.176.057.005.001.005.002.176.055.006.001.005.002.177.052.005.002.005.001.178.05.005.002.005.002.178.048.006.001.005.002.179.046.005.001.005.002.18.044h.005l.005.002.18.042.006.001.005.001.159.035.16.02.16-.01.157-.04.146-.069.13-.094.112-.117.087-.136.06-.149.033-.158.002-.161-.028-.159-.057-.15-.084-.138-.108-.12-.128-.098-.144-.072-.128-.039-.154-.033-.168-.04-.171-.041-.17-.044-.168-.046-.167-.047-.168-.05-.165-.051-.166-.054-.166-.056-.163-.057-.165-.06-.161-.062-.164-.064-.16-.065-.16-.068-.162-.07-.157-.07-.157-.074-.157-.075-.156-.077-.153-.079-.156-.082-.153-.082-.154-.086-.15-.086-.152-.09-.148-.09-.147-.092-.149-.095-.145-.095-.144-.098-.145-.1-.143-.102-.14-.103-.14-.104-.14-.108-.139-.11-.136-.11-.027-.022-.133-.091-.148-.065-.157-.036-.161-.006zm19.215.087l-.16.01-.157.039-.146.067-.11.076-.064.051-.139.11-.14.108-.14.104-.14.103-.143.101-.145.101-.144.098-.145.095-.149.095-.148.093-.147.089-.152.09-.15.086-.154.086-.153.082-.156.082-.153.079-.156.077-.157.075-.158.073-.157.071-.16.07-.16.068-.161.065-.164.064-.161.061-.165.06-.163.058-.166.056-.166.054-.166.051-.167.05-.167.047-.17.046-.168.044-.171.042-.168.039-.17.037-.11.023-.154.047-.143.075-.126.1-.106.122-.081.139-.054.152-.025.16.006.16.035.158.063.148.09.133.114.115.132.092.148.065.157.037.16.007.133-.016.115-.024.005-.001.005-.001.181-.04h.005l.005-.002.18-.042.006-.001.005-.001.18-.044.005-.002.005-.001.18-.046.004-.002h.005l.179-.05h.005l.005-.002.178-.05.005-.002.005-.002.177-.052.005-.002.005-.001.177-.055.005-.002.005-.001.176-.057.005-.002.005-.002.175-.059.005-.001.005-.002.174-.061.005-.002.005-.002.173-.063.005-.002.005-.002.173-.065.004-.002.005-.002.172-.068.005-.002.005-.002.171-.07.005-.001.005-.002.17-.072.005-.002.004-.002.17-.074.005-.002.004-.002.169-.076.004-.002.005-.002.168-.078.004-.002.005-.003.167-.08.004-.002.005-.002.166-.082.004-.002.005-.003.165-.084.004-.002.005-.003.163-.086.005-.002.005-.003.162-.088.005-.002.005-.003.161-.09.005-.002.004-.003.16-.092.005-.003.005-.002.16-.094.004-.003.004-.003.158-.096.005-.002.004-.003.158-.098.004-.003.005-.003.156-.1.004-.003.004-.003.155-.101.005-.003.004-.003.154-.104.004-.003.004-.003.153-.106.004-.003.005-.003.151-.108.004-.003.005-.003.15-.11.004-.003.004-.003.149-.112.004-.003.004-.003.148-.113.004-.004.004-.003.147-.115.004-.004.004-.003.068-.055.116-.113.092-.132.066-.147.038-.157.008-.16-.022-.16-.05-.153-.08-.14-.103-.125-.124-.102-.142-.077-.153-.05-.16-.02z\"\n})));\n\nfunction _extends$L() { _extends$L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$L.apply(this, arguments); }\nvar IntermediateEventCatchNonInterruptingMultipleIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$L({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.637 13.902l-7.625-5.535-7.624 5.535 2.912 8.956h9.425l2.912-8.956zm-1.017.33l-2.524 7.762H11.93l-2.524-7.762 6.607-4.796 6.608 4.796zM16.012.311c-1.448.02-2.93.157-4.302.628-.852.447-.255 1.863.66 1.574 2.255-.608 4.648-.607 6.922-.108.934.075 1.228-1.376.338-1.67C18.451.44 17.227.317 16.012.311zm9.012 2.934c-.913-.104-1.272 1.258-.454 1.648 1.834 1.36 3.293 3.185 4.31 5.22.526.776 1.842.098 1.515-.78a15.522 15.522 0 00-5.06-6.006c-.1-.044-.203-.07-.31-.082zM6.65 3.59c-.762.089-1.24.809-1.805 1.267C3.38 6.295 2.163 8.007 1.37 9.905c-.266.898 1.094 1.484 1.564.675a14.825 14.825 0 014.327-5.56c.476-.515.09-1.419-.612-1.431zm9.362.007c-.698.066-1.689-.16-2.033.635-.282.733.535 1.358 1.217 1.125 1.806-.147 3.63.203 5.293.907.902.255 1.472-1.112.656-1.573-1.6-.735-3.374-1.089-5.133-1.094zm-5.479 1.365c-.835.15-1.517.76-2.21 1.226-1.203.94-2.318 2.061-3.057 3.402-.33.904 1.063 1.552 1.547.723 1.045-1.656 2.596-2.925 4.285-3.873.545-.499.171-1.463-.565-1.478zm13.903 2.115c-.875-.07-1.22 1.173-.501 1.627 1.325 1.34 2.188 3.062 2.748 4.84.468.84 1.869.21 1.557-.699-.604-2.118-1.751-4.097-3.351-5.615a.93.93 0 00-.453-.153zM4.467 13.132c-.822-.07-.996.826-1.046 1.455-.256 1.93-.094 3.933.562 5.769.406.844 1.807.365 1.612-.551a11.498 11.498 0 01-.334-5.808.874.874 0 00-.794-.865zm26.687 1.6c-.746-.037-1.014.785-.879 1.395.043 2.393-.57 4.771-1.66 6.894-.31.884 1.02 1.536 1.53.75a15.632 15.632 0 001.821-8.372.876.876 0 00-.812-.667zm-30.197.571c-.782-.073-1.044.775-.933 1.404.068 2.414.661 4.833 1.809 6.962.534.77 1.842.076 1.505-.798a14.833 14.833 0 01-1.603-6.861.876.876 0 00-.778-.707zm26.787 2.024c-.777-.048-.952.797-1.021 1.392-.354 1.692-1.202 3.231-2.216 4.608-.407.872.925 1.638 1.48.852 1.361-1.733 2.296-3.827 2.582-6.017a.874.874 0 00-.825-.835zM6.857 23.012c-.808.018-1.082 1.122-.47 1.59 1.393 1.607 3.187 2.886 5.194 3.599.91.222 1.43-1.165.598-1.596a11.495 11.495 0 01-4.723-3.396.899.899 0 00-.599-.197zm15.057 2.7c-.81.194-1.504.76-2.325.972-1.203.458-2.5.536-3.758.664-.869.307-.573 1.728.346 1.663 2.201-.034 4.412-.626 6.293-1.778.604-.495.227-1.532-.556-1.521zM6.346 27.118c-.833.008-1.11 1.218-.395 1.617 1.986 1.602 4.358 2.749 6.868 3.226.933.076 1.227-1.376.338-1.67a14.838 14.838 0 01-6.345-3.066.929.929 0 00-.466-.107zm19.208.087c-.766.09-1.241.841-1.922 1.158-1.516.991-3.251 1.58-4.996 2.005-.872.405-.346 1.849.584 1.604 2.543-.526 4.98-1.66 6.963-3.344.47-.52.072-1.42-.63-1.423z\"\n})));\n\nfunction _extends$K() { _extends$K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$K.apply(this, arguments); }\nvar IntermediateEventCatchNonInterruptingParallelIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$K({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.51 9.081v4.428H9.08v4.982h4.428v4.428h4.982V18.49h4.428v-4.982H18.49V9.081h-4.982zm.83.83h3.32v4.428h4.429v3.322H17.66v4.428h-3.32v-4.454H9.91v-3.296h4.428V9.911zM16 0h-.005l-.188.001h-.011l-.188.004h-.011l-.187.006h-.011l-.187.008h-.005L15.2.02l-.187.01h-.005l-.005.001-.187.013h-.011L14.62.06h-.01l-.186.018h-.011l-.185.02-.005.001h-.006l-.185.022-.005.001h-.005l-.185.025h-.005l-.005.001-.185.027h-.005l-.005.001-.184.029h-.005l-.005.001-.183.031-.006.001-.005.001-.182.033-.006.001-.005.001-.182.035-.005.001-.005.001-.182.038h-.005l-.005.002-.181.04h-.005l-.005.002-.18.042-.006.001-.005.001-.18.044-.005.002h-.005l-.17.045-.152.054-.139.082-.121.106-.1.127-.074.143-.046.155-.017.16.013.16.043.156.07.145.097.13.119.108.137.085.15.058.159.03.16-.001.133-.023.165-.043.168-.041.171-.04.171-.037.172-.036.17-.033.173-.03.17-.03.177-.027.171-.025.175-.022.175-.02.175-.02.176-.016.175-.014.177-.012.176-.01.177-.007.174-.006.177-.003L16 1.73h.177l.178.004.174.006.177.007.176.01.177.012.175.014.176.017.175.018.175.02.175.023.171.025.176.027.17.03.174.03.17.033.171.036.154.033.16.02.161-.01.156-.04.146-.069.131-.094.111-.117.087-.135.061-.15.032-.158.002-.16-.027-.16-.057-.15L20 .714l-.108-.12-.128-.097-.145-.073-.128-.038-.158-.035-.005-.001-.005-.001L19.14.31h-.005l-.005-.002-.182-.035h-.006l-.005-.002-.182-.033h-.006l-.005-.002-.183-.03-.005-.001-.006-.001-.183-.029h-.005l-.006-.001-.184-.027h-.005l-.005-.001-.185-.024h-.005L17.968.12 17.783.1l-.006-.001h-.005l-.185-.02h-.006l-.005-.001L17.39.06h-.005L17.38.06l-.187-.015h-.005l-.005-.001-.187-.013h-.011L16.8.02h-.011L16.6.01h-.011l-.187-.006h-.011L16.204 0h-.011L16.005 0H16zm9.015 2.935l-.16.004-.158.033-.15.062-.134.09-.116.111-.093.132-.067.147-.038.156-.01.161.022.16.05.153.078.141.103.124.102.087.045.034.142.106.137.105.14.11.136.11.135.112.134.115.134.117.13.115.132.122.128.12.127.122.126.125.124.126.124.128.121.13.118.128.118.132.117.133.113.134.113.136.11.136.109.137.109.142.104.14.103.14.101.142.1.144.099.146.095.145.094.147.093.15.092.15.087.149.087.15.084.152.084.155.08.152.08.155.04.081.084.138.11.119.128.096.145.072.155.043.16.013.16-.016.155-.046.144-.074.127-.099.106-.12.083-.14.055-.151.026-.16-.004-.16-.034-.158-.05-.124-.042-.085-.002-.004-.003-.005-.084-.165-.002-.004-.003-.005-.086-.164-.002-.004-.003-.005-.088-.162-.002-.005-.003-.005-.09-.161-.002-.005-.003-.004-.092-.16-.003-.005-.002-.005-.094-.16-.003-.004-.003-.004-.096-.159-.002-.004-.003-.005-.098-.157-.003-.004-.003-.005-.1-.156-.003-.004-.003-.005-.101-.154-.003-.005-.003-.004-.104-.154-.003-.004-.003-.005-.106-.152-.003-.005-.003-.004-.108-.151-.003-.004-.003-.005-.11-.15-.003-.004-.003-.004-.111-.15-.004-.003-.003-.005-.113-.147-.004-.004-.003-.005-.115-.146-.004-.004-.003-.004-.117-.145-.004-.004-.003-.004-.12-.144-.003-.004-.003-.004-.121-.142-.004-.004-.003-.004-.123-.141-.003-.004-.004-.004-.125-.14-.003-.004-.004-.004-.127-.138-.003-.004-.004-.004-.128-.136-.004-.004-.004-.004-.13-.135-.004-.004-.004-.004-.132-.134-.003-.004-.004-.003-.134-.133-.004-.003-.004-.004-.135-.13-.004-.004-.004-.004-.136-.128-.004-.004-.004-.004-.138-.126-.004-.004-.004-.003-.14-.125-.004-.004-.004-.003-.14-.123-.005-.004-.004-.003-.142-.121-.004-.004-.004-.003-.144-.12-.004-.003-.004-.003-.145-.117-.004-.004-.004-.003-.147-.115-.004-.004-.004-.003-.148-.113-.004-.003-.004-.004-.149-.111-.004-.003-.004-.004-.05-.036-.14-.083-.15-.055-.16-.027zM6.634 3.28l-.161.008-.157.037-.147.066-.111.074-.04.032-.005.003-.004.004-.145.117-.004.003-.004.004-.144.119-.004.003-.004.004-.142.12-.004.004-.004.004-.141.123-.004.003-.004.004-.14.125-.004.003-.004.004-.138.126-.004.004-.004.004-.136.128-.004.004-.004.004-.135.13-.004.004-.004.003-.134.133-.004.003-.004.004-.132.134-.003.004-.004.004-.13.135-.004.004-.004.004-.128.136-.004.004-.004.004-.126.138-.004.004-.003.004-.125.14-.004.004-.003.004-.123.14-.004.005-.003.004-.121.142-.004.004-.003.004-.12.144-.003.004-.003.004-.117.145-.004.004-.003.004-.115.146-.004.005-.003.004-.113.147-.003.005-.004.004-.111.149-.003.004-.004.004-.11.15-.002.005-.003.004-.108.151-.003.004-.003.005-.106.152-.003.005-.003.004-.104.154-.003.004-.003.005-.102.154-.003.005-.002.004-.1.156-.003.005-.003.004-.098.157-.003.005-.003.004-.096.159-.002.004-.003.005-.094.16-.003.004-.002.004-.092.16-.003.005-.003.005-.09.161-.002.005-.003.005-.088.162-.002.005-.003.004-.086.164-.002.005-.002.004-.084.165-.003.005-.002.004-.082.166-.002.004-.003.005-.08.167-.002.004-.002.005-.078.168-.002.004-.002.005-.045.1-.053.153-.023.16.007.16.037.157.065.148.092.132.114.114.134.09.148.064.157.035.161.006.16-.025.152-.054.14-.08.121-.106.1-.126.065-.118.043-.095.074-.16.075-.155.077-.157.08-.155.08-.152.083-.155.085-.152.086-.15.088-.149.091-.15.094-.15.094-.147.095-.145.099-.146.1-.144.1-.142.104-.14.104-.14.11-.142.107-.137.11-.136.114-.136.113-.134.117-.133.118-.132.117-.129.122-.13.124-.127.123-.126.127-.125.127-.122.128-.12.132-.122.13-.115.133-.117.135-.115.135-.111.136-.11.037-.03.117-.11.094-.132.068-.146.04-.156.01-.161-.02-.16-.05-.154-.076-.141-.102-.125-.123-.104-.14-.08-.153-.051-.16-.023zM16 3.286h-.005l-.148.001h-.01l-.147.003h-.011l-.147.005h-.011l-.146.007h-.011l-.146.009h-.011l-.146.01h-.005l-.005.001-.146.012h-.011l-.145.014h-.006l-.005.001-.05.006-.158.031-.15.06-.135.088-.117.111-.094.13-.069.147-.04.156-.01.16.019.16.049.154.076.142.102.125.123.105.14.08.152.051.16.023.134-.003.045-.005.135-.013.133-.01.136-.01.135-.007.137-.006.136-.004.136-.003h.274l.136.003.136.004.136.006.136.007.136.01.133.01.135.013.135.014.135.016.134.018.132.018.134.021.133.023.133.024.133.025.13.027.132.03.132.03.129.031.13.034.129.035.129.036.13.04.126.038.128.042.126.042.128.045.127.047.126.047.12.048.127.051.123.052.006.002.147.048.16.021.16-.009.157-.038.147-.067.131-.093.112-.116.089-.135.062-.149.033-.158.004-.16-.027-.16-.055-.151-.083-.139-.107-.12-.127-.099-.118-.063-.004-.001-.005-.003-.005-.002-.133-.056-.005-.002-.005-.002-.134-.054-.004-.002-.005-.002-.135-.053-.005-.002-.005-.002-.135-.051-.005-.002-.005-.002-.135-.05-.005-.001-.005-.002-.137-.048-.005-.001-.005-.002-.137-.046-.005-.002-.005-.002-.137-.044-.005-.002-.005-.001-.138-.043-.006-.002-.005-.001-.138-.042-.005-.001-.005-.002-.14-.04H19.4l-.005-.002-.14-.038-.005-.001-.005-.002-.14-.036-.005-.001-.005-.001-.141-.035-.005-.001-.005-.001-.142-.033-.005-.001-.005-.001-.142-.031-.005-.002h-.005l-.142-.03-.005-.001-.005-.001-.143-.028h-.005l-.005-.002-.143-.025-.006-.001-.005-.001-.143-.024-.005-.001-.006-.001-.143-.022-.006-.001h-.005l-.144-.022h-.005l-.006-.001-.144-.019h-.005l-.006-.001-.144-.017h-.006l-.005-.001-.145-.016h-.011l-.145-.014H17.1l-.005-.001-.146-.012h-.01l-.146-.01-.006-.001h-.005l-.146-.009h-.011l-.147-.006h-.01l-.147-.005h-.011l-.147-.003h-.011l-.147-.001H16zm-5.482 1.366l-.16.008-.157.037-.123.053-.06.032-.005.002-.004.003-.128.069-.004.002-.005.003-.126.07-.005.003-.004.002-.126.072-.005.003-.004.003-.125.073-.004.003-.005.003-.124.075-.004.003-.005.002-.123.077-.004.003-.005.003-.122.078-.004.003-.005.003-.121.08-.004.002-.005.003-.12.082-.005.003-.004.003-.12.083-.004.003-.004.003-.118.084-.005.003-.004.003-.118.086-.004.003-.004.003-.117.088-.004.003-.004.003-.116.089-.004.003-.004.004-.114.09-.005.003-.004.003-.113.092-.004.004-.004.003-.113.093-.004.004-.004.003-.111.095-.005.003-.004.004-.11.096-.004.004-.004.003-.11.098-.003.003-.004.004-.108.1-.004.003-.004.003-.107.101-.004.004-.004.003-.106.102-.004.004-.003.004-.105.103-.004.004-.004.004-.103.105-.004.004-.004.003-.102.106-.003.004-.004.004-.1.107-.004.004-.004.004-.099.108-.004.004-.003.004-.098.11-.003.003-.004.004-.096.11-.004.005-.003.004-.095.111-.003.004-.004.004-.093.113-.003.004-.004.004-.092.113-.003.004-.003.005-.09.114-.004.004-.003.004-.089.116-.003.004-.003.004-.088.117-.003.004-.003.004-.086.118-.003.004-.003.005-.084.118-.003.004-.003.005-.083.12-.003.003-.003.005-.082.12-.003.005-.002.004-.068.103-.076.142-.048.154-.018.16.011.161.041.156.07.146.095.13.117.11.136.086.15.06.158.03.162.002.158-.03.15-.057.138-.085.119-.109.082-.105.065-.099.075-.11.077-.113.077-.107.08-.11.08-.108.084-.108.083-.105.086-.106.086-.104.088-.104.089-.101.09-.102.093-.101.093-.099.094-.097.095-.096.098-.097.098-.095.099-.093.1-.092.103-.091.101-.089.104-.088.104-.086.106-.086.106-.083.106-.082.109-.082.108-.079.11-.078.11-.076.112-.076.112-.074.113-.072.113-.071.115-.07.115-.068.118-.067.117-.065.12-.065.054-.029.135-.088.116-.111.094-.132.068-.146.04-.156.009-.161-.02-.16-.05-.153-.078-.142-.102-.125-.123-.103-.141-.079-.153-.051-.16-.022zm13.91 2.116l-.162.008-.157.037-.147.066-.132.092-.113.116-.09.134-.063.148-.034.157-.005.162.025.159.055.152.082.138.086.103.09.09.094.098.092.099.093.1.091.103.089.101.088.104.086.104.086.106.083.105.083.108.08.108.081.11.077.107.077.112.075.111.075.114.072.113.071.113.07.114.068.118.067.115.065.118.064.117.062.117.061.121.059.119.059.122.056.121.054.12.055.125.051.123.051.125.048.123.048.127.047.126.044.125.043.128.042.129.039.126.038.13.022.076.058.15.085.137.11.119.129.096.145.07.155.043.16.013.161-.017.154-.046.144-.075.126-.1.106-.12.082-.14.055-.151.025-.16-.005-.16-.026-.132-.023-.082-.002-.005-.001-.005-.042-.139-.001-.005-.002-.005-.043-.138-.001-.005-.002-.005-.044-.137-.002-.005-.002-.005-.046-.137-.002-.005-.001-.005-.048-.137-.002-.005-.002-.005-.05-.135-.001-.005-.002-.005-.051-.135-.002-.005-.002-.005-.053-.135-.002-.005-.002-.005-.054-.133-.002-.005-.002-.005-.057-.133-.002-.005-.002-.005-.057-.132-.003-.005-.002-.005-.06-.132-.001-.005-.002-.004-.061-.132-.003-.004-.002-.005-.063-.13-.002-.005-.002-.005-.064-.13-.003-.004-.002-.005-.066-.129-.002-.004-.003-.005-.067-.128-.002-.005-.003-.004-.069-.128-.002-.004-.003-.005-.07-.126-.003-.005-.003-.004-.072-.126-.002-.005-.003-.004-.074-.125-.002-.004-.003-.005-.075-.124-.003-.004-.003-.005-.076-.123-.003-.004-.003-.005-.078-.122-.003-.004-.003-.005-.08-.121-.003-.004-.003-.005-.081-.12-.003-.005-.003-.004-.083-.12-.003-.004-.003-.004-.084-.118-.003-.005-.003-.004-.086-.118-.003-.004-.004-.004-.087-.117-.003-.004-.003-.004-.09-.116-.002-.004-.004-.004-.09-.114-.003-.005-.004-.004-.091-.113-.004-.004-.003-.004-.094-.113-.003-.004-.003-.004-.095-.111-.004-.004-.003-.004-.096-.11-.004-.005-.003-.004-.098-.11-.004-.003-.003-.004-.1-.108-.003-.004-.004-.004-.1-.107-.004-.004-.004-.004-.102-.106-.003-.003-.004-.004-.093-.095-.124-.103-.14-.08-.153-.05-.16-.023zM4.45 12.826l-.161.002-.158.032-.15.06-.135.088-.118.11-.094.131-.069.146-.035.129-.026.132v.005l-.002.005-.025.143-.001.005-.001.006-.024.143-.001.005-.001.006-.022.143-.001.006-.001.005-.02.144-.001.005-.001.005-.019.145v.005l-.001.006-.017.144v.006l-.001.005-.016.145v.011l-.014.145v.005l-.001.006-.012.146v.01l-.01.146-.001.006v.005l-.009.146v.011l-.007.146v.011l-.004.147v.011l-.003.147v.01l-.002.148v.01l.001.148v.01l.003.147v.011l.005.147v.01l.007.147v.011l.009.146v.011l.01.146v.01l.013.146v.011l.014.145v.005l.001.006.016.145v.011l.018.144v.006l.001.005.019.144v.006l.001.005.021.144v.005l.002.006.022.143v.006l.002.005.024.143v.005l.002.006.025.143.001.005.001.005.028.143.001.005.001.005.03.142v.005l.002.006.03.141.002.005.001.005.033.142v.005l.002.005.035.14v.006l.002.005.036.14.002.005.001.005.038.14.001.005.002.005.04.14v.005l.002.005.042.138.001.006.002.005.042.138.002.005.002.005.017.054.064.148.09.134.114.114.132.092.148.065.157.037.16.007.16-.023.153-.052.14-.08.123-.104.102-.125.076-.142.049-.153.02-.16-.011-.161-.031-.13-.017-.051-.039-.126-.038-.13-.037-.128-.035-.13-.033-.128-.033-.134-.03-.13-.029-.131-.026-.13-.026-.133-.024-.133-.023-.133-.02-.132-.02-.136-.017-.132-.016-.135-.014-.135-.012-.133-.012-.138-.009-.133-.007-.136-.006-.138-.004-.134-.003-.136v-.274l.003-.136.004-.134.006-.139.007-.136.01-.133.01-.138.013-.132.014-.135.016-.135.017-.132.02-.137.02-.13.023-.134.024-.133.024-.126.016-.16-.014-.161-.044-.155-.072-.145-.098-.128-.12-.108-.137-.084-.15-.057-.16-.029zm26.698 1.601l-.161.01-.157.04-.146.067-.131.093-.112.117-.088.135-.061.149-.033.157-.005.134.006.14.006.176.003.177.001.178-.001.177-.003.178-.006.177-.007.176-.01.177-.012.176-.015.176-.016.173-.018.175-.02.175-.024.174-.025.175-.026.17-.03.174-.03.173-.033.17-.036.172-.037.17-.04.17-.042.172-.043.168-.045.166-.048.169-.05.167-.052.168-.053.164-.056.166-.058.166-.06.16-.062.165-.062.158-.066.165-.068.16-.07.16-.07.158-.075.159-.074.155-.079.158-.08.158-.06.15-.03.158-.001.161.029.159.058.15.085.137.108.119.13.097.144.07.156.044.16.013.16-.017.155-.046.143-.074.127-.1.107-.12.07-.115.083-.164.003-.005.002-.004.082-.166.002-.005.003-.004.08-.167.002-.005.002-.004.078-.168.002-.005.002-.004.076-.169.002-.004.002-.005.074-.17.002-.004.002-.005.072-.17.002-.005.002-.005.07-.171.001-.005.002-.005.068-.172.002-.004.002-.005.065-.173.002-.005.002-.005.063-.173.002-.005.002-.005.06-.174.003-.005.001-.005.06-.175.001-.005.002-.005.057-.176.001-.005.002-.005.055-.177.001-.005.002-.005.052-.177.002-.005.001-.005.051-.178.001-.005.002-.005.048-.179.002-.005v-.005l.047-.179.001-.005.002-.005.044-.18v-.005l.002-.005.042-.18.001-.006.001-.005.04-.181.001-.005.001-.005.037-.182.002-.005v-.005l.036-.182v-.006l.002-.005.033-.182v-.006l.002-.005.03-.183.001-.005.001-.005.029-.184v-.005l.001-.006.027-.184v-.005l.001-.005.024-.185v-.005l.001-.005.022-.185v-.006l.001-.005.02-.185v-.006l.001-.005.017-.186v-.005l.001-.005.015-.187v-.005l.001-.005.013-.187v-.01l.01-.187.001-.006v-.005l.009-.187v-.011l.006-.187v-.011l.004-.188v-.011l.001-.188v-.01l-.001-.188v-.011l-.004-.188v-.011l-.006-.187v-.011l-.007-.145-.022-.16-.05-.152-.08-.141-.103-.124-.125-.102-.141-.077-.153-.05-.16-.02zM.938 15L.777 15l-.158.032-.15.06-.136.087-.117.11-.095.131-.068.146-.04.156-.012.133-.001.14v.01l.001.188v.011l.004.188v.011l.006.187v.011l.008.187v.011l.011.187v.005l.001.005.013.187v.01l.016.187v.01l.018.186v.011l.02.185.001.005v.006l.022.185.001.005v.005l.025.185v.005l.001.005.027.184v.006l.001.005.029.184v.005l.001.005.031.183.001.005.001.006.033.182.001.005.001.006.035.182.001.005.001.005.038.182v.005l.002.005.04.181v.005l.002.005.042.18.001.006.001.005.044.18.002.005v.005l.047.18.001.004.002.005.048.179.002.005.001.005.05.178.002.005.001.005.053.177.002.005.001.005.055.177.002.005.001.005.057.176.002.005.001.005.06.175.001.005.002.005.061.174.002.005.002.005.063.173.002.005.002.005.065.173.002.005.002.004.067.172.002.005.002.005.07.171.002.005.002.005.072.17.002.005.002.004.074.17.002.005.002.004.076.169.002.004.002.005.078.168.002.004.002.005.08.167.003.004.002.005.082.166.002.004.003.005.02.04.086.136.11.118.13.095.146.07.156.041.16.012.16-.019.155-.048.142-.075.126-.1.105-.123.08-.14.054-.152.024-.16-.006-.16-.036-.158-.051-.123-.018-.034-.078-.158L3.1 22.1l-.074-.16-.071-.157-.07-.16-.068-.16-.067-.165-.062-.158-.062-.164-.059-.161-.058-.166-.056-.166-.053-.164-.052-.168-.05-.167-.048-.17-.045-.165-.043-.168-.043-.172-.039-.17-.037-.17-.036-.172-.033-.17-.03-.173-.03-.174-.027-.17-.025-.175-.022-.174-.021-.175-.018-.175-.017-.173-.014-.176-.012-.176-.01-.177-.007-.176-.006-.177-.003-.178L1.73 16v-.134l-.013-.16-.044-.156-.072-.144-.097-.129-.12-.108-.137-.085-.15-.057L.938 15zm26.798 2.024l-.16.007-.157.038-.148.066-.132.092-.113.115-.09.134-.062.148-.03.127-.001.004-.023.134-.024.133-.026.133-.026.13-.03.132-.03.129-.032.134-.033.128-.035.13-.037.128-.038.13-.04.126-.04.128-.044.128-.044.126-.046.126-.048.126-.05.125-.05.125-.051.122-.054.123-.055.122-.056.12-.058.122-.06.12-.061.12-.063.119-.062.116-.067.119-.066.116-.069.115-.069.115-.07.113-.073.113-.074.112-.076.113-.077.112-.077.107-.08.11-.08.107-.085.11-.044.056-.088.135-.06.15-.033.158-.002.16.027.16.057.15.083.138.108.12.128.098.144.072.155.045.16.015.161-.016.155-.044.144-.073.128-.098.09-.099.05-.061.003-.004.003-.005.089-.115.003-.004.003-.005.088-.116.003-.004.003-.005.086-.117.003-.004.003-.005.084-.118.003-.004.003-.005.083-.12.003-.004.003-.004.081-.12.003-.005.003-.004.08-.121.003-.005.003-.004.078-.122.003-.005.003-.004.077-.123.002-.005.003-.004.075-.124.003-.005.003-.004.073-.125.003-.005.003-.004.072-.126.002-.004.003-.005.07-.126.003-.005.002-.005.07-.127.002-.004.002-.005.068-.128.002-.005.002-.004.066-.13.003-.004.002-.005.064-.13.002-.004.003-.005.062-.13.002-.005.003-.005.06-.13.003-.005.002-.005.06-.132.002-.005.002-.005.057-.132.003-.005.002-.005.056-.133.002-.005.002-.005.054-.134.002-.004.002-.005.053-.135.002-.005.002-.005.051-.135.002-.005.002-.005.05-.135.001-.005.002-.005.048-.137.001-.005.002-.005.046-.137.002-.005.002-.005.044-.137.002-.005.002-.005.042-.138.002-.005.001-.006.042-.138.001-.005.002-.005.04-.14V19.4l.002-.005.038-.14.001-.005.002-.005.036-.14.001-.005.001-.005.035-.141.001-.005.001-.005.033-.142.001-.005.001-.005.031-.141.001-.006.002-.005.029-.142v-.005l.002-.005.028-.143v-.005l.002-.005.025-.143.001-.006.001-.005.024-.143.001-.005.001-.006.001-.006.01-.161-.02-.16-.05-.154-.077-.141-.102-.125-.123-.104-.141-.079-.153-.051-.16-.022zM6.841 22.71l-.16.024-.152.053-.14.08-.122.105-.101.126-.076.142-.048.154-.018.16.011.161.041.156.07.146.077.109.04.048.003.004.003.004.095.111.003.004.004.004.096.11.004.005.003.004.098.109.003.004.004.004.1.108.003.004.003.004.101.107.004.004.003.004.102.105.004.004.004.004.103.105.004.004.004.003.105.104.003.004.004.003.106.102.004.004.004.004.107.1.004.004.004.004.108.099.004.003.004.004.11.098.003.003.004.004.11.096.004.003.005.004.11.095.005.003.004.004.113.093.004.003.004.004.113.091.004.004.005.003.114.09.004.004.004.003.116.089.004.003.004.003.117.088.004.003.004.003.118.086.004.003.005.003.118.084.004.003.005.003.119.083.004.003.005.003.12.081.005.003.004.003.121.08.005.003.004.003.122.078.005.003.004.003.123.076.005.003.004.003.124.075.005.003.004.003.125.073.004.003.005.002.126.073.004.002.005.003.126.07.005.003.004.002.128.07.004.002.005.002.128.067.005.003.004.002.13.066.004.002.005.003.13.064.004.002.005.003.13.062.005.002.004.003.132.06.004.003.005.002.132.06.005.002.005.002.132.057.005.002.005.002.133.057.005.002.005.002.133.054.005.002.005.002.13.05.154.045.16.016.16-.015.156-.045.144-.072.128-.098.108-.12.083-.138.057-.15.028-.16-.003-.16-.032-.159-.061-.149-.088-.135-.11-.117-.132-.094-.12-.058-.124-.049-.126-.051-.122-.051-.122-.054-.12-.054-.126-.058-.119-.057-.12-.06-.12-.06-.118-.063-.117-.064-.119-.066-.116-.066-.115-.068-.115-.07-.113-.07-.115-.074-.112-.074-.11-.075-.11-.076-.112-.08-.11-.08-.109-.081-.106-.082-.104-.082-.106-.086-.105-.087-.101-.086-.105-.091-.1-.09-.1-.091-.1-.094-.097-.094-.1-.098-.093-.095-.096-.1-.093-.098-.092-.101-.089-.1-.09-.102-.088-.104-.036-.043-.114-.114-.133-.091-.148-.065-.157-.036-.161-.006zm15.063 2.701l-.16.014-.156.044-.12.057-.06.034-.12.066-.117.064-.118.062-.12.061-.12.06-.118.057-.126.058-.12.054-.122.054-.122.05-.126.052-.125.05-.124.046-.127.047-.125.044-.129.043-.126.04-.13.042-.128.038-.127.035-.13.036-.131.034-.129.031-.132.03-.13.03-.135.027-.133.026-.13.023-.13.022-.137.021-.132.02-.134.017-.132.015-.138.015-.135.013-.133.01-.138.01-.136.007-.134.006-.136.004-.14.003-.16.018-.155.047-.142.076-.127.1-.105.122-.08.14-.054.151-.025.16.006.16.035.158.064.148.09.134.114.114.133.092.147.065.157.036.134.008.145-.002h.011l.147-.005h.01l.147-.007h.011l.146-.009h.011l.146-.01h.005l.005-.001.146-.012h.011l.145-.014h.005l.006-.001.145-.016h.011l.144-.018h.006l.005-.001.144-.02h.011l.144-.021.005-.001h.006l.143-.023.006-.001h.005l.143-.025h.005l.006-.002.143-.026h.005l.005-.002.143-.027.005-.001.005-.001.142-.03h.005l.005-.002.142-.03.005-.002.005-.001.142-.033.005-.001.005-.001.14-.035.006-.001.005-.001.14-.037h.005l.005-.002.14-.038.005-.002h.005l.14-.04.005-.002.005-.001.138-.042.005-.001.006-.002.138-.043.005-.001.005-.002.137-.044.005-.002.005-.002.137-.046.005-.002.005-.001.137-.048.005-.002.005-.002.135-.05.005-.001.005-.002.135-.051.005-.002.005-.002.135-.053.005-.002.004-.002.134-.054.005-.002.005-.002.133-.057.005-.002.005-.002.132-.057.005-.003.005-.002.132-.06.005-.001.004-.002.131-.061.005-.003.005-.002.13-.062.005-.003.005-.002.13-.064.004-.003.005-.002.128-.066.005-.002.005-.003.128-.067.005-.002.004-.003.127-.069.005-.002.005-.003.126-.07.005-.003.004-.003.065-.037.132-.093.112-.115.089-.135.062-.149.034-.157.003-.161-.026-.16-.055-.15-.082-.14-.107-.12-.127-.1-.144-.073-.154-.046-.16-.016zM6.33 26.818l-.16.023-.152.053-.14.08-.122.105-.101.126-.076.142-.048.154-.02.16.012.161.041.156.07.146.094.13.096.093.032.026.004.003.004.004.145.117.004.003.004.004.146.115.005.003.004.004.147.113.005.003.004.004.149.111.004.003.004.003.15.11.005.003.004.003.151.108.004.003.005.003.152.106.005.003.004.003.154.104.004.003.005.003.154.102.005.002.004.003.156.1.005.003.004.003.157.098.005.003.004.002.159.096.004.003.005.003.16.094.004.003.004.002.16.092.005.003.005.002.161.09.005.003.005.002.162.088.005.003.004.002.164.086.005.003.004.002.165.084.005.003.004.002.166.082.004.002.005.003.167.08.004.002.005.002.168.078.004.002.005.002.168.076.005.002.005.002.17.074.004.002.005.002.17.072.005.002.005.002.17.07.006.002.005.001.171.068.005.002.005.002.173.065.005.002.005.002.173.063.005.002.005.002.174.06.005.003.005.001.175.06.005.001.005.002.176.057.005.001.005.002.176.055.006.001.005.002.177.052.005.002.005.001.178.05.005.002.005.002.178.048.006.001.005.002.179.046.005.001.005.002.18.044h.005l.005.002.18.042.006.001.005.001.159.035.16.02.16-.01.157-.04.146-.069.13-.094.112-.117.087-.136.06-.149.033-.158.002-.161-.028-.159-.057-.15-.084-.138-.108-.12-.128-.098-.144-.072-.128-.039-.154-.033-.168-.04-.171-.041-.17-.044-.168-.046-.167-.047-.168-.05-.165-.051-.166-.054-.166-.056-.163-.057-.165-.06-.161-.062-.164-.064-.16-.065-.16-.068-.162-.07-.157-.07-.157-.074-.157-.075-.156-.077-.153-.079-.156-.082-.153-.082-.154-.086-.15-.086-.152-.09-.148-.09-.147-.092-.149-.095-.145-.095-.144-.098-.145-.1-.143-.102-.14-.103-.14-.104-.14-.108-.139-.11-.136-.11-.027-.022-.133-.091-.148-.065-.157-.036-.161-.006zm19.215.087l-.16.01-.157.039-.146.067-.11.076-.064.051-.139.11-.14.108-.14.104-.14.103-.143.101-.145.101-.144.098-.145.095-.149.095-.148.093-.147.089-.152.09-.15.086-.154.086-.153.082-.156.082-.153.079-.156.077-.157.075-.158.073-.157.071-.16.07-.16.068-.161.065-.164.064-.161.061-.165.06-.163.058-.166.056-.166.054-.166.051-.167.05-.167.047-.17.046-.168.044-.171.042-.168.039-.17.037-.11.023-.154.047-.143.075-.126.1-.106.122-.081.139-.054.152-.025.16.006.16.035.158.063.148.09.133.114.115.132.092.148.065.157.037.16.007.133-.016.115-.024.005-.001.005-.001.181-.04h.005l.005-.002.18-.042.006-.001.005-.001.18-.044.005-.002.005-.001.18-.046.004-.002h.005l.179-.05h.005l.005-.002.178-.05.005-.002.005-.002.177-.052.005-.002.005-.001.177-.055.005-.002.005-.001.176-.057.005-.002.005-.002.175-.059.005-.001.005-.002.174-.061.005-.002.005-.002.173-.063.005-.002.005-.002.173-.065.004-.002.005-.002.172-.068.005-.002.005-.002.171-.07.005-.001.005-.002.17-.072.005-.002.004-.002.17-.074.005-.002.004-.002.169-.076.004-.002.005-.002.168-.078.004-.002.005-.003.167-.08.004-.002.005-.002.166-.082.004-.002.005-.003.165-.084.004-.002.005-.003.163-.086.005-.002.005-.003.162-.088.005-.002.005-.003.161-.09.005-.002.004-.003.16-.092.005-.003.005-.002.16-.094.004-.003.004-.003.158-.096.005-.002.004-.003.158-.098.004-.003.005-.003.156-.1.004-.003.004-.003.155-.101.005-.003.004-.003.154-.104.004-.003.004-.003.153-.106.004-.003.005-.003.151-.108.004-.003.005-.003.15-.11.004-.003.004-.003.149-.112.004-.003.004-.003.148-.113.004-.004.004-.003.147-.115.004-.004.004-.003.068-.055.116-.113.092-.132.066-.147.038-.157.008-.16-.022-.16-.05-.153-.08-.14-.103-.125-.124-.102-.142-.077-.153-.05-.16-.02z\",\n  opacity: \".98\"\n})));\n\nfunction _extends$J() { _extends$J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$J.apply(this, arguments); }\nvar IntermediateEventCatchNonInterruptingSignalIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$J({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.012 8.816L9.21 21.026h13.606l-6.803-12.21zm0 1.776l5.332 9.57H10.681l5.331-9.57zm0-10.281c-1.448.02-2.93.157-4.302.628-.852.447-.255 1.863.66 1.574 2.255-.608 4.648-.607 6.922-.108.934.075 1.228-1.376.338-1.67C18.451.44 17.227.317 16.012.311zm9.012 2.934c-.913-.104-1.272 1.258-.454 1.648 1.834 1.36 3.293 3.185 4.31 5.22.526.776 1.842.098 1.515-.78a15.522 15.522 0 00-5.06-6.006c-.1-.044-.203-.07-.31-.082zM6.65 3.59c-.762.089-1.24.809-1.805 1.267C3.38 6.295 2.163 8.007 1.37 9.905c-.266.898 1.094 1.484 1.564.675a14.825 14.825 0 014.327-5.56c.476-.515.09-1.419-.612-1.431zm9.362.007c-.698.066-1.689-.16-2.033.635-.282.733.535 1.358 1.217 1.125 1.806-.147 3.63.203 5.293.907.902.255 1.472-1.112.656-1.573-1.6-.735-3.374-1.089-5.133-1.094zm-5.479 1.365c-.835.15-1.517.76-2.21 1.226-1.203.94-2.318 2.061-3.057 3.402-.33.904 1.063 1.552 1.547.723 1.045-1.656 2.596-2.925 4.285-3.873.545-.499.171-1.463-.565-1.478zm13.903 2.115c-.875-.07-1.22 1.173-.501 1.627 1.325 1.34 2.188 3.062 2.748 4.84.468.84 1.869.21 1.557-.699-.604-2.118-1.751-4.097-3.351-5.615a.93.93 0 00-.453-.153zM4.467 13.132c-.822-.07-.996.826-1.046 1.455-.256 1.93-.094 3.933.562 5.769.406.844 1.807.365 1.612-.551a11.498 11.498 0 01-.334-5.808.874.874 0 00-.794-.865zm26.687 1.6c-.746-.037-1.014.785-.879 1.395.043 2.393-.57 4.771-1.66 6.894-.31.884 1.02 1.536 1.53.75a15.632 15.632 0 001.821-8.372.876.876 0 00-.812-.667zm-30.197.571c-.782-.073-1.044.775-.933 1.404.068 2.414.661 4.833 1.809 6.962.534.77 1.842.076 1.505-.798a14.833 14.833 0 01-1.603-6.861.876.876 0 00-.778-.707zm26.787 2.024c-.777-.048-.952.797-1.021 1.392-.354 1.692-1.202 3.231-2.216 4.608-.407.872.925 1.638 1.48.852 1.361-1.733 2.296-3.827 2.582-6.017a.874.874 0 00-.825-.835zM6.857 23.012c-.808.018-1.082 1.122-.47 1.59 1.393 1.607 3.187 2.886 5.194 3.599.91.222 1.43-1.165.598-1.596a11.495 11.495 0 01-4.723-3.396.899.899 0 00-.599-.197zm15.057 2.7c-.81.194-1.504.76-2.325.972-1.203.458-2.5.536-3.758.664-.869.307-.573 1.728.346 1.663 2.201-.034 4.412-.626 6.293-1.778.604-.495.227-1.532-.556-1.521zM6.346 27.118c-.833.008-1.11 1.218-.395 1.617 1.986 1.602 4.358 2.749 6.868 3.226.933.076 1.227-1.376.338-1.67a14.838 14.838 0 01-6.345-3.066.929.929 0 00-.466-.107zm19.208.087c-.766.09-1.241.841-1.922 1.158-1.516.991-3.251 1.58-4.996 2.005-.872.405-.346 1.849.584 1.604 2.543-.526 4.98-1.66 6.963-3.344.47-.52.072-1.42-.63-1.423z\"\n})));\n\nfunction _extends$I() { _extends$I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$I.apply(this, arguments); }\nvar IntermediateEventCatchNonInterruptingTimerIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$I({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.998 8.406c-3.018-.041-5.92 1.926-7.031 4.727-1.138 2.695-.51 6.012 1.537 8.103 1.99 2.141 5.268 2.93 8.014 1.927 2.878-.98 4.992-3.827 5.068-6.87.153-2.957-1.624-5.88-4.3-7.137a7.552 7.552 0 00-3.288-.75zm0 1.384c2.759-.052 5.373 1.973 6.015 4.655.704 2.578-.482 5.517-2.791 6.867-2.358 1.48-5.682 1.086-7.618-.918-2.043-1.971-2.407-5.381-.84-7.745 1.11-1.763 3.15-2.88 5.234-2.86zm1.962 1.765l-2.074 3.762c-.64.068-.793 1.04-.202 1.3.39.27.696-.18 1.052-.165h3.17v-.865h-3.182l1.993-3.615c-.252-.14-.505-.278-.757-.417zm-1.965-8.268h-.158l-.147.003h-.011l-.147.005h-.011l-.146.007h-.011l-.146.009h-.011l-.146.01h-.005l-.005.001-.146.012h-.011l-.145.014h-.006l-.005.001-.05.006-.158.031-.15.06-.135.088-.117.111-.094.13-.069.147-.04.156-.01.16.019.16.049.154.076.142.102.125.123.105.14.08.152.051.16.023.134-.003.045-.005.135-.013.133-.01.136-.01.135-.007.137-.006.136-.004.136-.003h.274l.136.003.136.004.136.006.136.007.136.01.133.01.135.013.135.014.135.016.134.018.132.018.134.021.133.023.133.024.133.025.13.027.132.03.132.03.129.031.13.034.129.035.129.036.13.04.126.038.128.042.126.042.128.045.127.047.126.048.12.047.127.051.123.052.006.002.147.048.16.021.16-.009.157-.038.147-.067.131-.093.112-.116.089-.135.062-.149.033-.158.004-.16-.027-.16-.055-.151-.083-.138-.107-.121-.127-.099-.118-.063-.004-.001-.005-.003-.005-.002-.133-.056-.005-.002-.005-.002-.134-.054-.004-.002-.005-.002-.135-.053-.005-.002-.005-.002-.135-.051-.005-.002-.005-.002-.135-.05-.005-.001-.005-.002-.137-.048-.005-.001-.005-.002-.137-.046-.005-.002-.005-.002-.137-.044-.005-.002-.005-.001-.138-.043-.005-.002-.006-.001-.138-.042-.005-.001-.005-.002-.14-.04H19.4l-.005-.002-.14-.038-.005-.001-.005-.002-.14-.036-.005-.001-.005-.001-.141-.035-.005-.001-.005-.001-.142-.033-.005-.001-.005-.001-.141-.031-.006-.002h-.005l-.142-.03-.005-.001-.005-.001-.143-.028h-.005l-.005-.001-.143-.026-.006-.001-.005-.001-.143-.024-.005-.001-.006-.001-.143-.022-.006-.001h-.005l-.144-.022h-.005l-.006-.001-.144-.019h-.005l-.006-.001-.144-.017h-.006l-.005-.001-.145-.016h-.011l-.145-.014H17.1l-.005-.001-.146-.012h-.01l-.146-.01-.006-.001h-.005l-.146-.009h-.011l-.147-.006h-.01l-.147-.005h-.011l-.147-.003h-.01l-.148-.001h-.01zM10.357 4.66l-.156.037-.123.053-.06.032-.005.002-.004.003-.128.069-.004.002-.005.003-.126.07-.005.003-.004.002-.126.072-.005.003-.004.003-.125.073-.004.003-.005.003-.124.075-.004.003-.005.002-.123.077-.004.003-.005.003-.122.078-.004.003-.005.003-.121.08-.004.002-.005.003-.12.082-.005.003-.004.003-.12.083-.004.003-.004.003-.118.084-.005.003-.004.003-.118.086-.004.003-.004.003-.117.088-.004.003-.004.003-.116.089-.004.003-.004.004-.114.09-.005.003-.004.003-.113.092-.004.004-.004.003-.113.093-.004.004-.004.003-.111.095-.004.003-.005.004-.11.096-.004.004-.004.003-.109.098-.004.003-.004.004-.108.1-.004.003-.004.003-.107.101-.004.004-.004.003-.106.102-.003.004-.004.004-.105.103-.004.004-.004.004-.103.105-.004.004-.004.003-.102.106-.003.004-.004.004-.1.107-.004.004-.004.004-.099.108-.004.004-.003.004-.098.11-.003.003-.004.004-.096.11-.004.005-.003.004-.095.111-.003.004-.004.004-.093.113-.003.004-.004.004-.092.113-.003.004-.003.005-.09.114-.004.004-.003.004-.089.116-.003.004-.003.004-.088.117-.003.004-.003.005-.086.117-.003.004-.003.005-.084.118-.003.004-.003.005-.083.12-.003.003-.003.005-.082.12-.003.005-.002.004-.068.103-.076.142-.048.154-.018.16.011.161.041.156.07.146.095.13.117.11.136.086.15.06.158.03.162.002.158-.029.15-.058.138-.085.119-.108.082-.106.065-.099.075-.11.077-.113.077-.107.08-.11.08-.108.084-.108.083-.105.086-.106.086-.104.088-.104.089-.101.09-.102.093-.101.093-.099.094-.097.095-.096.098-.097.098-.095.099-.093.1-.092.103-.091.101-.089.104-.088.104-.086.106-.086.106-.083.106-.082.109-.082.108-.079.11-.078.11-.076.112-.076.112-.074.113-.072.113-.071.115-.07.115-.068.118-.067.117-.065.12-.065.054-.029.135-.088.116-.111.094-.132.068-.146.04-.156.009-.161-.02-.16-.05-.153-.078-.142-.102-.125-.123-.103-.141-.079-.153-.051-.16-.022-.16.008zm13.91 2.116l-.158.037-.147.066-.132.092-.113.116-.09.134-.063.148-.034.157-.005.162.026.159.054.152.082.139.086.102.09.09.094.098.093.099.092.1.091.103.089.101.088.104.086.104.086.106.083.105.083.108.08.108.081.11.077.107.077.112.075.111.075.114.072.113.071.113.07.115.068.117.067.115.065.118.064.117.062.118.061.12.059.119.059.122.056.121.054.12.055.125.051.123.051.125.048.123.049.127.046.126.044.125.043.128.042.129.039.126.038.13.022.076.058.15.086.137.109.119.129.096.145.07.155.043.16.013.161-.017.155-.046.143-.074.126-.1.106-.122.082-.138.055-.152.025-.16-.005-.16-.026-.132-.023-.082-.002-.005-.001-.005-.042-.139-.001-.005-.002-.005-.043-.138-.001-.005-.002-.005-.044-.137-.002-.005-.002-.005-.046-.137-.002-.005-.001-.005-.048-.137-.002-.005-.002-.005-.05-.135-.001-.005-.002-.005-.051-.135-.002-.005-.002-.005-.053-.135-.002-.005-.002-.005-.054-.133-.002-.005-.002-.005-.057-.133-.002-.005-.002-.005-.057-.132-.003-.005-.002-.005-.059-.132-.002-.005-.002-.004-.061-.132-.003-.004-.002-.005-.062-.13-.003-.005-.002-.005-.064-.13-.003-.004-.002-.005-.066-.129-.002-.004-.003-.005-.067-.128-.002-.005-.003-.004-.069-.128-.002-.004-.003-.005-.07-.126-.003-.005-.003-.004-.072-.126-.002-.005-.003-.004-.073-.125-.003-.004-.003-.005-.075-.124-.003-.004-.003-.005-.076-.123-.003-.004-.003-.005-.078-.122-.003-.004-.003-.005-.08-.121-.003-.004-.003-.005-.08-.12-.004-.005-.003-.004-.083-.12-.003-.004-.003-.004-.084-.118-.003-.005-.003-.004-.086-.117-.003-.005-.003-.004-.088-.117-.003-.004-.003-.004-.09-.116-.002-.004-.004-.004-.09-.114-.003-.005-.004-.004-.091-.113-.004-.004-.003-.004-.093-.113-.004-.004-.003-.004-.095-.111-.004-.004-.003-.004-.096-.11-.004-.005-.003-.004-.098-.109-.004-.004-.003-.004-.1-.108-.003-.004-.004-.004-.1-.107-.004-.004-.004-.004-.102-.106-.003-.003-.004-.004-.093-.095-.124-.103-.14-.08-.153-.05-.16-.023-.16.008zM4.288 12.828l-.158.032-.15.06-.135.088-.117.11-.095.131-.069.146-.035.129-.026.132v.005l-.002.005-.025.143-.001.005-.001.006-.024.143-.001.005-.001.006-.022.143-.001.006-.001.005-.02.144-.001.005-.001.006-.019.144v.005l-.001.006-.017.144v.006l-.001.005-.016.145v.011l-.014.145v.006l-.001.005-.012.146v.01l-.01.146-.001.006v.005l-.009.146v.011l-.007.146v.011l-.004.147v.011l-.003.147v.01l-.002.148v.01l.001.148v.01l.003.147v.011l.005.147v.01l.007.147v.011l.009.146v.011l.01.146v.01l.013.146v.011l.014.145v.005l.001.006.016.145v.011l.018.144v.006l.001.005.019.144v.006l.001.005.021.144v.005l.002.006.022.143v.006l.002.005.024.143v.005l.002.006.025.143.001.005.001.005.028.143.001.005.001.005.03.142v.005l.002.006.03.141.002.005.001.006.033.14v.006l.002.005.035.14v.006l.002.005.036.14.002.005.001.005.038.14.001.005.002.005.04.14v.005l.002.005.042.138.001.006.002.005.042.138.002.005.002.005.017.054.064.148.09.134.114.114.132.092.148.065.157.037.16.007.16-.023.153-.052.14-.08.123-.103.102-.126.076-.142.049-.153.02-.16-.01-.161-.032-.13-.017-.051-.039-.126-.038-.13-.037-.128-.035-.13-.033-.128-.033-.134-.03-.13-.029-.131-.026-.13-.026-.132-.024-.134-.023-.133-.02-.132-.02-.136-.017-.132-.016-.135-.014-.135-.012-.133-.012-.138-.009-.133-.007-.136-.006-.138-.004-.134-.003-.136v-.274l.003-.136.004-.134.006-.139.007-.136.01-.132.01-.139.013-.132.014-.135.016-.135.017-.132.02-.137.02-.13.023-.134.024-.133.024-.126.016-.16-.014-.161-.044-.155-.072-.145-.098-.128-.12-.108-.137-.084-.15-.057-.16-.029-.16.002zm23.286 4.202l-.156.038-.148.066-.132.092-.113.115-.09.134-.062.148-.03.127-.001.004-.023.134-.024.134-.026.132-.026.13-.03.132-.03.129-.032.134-.033.128-.035.13-.037.128-.038.13-.04.126-.04.128-.044.128-.044.126-.046.126-.048.126-.05.125-.05.125-.051.122-.054.123-.055.122-.056.12-.058.122-.06.12-.061.12-.062.119-.063.116-.067.119-.066.116-.068.115-.07.115-.07.113-.073.113-.074.112-.076.113-.077.112-.077.107-.08.11-.08.108-.085.109-.044.056-.088.135-.06.15-.033.158-.002.16.027.16.057.15.083.138.108.12.128.098.144.072.155.045.16.015.161-.016.155-.044.144-.073.128-.098.09-.099.05-.061.003-.004.003-.005.089-.115.003-.004.003-.005.088-.116.003-.004.003-.005.086-.117.003-.004.003-.005.084-.118.003-.004.003-.005.083-.12.003-.004.003-.004.082-.12.003-.005.002-.004.08-.121.003-.005.003-.004.078-.122.003-.005.003-.004.077-.123.002-.005.003-.004.075-.124.003-.005.003-.004.073-.125.003-.004.003-.005.072-.126.002-.004.003-.005.07-.126.003-.005.002-.005.07-.127.002-.004.002-.005.068-.128.002-.005.002-.004.066-.13.003-.004.002-.005.064-.13.002-.004.003-.005.062-.13.003-.005.002-.005.06-.13.003-.005.002-.005.06-.132.002-.005.002-.005.057-.132.003-.005.002-.005.056-.133.002-.005.002-.005.054-.134.002-.004.002-.005.053-.135.002-.005.002-.005.051-.135.002-.005.002-.005.05-.135.001-.005.002-.005.048-.137.001-.005.002-.005.046-.137.002-.005.002-.005.044-.137.002-.005.002-.005.042-.138.002-.005.002-.006.04-.138.002-.005.002-.005.04-.14V19.4l.002-.005.038-.14.001-.005.002-.005.036-.14.001-.005.001-.005.035-.141.001-.005.001-.005.033-.141.001-.006.001-.005.031-.141.002-.006v-.005l.03-.142.001-.005.001-.005.028-.143v-.005l.002-.005.025-.143.001-.006.001-.005.024-.143.001-.005.001-.006.001-.006.01-.161-.02-.16-.05-.154-.077-.141-.102-.125-.123-.104-.141-.079-.153-.051-.16-.022-.16.007zM6.681 22.734l-.152.053-.14.08-.122.105-.101.126-.076.142-.048.154-.018.16.011.161.041.156.07.146.077.11.04.047.003.004.003.004.095.111.003.004.004.004.096.11.004.005.003.004.098.109.003.004.004.004.1.108.003.004.003.004.101.107.004.004.003.004.102.106.004.003.004.004.103.105.004.004.004.004.105.103.004.004.003.003.106.102.004.004.004.004.107.1.004.004.004.004.108.099.004.003.004.004.11.098.003.003.004.004.11.096.005.004.004.003.11.095.005.003.004.004.113.093.004.003.004.004.113.091.004.004.005.003.114.09.004.004.004.003.116.089.004.003.004.003.117.088.004.003.004.003.118.086.004.003.005.003.118.084.004.003.005.003.119.083.004.003.005.003.12.081.005.003.004.003.121.08.005.003.004.003.122.078.005.003.004.003.123.076.005.003.004.003.124.075.005.003.004.003.125.073.004.003.005.003.126.072.004.002.005.003.126.07.005.003.004.002.128.07.004.002.005.002.128.068.005.002.004.002.13.066.004.003.005.002.13.064.004.002.005.003.13.062.005.002.004.003.132.06.004.003.005.002.132.06.005.002.005.002.132.057.005.002.005.003.133.056.005.002.005.002.133.054.005.002.005.002.13.05.154.045.16.016.161-.015.155-.045.144-.072.128-.098.108-.12.083-.138.057-.15.028-.16-.003-.16-.032-.158-.061-.15-.088-.135-.11-.117-.132-.094-.12-.058-.124-.049-.126-.051-.122-.051-.122-.054-.12-.054-.126-.058-.119-.057-.12-.06-.12-.06-.118-.063-.117-.064-.119-.066-.116-.066-.115-.068-.115-.07-.113-.07-.115-.074-.112-.074-.11-.075-.11-.076-.112-.079-.11-.08-.109-.082-.106-.082-.104-.082-.106-.086-.105-.087-.101-.086-.105-.091-.1-.09-.1-.091-.1-.094-.097-.094-.1-.098-.093-.095-.096-.1-.093-.098-.092-.101-.089-.1-.09-.102-.088-.104-.036-.043-.114-.114-.133-.091-.148-.065-.157-.036-.161-.006-.16.024zm15.063 2.691l-.156.044-.12.057-.06.034-.12.066-.116.064-.119.062-.12.061-.12.06-.118.057-.126.058-.12.054-.122.054-.122.05-.126.052-.125.05-.124.046-.127.047-.125.044-.129.043-.126.04-.13.042-.128.038-.127.036-.13.035-.131.034-.129.031-.132.03-.13.03-.135.027-.133.026-.13.023-.13.022-.137.021-.132.02-.134.017-.132.015-.138.015-.135.013-.133.01-.138.01-.136.007-.134.006-.136.004-.14.003-.16.018-.155.047-.142.076-.127.1-.105.122-.08.14-.054.151-.025.16.006.16.035.158.064.148.09.134.114.114.133.092.147.065.157.036.134.008.145-.002h.011l.147-.005h.01l.147-.007h.011l.146-.009h.011l.146-.01h.005l.005-.001.146-.012h.011l.145-.014h.005l.006-.001.145-.016h.011l.144-.018h.006l.005-.001.144-.02h.011l.144-.021h.005l.006-.002.143-.022h.006l.005-.002.143-.024h.005l.006-.002.143-.026h.005l.005-.002.143-.027.005-.001.005-.001.142-.03h.005l.005-.002.142-.03.005-.002.005-.001.142-.033.005-.001.005-.001.14-.035.006-.001.005-.001.14-.036.005-.002.005-.001.14-.038.005-.001.005-.002.14-.04h.005l.005-.002.138-.042.005-.001.006-.002.138-.043.005-.001.005-.002.137-.044.005-.002.005-.002.137-.046.005-.002.005-.001.137-.048.005-.002.005-.002.135-.05.005-.001.005-.002.135-.051.005-.002.005-.002.135-.053.005-.002.004-.002.134-.054.005-.002.005-.002.133-.056.005-.003.005-.002.132-.057.005-.002.005-.003.132-.059.005-.002.004-.002.131-.061.005-.003.005-.002.13-.062.005-.003.005-.002.13-.064.004-.002.005-.003.129-.066.004-.002.005-.003.128-.067.005-.002.004-.003.127-.069.005-.002.005-.003.126-.07.005-.003.004-.002.065-.038.132-.093.112-.115.089-.135.062-.149.034-.157.004-.161-.027-.16-.055-.15-.082-.14-.107-.12-.127-.1-.144-.073-.154-.045-.16-.017-.161.014zM15.994 0l-.187.001h-.011l-.188.004h-.011l-.187.006h-.011l-.187.008h-.005L15.2.02l-.187.01h-.005l-.005.001-.187.013h-.01L14.62.06h-.01l-.186.018h-.011l-.185.02-.005.001h-.006l-.185.022-.005.001h-.005l-.185.025h-.005l-.005.001-.184.027h-.006l-.005.001-.184.029h-.005l-.005.001-.183.031-.005.001-.006.001-.182.033-.006.001-.005.001-.182.035-.005.001-.005.001-.182.038h-.005l-.005.002-.181.04h-.005l-.005.002-.18.042-.006.001-.005.001-.18.044-.005.002h-.005l-.17.045-.152.054-.139.082-.121.106-.1.127-.074.143-.046.155-.017.16.013.16.043.156.07.145.097.13.119.108.137.085.15.058.159.03.16-.001.133-.023.165-.043.168-.041.171-.04.171-.037.172-.036.17-.033.173-.03.17-.03.177-.027.171-.025.175-.022.175-.02.175-.02.176-.016.175-.014.177-.012.176-.01.177-.007.174-.006.177-.003L16 1.73h.177l.178.004.174.006.177.007.176.01.177.012.175.014.176.017.175.018.175.02.175.023.171.025.177.027.17.03.173.03.17.033.171.036.154.033.16.02.161-.01.156-.04.146-.069.131-.094.111-.117.088-.135.06-.15.032-.158.002-.16-.027-.16-.057-.15L20 .714l-.108-.12-.128-.097-.144-.073-.129-.038-.158-.035-.005-.001-.005-.001L19.14.31h-.005l-.005-.002-.182-.035h-.006l-.005-.002-.182-.033h-.006l-.005-.002-.183-.03-.005-.001-.005-.001-.184-.029h-.005l-.006-.001-.184-.027h-.005l-.005-.001-.185-.024h-.005L17.968.12 17.783.1l-.006-.001h-.005l-.185-.02h-.006l-.005-.001L17.39.06 17.385.06h-.005l-.187-.015h-.005l-.005-.001-.187-.013h-.01L16.799.02h-.011L16.6.01h-.011l-.187-.006h-.011L16.204 0h-.011L16.005 0h-.01zm8.86 2.939l-.157.033-.15.062-.134.09-.116.111-.093.132-.067.147-.038.156-.01.161.022.16.05.153.078.141.103.124.102.087.045.034.142.106.137.105.14.11.136.11.135.112.134.115.134.117.13.115.132.122.128.12.127.122.127.125.123.126.124.128.121.13.118.128.118.132.117.133.113.134.113.136.11.136.109.137.109.142.104.14.103.14.101.142.1.144.099.146.095.145.094.147.093.15.092.15.087.149.087.15.085.152.083.155.08.152.08.155.04.081.084.138.11.119.128.096.145.072.155.043.16.013.161-.016.155-.046.143-.074.127-.099.106-.12.083-.14.055-.151.026-.16-.004-.16-.034-.158-.05-.124-.042-.085-.002-.004-.003-.005-.084-.165-.002-.004-.003-.005-.086-.164-.002-.004-.003-.005-.088-.162-.002-.005-.003-.005-.09-.161-.002-.005-.003-.004-.092-.16-.002-.005-.003-.005-.094-.16-.003-.004-.003-.004-.096-.159-.002-.004-.003-.005-.098-.157-.003-.004-.003-.005-.1-.156-.003-.004-.002-.005-.102-.154-.003-.005-.003-.004-.104-.154-.003-.004-.003-.005-.106-.152-.003-.004-.003-.005-.108-.151-.003-.004-.003-.005-.11-.15-.003-.004-.003-.004-.111-.15-.004-.003-.003-.005-.113-.147-.004-.004-.003-.005-.115-.146-.004-.004-.003-.004-.117-.145-.004-.004-.003-.004-.12-.144-.003-.004-.003-.004-.121-.142-.003-.004-.004-.004-.123-.141-.003-.004-.004-.004-.125-.14-.003-.004-.004-.004-.127-.138-.003-.004-.004-.004-.128-.136-.004-.004-.004-.004-.13-.135-.004-.004-.003-.004-.133-.134-.003-.004-.004-.003-.134-.133-.004-.003-.004-.004-.135-.13-.004-.004-.004-.004-.136-.128-.004-.004-.004-.004-.138-.126-.004-.004-.004-.003-.14-.125-.004-.004-.004-.003-.14-.123-.005-.004-.004-.003-.142-.121-.004-.004-.004-.003-.144-.12-.004-.003-.004-.003-.145-.117-.004-.004-.004-.003-.147-.115-.004-.004-.004-.003-.148-.113-.004-.003-.004-.004-.149-.111-.004-.003-.004-.004-.05-.036-.14-.083-.15-.055-.16-.027-.16.004zm-18.381.348l-.157.037-.147.066-.111.074-.04.032-.005.003-.004.004-.145.117-.004.003-.004.004-.144.119-.004.003-.004.004-.142.12-.004.004-.004.004-.141.123-.004.003-.004.004-.14.125-.004.003-.004.004-.138.126-.004.004-.004.004-.136.128-.004.004-.004.004-.135.13-.004.004-.004.003-.134.133-.004.003-.004.004-.132.134-.003.004-.004.004-.13.135-.004.004-.004.004-.128.136-.004.004-.004.004-.126.138-.004.004-.003.004-.125.14-.004.004-.003.004-.123.14-.004.005-.003.004-.121.142-.004.004-.003.004-.12.144-.003.004-.003.004-.117.145-.004.004-.003.004-.115.146-.004.005-.003.004-.113.147-.003.005-.004.004-.111.149-.003.004-.004.004-.11.15-.002.005-.003.004-.108.151-.003.005-.003.004-.106.152-.003.005-.003.004-.104.154-.003.004-.003.005-.102.154-.003.005-.002.004-.1.156-.003.005-.003.004-.098.157-.003.005-.003.004-.096.159-.002.004-.003.005-.094.16-.003.004-.002.004-.092.16-.003.005-.003.005-.09.161-.002.005-.003.005-.088.162-.002.005-.003.004-.086.164-.002.005-.002.004-.084.165-.003.005-.002.004-.082.166-.002.005-.003.004-.08.167-.002.004-.002.005-.078.168-.002.004-.002.005-.045.1-.053.153-.023.16.007.16.037.157.065.148.092.132.114.114.134.09.148.064.157.035.161.006.16-.025.152-.054.14-.08.121-.106.1-.126.065-.118.043-.095.074-.16.075-.155.077-.157.08-.155.08-.152.083-.155.085-.152.086-.15.088-.149.091-.15.094-.15.094-.147.095-.145.099-.146.1-.144.1-.142.104-.14.104-.14.11-.142.107-.137.11-.136.114-.136.113-.134.117-.133.118-.132.117-.129.122-.13.124-.127.123-.126.127-.125.127-.122.128-.12.132-.122.13-.115.133-.117.135-.115.135-.111.136-.11.037-.03.117-.11.094-.132.068-.146.04-.156.01-.161-.02-.16-.05-.154-.076-.141-.102-.125-.123-.104-.14-.08-.153-.051-.16-.023-.161.008zm24.514 11.15l-.157.04-.146.067-.131.093-.112.117-.088.135-.061.149-.033.157-.005.134.006.14.006.176.003.177.001.178-.001.177-.003.178-.006.177-.007.176-.01.177-.012.176-.015.176-.016.173-.018.175-.02.175-.024.174-.024.175-.027.17-.03.174-.03.173-.033.17-.036.172-.037.17-.04.17-.042.172-.043.168-.045.166-.048.169-.05.167-.052.168-.053.164-.056.166-.058.166-.06.161-.061.164-.063.158-.066.165-.068.16-.07.16-.07.158-.075.159-.074.155-.078.158-.081.158-.06.15-.03.158-.001.161.029.159.058.15.085.137.108.12.13.096.144.07.156.044.16.013.16-.017.155-.046.143-.074.127-.1.107-.12.07-.115.083-.164.003-.005.002-.004.082-.166.002-.005.003-.004.08-.167.002-.005.002-.004.078-.168.002-.004.002-.005.076-.169.002-.004.002-.005.074-.17.002-.004.002-.005.072-.17.002-.005.002-.005.07-.17.002-.006.001-.005.068-.172.002-.004.002-.005.065-.173.002-.005.002-.005.063-.173.002-.005.002-.005.06-.174.003-.005.001-.005.06-.175.001-.005.002-.005.057-.176.001-.005.002-.005.055-.177.001-.005.002-.005.052-.177.002-.005.001-.005.051-.178.001-.005.002-.005.048-.179.002-.005v-.005l.047-.179.001-.005.002-.005.044-.18v-.005l.002-.005.042-.18.001-.006.001-.005.04-.18.001-.006.001-.005.038-.182v-.005l.002-.005.035-.182v-.006l.002-.005.033-.182v-.006l.002-.005.03-.183.001-.005.001-.005.029-.184v-.005l.001-.006.027-.184v-.005l.001-.005.024-.185v-.005l.001-.005.022-.185v-.006l.001-.005.02-.185v-.006l.001-.005.017-.186v-.005l.001-.005.015-.187v-.005l.001-.005.013-.187v-.01l.01-.187.001-.006v-.005l.009-.187v-.011l.006-.187v-.011l.004-.188v-.011l.001-.188v-.01l-.001-.188v-.011l-.004-.188v-.011l-.006-.187v-.011l-.007-.145-.022-.16-.05-.152-.08-.141-.103-.124-.125-.102-.141-.077-.153-.05-.16-.02-.161.009zM.777 15l-.158.032-.15.06-.136.087-.117.11-.095.131-.068.146-.04.156-.012.133-.001.14v.01l.001.188v.011l.004.188v.011l.006.187v.011l.008.187v.011l.011.187v.005l.001.005.013.187v.01l.016.187v.01l.018.186v.011l.02.185.001.005v.006l.022.185.001.005v.005l.025.185v.005l.001.005.027.184v.006l.001.005.029.184v.005l.001.005.031.183.001.005.001.006.033.182.001.005.001.006.035.182.001.005.001.005.038.182v.005l.002.005.04.181v.005l.002.005.042.18.001.006.001.005.044.18.002.005v.005l.047.18.001.004.002.005.048.179.002.005.001.005.05.178.002.005.001.005.053.177.002.005.001.005.055.177.002.005.001.005.057.176.002.005.001.005.06.175.001.005.002.005.061.174.002.005.002.005.063.173.002.005.002.005.065.173.002.005.002.004.067.172.002.005.002.005.07.171.002.005.002.005.072.17.002.005.002.005.074.169.002.005.002.004.076.169.002.005.002.004.078.168.002.004.002.005.08.167.003.004.002.005.082.166.002.004.003.005.02.04.086.136.11.118.13.095.146.07.156.041.16.012.16-.019.155-.048.142-.075.126-.1.105-.123.08-.14.054-.152.024-.16-.006-.16-.036-.158-.051-.123-.018-.034-.078-.158L3.1 22.1l-.074-.16-.071-.156-.07-.162-.068-.16-.067-.164-.062-.158-.062-.164-.059-.161-.058-.166-.056-.166-.053-.164-.052-.168-.05-.167-.048-.17-.045-.165-.043-.168-.043-.172-.039-.17-.037-.17-.036-.172-.033-.17-.03-.173-.03-.174-.027-.17-.025-.175-.022-.174-.021-.175-.018-.175-.017-.173-.014-.176-.012-.176-.01-.177-.007-.176-.006-.177-.003-.178L1.73 16v-.134l-.013-.16-.044-.156-.072-.144-.097-.129-.12-.108-.137-.085-.15-.057L.938 15 .777 15zM6.17 26.842l-.152.052-.14.08-.122.105-.101.126-.076.142-.048.154-.02.16.012.161.041.156.07.146.094.13.096.093.032.026.004.003.004.004.145.117.004.003.004.004.146.115.005.003.004.004.147.113.005.003.004.004.149.111.004.003.004.003.15.11.005.003.004.003.151.108.005.003.004.003.152.106.005.003.004.003.154.104.004.003.005.003.154.102.005.002.004.003.156.1.005.003.004.003.157.098.005.003.004.002.159.096.004.003.005.003.16.094.004.003.004.002.16.092.005.003.005.002.161.09.005.003.005.003.162.088.005.002.004.002.164.087.005.002.004.002.165.084.005.003.004.002.166.082.004.002.005.003.167.08.004.002.005.002.168.078.004.002.005.002.169.076.004.002.005.002.17.074.004.002.005.002.17.072.005.002.005.002.17.07.006.002.005.001.171.068.005.002.005.002.173.065.005.002.005.002.173.063.005.002.005.002.174.061.005.002.005.001.175.06.005.001.005.002.176.057.005.001.005.002.177.055.005.001.005.002.177.052.005.002.005.001.178.051.005.001.005.002.178.048.006.002h.005l.179.047.005.001.005.002.18.044h.005l.005.002.18.042.006.001.005.001.159.035.16.02.16-.01.157-.04.146-.069.13-.094.112-.117.087-.136.06-.149.033-.158.002-.161-.028-.159-.057-.15-.084-.138-.108-.12-.128-.098-.144-.072-.128-.039-.154-.033-.168-.04-.171-.041-.169-.044-.17-.045-.166-.048-.168-.05-.165-.051-.166-.054-.166-.056-.163-.057-.165-.06-.161-.062-.164-.064-.16-.065-.16-.068-.162-.07-.157-.07-.157-.074-.157-.075-.156-.077-.153-.079-.156-.082-.153-.082-.154-.086-.15-.086-.152-.09-.148-.09-.147-.092-.149-.095-.145-.095-.144-.098-.145-.1-.143-.102-.14-.103-.14-.104-.14-.108-.139-.11-.136-.11-.027-.022-.133-.091-.148-.065-.157-.036-.161-.006-.16.024zm19.214.073l-.156.039-.146.067-.11.076-.064.051-.139.11-.14.108-.14.104-.14.103-.143.101-.145.101-.144.098-.145.095-.149.095-.148.093-.147.089-.152.09-.15.086-.154.086-.153.082-.156.082-.153.079-.156.077-.157.075-.157.073-.158.071-.16.07-.16.068-.161.065-.164.064-.161.061-.165.06-.163.058-.166.056-.166.054-.166.051-.167.05-.167.048-.17.045-.168.044-.171.042-.168.039-.17.037-.11.023-.154.047-.143.075-.126.1-.106.122-.081.139-.054.152-.025.16.006.16.035.158.063.148.09.133.114.115.132.092.148.065.157.037.16.008.133-.017.115-.024h.005l.005-.002.181-.04h.005l.005-.002.18-.042.006-.001.005-.001.18-.044.005-.002h.005l.18-.047.004-.001.005-.002.179-.048.005-.002.005-.001.178-.05.005-.002.005-.002.177-.052.005-.002.005-.001.177-.055.005-.002.005-.001.176-.057.005-.002.005-.002.175-.059.005-.001.005-.002.174-.061.005-.002.005-.002.173-.063.005-.002.005-.002.173-.065.005-.002.004-.002.172-.068.005-.001.005-.002.171-.07.005-.002.005-.002.17-.072.005-.002.005-.002.169-.074.005-.002.004-.002.169-.076.004-.002.005-.002.168-.078.004-.002.005-.002.167-.08.004-.003.005-.002.166-.082.004-.002.005-.003.165-.084.004-.002.005-.002.163-.087.005-.002.005-.002.162-.088.005-.003.005-.003.161-.09.005-.002.004-.003.16-.092.005-.002.005-.003.16-.094.004-.003.004-.003.158-.096.005-.002.004-.003.158-.098.004-.003.005-.003.156-.1.004-.003.004-.002.155-.102.005-.003.004-.003.154-.104.004-.003.005-.003.152-.106.004-.003.005-.003.151-.108.004-.003.005-.003.15-.11.004-.003.004-.003.149-.111.004-.004.004-.003.148-.113.004-.004.004-.003.147-.115.004-.004.004-.003.068-.055.116-.113.092-.132.066-.147.038-.157.008-.16-.022-.16-.05-.153-.08-.14-.103-.125-.124-.102-.142-.077-.153-.05-.16-.02-.16.009z\"\n})));\n\nfunction _extends$H() { _extends$H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$H.apply(this, arguments); }\nvar IntermediateEventCatchParallelMultipleIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$H({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.003C8.195-.157.935 6.24.125 13.985c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.884 23.445.408 17.201.049c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.174.872 11.679 4.985 6.916c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.215-2.282-2.022-5.3-3.217-8.357-3.22zM16 4.975c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.082 11.082 0 0116 4.975zm-2.15 3.281v5.534H8.213v4.38h5.636v5.534h4.31V18.17h5.639v-4.38h-5.64V8.256h-4.31zm.865.865h2.583v5.534h5.635v2.65h-5.635v5.533h-2.583v-5.534h-5.64v-2.649h5.64V9.121z\"\n})));\n\nfunction _extends$G() { _extends$G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$G.apply(this, arguments); }\nvar IntermediateEventCatchSignalIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$G({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.049C8.195-.11.935 6.286.125 14.03c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.93 23.445.453 17.201.095c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.22.872 11.725 4.985 6.962c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 5.021c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 5.021zm.006 3.521L9.206 20.745h13.598L16.005 8.542zm0 1.775l5.329 9.564H10.677l5.328-9.564z\"\n})));\n\nfunction _extends$F() { _extends$F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$F.apply(this, arguments); }\nvar IntermediateEventCatchTimerIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$F({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.97.04h-.127C8.713-.018 2.003 5.334.437 12.286c-1.51 6.123.98 13.005 6.136 16.665 5.125 3.788 12.546 4.105 17.912.623 5.272-3.276 8.33-9.766 7.325-15.916-.904-6.241-5.79-11.7-11.95-13.143A16.082 16.082 0 0015.97.04zm-.181 1.724c.115 0 .23 0 .347.003 6.625-.066 12.823 5.149 13.89 11.69 1.13 5.91-1.908 12.349-7.262 15.138-5.473 3.013-12.866 1.884-17.116-2.726C1.291 21.372.444 13.914 3.802 8.602c2.493-4.112 7.169-6.819 11.987-6.838zm.283 1.554c-.117 0-.234.002-.351.005-6.1 0-11.691 5.049-12.346 11.114-.78 5.684 2.795 11.612 8.218 13.52 5.139 1.943 11.416.101 14.624-4.38 3.461-4.583 3.262-11.538-.596-15.831-2.36-2.747-5.924-4.423-9.549-4.428zm-.078 1.695c.078 0 .156 0 .234.003 5.4 0 10.321 4.556 10.734 9.942.563 5.13-2.958 10.364-7.971 11.678-4.832 1.41-10.457-.935-12.746-5.446-2.463-4.559-1.2-10.795 3.014-13.883a11.072 11.072 0 016.735-2.294zm-.137 3.42c-2.965.02-5.792 1.968-6.884 4.722-1.137 2.693-.509 6.007 1.536 8.096 1.988 2.14 5.263 2.929 8.007 1.926 2.875-.98 4.987-3.824 5.063-6.865.154-2.954-1.622-5.875-4.295-7.13a7.545 7.545 0 00-3.427-.75zm.27 1.381c2.708.013 5.249 2.014 5.88 4.652.704 2.576-.481 5.512-2.788 6.862-2.356 1.478-5.677 1.084-7.611-.918-2.042-1.97-2.405-5.376-.839-7.738 1.11-1.762 3.146-2.877 5.229-2.857h.13zm1.831 1.764l-2.072 3.76c-.64.068-.792 1.039-.202 1.298.39.27.696-.18 1.051-.164h3.168v-.864h-3.18l1.992-3.612-.757-.418z\"\n})));\n\nfunction _extends$E() { _extends$E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$E.apply(this, arguments); }\nvar IntermediateEventNoneIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$E({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.848.001C8.113-.093.931 6.281.125 13.983c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.207C29.105 4.938 23.55.48 17.367.06A16.448 16.448 0 0015.848 0v.001zm.293 1.727c7.113-.099 13.662 5.97 14.077 13.08.56 6.299-3.516 12.735-9.582 14.679-5.798 2.004-12.806-.12-16.283-5.237C.717 19.159.874 11.638 5.016 6.876 7.722 3.638 11.902 1.63 16.14 1.728zm-.415 1.555C9.157 3.258 3.256 9.156 3.278 15.729c-.16 5.965 4.365 11.725 10.293 12.737 5.409 1.065 11.37-1.744 13.775-6.753 2.534-4.986 1.386-11.627-2.953-15.251-2.364-2.077-5.512-3.27-8.667-3.18zm.507 1.692c5.82-.026 11.013 5.318 10.79 11.143-.024 5.3-4.313 10.267-9.636 10.803-5.075.667-10.426-2.588-11.885-7.553-1.535-4.744.494-10.46 4.925-12.885a11.072 11.072 0 015.806-1.508z\"\n})));\n\nfunction _extends$D() { _extends$D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$D.apply(this, arguments); }\nvar IntermediateEventThrowCompensationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$D({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.003C8.195-.156.935 6.24.125 13.985c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.884 23.445.407 17.201.049c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.174.872 11.679 4.985 6.916c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 4.975c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 4.975zm-.56 5.772l-7.408 5.231 7.409 5.234v-5.057c2.385 1.687 4.771 3.371 7.157 5.057V10.747l-7.157 5.055v-5.055z\"\n})));\n\nfunction _extends$C() { _extends$C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$C.apply(this, arguments); }\nvar IntermediateEventThrowEscalationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$C({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.049C8.195-.11.935 6.286.125 14.03c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.93 23.445.453 17.201.095c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.22.872 11.725 4.985 6.962c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 5.021c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 5.021zm.006 3.927c-1.672 4.654-2.734 9.502-4.406 14.155 1.534-1.525 2.872-3.234 4.406-4.759l4.406 4.76c-1.496-4.71-2.91-9.446-4.406-14.156z\"\n})));\n\nfunction _extends$B() { _extends$B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$B.apply(this, arguments); }\nvar IntermediateEventThrowLinkIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$B({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.049C8.195-.11.935 6.286.125 14.03c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.93 23.445.453 17.201.095c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.22.872 11.725 4.985 6.962c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 5.021c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 5.021zm1.78 4.093v3.555H9.785v6.714h7.994v3.554l5.829-6.911-5.83-6.912z\"\n})));\n\nfunction _extends$A() { _extends$A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$A.apply(this, arguments); }\nvar IntermediateEventThrowMessageIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$A({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.003C8.195-.156.935 6.24.125 13.985c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.884 23.445.407 17.201.049c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.174.872 11.679 4.985 6.916c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 4.975c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 4.975zm-5.91 5.475l6.04 4.901 6.042-4.9H10.088zm-1.341 1.138v9.921h14.514V11.79l-7.132 5.787-7.382-5.99z\"\n})));\n\nfunction _extends$z() { _extends$z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$z.apply(this, arguments); }\nvar IntermediateEventThrowMultipleIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$z({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.003C8.195-.156.935 6.24.125 13.985c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.884 23.445.407 17.201.049c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.174.872 11.679 4.985 6.916c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 4.975c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 4.975zm.006 3.073l-7.62 5.532 2.91 8.95h9.42l2.91-8.95-7.62-5.532z\"\n})));\n\nfunction _extends$y() { _extends$y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$y.apply(this, arguments); }\nvar IntermediateEventThrowSignalIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$y({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.975.003C8.195-.156.935 6.24.125 13.985c-.855 6.55 2.741 13.46 8.74 16.314 5.666 2.847 13.012 1.99 17.71-2.33 4.745-4.162 6.727-11.243 4.532-17.206C29.09 4.884 23.445.407 17.201.049c-.408-.03-.817-.046-1.226-.046zm-.181 1.724c7.134-.269 13.84 5.68 14.399 12.804.686 6.283-3.267 12.792-9.283 14.862-5.847 2.162-13.025.06-16.557-5.141C.728 19.174.872 11.679 4.985 6.916c2.632-3.171 6.671-5.174 10.809-5.19zm.283 1.553c-6.6-.21-12.671 5.585-12.79 12.185-.292 5.964 4.129 11.817 10.034 12.953 5.47 1.198 11.584-1.613 14.025-6.702 2.525-4.97 1.396-11.585-2.912-15.216-2.282-2.021-5.3-3.216-8.357-3.22zM16 4.975c5.818-.154 11.117 5.082 11.024 10.905.103 5.384-4.23 10.5-9.636 11.043-5.075.667-10.426-2.587-11.885-7.552-1.53-4.73.48-10.428 4.888-12.864A11.083 11.083 0 0116 4.975zm.006 3.52c-2.261 4.07-4.533 8.136-6.798 12.205h13.596L16.005 8.495z\"\n})));\n\nfunction _extends$x() { _extends$x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$x.apply(this, arguments); }\nvar LaneIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$x({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 7v18.62h32V7H0zm1.655 17.056V8.684h28.62v15.372H1.656z\"\n})));\n\nfunction _extends$w() { _extends$w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$w.apply(this, arguments); }\nvar ManualTaskIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$w({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.494 3C2.916 3 0 5.903 0 9.475v13.383c0 3.572 2.916 6.475 6.494 6.475h19.012c3.578 0 6.494-2.903 6.494-6.475V9.475C32 5.903 29.084 3 25.506 3H6.494zm0 2h19.012C28.015 5 30 6.98 30 9.475v13.383c0 2.495-1.985 4.475-4.494 4.475H6.494C3.985 27.333 2 25.353 2 22.858V9.475C2 6.98 3.985 5 6.494 5zm4.43 1.328c-.222.005-.43.09-.606.203-.985.638-4.356 2.977-5.096 3.486-.67.46-1.12 1.153-1.38 1.974-.27.858-.235 1.793-.232 2.576.002.59.016 1.104.17 1.727.22.908.634 1.63 1.23 2.118.597.49 1.363.732 2.23.734 3.038.012 6.078.016 9.119 0 .327-.002.645-.127.848-.37.204-.241.287-.56.291-.914a1.732 1.732 0 00-.097-.625h.327c.335 0 .641-.11.852-.316.21-.206.317-.475.374-.754a1.783 1.783 0 00-.126-1.143 1.18 1.18 0 00.877-.521c.196-.306.257-.666.258-1.025.001-.375-.088-.738-.293-1.033a1.179 1.179 0 00-.958-.512h-.478c.108-.237.156-.505.155-.782-.003-.373-.098-.721-.316-.99a1.21 1.21 0 00-.943-.43c-2.273-.004-4.236.018-6.412.012l-.19-.001c.102-.104.202-.205.312-.314.337-.336.662-.652.83-.869.4-.516.46-1.215.123-1.729-.178-.272-.439-.456-.72-.494a.93.93 0 00-.148-.008zm.029.728l.022.001c.055.008.115.027.209.172.132.201.126.606-.09.884-.079.102-.431.465-.767.8-.337.334-.657.643-.815.836-.153.186-.096.338-.056.435.04.096.085.212.298.263.063.014.066.01.086.012l.066.003c2.429.027 4.986-.004 7.223-.003.194 0 .293.056.379.162.086.105.151.286.153.533 0 .257-.065.467-.155.59-.09.124-.183.182-.37.183-1.706-.001-3.411-.005-5.117-.009v.731c2.23.004 4.461.01 6.692.012.17 0 .265.06.361.2.096.138.164.364.163.615 0 .268-.058.501-.143.634-.085.132-.162.193-.385.195-2.32-.001-4.554-.006-6.688-.003v.73c1.905 0 3.809.003 5.713.001.194.005.316.09.416.26.102.173.151.442.093.728-.04.193-.102.313-.17.38-.067.065-.148.108-.343.108h-5.71l.002.734c1.445 0 2.89-.01 4.334-.001.162 0 .232.041.297.123.064.081.123.238.12.488-.003.244-.061.385-.12.455-.06.07-.127.11-.296.11-3.037.016-6.076.012-9.113 0-.735-.002-1.316-.196-1.77-.568-.454-.372-.793-.935-.986-1.728-.134-.546-.146-.978-.148-1.558-.003-.796-.018-1.664.199-2.354.222-.705.582-1.24 1.096-1.593.75-.515 4.14-2.866 5.079-3.474a.504.504 0 01.241-.087z\"\n})));\n\nfunction _extends$v() { _extends$v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$v.apply(this, arguments); }\nvar MessageFlowIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$v({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.073 26.607l1.295 1.296L1.325 32l-.662-.633L0 30.735l4.073-4.128zm6.953-7.046l1.296 1.296L1.325 32l7.555-7.656-1.295-1.296 1.455-1.474 1.986-2.013zM32 .06s-2.699 5.189-5.417 10.462l-.326.633c-1.14 2.214-2.265 4.407-3.176 6.2-1.228-1.222-2.449-2.452-3.676-3.675l-3.57 3.618-1.297-1.296 3.541-3.588c-.98-.964-1.932-1.958-2.923-2.91l-.753-.706c2.68-1.258 6.533-3.165 9.95-4.876l.617-.309C28.838 1.673 32 .06 32 .06zm-4.126 4.06l-.015.007-.115.057-.048.024-.115.057L17.7 9.172l5.017 4.948 5.157-10z\"\n})));\n\nfunction _extends$u() { _extends$u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$u.apply(this, arguments); }\nvar ParticipantIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$u({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 5v22.069h32V5H0zm30.276 1.684v18.82H6.62V6.684h23.655zm-28.62 0h3.31v18.82h-3.31V6.684z\"\n})));\n\nfunction _extends$t() { _extends$t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$t.apply(this, arguments); }\nvar ProcessIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$t({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M16.177 0l.137.002c.452.009.9.037 1.342.082.346.036.62.303.68.646l.437 2.536c.055.319.296.57.608.655.986.269 1.923.653 2.796 1.14.28.155.624.145.885-.039l2.083-1.47a.775.775 0 01.937.022c.86.699 1.645 1.484 2.343 2.343.22.27.223.653.023.937l-1.439 2.038a.833.833 0 00-.031.896c.512.889.92 1.846 1.204 2.855a.833.833 0 00.653.601l2.435.42c.342.059.61.333.645.679a15.928 15.928 0 01.08 2.064l-.003.114c-.012.382-.038.76-.077 1.134a.775.775 0 01-.645.68l-2.396.412a.835.835 0 00-.656.61 12.511 12.511 0 01-1.2 2.917.832.832 0 00.034.892l1.396 1.978c.2.284.196.667-.023.936a16.104 16.104 0 01-2.343 2.343.775.775 0 01-.937.023l-1.99-1.404a.833.833 0 00-.88-.026c-.907.516-1.886.922-2.916 1.2a.833.833 0 00-.61.656l-.414 2.396a.775.775 0 01-.679.646 16.096 16.096 0 01-3.312 0 .775.775 0 01-.679-.646l-.423-2.452a.834.834 0 00-.598-.636 12.474 12.474 0 01-1.468-.514 12.49 12.49 0 01-1.417-.68.833.833 0 00-.878.03l-2.026 1.43a.775.775 0 01-.937-.023 16.069 16.069 0 01-2.342-2.342.774.774 0 01-.024-.936l1.402-1.986a.833.833 0 00.032-.896 12.507 12.507 0 01-1.214-2.911.833.833 0 00-.655-.606l-2.386-.412a.775.775 0 01-.646-.678 16.097 16.097 0 010-3.314.775.775 0 01.646-.678l2.386-.412a.833.833 0 00.655-.606 12.507 12.507 0 011.214-2.911.833.833 0 00-.032-.896L3.552 6.853a.774.774 0 01.023-.936 16.091 16.091 0 012.343-2.343.775.775 0 01.937-.023l2.03 1.433c.26.177.6.182.874.028.915-.512 1.88-.9 2.87-1.167a.833.833 0 00.612-.656l.424-2.46a.775.775 0 01.679-.645C14.845.032 15.348.004 15.85 0h.326zM16 6.4c-5.302 0-9.6 4.297-9.6 9.599 0 5.302 4.298 9.6 9.6 9.6s9.6-4.298 9.6-9.6-4.298-9.6-9.6-9.6zm-3 4.283c0-1.425 1.637-2.203 2.715-1.29l5.69 4.815c.794.672.794 1.91 0 2.583l-5.69 4.815c-1.078.913-2.715.134-2.715-1.29z\"\n})));\n\nfunction _extends$s() { _extends$s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$s.apply(this, arguments); }\nvar ReceiveTaskIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$s({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.494 3C2.916 3 0 5.903 0 9.475v13.383c0 3.572 2.916 6.475 6.494 6.475h19.012c3.578 0 6.494-2.903 6.494-6.475V9.475C32 5.903 29.084 3 25.506 3H6.494zm0 2h19.012C28.015 5 30 6.98 30 9.475v13.383c0 2.495-1.985 4.475-4.494 4.475H6.494C3.985 27.333 2 25.353 2 22.858V9.475C2 6.98 3.985 5 6.494 5zM5.23 7.764v11.577h17.55V7.764H5.23zm1.816.758h13.917l-6.959 4.577-6.958-4.577zm-1.06.21l8.018 5.274 8.018-5.275v9.853H5.987V8.73z\"\n})));\n\nfunction _extends$r() { _extends$r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$r.apply(this, arguments); }\nvar ScriptTaskIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$r({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.494 3C2.916 3 0 5.903 0 9.475v13.383c0 3.572 2.916 6.475 6.494 6.475h19.012c3.578 0 6.494-2.903 6.494-6.475V9.475C32 5.903 29.084 3 25.506 3H6.494zm0 2h19.012C28.015 5 30 6.98 30 9.475v13.383c0 2.495-1.985 4.475-4.494 4.475H6.494C3.985 27.333 2 25.353 2 22.858V9.475C2 6.98 3.985 5 6.494 5zm2.99 3.077l-.077.045-.026.015c-1.09.646-1.84 1.239-2.336 1.818-.496.579-.735 1.162-.742 1.725-.014 1.119.812 1.958 1.544 2.708.732.75 1.385 1.456 1.446 2.041.032.298-.039.598-.364 1.008-.324.408-.911.897-1.85 1.445l-1.388.808h8.56l.101-.059c.996-.58 1.667-1.116 2.094-1.655.429-.54.603-1.107.547-1.638-.11-1.052-.967-1.818-1.688-2.556-.721-.739-1.306-1.436-1.298-2.092.004-.331.132-.7.535-1.171.402-.47 1.08-1.02 2.119-1.636l1.362-.806h-8.54zm.241.867h5.271a6.83 6.83 0 00-1.113 1.01c-.496.58-.736 1.163-.743 1.726-.014 1.119.812 1.958 1.544 2.708.732.75 1.385 1.456 1.446 2.041.032.298-.039.598-.364 1.008-.312.393-.872.862-1.753 1.386H8.728c.367-.286.658-.566.88-.847.43-.54.604-1.107.548-1.638-.11-1.052-.968-1.818-1.688-2.556-.721-.739-1.306-1.435-1.298-2.092.004-.331.132-.7.534-1.171.389-.454 1.04-.984 2.021-1.575zm-1.233 1.48v.4h4.12v-.4h-4.12zm-.154 2.158v.4H12.6v-.4H8.34zm1.931 2.158v.4h4.126v-.4H10.27zm.59 2.158v.4h4.276v-.4h-4.276z\"\n})));\n\nfunction _extends$q() { _extends$q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$q.apply(this, arguments); }\nvar SendTaskIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$q({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.494 3C2.916 3 0 5.903 0 9.475v13.383c0 3.572 2.916 6.475 6.494 6.475h19.012c3.578 0 6.494-2.903 6.494-6.475V9.475C32 5.903 29.084 3 25.506 3H6.494zm0 2h19.012C28.015 5 30 6.98 30 9.475v13.383c0 2.495-1.985 4.475-4.494 4.475H6.494C3.985 27.333 2 25.353 2 22.858V9.475C2 6.98 3.985 5 6.494 5zm-1.38 3.16l8.332 4.717L21.78 8.16H5.114zm.021 1.745v9.309H21.8V9.905l-8.353 4.655-8.31-4.655z\"\n})));\n\nfunction _extends$p() { _extends$p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$p.apply(this, arguments); }\nvar ServiceTaskIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$p({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.494 3C2.916 3 0 5.903 0 9.475v13.383c0 3.572 2.916 6.475 6.494 6.475h19.012c3.578 0 6.494-2.903 6.494-6.475V9.475C32 5.903 29.084 3 25.506 3H6.494zm0 2h19.012C28.015 5 30 6.98 30 9.475v13.383c0 2.495-1.985 4.475-4.494 4.475H6.494C3.985 27.333 2 25.353 2 22.858V9.475C2 6.98 3.985 5 6.494 5zm1.22 1.681V7.84c-.329.093-.63.223-.914.382l-.83-.82-1.554 1.561.83.82c-.16.288-.285.594-.372.911l-1.177.002v2.2l1.189-.004c.109.431.345.819.58 1.165v-1.898l-1.038.004v-.737l1.034-.002.058-.294c.084-.429.252-.838.493-1.203l.165-.25-.727-.718.523-.526.728.719.247-.165c.379-.25.793-.417 1.206-.505l.291-.06-.002-1.01h.75L9.19 8.417H11.16c-.185-.221-.951-.508-1.237-.588L9.93 6.68H7.713zm2.078 2.105l.003 1.158a4.19 4.19 0 00-.915.383l-.83-.821-1.553 1.562.83.82c-.16.288-.286.593-.373.91l-1.176.003v2.2l1.188-.004c.094.326.224.624.383.905l-.85.847 1.57 1.543.847-.843c.29.161.599.286.919.373v1.198c.756.006 1.56.003 2.206.003V17.81a4.19 4.19 0 00.915-.383l.847.835 1.554-1.56-.848-.836c.16-.288.286-.594.373-.912l1.152-.007V12.75l-1.165.007a4.09 4.09 0 00-.382-.905l.805-.807-1.57-1.546-.804.806a4.16 4.16 0 00-.915-.372l.007-1.147H9.792zm.732.73h.751l-.006 1.005.297.058c.43.085.844.252 1.21.492l.25.162.701-.704.528.52-.702.704.169.25c.248.374.412.779.505 1.196l.061.292 1.016-.006v.737l-1.01.006-.058.292c-.085.43-.252.838-.494 1.205l-.165.25.744.733-.523.525-.743-.734-.248.165c-.378.247-.789.418-1.203.503l-.294.058v1.067h-.745v-1.059l-.295-.057a3.395 3.395 0 01-1.21-.492l-.248-.162-.747.743-.528-.52.747-.744-.17-.25a3.546 3.546 0 01-.506-1.196l-.06-.291-1.04.004v-.738l1.034-.002.058-.294c.085-.428.252-.837.493-1.203l.165-.25-.726-.718.522-.526.728.72.248-.166a3.546 3.546 0 011.205-.504l.292-.06-.003-1.01zm.388 2.685a1.65 1.65 0 00-1.645 1.645c0 .904.74 1.645 1.645 1.645a1.65 1.65 0 001.645-1.645 1.65 1.65 0 00-1.645-1.645zm0 .73a.91.91 0 01.915.915.91.91 0 01-.915.914.91.91 0 01-.915-.914.91.91 0 01.915-.915z\"\n})));\n\nfunction _extends$o() { _extends$o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$o.apply(this, arguments); }\nvar StartEventCompensationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$o({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.995.001C9.705-.084 3.643 3.964 1.257 9.775-1.235 15.485.06 22.577 4.42 27.03c4.193 4.513 11.102 6.17 16.887 4.058 5.996-2.042 10.423-7.93 10.664-14.269.403-6.227-3.26-12.44-8.87-15.153A15.924 15.924 0 0015.994 0zm0 1.73c6.213-.108 12.122 4.355 13.726 10.357 1.678 5.653-.592 12.198-5.463 15.547-5.06 3.719-12.564 3.45-17.343-.626C2.101 23.171.377 16.07 2.848 10.44c2.14-5.205 7.515-8.774 13.147-8.708zm-.566 9.03l-7.415 5.235 7.415 5.238v-5.062c2.386 1.689 4.775 3.375 7.163 5.062V10.761l-7.163 5.058v-5.058zm-.866 1.666v7.13L9.51 15.993l5.052-3.565zm7.166 0v7.137l-5.052-3.568 5.052-3.569z\"\n})));\n\nfunction _extends$n() { _extends$n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$n.apply(this, arguments); }\nvar StartEventConditionIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$n({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 0C7.174 0 0 7.174 0 16s7.174 16 16 16 16-7.174 16-16S24.826 0 16 0zm0 1.73c7.892 0 14.27 6.378 14.27 14.27 0 7.891-6.379 14.27-14.27 14.27S1.73 23.891 1.73 16C1.73 8.108 8.108 1.73 16 1.73zm-5.362 7.523v13.493h10.724V9.253H10.638zm.863.866h8.995V21.88H11.501V10.12zm.928 1.324v.863h7.139v-.863h-7.139zm0 2.605v.867h7.139v-.867h-7.139zm0 3.01v.864h7.139v-.863h-7.139zm0 2.72v.863h7.139v-.863h-7.139z\"\n})));\n\nfunction _extends$m() { _extends$m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$m.apply(this, arguments); }\nvar StartEventErrorIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$m({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.995.005C9.705-.08 3.643 3.968 1.257 9.78-1.235 15.49.06 22.581 4.42 27.034c4.193 4.513 11.102 6.17 16.887 4.058 5.996-2.042 10.423-7.93 10.664-14.269.403-6.227-3.26-12.44-8.87-15.153A15.924 15.924 0 0015.994.005zm0 1.73c6.213-.108 12.122 4.355 13.726 10.357 1.678 5.653-.592 12.198-5.463 15.547-5.06 3.719-12.564 3.45-17.343-.626-4.814-3.838-6.538-10.939-4.067-16.57 2.14-5.205 7.515-8.774 13.147-8.708zm6.13 7.45l-3.635 7.37-4.52-5.88c-1.37 4.048-2.738 8.095-4.106 12.143l4.603-5.917 4.748 5.433 2.91-13.149zm-7.754 3.889l4.299 5.449 1.073-2.39-1.028 4.135-4.387-5.16-1.78 2.75 1.823-4.784z\"\n})));\n\nfunction _extends$l() { _extends$l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$l.apply(this, arguments); }\nvar StartEventEscalationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$l({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.995.001C9.705-.084 3.643 3.964 1.257 9.775-1.235 15.485.06 22.577 4.42 27.03c4.193 4.513 11.102 6.17 16.887 4.058 5.996-2.042 10.423-7.93 10.664-14.269.403-6.227-3.26-12.44-8.87-15.153A15.924 15.924 0 0015.994 0zm0 1.73c6.213-.108 12.122 4.355 13.726 10.357 1.678 5.653-.592 12.198-5.463 15.547-5.06 3.719-12.564 3.45-17.343-.626C2.101 23.171.377 16.07 2.848 10.44c2.14-5.205 7.515-8.774 13.147-8.708zm0 7.183c-1.674 4.658-2.736 9.509-4.41 14.166 1.535-1.526 2.874-3.236 4.41-4.763l4.41 4.763c-1.499-4.713-2.913-9.453-4.41-14.166zm.032 2.931c.822 2.588 1.598 5.19 2.42 7.778l-2.42-2.615c-.683.598-2.455 2.887-2.34 2.39.871-2.489 1.448-5.07 2.34-7.553z\"\n})));\n\nfunction _extends$k() { _extends$k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k.apply(this, arguments); }\nvar StartEventMessageIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$k({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.995.001C9.705-.084 3.643 3.964 1.257 9.775-1.235 15.485.06 22.577 4.42 27.03c4.193 4.513 11.102 6.17 16.887 4.058 5.996-2.042 10.423-7.93 10.664-14.269.403-6.227-3.26-12.44-8.87-15.153A15.924 15.924 0 0015.994 0zm0 1.73c6.213-.108 12.122 4.355 13.726 10.357 1.678 5.653-.592 12.198-5.463 15.547-5.06 3.719-12.564 3.45-17.343-.626C2.101 23.171.377 16.07 2.848 10.44c2.14-5.205 7.515-8.774 13.147-8.708zm-7.257 8.732v11.069h14.513v-11.07H8.738zm3.224 1.73h8.064c-1.428.878-2.857 2.807-4.285 3.018l-3.779-3.019zm9.562 1.017v6.593H10.465V13.21l5.528 4.417 5.53-4.418z\"\n})));\n\nfunction _extends$j() { _extends$j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j.apply(this, arguments); }\nvar StartEventMultipleIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$j({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.995.001C9.705-.084 3.643 3.964 1.257 9.775-1.235 15.485.06 22.577 4.42 27.03c4.193 4.513 11.102 6.17 16.887 4.058 5.996-2.042 10.423-7.93 10.664-14.269.403-6.227-3.26-12.44-8.87-15.153A15.924 15.924 0 0015.994 0zm0 1.73c6.213-.108 12.122 4.355 13.726 10.357 1.678 5.653-.592 12.198-5.463 15.547-5.06 3.719-12.564 3.45-17.343-.626C2.101 23.171.377 16.07 2.848 10.44c2.14-5.205 7.515-8.774 13.147-8.708zm0 6.328l-7.626 5.536c.97 2.986 1.942 5.971 2.913 8.957h9.426l2.912-8.957-7.625-5.536zm0 1.068l6.609 4.798-2.525 7.763H11.91l-2.524-7.763 6.609-4.798z\"\n})));\n\nfunction _extends$i() { _extends$i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i.apply(this, arguments); }\nvar StartEventNonInterruptingConditionIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$i({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.632 9.189V22.68h10.723V9.189H10.632zm.862.865h8.994v11.76H11.494v-11.76zm.928 1.324v.863h7.138v-.863h-7.138zm0 2.605v.866h7.138v-.866h-7.138zm0 3.01v.863h7.138v-.863h-7.138zm0 2.72v.862h7.138v-.863h-7.138zM16.12 0h-.232l-.22.004h-.012l-.221.006h-.012l-.22.01h-.012l-.22.013h-.012l-.22.016h-.012l-.22.019h-.005l-.006.001-.22.021h-.006l-.005.001-.22.025h-.011l-.22.028h-.005l-.006.002-.219.03h-.005l-.006.001-.218.033-.006.001-.006.001-.217.036-.006.001-.006.001-.217.039-.006.001-.006.001-.216.042-.006.001-.006.001-.215.045-.006.001-.006.002-.215.047-.006.002-.006.001-.214.05-.006.002-.006.002-.115.029-.152.053-.14.081-.122.106-.1.126-.075.143-.047.154-.018.16.012.16.042.156.07.145.095.13.118.11.137.086.15.059.158.03h.161l.132-.022.11-.028.202-.047.203-.046.208-.043.202-.039.206-.037.206-.034.205-.03.208-.03.205-.025.209-.023.208-.02.21-.017.209-.015.207-.011.21-.009.21-.006.207-.003h.21l.21.002.207.005.207.008.212.011.207.014.208.017.209.019.208.022.205.025.206.028.207.03.208.035.205.036.202.039.052.01.16.018.16-.012.156-.042.146-.07.13-.096.109-.119.085-.136.06-.15.03-.159v-.16l-.03-.16-.059-.15-.086-.136-.109-.118-.13-.096-.145-.07-.128-.038-.057-.011-.006-.002h-.006l-.216-.042-.006-.001-.006-.001-.217-.039H18.9l-.006-.002-.217-.035-.006-.001-.006-.001-.218-.032-.006-.001-.006-.001-.218-.03h-.006l-.006-.001-.219-.027h-.011l-.22-.024-.005-.001h-.006l-.22-.021h-.006l-.006-.001-.22-.017-.005-.001h-.006L17.06.03h-.012l-.22-.012h-.012l-.22-.01h-.012l-.22-.005h-.012L16.132 0h-.012zm8.715 2.783l-.157.034-.149.063-.134.089-.116.112-.092.132-.067.147-.038.157-.008.16.021.16.051.153.079.141.103.124.102.087.052.038h.001l.087.064v.001l.082.061.002.001.076.059h.001l.084.065.082.066.002.001.079.063.002.002.077.063.081.067.002.002.077.065.076.065.001.002.08.07.078.07h.002l.075.068.077.072.002.001.073.069.077.073.072.07.002.001.077.076.07.07v.001l.075.076.07.073.002.001.074.079.002.002.069.074.069.075.074.082.07.08.002.001.068.079h.001l.067.079.068.082.065.078.001.002.068.083.067.084.063.081.001.002.067.087.002.002.063.084.001.001.064.087.008.01.008.01.095.12.093.121.09.119.087.119.088.122.086.123.084.12.081.122.001.002.084.126.08.126.08.127.077.126.079.131.074.127.075.131.073.131.07.13.07.133.069.133.045.09.086.137.109.119.13.096.144.07.156.042.16.013.16-.017.155-.047.143-.075.126-.1.106-.121.082-.14.054-.151.025-.16-.005-.16-.035-.158-.05-.124-.048-.095-.002-.004-.002-.004-.073-.14-.002-.005-.002-.004-.074-.14-.002-.004-.002-.004-.076-.14-.002-.003-.002-.004-.077-.139-.003-.004-.002-.004-.078-.138-.003-.004-.002-.003-.08-.137-.002-.004-.003-.004-.081-.136-.002-.004-.003-.004-.083-.136-.002-.003-.002-.004-.085-.135-.002-.004-.003-.003-.085-.134-.003-.004-.002-.004-.087-.132-.003-.004-.003-.004-.088-.132-.003-.003-.002-.004-.09-.13-.003-.005-.003-.003-.091-.13-.003-.004-.002-.004-.093-.129-.003-.003-.003-.004-.094-.128-.003-.004-.003-.003-.095-.127-.003-.004-.003-.004-.097-.125-.003-.004-.003-.004-.09-.114-.06-.082-.003-.003-.002-.003-.069-.091-.002-.004-.002-.003-.07-.09-.003-.003-.002-.003-.07-.09-.003-.003-.002-.003-.071-.09-.002-.003-.003-.002-.072-.089-.002-.003-.002-.003-.073-.088-.002-.003-.002-.002-.074-.087-.002-.003-.002-.003-.074-.086-.003-.003-.002-.003-.074-.086-.003-.002-.002-.003-.075-.085-.003-.003-.002-.002-.076-.084-.002-.003-.003-.003-.076-.083-.002-.003-.003-.003-.077-.082-.002-.003-.003-.002-.077-.082-.003-.003-.003-.002-.078-.081-.002-.003-.003-.003-.078-.08-.003-.002-.003-.003-.079-.08-.002-.002-.003-.002-.08-.08-.002-.002-.003-.002-.08-.078-.003-.003-.003-.002-.08-.077-.003-.003-.003-.002-.082-.077-.002-.002-.003-.002-.082-.076-.003-.002-.002-.003-.083-.075-.003-.002-.002-.003-.084-.074-.002-.002-.003-.002-.084-.074-.003-.002-.002-.002-.085-.073-.002-.002-.003-.003-.085-.071-.003-.003-.002-.002-.086-.07-.003-.003-.002-.002-.086-.07-.003-.003-.003-.002-.086-.07-.003-.002-.003-.002-.087-.069-.002-.002-.003-.002-.088-.068-.002-.002-.003-.002-.088-.067-.003-.003-.003-.002-.088-.066-.003-.002-.003-.002-.089-.066-.003-.002-.003-.002-.057-.042-.14-.082-.15-.055-.16-.026-.16.004zM6.377 3.21l-.157.037-.148.066-.111.074-.007.006-.003.002-.003.002-.086.069-.003.002-.002.002-.086.07-.003.002-.002.002-.086.07-.002.003-.003.002-.085.071-.002.002-.003.003-.084.071-.003.003-.002.002-.084.072-.003.003-.002.002-.083.073-.003.003-.002.002-.083.074-.002.002-.003.003-.082.074-.003.003-.002.002-.081.076-.003.002-.003.002-.08.077-.003.002-.003.003-.08.076-.002.003-.003.002-.08.078-.002.002-.003.003-.079.078-.002.003-.003.002-.078.08-.003.002-.002.002-.078.08-.002.003-.003.002-.077.08-.003.004-.002.002-.077.081-.002.003-.003.003-.076.082-.002.002-.003.003-.075.082-.002.003-.003.003-.074.083-.003.003-.002.003-.074.084-.003.003-.002.002-.074.085-.002.003-.002.003-.073.085-.003.003-.002.003-.072.086-.002.003-.003.003-.071.087-.003.003-.002.002-.07.088-.003.003-.002.003-.07.088-.003.003-.002.003-.07.09-.002.002-.002.003-.069.09-.002.003-.003.003-.068.09-.002.003-.002.003-.067.092-.003.003-.002.003-.067.092-.002.003-.002.003-.066.092-.002.003-.002.004-.066.093-.002.003-.002.003-.065.094-.002.003-.002.004-.064.094-.002.003-.002.004-.063.095-.002.003-.002.003-.063.097-.002.003-.002.003-.046.073-.05.07-.003.002-.002.003-.067.093-.003.003-.002.003-.066.094-.002.003-.002.003-.066.094-.002.003-.002.003-.064.094-.002.004-.002.003-.064.094-.002.004-.002.003-.062.095-.002.003-.002.003-.062.096-.002.003-.002.003-.06.096-.003.003-.002.003-.06.096-.001.004-.002.003-.059.096-.002.004-.002.003-.058.097-.002.003-.001.003-.057.098-.002.003-.002.003-.056.098-.002.003-.002.003-.055.098-.002.004-.001.003-.055.098-.001.004-.002.003-.054.099-.001.003-.002.003-.052.1-.002.002-.002.004-.051.1-.002.002-.002.004-.05.1-.002.003-.002.003-.05.1v.003l-.002.004-.05.1v.003l-.002.004-.048.1-.002.004-.001.003-.047.101-.002.003-.001.004-.013.027-.052.152-.024.16.006.16.037.157.064.148.091.133.114.114.134.09.147.065.157.036.162.006.159-.024.152-.053.14-.08.122-.105.1-.126.066-.117.01-.023.044-.095.045-.095.002-.003.042-.087.048-.097.048-.095v-.001l.048-.092.001-.001.047-.09.05-.093.002-.002.049-.09.052-.092.001-.002.051-.089.001-.002.051-.087.053-.088.001-.002.055-.091.057-.091.057-.09.001-.002.057-.089.055-.083.001-.002.06-.09.06-.088.062-.089.001-.001.06-.084.063-.088.065-.089.017-.023.016-.025.06-.094.059-.09v-.002l.058-.086.057-.086.001-.001.062-.09.062-.088.001-.002.06-.085.002-.002.06-.082.063-.087.064-.084.002-.002.061-.08.065-.084.064-.08v-.001l.067-.083.067-.082.07-.083.069-.08.063-.074.074-.083.068-.077.002-.002.07-.076.07-.075.072-.077.001-.001.067-.07.076-.078.002-.002.07-.07.075-.075.002-.002.072-.07.075-.072.002-.002.073-.069.074-.068.001-.001.08-.073.076-.068.002-.002.072-.063v-.001l.078-.067.079-.068.002-.001.08-.068.002-.002.077-.063.082-.066.001-.001.075-.06.002-.002.006-.004.117-.111.094-.131.068-.146.04-.156.01-.161-.019-.16-.049-.154-.076-.141-.102-.125-.123-.105-.14-.079-.153-.052-.16-.023-.16.007zm24.596 11.088l-.156.04-.146.067-.131.094-.112.117-.087.135-.061.15-.033.157-.004.134.007.142.005.152.004.15.002.149v.153l.001.011v.015l.004.11.002.11v.002l.002.106v.321l-.003.102-.002.106-.004.107-.005.105-.006.106-.006.106-.008.106v.002l-.008.103v.002l-.01.1-.01.105-.01.105-.013.105-.012.099v.002l-.014.108-.014.1-.016.105-.016.103v.002l-.017.099-.018.104-.019.103v.002l-.019.097-.02.104-.022.103v.001l-.022.098-.023.103v.002l-.024.096-.025.103v.002l-.024.096-.027.102v.003l-.026.093v.001l-.029.103v.002l-.03.099-.028.097v.002l-.03.095-.03.096v.001l-.033.1-.031.095v.002l-.035.1v.003l-.034.094v.003l-.035.096v.001l-.034.09v.002l-.038.098-.036.093v.002l-.038.095-.079.194-.08.188-.085.189-.087.19-.09.184-.092.183-.095.184-.05.093-.064.148-.034.158-.005.16.026.16.054.151.082.14.106.12.127.1.143.075.154.046.16.017.161-.013.156-.042.144-.071.13-.096.109-.119.072-.112.053-.099.003-.005.003-.006.102-.195.003-.006.003-.006.098-.196.003-.006.003-.006.096-.197.002-.006.003-.006.093-.2.002-.006.003-.006.09-.2.002-.006.003-.007.086-.202.003-.006.002-.006.084-.203.002-.005.001-.005.04-.102.002-.003.001-.003.04-.103.001-.003.001-.003.04-.103v-.004l.001-.003.039-.103v-.003l.002-.003.037-.104.001-.003.001-.003.037-.104v-.004l.002-.003.035-.104.002-.003v-.004l.035-.104.002-.004v-.003l.034-.105.002-.003v-.003l.034-.105v-.004l.002-.003.032-.106.001-.003.001-.003.031-.106.001-.003.001-.004.031-.106.001-.003.001-.004.03-.106v-.003l.002-.004.028-.107.001-.003.001-.003.028-.107.001-.004.001-.003.027-.107.001-.004v-.003l.027-.108.001-.003v-.004l.026-.108.001-.003v-.004l.025-.108.001-.003v-.004l.025-.108v-.004l.001-.003.023-.109v-.003l.001-.004.022-.109v-.003l.002-.004.02-.109.001-.004v-.003l.02-.11.002-.003v-.004l.02-.11v-.007l.019-.11v-.003l.001-.004.017-.11v-.004l.001-.003.017-.11v-.008l.016-.11v-.004l.001-.004.015-.11v-.008l.015-.111v-.008l.013-.111v-.007l.013-.112v-.007l.011-.112v-.004l.001-.004.01-.112v-.007l.01-.112v-.008l.008-.112v-.008l.007-.113v-.007l.007-.113v-.008l.005-.113v-.007l.005-.114v-.007l.003-.114v-.007l.003-.114v-.129l.001-.114v-.13l-.003-.114v-.008l-.003-.115v-.007l-.003-.102v-.155l-.003-.158v-.01l-.004-.158v-.01l-.006-.158v-.01l-.007-.148-.023-.16-.051-.152-.08-.14-.103-.124-.125-.102-.142-.077-.153-.05-.16-.02-.161.01zm-30.213.66l-.157.034-.149.063-.134.09-.115.113-.092.132-.067.147-.037.156-.009.134.001.11V15.95l.006.22v.012l.01.22v.012l.012.22v.006l.001.006.015.22v.005l.001.006.018.22.001.006v.006l.022.219v.006l.001.006.024.219.001.006v.006l.028.218.001.006v.006l.031.218.001.006.001.006.033.218.001.006.001.005.037.218v.006l.002.005.04.217v.006l.001.006.043.216.001.006.001.006.046.216v.005l.002.006.048.215.002.006.001.006.051.214.002.006v.006l.055.214.002.005.001.006.057.213.002.006.001.005.06.213.002.005.001.006.063.212.002.005.001.006.066.21.002.006.002.006.068.21.002.005.002.005.07.21.003.005.002.005.074.208.002.006.002.005.077.207.002.006.002.005.08.206.002.005.002.006.082.204.002.006.002.005.086.204.002.005.002.006.088.202.002.005.003.006.09.2.003.006.002.005.094.2.002.006.003.005.096.199.002.005.003.005.03.062.086.137.11.118.128.097.145.07.156.043.16.013.16-.017.155-.047.143-.074.127-.1.106-.121.081-.14.055-.15.025-.16-.005-.161-.034-.158-.05-.124-.028-.055-.092-.19-.087-.188-.087-.192-.083-.19-.08-.193-.078-.194-.076-.196-.073-.195-.07-.197-.067-.198-.065-.199-.063-.2-.059-.2-.056-.2-.055-.204-.05-.201-.049-.202-.046-.205-.043-.206-.04-.203-.038-.207-.034-.204-.032-.207-.028-.205-.026-.207-.023-.208-.02-.207-.018-.207-.014-.208-.011-.207-.009-.208-.005-.207-.002-.104-.017-.16-.046-.155-.074-.143-.1-.126-.121-.107-.139-.081-.152-.055-.159-.025-.161.004zm24.585 11.83l-.156.039-.146.068-.11.076-.015.012-.163.129-.166.127-.168.125-.17.124-.17.12-.172.118-.173.115-.176.114-.177.111-.18.11-.178.105-.182.104-.182.101-.184.1-.184.095-.189.095-.186.09-.188.089-.19.086-.19.082-.193.081-.195.078-.191.074-.197.073-.195.07-.196.065-.198.064-.198.061-.2.058-.2.055-.2.052-.2.049-.151.035-.153.05-.141.078-.125.103-.103.124-.078.14-.05.154-.022.16.009.16.038.157.067.147.093.132.116.112.134.089.149.062.158.034.16.003.133-.02.158-.035.006-.002.006-.001.213-.052.006-.002.007-.001.212-.056.006-.001.006-.002.212-.058.006-.002.006-.002.211-.061.006-.002.006-.002.21-.064.006-.002.006-.002.21-.067.005-.002.006-.002.208-.07.006-.002.006-.003.207-.073.006-.002.006-.002.206-.077.006-.002.005-.002.206-.08.005-.001.006-.003.204-.082.006-.002.005-.002.203-.085.006-.003.005-.002.202-.088.006-.002.005-.003.2-.09.006-.003.006-.003.2-.093.005-.003.005-.002.198-.096.006-.003.005-.003.197-.099.005-.002.005-.003.196-.102.005-.002.005-.003.195-.105.005-.002.005-.003.193-.107.005-.003.005-.003.191-.11.005-.003.005-.003.19-.112.005-.003.005-.003.189-.115.005-.003.005-.003.187-.117.005-.003.004-.004.186-.12.005-.003.004-.003.184-.122.005-.003.005-.004.182-.125.004-.003.005-.003.18-.128.005-.003.005-.003.179-.13.004-.003.005-.004.177-.132.004-.004.005-.003.175-.135.005-.003.004-.004.173-.137.005-.003.004-.004.019-.015.115-.113.092-.132.066-.147.038-.157.008-.16-.022-.16-.052-.153-.079-.14-.103-.124-.125-.102-.142-.078-.153-.05-.16-.02-.16.01zm-19.17.054l-.153.051-.14.079-.124.103-.103.125-.077.141-.05.153-.02.16.009.161.04.156.067.147.093.131.095.094.047.04.005.004.005.004.17.14.005.004.005.004.172.137.004.004.005.003.086.067.003.002.003.002.087.067.003.002.003.002.088.066.002.003.003.002.089.065.002.002.003.002.09.065.002.002.003.002.09.064.002.002.003.002.09.063.003.002.003.002.09.063.003.002.003.002.092.062.002.002.003.002.092.061.003.002.003.002.092.06.003.003.003.001.093.06.003.002.003.002.093.06.003.001.003.002.094.058.003.002.003.002.095.058.003.001.003.002.095.057.003.002.003.002.095.056.003.002.003.002.096.055.004.002.003.001.096.055.003.002.003.002.098.053.003.002.003.002.097.053.004.002.003.001.098.053.003.001.003.002.099.052.003.001.003.002.1.05.003.002.003.002.1.05.003.002.003.001.1.05h.003l.004.003.1.048.004.001.003.002.101.048.003.001.004.002.101.046.004.002.003.001.102.046.004.002.003.001.103.045.003.002.003.001.103.045.004.001.003.002.104.043.003.001.004.002.104.042.003.002.004.001.104.042.004.001.003.002.105.04.004.002.003.001.106.04.003.002h.004l.106.04.004.001.003.002.107.038.003.001.004.001.107.038.003.001.004.001.107.037.004.001.004.001.108.036.003.001.004.001.108.035.004.001.003.001.11.034.003.001.004.001.109.033.004.002h.003l.11.033h.004l.003.002.11.031.004.001.004.001.084.023.081.028.004.001.003.001.109.037.003.001.004.001.109.036.003.001.004.001.109.035h.003l.004.002.11.033.003.001.003.001.11.033.003.001.004.001.109.031.004.002h.003l.11.031.003.001.004.001.11.03h.003l.003.001.11.029h.004l.003.002.11.027.003.001.004.001.11.027h.003l.004.001.004.001.16.022.16-.008.157-.038.147-.067.132-.092.112-.116.09-.134.062-.149.034-.157.004-.161-.025-.16-.055-.151-.082-.139-.107-.12-.127-.1-.143-.074-.124-.04h-.003l-.104-.025-.103-.026h-.002l-.095-.026h-.001l-.101-.027h-.002l-.1-.028h-.002l-.103-.03-.104-.032-.097-.03h-.002l-.103-.033-.102-.033-.101-.034-.106-.036-.027-.01-.027-.007-.107-.03-.104-.029-.104-.03h-.002l-.097-.03-.102-.032-.102-.032-.102-.034-.103-.035-.096-.034-.1-.036-.101-.037h-.002l-.094-.036-.096-.037-.097-.04h-.002l-.099-.04-.098-.042h-.002l-.092-.04-.097-.043-.095-.043-.097-.044h-.002l-.09-.043-.094-.045-.094-.046-.093-.047-.09-.046-.096-.05-.088-.047-.002-.001-.09-.049-.094-.052-.002-.002-.087-.049-.087-.05h-.002l-.088-.053h-.001l-.09-.055-.086-.052-.002-.001-.089-.055-.084-.054h-.002l-.09-.059h-.001l-.085-.056-.001-.001-.084-.056-.082-.056h-.001l-.086-.06-.082-.058H7.79l-.086-.062-.002-.002-.08-.058-.081-.06h-.001l-.085-.064-.002-.002-.076-.058-.002-.002-.082-.064-.161-.128-.162-.133-.04-.034-.132-.092-.147-.066-.157-.038-.16-.008-.16.022z\"\n})));\n\nfunction _extends$h() { _extends$h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h.apply(this, arguments); }\nvar StartEventNonInterruptingEscalationIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$h({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 9.209c-1.674 4.655-2.735 9.504-4.408 14.16 1.534-1.526 2.873-3.235 4.407-4.761l4.408 4.76c-1.497-4.71-2.91-9.448-4.408-14.16zm.031 2.93c.822 2.586 1.598 5.187 2.42 7.774l-2.42-2.614c-.682.598-2.453 2.886-2.34 2.389.873-2.488 1.45-5.068 2.34-7.55zM16.132.364c-1.51.016-3.055.139-4.492.614-.854.442-.266 1.861.651 1.578 2.266-.58 4.656-.596 6.944-.144.935.063 1.21-1.391.318-1.674-1.118-.26-2.274-.361-3.42-.374zm8.865 2.777c-.931-.1-1.262 1.29-.425 1.666 1.863 1.364 3.222 3.298 4.322 5.296.617.737 1.875-.145 1.398-.979-1.184-2.275-2.808-4.384-4.923-5.866a.863.863 0 00-.372-.117zM6.55 3.564c-.734.078-1.196.762-1.735 1.206C3.552 6.02 2.55 7.511 1.681 9.053c-.31.533-.71 1.33-.03 1.767.615.432 1.282-.132 1.446-.742.796-1.475 1.746-2.89 2.934-4.08.43-.548 1.292-.822 1.34-1.595a.874.874 0 00-.822-.839zm24.582 11.078c-.771-.033-1.004.82-.873 1.437.13 2.395-.471 4.797-1.615 6.897-.33.876.984 1.559 1.512.785a14.276 14.276 0 001.761-8.54.865.865 0 00-.785-.579zm-30.195.666c-.774-.06-1.032.785-.905 1.407.117 2.41.732 4.81 1.858 6.945.528.774 1.84.09 1.51-.786A15.932 15.932 0 011.728 16a.876.876 0 00-.79-.692zm24.57 11.817c-.762.099-1.243.835-1.919 1.16-1.514 1.002-3.237 1.632-4.978 2.092-.864.423-.307 1.855.616 1.591 2.528-.578 4.93-1.75 6.913-3.421.469-.522.07-1.42-.631-1.422zm-19.16.042c-.845.001-1.12 1.228-.395 1.628 1.665 1.401 3.667 2.348 5.76 2.912.618.178 1.482.565 1.893-.177.355-.628-.226-1.297-.87-1.326-1.972-.515-3.912-1.285-5.5-2.594-.26-.213-.522-.472-.888-.443z\"\n})));\n\nfunction _extends$g() { _extends$g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g.apply(this, arguments); }\nvar StartEventNonInterruptingMessageIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$g({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.746 10.393v11.064h14.506V10.393H8.746zm3.223 1.728h8.06c-1.428.879-2.856 2.807-4.283 3.018l-3.777-3.018zm9.557 1.018v6.59H10.473v-6.59l5.525 4.416 5.528-4.416zM16.132 0c-1.51.016-3.055.139-4.492.614-.854.442-.266 1.861.651 1.578 2.266-.58 4.656-.596 6.944-.144.935.063 1.21-1.391.318-1.674-1.118-.26-2.274-.361-3.42-.374zm8.865 2.777c-.931-.1-1.262 1.29-.425 1.666 1.863 1.364 3.222 3.298 4.322 5.296.617.737 1.875-.145 1.398-.979-1.184-2.275-2.808-4.384-4.923-5.866a.863.863 0 00-.372-.117zM6.55 3.2c-.734.078-1.196.762-1.735 1.206C3.552 5.656 2.55 7.147 1.681 8.69c-.31.533-.71 1.33-.03 1.767.615.432 1.282-.132 1.446-.742.796-1.475 1.746-2.89 2.934-4.08.43-.548 1.292-.822 1.34-1.595a.874.874 0 00-.822-.839zm24.582 11.078c-.771-.033-1.004.82-.873 1.437.13 2.395-.471 4.797-1.615 6.897-.33.876.984 1.559 1.512.785a14.276 14.276 0 001.761-8.54.865.865 0 00-.785-.579zm-30.195.666c-.774-.06-1.032.785-.905 1.407.117 2.41.732 4.81 1.858 6.945.528.774 1.84.09 1.51-.786a15.932 15.932 0 01-1.672-6.874.876.876 0 00-.79-.692zm24.57 11.817c-.762.099-1.243.835-1.919 1.16-1.514 1.002-3.237 1.632-4.978 2.092-.864.423-.307 1.855.616 1.591 2.528-.578 4.93-1.75 6.913-3.421.469-.522.07-1.42-.631-1.422zm-19.16.042c-.845.001-1.12 1.228-.395 1.628 1.665 1.401 3.667 2.348 5.76 2.912.618.178 1.482.565 1.893-.177.355-.628-.226-1.297-.87-1.326-1.972-.515-3.912-1.285-5.5-2.594-.26-.213-.522-.472-.888-.443z\"\n})));\n\nfunction _extends$f() { _extends$f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f.apply(this, arguments); }\nvar StartEventNonInterruptingMultipleIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$f({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.621 13.524L16 7.99l-7.622 5.534 2.911 8.952h9.422l2.911-8.952zm-1.016.33l-2.523 7.759h-8.165l-2.524-7.76L16 9.059l6.606 4.796zM16.132 0c-1.51.016-3.055.139-4.492.614-.854.442-.266 1.861.651 1.578 2.266-.58 4.656-.596 6.944-.144.935.063 1.21-1.391.318-1.674-1.118-.26-2.274-.361-3.42-.374zm8.865 2.777c-.931-.1-1.262 1.29-.425 1.666 1.863 1.364 3.222 3.298 4.322 5.296.617.737 1.875-.145 1.398-.979-1.184-2.275-2.808-4.384-4.923-5.866a.863.863 0 00-.372-.117zM6.55 3.2c-.734.078-1.196.762-1.735 1.206C3.552 5.656 2.55 7.147 1.681 8.69c-.31.533-.71 1.33-.03 1.767.615.432 1.282-.132 1.446-.742.796-1.475 1.746-2.89 2.934-4.08.43-.548 1.292-.822 1.34-1.595a.874.874 0 00-.822-.839zm24.582 11.078c-.771-.033-1.004.82-.873 1.437.13 2.395-.471 4.797-1.615 6.897-.33.876.984 1.559 1.512.785a14.276 14.276 0 001.761-8.54.865.865 0 00-.785-.579zm-30.195.666c-.774-.06-1.032.785-.905 1.407.117 2.41.732 4.81 1.858 6.945.528.774 1.84.09 1.51-.786a15.932 15.932 0 01-1.672-6.874.876.876 0 00-.79-.692zm24.57 11.817c-.762.099-1.243.835-1.919 1.16-1.514 1.002-3.237 1.632-4.978 2.092-.864.423-.307 1.855.616 1.591 2.528-.578 4.93-1.75 6.913-3.421.469-.522.07-1.42-.631-1.422zm-19.16.042c-.845.001-1.12 1.228-.395 1.628 1.665 1.401 3.667 2.348 5.76 2.912.618.178 1.482.565 1.893-.177.355-.628-.226-1.297-.87-1.326-1.972-.515-3.912-1.285-5.5-2.594-.26-.213-.522-.472-.888-.443z\"\n})));\n\nfunction _extends$e() { _extends$e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e.apply(this, arguments); }\nvar StartEventNonInterruptingParallelMultipleIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$e({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.503 9.016v4.428H9.075v4.98h4.428v4.428h4.98v-4.427h4.428v-4.981h-4.427V9.016h-4.981zm.83.83h3.32v4.428h4.428v3.32h-4.428v4.428h-3.32v-4.454H9.905v-3.294h4.428V9.846zM16.12 0h-.232l-.22.004h-.012l-.221.006h-.012l-.22.01h-.012l-.22.013h-.012l-.22.016h-.012l-.22.019h-.005l-.006.001-.22.021h-.006l-.005.001-.22.025h-.011l-.22.028h-.005l-.006.002-.219.03h-.005l-.006.001-.218.033-.006.001-.006.001-.217.036-.006.001-.006.001-.217.039-.006.001-.006.001-.216.042-.006.001-.006.001-.215.045-.006.001-.006.002-.215.047-.006.002-.006.001-.214.05-.006.002-.006.002-.115.029-.152.053-.14.081-.122.106-.1.126-.075.143-.047.154-.018.16.012.16.042.156.07.145.095.13.118.11.137.086.15.059.158.03h.161l.132-.022.11-.028.202-.047.203-.046.208-.043.202-.039.206-.037.206-.034.205-.03.208-.03.205-.025.209-.023.208-.02.21-.017.209-.015.207-.011.21-.009.21-.006.207-.003h.21l.21.002.207.005.207.008.212.011.207.014.208.017.209.019.208.022.205.025.206.028.207.03.208.035.205.036.202.039.052.01.16.018.16-.012.156-.042.146-.07.13-.096.109-.119.085-.136.06-.15.03-.159v-.16l-.03-.16-.059-.15-.086-.136-.109-.118-.13-.096-.145-.07-.128-.038-.057-.011-.006-.002h-.006l-.216-.042-.006-.001-.006-.001-.217-.039H18.9l-.006-.002-.217-.035-.006-.001-.006-.001-.218-.032-.006-.001-.006-.001-.218-.03h-.006l-.006-.001-.219-.027h-.011l-.22-.024-.005-.001h-.006l-.22-.021h-.006l-.006-.001-.22-.017-.005-.001h-.006L17.06.03h-.012l-.22-.012h-.012l-.22-.01h-.012l-.22-.005h-.012L16.132 0h-.012zm8.715 2.783l-.157.034-.149.063-.134.089-.116.112-.092.132-.067.147-.038.157-.008.16.021.16.051.153.079.141.103.124.102.087.052.038h.001l.087.064v.001l.082.061.002.001.076.059h.001l.084.065.082.066.002.001.079.063.002.002.077.063.081.067.002.002.077.065.076.065.001.002.08.07.078.07h.002l.075.068.077.072.002.001.073.069.077.073.072.07.002.001.077.076.07.07v.001l.075.076.07.073.002.001.074.079.002.002.069.074.069.075.074.082.07.08.002.001.068.079h.001l.067.079.068.082.065.078.001.002.068.083.067.084.063.081.001.002.067.087.002.002.063.084.001.001.064.087.008.01.008.01.095.12.093.121.09.119.087.119.088.122.086.123.084.12.081.122.001.002.084.126.08.126.08.127.077.126.079.131.074.127.075.131.073.131.07.13.07.133.069.133.045.09.086.137.109.119.13.096.144.07.156.042.16.013.16-.017.155-.047.143-.075.126-.1.106-.121.082-.14.054-.151.025-.16-.005-.16-.035-.158-.05-.124-.048-.095-.002-.004-.002-.004-.073-.14-.002-.005-.002-.004-.074-.14-.002-.004-.002-.004-.076-.14-.002-.003-.002-.004-.077-.139-.003-.004-.002-.004-.078-.138-.003-.004-.002-.003-.08-.137-.002-.004-.003-.004-.081-.136-.002-.004-.003-.004-.083-.136-.002-.003-.002-.004-.085-.135-.002-.004-.003-.003-.085-.134-.003-.004-.002-.004-.087-.132-.003-.004-.003-.004-.088-.132-.003-.003-.002-.004-.09-.13-.003-.005-.003-.003-.091-.13-.003-.004-.002-.004-.093-.129-.003-.003-.003-.004-.094-.128-.003-.004-.003-.003-.095-.127-.003-.004-.003-.004-.097-.125-.003-.004-.003-.004-.09-.114-.06-.082-.003-.003-.002-.003-.069-.091-.002-.004-.002-.003-.07-.09-.003-.003-.002-.003-.07-.09-.003-.003-.002-.003-.071-.09-.002-.003-.003-.002-.072-.089-.002-.003-.002-.003-.073-.088-.002-.003-.002-.002-.074-.087-.002-.003-.002-.003-.074-.086-.003-.003-.002-.003-.074-.086-.003-.002-.002-.003-.075-.085-.003-.003-.002-.002-.076-.084-.002-.003-.003-.003-.076-.083-.002-.003-.003-.003-.077-.082-.002-.003-.003-.002-.077-.082-.003-.003-.003-.002-.078-.081-.002-.003-.003-.003-.078-.08-.003-.002-.003-.003-.079-.08-.002-.002-.003-.002-.08-.08-.002-.002-.003-.002-.08-.078-.003-.003-.003-.002-.08-.077-.003-.003-.003-.002-.082-.077-.002-.002-.003-.002-.082-.076-.003-.002-.002-.003-.083-.075-.003-.002-.002-.003-.084-.074-.002-.002-.003-.002-.084-.074-.003-.002-.002-.002-.085-.073-.002-.002-.003-.003-.085-.071-.003-.003-.002-.002-.086-.07-.003-.003-.002-.002-.086-.07-.003-.003-.003-.002-.086-.07-.003-.002-.003-.002-.087-.069-.002-.002-.003-.002-.088-.068-.002-.002-.003-.002-.088-.067-.003-.003-.003-.002-.088-.066-.003-.002-.003-.002-.089-.066-.003-.002-.003-.002-.057-.042-.14-.082-.15-.055-.16-.026-.16.004zM6.377 3.21l-.157.037-.148.066-.111.074-.007.006-.003.002-.003.002-.086.069-.003.002-.002.002-.086.07-.003.002-.002.002-.086.07-.002.003-.003.002-.085.071-.002.002-.003.003-.084.071-.003.003-.002.002-.084.072-.003.003-.002.002-.083.073-.003.003-.002.002-.083.074-.002.002-.003.003-.082.074-.003.003-.002.002-.081.076-.003.002-.003.002-.08.077-.003.002-.003.003-.08.076-.002.003-.003.002-.08.078-.002.002-.003.003-.079.078-.002.003-.003.002-.078.08-.003.002-.002.002-.078.08-.002.003-.003.002-.077.08-.003.004-.002.002-.077.081-.002.003-.003.003-.076.082-.002.002-.003.003-.075.082-.002.003-.003.003-.074.083-.003.003-.002.003-.074.084-.003.003-.002.002-.074.085-.002.003-.002.003-.073.085-.003.003-.002.003-.072.086-.002.003-.003.003-.071.087-.003.003-.002.002-.07.088-.003.003-.002.003-.07.088-.003.003-.002.003-.07.09-.002.002-.002.003-.069.09-.002.003-.003.003-.068.09-.002.003-.002.003-.067.092-.003.003-.002.003-.067.092-.002.003-.002.003-.066.092-.002.003-.002.004-.066.093-.002.003-.002.003-.065.094-.002.003-.002.004-.064.094-.002.003-.002.004-.063.095-.002.003-.002.003-.063.097-.002.003-.002.003-.046.073-.05.07-.003.002-.002.003-.067.093-.003.003-.002.003-.066.094-.002.003-.002.003-.066.094-.002.003-.002.003-.064.094-.002.004-.002.003-.064.094-.002.004-.002.003-.062.095-.002.003-.002.003-.062.096-.002.003-.002.003-.06.096-.003.003-.002.003-.06.096-.001.004-.002.003-.059.096-.002.004-.002.003-.058.097-.002.003-.001.003-.057.098-.002.003-.002.003-.056.098-.002.003-.002.003-.055.098-.002.004-.001.003-.055.098-.001.004-.002.003-.054.099-.001.003-.002.003-.052.1-.002.002-.002.004-.051.1-.002.002-.002.004-.05.1-.002.003-.002.003-.05.1v.003l-.002.004-.05.1v.003l-.002.004-.048.1-.002.004-.001.003-.047.101-.002.003-.001.004-.013.027-.052.152-.024.16.006.16.037.157.064.148.091.133.114.114.134.09.147.065.157.036.162.006.159-.024.152-.053.14-.08.122-.105.1-.126.066-.117.01-.023.044-.095.045-.095.002-.003.042-.087.048-.097.048-.095v-.001l.048-.092.001-.001.047-.09.05-.093.002-.002.049-.09.052-.092.001-.002.051-.089.001-.002.051-.087.053-.088.001-.002.055-.091.057-.091.057-.09.001-.002.057-.089.055-.083.001-.002.06-.09.06-.088.062-.089.001-.001.06-.084.063-.088.065-.089.017-.023.016-.025.06-.094.059-.09v-.002l.058-.086.057-.086.001-.001.062-.09.062-.088.001-.002.06-.085.002-.002.06-.082.063-.087.064-.084.002-.002.061-.08.065-.084.064-.08v-.001l.067-.083.067-.082.07-.083.069-.08.063-.074.074-.083.068-.077.002-.002.07-.076.07-.075.072-.077.001-.001.067-.07.076-.078.002-.002.07-.07.075-.075.002-.002.072-.07.075-.072.002-.002.073-.069.074-.068.001-.001.08-.073.076-.068.002-.002.072-.063v-.001l.078-.067.079-.068.002-.001.08-.068.002-.002.077-.063.082-.066.001-.001.075-.06.002-.002.006-.004.117-.111.094-.131.068-.146.04-.156.01-.161-.019-.16-.049-.154-.076-.141-.102-.125-.123-.105-.14-.079-.153-.052-.16-.023-.16.007zm24.596 11.088l-.156.04-.146.067-.131.094-.112.117-.087.135-.061.15-.033.157-.004.134.007.142.005.152.004.15.002.149v.153l.001.011v.015l.004.11.002.11v.002l.002.106v.321l-.003.102-.002.106-.004.107-.005.105-.006.106-.006.106-.008.106v.002l-.008.103v.002l-.01.1-.01.105-.01.105-.013.105-.012.099v.002l-.014.108-.014.1-.016.105-.016.103v.002l-.017.099-.018.104-.019.103v.002l-.019.097-.02.104-.022.103v.001l-.022.098-.023.103v.002l-.024.096-.025.103v.002l-.024.096-.027.102v.003l-.026.093v.001l-.029.103v.002l-.03.099-.028.097v.002l-.03.095-.03.096v.001l-.033.1-.031.095v.002l-.035.1v.003l-.034.094v.003l-.035.096v.001l-.034.09v.002l-.038.098-.036.093v.002l-.038.095-.079.194-.08.188-.085.189-.087.19-.09.184-.092.183-.095.184-.05.093-.064.148-.034.158-.005.16.026.16.054.151.082.14.106.12.127.1.143.075.154.046.16.017.161-.013.156-.042.144-.071.13-.096.109-.119.072-.112.053-.099.003-.005.003-.006.102-.195.003-.006.003-.006.098-.196.003-.006.003-.006.096-.197.002-.006.003-.006.093-.2.002-.006.003-.006.09-.2.002-.006.003-.007.086-.202.003-.006.002-.006.084-.203.002-.005.001-.005.04-.102.002-.003.001-.003.04-.103.001-.003.001-.003.04-.103v-.004l.001-.003.039-.103v-.003l.002-.003.037-.104.001-.003.001-.003.037-.104v-.004l.002-.003.035-.104.002-.003v-.004l.035-.104.002-.004v-.003l.034-.105.002-.003v-.003l.034-.105v-.004l.002-.003.032-.106.001-.003.001-.003.031-.106.001-.003.001-.004.031-.106.001-.003.001-.004.03-.106v-.003l.002-.004.028-.107.001-.003.001-.003.028-.107.001-.004.001-.003.027-.107.001-.004v-.003l.027-.108.001-.003v-.004l.026-.108.001-.003v-.004l.025-.108.001-.003v-.004l.025-.108v-.004l.001-.003.023-.109v-.003l.001-.004.022-.109v-.003l.002-.004.02-.109.001-.004v-.003l.02-.11.002-.003v-.004l.02-.11v-.007l.019-.11v-.003l.001-.004.017-.11v-.004l.001-.003.017-.11v-.008l.016-.11v-.004l.001-.004.015-.11v-.008l.015-.111v-.008l.013-.111v-.007l.013-.112v-.007l.011-.112v-.004l.001-.004.01-.112v-.007l.01-.112v-.008l.008-.112v-.008l.007-.113v-.007l.007-.113v-.008l.005-.113v-.007l.005-.114v-.007l.003-.114v-.007l.003-.114v-.129l.001-.114v-.13l-.003-.114v-.008l-.003-.115v-.007l-.003-.102v-.155l-.003-.158v-.01l-.004-.158v-.01l-.006-.158v-.01l-.007-.148-.023-.16-.051-.152-.08-.14-.103-.124-.125-.102-.142-.077-.153-.05-.16-.02-.161.01zm-30.213.66l-.157.034-.149.063-.134.09-.115.113-.092.132-.067.147-.037.156-.009.134.001.11V15.95l.006.22v.012l.01.22v.012l.012.22v.006l.001.006.015.22v.005l.001.006.018.22.001.006v.006l.022.219v.006l.001.006.024.219.001.006v.006l.028.218.001.006v.006l.031.218.001.006.001.006.033.218.001.006.001.005.037.218v.006l.002.005.04.217v.006l.001.006.043.216.001.006.001.006.046.216v.005l.002.006.048.215.002.006.001.006.051.214.002.006v.006l.055.214.002.005.001.006.057.213.002.006.001.005.06.213.002.005.001.006.063.212.002.005.001.006.066.21.002.006.002.006.068.21.002.005.002.005.07.21.003.005.002.005.074.208.002.006.002.005.077.207.002.006.002.005.08.206.002.005.002.006.082.204.002.006.002.005.086.204.002.005.002.006.088.202.002.005.003.006.09.2.003.006.002.005.094.2.002.006.003.005.096.199.002.005.003.005.03.062.086.137.11.118.128.097.145.07.156.043.16.013.16-.017.155-.047.143-.074.127-.1.106-.121.081-.14.055-.15.025-.16-.005-.161-.034-.158-.05-.124-.028-.055-.092-.19-.087-.188-.087-.192-.083-.19-.08-.193-.078-.194-.076-.196-.073-.195-.07-.197-.067-.198-.065-.199-.063-.2-.059-.2-.056-.2-.055-.204-.05-.201-.049-.202-.046-.205-.043-.206-.04-.203-.038-.207-.034-.204-.032-.207-.028-.205-.026-.207-.023-.208-.02-.207-.018-.207-.014-.208-.011-.207-.009-.208-.005-.207-.002-.104-.017-.16-.046-.155-.074-.143-.1-.126-.121-.107-.139-.081-.152-.055-.159-.025-.161.004zm24.585 11.83l-.156.039-.146.068-.11.076-.015.012-.163.129-.166.127-.168.125-.17.124-.17.12-.172.118-.173.115-.176.114-.177.111-.18.11-.178.105-.182.104-.182.101-.184.1-.184.095-.189.095-.186.09-.188.089-.19.086-.19.082-.193.081-.195.078-.191.074-.197.073-.195.07-.196.065-.198.064-.198.061-.2.058-.2.055-.2.052-.2.049-.151.035-.153.05-.141.078-.125.103-.103.124-.078.14-.05.154-.022.16.009.16.038.157.067.147.093.132.116.112.134.089.149.062.158.034.16.003.133-.02.158-.035.006-.002.006-.001.213-.052.006-.002.007-.001.212-.056.006-.001.006-.002.212-.058.006-.002.006-.002.211-.061.006-.002.006-.002.21-.064.006-.002.006-.002.21-.067.005-.002.006-.002.208-.07.006-.002.006-.003.207-.073.006-.002.006-.002.206-.077.006-.002.005-.002.206-.08.005-.001.006-.003.204-.082.006-.002.005-.002.203-.085.006-.003.005-.002.202-.088.006-.002.005-.003.2-.09.006-.003.006-.003.2-.093.005-.003.005-.002.198-.096.006-.003.005-.003.197-.099.005-.002.005-.003.196-.102.005-.002.005-.003.195-.105.005-.002.005-.003.193-.107.005-.003.005-.003.191-.11.005-.003.005-.003.19-.112.005-.003.005-.003.189-.115.005-.003.005-.003.187-.117.005-.003.004-.004.186-.12.005-.003.004-.003.184-.122.005-.003.005-.004.182-.125.004-.003.005-.003.18-.128.005-.003.005-.003.179-.13.004-.003.005-.004.177-.132.004-.004.005-.003.175-.135.005-.003.004-.004.173-.137.005-.003.004-.004.019-.015.115-.113.092-.132.066-.147.038-.157.008-.16-.022-.16-.052-.153-.079-.14-.103-.124-.125-.102-.142-.078-.153-.05-.16-.02-.16.01zm-19.17.054l-.153.051-.14.079-.124.103-.103.125-.077.141-.05.153-.02.16.009.161.04.156.067.147.093.131.095.094.047.04.005.004.005.004.17.14.005.004.005.004.172.137.004.004.005.003.086.067.003.002.003.002.087.067.003.002.003.002.088.066.002.003.003.002.089.065.002.002.003.002.09.065.002.002.003.002.09.064.002.002.003.002.09.063.003.002.003.002.09.063.003.002.003.002.092.062.002.002.003.002.092.061.003.002.003.002.092.06.003.003.003.001.093.06.003.002.003.002.093.06.003.001.003.002.094.058.003.002.003.002.095.058.003.001.003.002.095.057.003.002.003.002.095.056.003.002.003.002.096.055.004.002.003.001.096.055.003.002.003.002.098.053.003.002.003.002.097.053.004.002.003.001.098.053.003.001.003.002.099.052.003.001.003.002.1.05.003.002.003.002.1.05.003.002.003.001.1.05h.003l.004.003.1.048.004.001.003.002.101.048.003.001.004.002.101.046.004.002.003.001.102.046.004.002.003.001.103.045.003.002.003.001.103.045.004.001.003.002.104.043.003.001.004.002.104.042.003.002.004.001.104.042.004.001.003.002.105.04.004.002.003.001.106.04.003.002h.004l.106.04.004.001.003.002.107.038.003.001.004.001.107.038.003.001.004.001.107.037.004.001.004.001.108.036.003.001.004.001.108.035.004.001.003.001.11.034.003.001.004.001.109.033.004.002h.003l.11.033h.004l.003.002.11.031.004.001.004.001.084.023.081.028.004.001.003.001.109.037.003.001.004.001.109.036.003.001.004.001.109.035h.003l.004.002.11.033.003.001.003.001.11.033.003.001.004.001.109.031.004.002h.003l.11.031.003.001.004.001.11.03h.003l.003.001.11.029h.004l.003.002.11.027.003.001.004.001.11.027h.003l.004.001.004.001.16.022.16-.008.157-.038.147-.067.132-.092.112-.116.09-.134.062-.149.034-.157.004-.161-.025-.16-.055-.151-.082-.139-.107-.12-.127-.1-.143-.074-.124-.04h-.003l-.104-.025-.103-.026h-.002l-.095-.026h-.001l-.101-.027h-.002l-.1-.028h-.002l-.103-.03-.104-.032-.097-.03h-.002l-.103-.033-.102-.033-.101-.034-.106-.036-.027-.01-.027-.007-.107-.03-.104-.029-.104-.03h-.002l-.097-.03-.102-.032-.102-.032-.102-.034-.103-.035-.096-.034-.1-.036-.101-.037h-.002l-.094-.036-.096-.037-.097-.04h-.002l-.099-.04-.098-.042h-.002l-.092-.04-.097-.043-.095-.043-.097-.044h-.002l-.09-.043-.094-.045-.094-.046-.093-.047-.09-.046-.096-.05-.088-.047-.002-.001-.09-.049-.094-.052-.002-.002-.087-.049-.087-.05h-.002l-.088-.053h-.001l-.09-.055-.086-.052-.002-.001-.089-.055-.084-.054h-.002l-.09-.059h-.001l-.085-.056-.001-.001-.084-.056-.082-.056h-.001l-.086-.06-.082-.058H7.79l-.086-.062-.002-.002-.08-.058-.081-.06h-.001l-.085-.064-.002-.002-.076-.058-.002-.002-.082-.064-.161-.128-.162-.133-.04-.034-.132-.092-.147-.066-.157-.038-.16-.008-.16.022z\",\n  opacity: \".98\"\n})));\n\nfunction _extends$d() { _extends$d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d.apply(this, arguments); }\nvar StartEventNonInterruptingSignalIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$d({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.007 8.82L9.21 21.022h13.596L16.007 8.82zm0 1.775l5.328 9.563H10.68l5.327-9.563zM16.14.386c-1.571.236-4.195-.284-4.9 1.381.619 1.703 2.745.069 4.085.365 1.421-.13 2.84.2 4.235.259C21.27.784 18.19.344 17 .413a20.456 20.456 0 00-.86-.027zM25 3.162c-2.19.694.401 2.26 1.181 3.094 1.083 1.152 1.954 2.484 2.715 3.864 1.48 1.005 1.845-1.26.81-2.03-1.158-1.897-2.613-3.704-4.513-4.89l-.192-.038zm-18.438.423c-1.793.712-2.909 2.548-4.01 4.061-.773.814-2.211 3.653.005 3.211 1.123-1.469 1.87-3.306 3.267-4.614.664-.7 2.73-2.013.738-2.658zm24.57 11.072c-1.659.435-.468 2.667-.99 3.895a13.427 13.427 0 01-1.497 4.435c-.23 1.659 1.991 1.165 2.018-.199a14.277 14.277 0 001.254-7.552.865.865 0 00-.785-.579zm-30.18.666c-1.677.386-.633 2.667-.608 3.876.371 1.623.792 3.35 1.79 4.696 2.382.321.571-2.338.292-3.492a15.92 15.92 0 01-.684-4.39.877.877 0 00-.79-.69zm24.558 11.81c-1.755.865-3.303 2.266-5.274 2.765-1.162-.016-3.074 1.271-1.331 2.102 2.66-.447 5.163-1.733 7.236-3.445.472-.506.06-1.432-.631-1.421zm-19.151.043c-2.004.786.416 2.405 1.43 2.913 1.608.904 3.379 1.636 5.208 1.877 1.77-.804-.228-2.094-1.357-2.073-1.75-.537-3.403-1.396-4.798-2.586l-.227-.104-.256-.027z\"\n})));\n\nfunction _extends$c() { _extends$c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c.apply(this, arguments); }\nvar StartEventNonInterruptingTimerIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$c({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.991 8.7c-3.018-.042-5.92 1.925-7.03 4.725-1.138 2.695-.509 6.011 1.537 8.102 1.99 2.142 5.267 2.93 8.013 1.927 2.877-.98 4.99-3.826 5.067-6.87.153-2.956-1.624-5.88-4.299-7.135a7.551 7.551 0 00-3.288-.75zm0 1.383c2.758-.052 5.372 1.972 6.014 4.654.704 2.578-.482 5.516-2.79 6.867-2.358 1.48-5.682 1.085-7.617-.919-2.043-1.97-2.407-5.38-.84-7.743 1.11-1.764 3.149-2.88 5.233-2.86zm1.962 1.764l-2.074 3.762c-.64.068-.793 1.04-.202 1.3.39.27.696-.18 1.052-.165h3.17v-.865h-3.182l1.993-3.614-.757-.418zM16.12.358h-.232l-.22.004h-.012l-.221.006h-.012l-.22.01h-.012l-.22.013h-.012l-.22.016h-.012l-.22.019h-.005l-.006.001-.22.021h-.006l-.005.001-.22.025h-.011l-.22.028h-.005l-.006.002-.219.03h-.005l-.006.001-.218.033-.006.001-.006.001-.217.036-.006.001-.006.001-.217.039-.006.001-.006.001-.216.042-.006.001-.006.001-.215.045-.006.001-.006.002-.215.047-.006.002-.006.001-.214.05-.006.002-.006.002-.115.029-.152.053-.14.081-.122.106-.1.126-.075.143-.047.154-.018.16.012.16.042.156.07.145.095.13.118.11.137.086.15.059.158.03h.161l.132-.022.11-.028.202-.047.203-.046.208-.043.202-.039.206-.037.206-.034.205-.03.208-.03.205-.025.209-.023.208-.02.21-.017.209-.015.207-.011.21-.009.21-.006.207-.003h.21l.21.002.207.005.207.008.212.011.207.014.208.017.209.019.208.022.205.025.206.028.207.03.208.035.205.036.202.039.052.01.16.018.16-.012.156-.042.146-.07.13-.096.109-.119.085-.136.06-.15.03-.159v-.16l-.03-.16-.059-.15-.086-.136L19.823.9l-.13-.096-.145-.07-.128-.038-.057-.011-.006-.002h-.006L19.135.64l-.006-.001-.006-.001-.217-.039H18.9l-.006-.002-.217-.035-.006-.001-.006-.001-.218-.032-.006-.001-.006-.001-.218-.03h-.006l-.006-.001-.219-.027h-.011l-.22-.024-.005-.001h-.006l-.22-.021h-.006L17.512.42l-.22-.017-.005-.001h-.006l-.22-.015h-.012l-.22-.012h-.012l-.22-.01h-.012l-.22-.005h-.012l-.221-.003h-.012zm8.715 2.783l-.157.034-.149.063-.134.089-.116.112-.092.132-.067.147-.038.157-.008.16.021.16.051.153.079.141.103.124.102.087.052.038h.001l.087.064v.001l.082.061.002.001.076.059h.001l.084.065.082.066.002.001.079.063.002.002.077.063.081.067.002.002.077.065.076.065.001.002.08.07.078.07h.002l.075.068.077.072.002.001.073.069.077.073.072.07.002.001.077.076.07.07v.001l.075.076.07.073.002.001.074.079.002.002.069.074.069.075.074.082.07.08.002.001.068.079h.001l.067.079.068.082.065.078.001.002.068.083.067.084.063.081.001.002.067.087.002.002.063.084.001.001.064.087.008.01.008.01.095.12.093.121.09.119.087.119.088.122.086.123.084.12.081.122.001.002.084.126.08.126.08.127.077.126.079.131.074.127.075.131.073.131.07.13.07.133.069.133.045.09.086.137.109.119.13.096.144.07.156.042.16.013.16-.017.155-.047.143-.075.126-.1.106-.121.082-.14.054-.151.025-.16-.005-.16-.035-.158-.05-.124-.048-.095-.002-.004-.002-.004-.073-.14-.002-.005-.002-.004-.074-.14-.002-.004-.002-.004-.076-.14-.002-.003-.002-.004-.077-.139-.003-.004-.002-.004-.078-.138-.003-.004-.002-.003-.08-.137-.002-.004-.003-.004-.081-.136-.002-.004-.003-.004-.083-.136-.002-.003-.002-.004-.085-.135-.002-.004-.003-.003-.085-.134-.003-.004-.002-.004-.087-.132-.003-.004-.003-.004-.088-.132-.003-.003-.002-.004-.09-.13-.003-.005-.003-.003-.091-.13-.003-.004-.002-.004-.093-.129-.003-.003-.003-.004-.094-.128-.003-.004-.003-.003-.095-.127-.003-.004-.003-.004-.097-.125-.003-.004-.003-.004-.09-.114-.06-.082-.003-.003-.002-.003-.069-.091-.002-.004-.002-.003-.07-.09-.003-.003-.002-.003-.07-.09-.003-.003-.002-.003-.071-.09-.002-.003-.003-.002-.072-.089-.002-.003-.002-.003-.073-.088-.002-.003-.002-.002-.074-.087-.002-.003-.002-.003-.074-.086-.003-.003-.002-.003-.074-.086-.003-.002-.002-.003-.075-.085-.003-.003-.002-.002-.076-.084-.002-.003-.003-.003-.076-.083-.002-.003-.003-.003-.077-.082-.002-.003-.003-.002-.077-.082-.003-.003-.003-.002-.078-.081-.002-.003-.003-.003-.078-.08-.003-.002-.003-.003-.079-.08-.002-.002-.003-.002-.08-.08-.002-.002-.003-.002-.08-.078-.003-.003-.003-.002-.08-.077-.003-.003-.003-.002-.082-.077-.002-.002-.003-.002-.082-.076-.003-.002-.002-.003-.083-.075-.003-.002-.002-.003-.084-.074-.002-.002-.003-.002-.084-.074-.003-.002-.002-.002-.085-.073-.002-.002-.003-.003-.085-.071-.003-.003-.002-.002-.086-.07-.003-.003-.002-.002-.086-.07-.003-.003-.003-.002-.086-.07-.003-.002-.003-.002-.087-.069-.002-.002-.003-.002-.088-.068-.002-.002-.003-.002-.088-.067-.003-.003-.003-.002-.088-.066-.003-.002-.003-.002-.089-.066-.003-.002-.003-.002-.057-.042-.14-.082-.15-.055-.16-.026-.16.004zm-18.458.426l-.157.037-.148.066-.111.074-.007.006-.003.002-.003.002-.086.069-.003.002-.002.002-.086.07-.003.002-.002.002-.086.07-.002.003-.003.002-.085.071-.002.002-.003.003-.084.071-.003.003-.002.002-.084.072-.003.003-.002.002-.083.073-.003.003-.002.002-.083.074-.002.002-.003.003-.082.074-.003.003-.002.002-.081.076-.003.002-.003.002-.08.077-.003.002-.003.003-.08.076-.002.003-.003.002-.08.078-.002.002-.003.003-.079.078-.002.003-.003.002-.078.08-.003.002-.002.002-.078.08-.002.003-.003.002-.077.08-.003.004-.002.002-.077.081-.002.003-.003.003-.076.082-.002.002-.003.003-.075.082-.002.003-.003.003-.074.083-.003.003-.002.003-.074.084-.003.003-.002.002-.074.085-.002.003-.002.003-.073.085-.003.003-.002.003-.072.086-.002.003-.003.003-.071.087-.003.003-.002.002-.07.088-.003.003-.002.003-.07.088-.003.003-.002.003-.07.09-.002.002-.002.003-.069.09-.002.003-.003.003-.068.09-.002.003-.002.003-.067.092-.003.003-.002.003-.067.092-.002.003-.002.003-.066.092-.002.003-.002.004-.066.093-.002.003-.002.003-.065.094-.002.003-.002.004-.064.094-.002.003-.002.004-.063.095-.002.003-.002.003-.063.097-.002.003-.002.003-.046.073-.05.07-.003.002-.002.003-.067.093-.003.003-.002.003-.066.094-.002.003-.002.003-.066.094-.002.003-.002.003-.064.094-.002.004-.002.003-.064.094-.002.004-.002.003-.062.095-.002.003-.002.003-.062.096-.002.003-.002.003-.06.096-.003.003-.002.003-.06.096-.001.004-.002.003-.059.096-.002.004-.002.003-.058.097-.002.003-.001.003-.057.098-.002.003-.002.003-.056.098-.002.003-.002.003-.055.098-.002.004-.001.003-.055.098-.001.004-.002.003-.054.099-.001.003-.002.003-.052.1-.002.002-.002.004-.051.1-.002.002-.002.004-.05.1-.002.003-.002.003-.05.1v.003l-.002.004-.05.1V9.5l-.002.004-.048.1-.002.004-.001.003-.047.101-.002.003-.001.004-.013.027-.052.152-.024.16.006.16.037.157.064.148.091.133.114.114.134.09.147.065.157.036.162.006.159-.024.152-.053.14-.08.122-.105.1-.126.066-.117.01-.023.044-.095.045-.095.002-.003.042-.087.048-.097.048-.095v-.001l.048-.092.001-.001.047-.09.05-.093.002-.002.049-.09.052-.092.001-.002.051-.089.001-.002.051-.087.053-.088.001-.002.055-.091.057-.091.057-.09.001-.002.057-.089.055-.083.001-.002.06-.09.06-.088.062-.089.001-.001.06-.084.063-.088.065-.089.017-.023.016-.025.06-.094.059-.09v-.002l.058-.086.057-.086.001-.001.062-.09.062-.088.001-.002.06-.085.002-.002.06-.082.063-.087.064-.084.002-.002.061-.08.065-.084.064-.08v-.001l.067-.083.067-.082.07-.083.069-.08.063-.074.074-.083.068-.077.002-.002.07-.076.07-.075.072-.077.001-.001.067-.07.076-.078.002-.002.07-.07.075-.075.002-.002.072-.07.075-.072.002-.002.073-.069.074-.068.001-.001.08-.073.076-.068.002-.002.072-.063v-.001l.078-.067.079-.068.002-.001.08-.068.002-.002.077-.063.082-.066.001-.001.075-.06.002-.002.006-.004.117-.111.094-.131.068-.146.04-.156.01-.161-.019-.16-.049-.154-.076-.141-.102-.125-.123-.105-.14-.079-.153-.052-.16-.023-.16.007zm24.596 11.088l-.156.04-.146.067-.131.094-.112.117-.087.135-.061.15-.033.157-.004.134.007.142.005.152.004.15.002.149v.153l.001.011v.015l.004.11.002.11v.002l.002.106v.321l-.003.102-.002.106-.004.107-.005.105-.006.106-.006.106-.008.106v.002l-.008.103v.002l-.01.1-.01.105-.01.105-.013.105-.012.099v.002l-.014.108-.014.1-.016.105-.016.103v.002l-.017.099-.018.104-.019.103v.002l-.019.097-.02.104-.022.103v.001l-.022.098-.023.103v.002l-.024.096-.025.103v.002l-.024.096-.027.102v.003l-.026.093v.001l-.029.103v.002l-.03.099-.028.097v.002l-.03.095-.03.096v.001l-.033.1-.031.095v.002l-.035.1v.003l-.034.094v.003l-.035.096v.001l-.034.09v.002l-.038.098-.036.093v.002l-.038.095-.079.194-.08.188-.085.189-.087.19-.09.184-.092.183-.095.184-.05.093-.064.148-.034.158-.005.16.026.16.054.151.082.14.106.12.127.1.143.075.154.046.16.017.161-.013.156-.042.144-.071.13-.096.109-.119.072-.112.053-.099.003-.005.003-.006.102-.195.003-.006.003-.006.098-.196.003-.006.003-.006.096-.197.002-.006.003-.006.093-.2.002-.006.003-.006.09-.2.002-.006.003-.007.086-.202.003-.006.002-.006.084-.203.002-.005.001-.005.04-.102.002-.003.001-.003.04-.103.001-.003.001-.003.04-.103v-.004l.001-.003.039-.103v-.003l.002-.003.037-.104.001-.003.001-.003.037-.104v-.004l.002-.003.035-.104.002-.003v-.004l.035-.104.002-.004v-.003l.034-.105.002-.003v-.003l.034-.105v-.004l.002-.003.032-.106.001-.003.001-.003.031-.106.001-.003.001-.004.031-.106.001-.003.001-.004.03-.106v-.003l.002-.004.028-.107.001-.003.001-.003.028-.107.001-.004.001-.003.027-.107.001-.004v-.003l.027-.108.001-.003v-.004l.026-.108.001-.003v-.004l.025-.108.001-.003v-.004l.025-.108v-.004l.001-.003.023-.109v-.003l.001-.004.022-.109v-.003l.002-.004.02-.109.001-.004v-.003l.02-.11.002-.003v-.004l.02-.11v-.007l.019-.11v-.003l.001-.004.017-.11v-.004l.001-.003.017-.11v-.008l.016-.11v-.004l.001-.004.015-.11v-.008l.015-.111v-.008l.013-.111v-.007l.013-.112v-.007l.011-.112v-.004l.001-.004.01-.112v-.007l.01-.112v-.008l.008-.112v-.008l.007-.113v-.007l.007-.113v-.008l.005-.113v-.007l.005-.114v-.007l.003-.114v-.007l.003-.114v-.129l.001-.114v-.13l-.003-.114V16.5l-.003-.115v-.007l-.003-.102v-.155l-.003-.158v-.01l-.004-.158v-.01l-.006-.158v-.01l-.007-.148-.023-.16-.051-.152-.08-.14-.103-.124-.125-.102-.142-.077-.153-.05-.16-.02-.161.01zm-30.213.66l-.157.034-.149.063-.134.09-.115.113-.092.132-.067.147-.037.156-.009.134.001.11V16.308l.006.22v.012l.01.22v.012l.012.22v.006l.001.006.015.22v.005l.001.006.018.22.001.006v.006l.022.219v.006l.001.006.024.219.001.006v.006l.028.218.001.006v.006l.031.218.001.006.001.006.033.218.001.006.001.005.037.218v.006l.002.005.04.217v.006l.001.006.043.216.001.006.001.006.046.216v.005l.002.006.048.215.002.006.001.006.051.214.002.006v.006l.055.214.002.005.001.006.057.213.002.006.001.005.06.213.002.005.001.006.063.212.002.005.001.006.066.21.002.006.002.006.068.21.002.005.002.005.07.21.003.005.002.005.074.208.002.006.002.005.077.207.002.006.002.005.08.206.002.005.002.006.082.204.002.006.002.005.086.204.002.005.002.006.088.202.002.005.003.006.09.2.003.006.002.005.094.2.002.006.003.005.096.199.002.005.003.005.03.062.086.137.11.118.128.097.145.07.156.043.16.013.16-.017.155-.047.143-.074.127-.1.106-.121.081-.14.055-.15.025-.16-.005-.161-.034-.158-.05-.124-.028-.055-.092-.19-.087-.188-.087-.192-.083-.19-.08-.193-.078-.194-.076-.196-.073-.195-.07-.197-.067-.198-.065-.199-.063-.2-.059-.2-.056-.2-.055-.204-.05-.201-.049-.202-.046-.205-.043-.206-.04-.203-.038-.207-.034-.204-.032-.207-.028-.205-.026-.207-.023-.208-.02-.207-.018-.207-.014-.208-.011-.207-.009-.208-.005-.207-.002-.104-.017-.16-.046-.155-.074-.143-.1-.126-.121-.107-.139-.081-.152-.055-.159-.025-.161.004zm24.585 11.83l-.156.039-.146.068-.11.076-.015.012-.163.129-.166.127-.168.125-.17.124-.17.12-.172.118-.173.115-.176.114-.177.111-.18.11-.178.105-.182.104-.182.101-.184.1-.184.095-.189.095-.186.09-.188.089-.19.086-.19.082-.193.081-.195.078-.191.074-.197.073-.195.07-.196.065-.198.064-.198.061-.2.058-.2.055-.2.052-.2.049-.151.035-.153.05-.141.078-.125.103-.103.124-.078.14-.05.154-.022.16.009.16.038.157.067.147.093.132.116.112.134.089.149.062.158.034.16.003.133-.02.158-.035.006-.002.006-.001.213-.052.006-.002.007-.001.212-.056.006-.001.006-.002.212-.058.006-.002.006-.002.211-.061.006-.002.006-.002.21-.064.006-.002.006-.002.21-.067.005-.002.006-.002.208-.07.006-.002.006-.003.207-.073.006-.002.006-.002.206-.077.006-.002.005-.002.206-.08.005-.001.006-.003.204-.082.006-.002.005-.002.203-.085.006-.003.005-.002.202-.088.006-.002.005-.003.2-.09.006-.003.006-.003.2-.093.005-.003.005-.002.198-.096.006-.003.005-.003.197-.099.005-.002.005-.003.196-.102.005-.002.005-.003.195-.105.005-.002.005-.003.193-.107.005-.003.005-.003.191-.11.005-.003.005-.003.19-.112.005-.003.005-.003.189-.115.005-.003.005-.003.187-.117.005-.003.004-.004.186-.12.005-.003.004-.003.184-.122.005-.003.005-.004.182-.125.004-.003.005-.003.18-.128.005-.003.005-.003.179-.13.004-.003.005-.004.177-.132.004-.004.005-.003.175-.135.005-.003.004-.004.173-.137.005-.003.004-.004.019-.015.115-.113.092-.132.066-.147.038-.157.008-.16-.022-.16-.052-.153-.079-.14-.103-.124-.125-.102-.142-.078-.153-.05-.16-.02-.16.01zm-19.17.054l-.153.051-.14.079-.124.103-.103.125-.077.141-.05.153-.02.16.009.161.04.156.067.147.093.131.095.094.047.04.005.004.005.004.17.14.005.004.005.004.172.137.004.004.005.003.086.067.003.002.003.002.087.067.003.002.003.002.088.066.002.003.003.002.089.065.002.002.003.002.09.065.002.002.003.002.09.064.002.002.003.002.09.063.003.002.003.002.09.063.003.002.003.002.092.062.002.002.003.002.092.061.003.002.003.002.092.06.003.003.003.001.093.06.003.002.003.002.093.06.003.001.003.002.094.058.003.002.003.002.095.058.003.001.003.002.095.057.003.002.003.002.095.056.003.002.003.002.096.055.004.002.003.001.096.055.003.002.003.002.098.053.003.002.003.002.097.053.004.002.003.001.098.053.003.001.003.002.099.052.003.001.003.002.1.05.003.002.003.002.1.05.003.002.003.001.1.05h.003l.004.003.1.048.004.001.003.002.101.048.003.001.004.002.101.046.004.002.003.001.102.046.004.002.003.001.103.045.003.002.003.001.103.045.004.001.003.002.104.043.003.001.004.002.104.042.003.002.004.001.104.042.004.001.003.002.105.04.004.002.003.001.106.04.003.002h.004l.106.04.004.001.003.002.107.038.003.001.004.001.107.038.003.001.004.001.107.037.004.001.004.001.108.036.003.001.004.001.108.035.004.001.003.001.11.034.003.001.004.001.109.033.004.002h.003l.11.033h.004l.003.002.11.031.004.001.004.001.084.023.081.028.004.001.003.001.109.037.003.001.004.001.109.036.003.001.004.001.109.035h.003l.004.002.11.033.003.001.003.001.11.033.003.001.004.001.109.031.004.002h.003l.11.031.003.001.004.001.11.03h.003l.003.001.11.029h.004l.003.002.11.027.003.001.004.001.11.027h.003l.004.001.004.001.16.022.16-.008.157-.038.147-.067.132-.092.112-.116.09-.134.062-.149.034-.157.004-.161-.025-.16-.055-.151-.082-.139-.107-.12-.127-.1-.143-.074-.124-.04h-.003l-.104-.025-.103-.026h-.002l-.095-.026h-.001l-.101-.027h-.002l-.1-.028h-.002l-.103-.03-.104-.032-.097-.03h-.002l-.103-.033-.102-.033-.101-.034-.106-.036-.027-.01-.027-.007-.107-.03-.104-.029-.104-.03h-.002l-.097-.03-.102-.032-.102-.032-.102-.034-.103-.035-.096-.034-.1-.036-.101-.037h-.002l-.094-.036-.096-.037-.097-.04h-.002l-.099-.04-.098-.042h-.002l-.092-.04-.097-.043-.095-.043-.097-.044h-.002l-.09-.043-.094-.045-.094-.046-.093-.047-.09-.046-.096-.05-.088-.047-.002-.001-.09-.049-.094-.052-.002-.002-.087-.049-.087-.05h-.002l-.088-.053h-.001l-.09-.055-.086-.052-.002-.001-.089-.055-.084-.054h-.002l-.09-.059h-.001l-.085-.056-.001-.001-.084-.056-.082-.056h-.001l-.086-.06-.082-.058H7.79l-.086-.062-.002-.002-.08-.058-.081-.06h-.001l-.085-.064-.002-.002-.076-.058-.002-.002-.082-.064-.161-.128-.162-.133-.04-.034-.132-.092-.147-.066-.157-.038-.16-.008-.16.022z\"\n})));\n\nfunction _extends$b() { _extends$b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b.apply(this, arguments); }\nvar StartEventNoneIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$b({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.847.004C9.61-.016 3.624 4.014 1.257 9.78-1.235 15.49.06 22.581 4.42 27.034c4.193 4.513 11.101 6.17 16.887 4.058 5.996-2.042 10.423-7.93 10.664-14.268.403-6.228-3.26-12.441-8.87-15.154A15.924 15.924 0 0015.846.004zm.439 1.729c6.105.033 11.856 4.45 13.435 10.359 1.678 5.653-.592 12.198-5.463 15.547-5.06 3.719-12.564 3.45-17.343-.625-4.814-3.84-6.538-10.94-4.067-16.57 2.14-5.206 7.515-8.775 13.147-8.71.097-.001.194-.002.29-.001z\"\n})));\n\nfunction _extends$a() { _extends$a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a.apply(this, arguments); }\nvar StartEventParallelMultipleIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$a({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.847 0C9.61-.02 3.624 4.01 1.257 9.775-1.235 15.485.06 22.577 4.42 27.03c4.193 4.513 11.101 6.17 16.887 4.058 5.996-2.042 10.423-7.93 10.664-14.268.403-6.228-3.26-12.441-8.87-15.154A15.924 15.924 0 0015.846 0zm.439 1.729c6.105.033 11.856 4.45 13.435 10.359 1.678 5.653-.592 12.198-5.463 15.547-5.06 3.719-12.564 3.45-17.343-.625C2.101 23.17.377 16.07 2.848 10.44c2.134-5.2 7.522-8.78 13.147-8.71.097-.001.194-.002.29-.001zM13.504 9.08v4.427H9.077v4.98h4.427v4.427h4.98v-4.427h4.428v-4.98h-4.427V9.08h-4.98zm.83.83h3.32v4.427h4.428v3.32h-4.427v4.427h-3.32v-4.453H9.906v-3.294h4.427V9.91z\"\n})));\n\nfunction _extends$9() { _extends$9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9.apply(this, arguments); }\nvar StartEventSignalIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$9({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.995.005C9.705-.08 3.643 3.968 1.257 9.78-1.235 15.49.06 22.581 4.42 27.034c4.193 4.513 11.102 6.17 16.887 4.058 5.996-2.042 10.423-7.93 10.664-14.269.403-6.227-3.26-12.44-8.87-15.153A15.924 15.924 0 0015.994.005zm0 1.73c6.213-.108 12.122 4.355 13.726 10.357 1.678 5.653-.592 12.198-5.463 15.547-5.06 3.719-12.564 3.45-17.343-.626-4.814-3.838-6.538-10.939-4.067-16.57 2.14-5.205 7.515-8.774 13.147-8.708zm0 6.776L9.19 20.724H22.8L15.995 8.511zm0 1.777l5.332 9.572H10.662l5.333-9.572z\"\n})));\n\nfunction _extends$8() { _extends$8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8.apply(this, arguments); }\nvar StartEventTimerIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$8({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 0C7.174 0 0 7.174 0 16s7.174 16 16 16 16-7.174 16-16S24.826 0 16 0zm0 1.73c7.892 0 14.27 6.378 14.27 14.27 0 7.891-6.379 14.27-14.27 14.27S1.73 23.891 1.73 16C1.73 8.108 8.108 1.73 16 1.73zm-.143 6.676c-2.967.02-5.797 1.97-6.89 4.727-1.138 2.695-.51 6.012 1.537 8.102 1.99 2.142 5.268 2.932 8.014 1.928 2.878-.98 4.992-3.827 5.068-6.87.153-2.957-1.624-5.881-4.3-7.137a7.552 7.552 0 00-3.43-.75zm.27 1.383c2.71.012 5.254 2.015 5.886 4.656.704 2.577-.482 5.517-2.791 6.867-2.358 1.48-5.682 1.085-7.618-.918-2.043-1.971-2.407-5.381-.84-7.745 1.11-1.763 3.15-2.88 5.234-2.86h.13zm1.833 1.765l-2.074 3.763c-.64.068-.793 1.04-.202 1.3.39.27.696-.18 1.052-.165h3.17v-.865h-3.181l1.992-3.615-.757-.418z\"\n})));\n\nfunction _extends$7() { _extends$7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7.apply(this, arguments); }\nvar SubprocessCollapsedIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$7({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.637 3A5.644 5.644 0 000 8.637v15.417a5.644 5.644 0 005.637 5.637h20.726A5.644 5.644 0 0032 24.054V8.637A5.644 5.644 0 0026.363 3H5.637zm0 1.778h20.726a3.83 3.83 0 013.859 3.859v15.417a3.83 3.83 0 01-3.859 3.858h-4.201V16.695H9.838v11.217H5.637a3.83 3.83 0 01-3.859-3.858V8.637a3.83 3.83 0 013.859-3.859zm5.33 13.046h10.066v10.065H10.967V17.824zm4.189 1.431V22.06H12.35v1.689h2.804V26.554h1.69V23.749h2.804V22.06h-2.804V19.255h-1.69z\"\n})));\n\nfunction _extends$6() { _extends$6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6.apply(this, arguments); }\nvar SubprocessExpandedIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$6({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.636 3A5.642 5.642 0 000 8.636v15.418a5.643 5.643 0 005.636 5.636h20.728A5.643 5.643 0 0032 24.054V8.636A5.642 5.642 0 0026.364 3H5.636zm0 1.778h20.728a3.83 3.83 0 013.858 3.858v15.418a3.83 3.83 0 01-3.858 3.858h-4.203V16.723H9.84v11.189H5.636a3.83 3.83 0 01-3.858-3.858V8.636a3.83 3.83 0 013.858-3.858zm5.331 13.074h10.066v10.06H10.967v-10.06zm1.336 3.996v1.711h7.394v-1.71h-7.394z\"\n})));\n\nfunction _extends$5() { _extends$5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5.apply(this, arguments); }\nvar TaskNoneIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$5({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.494 2.667C2.916 2.667 0 5.57 0 9.142v13.383C0 26.097 2.916 29 6.494 29h19.012C29.084 29 32 26.097 32 22.525V9.142c0-3.572-2.916-6.475-6.494-6.475H6.494zm0 2h19.012c2.509 0 4.494 1.98 4.494 4.475v13.383C30 25.02 28.015 27 25.506 27H6.494C3.985 27 2 25.02 2 22.525V9.142c0-2.495 1.985-4.475 4.494-4.475z\"\n})));\n\nfunction _extends$4() { _extends$4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4.apply(this, arguments); }\nvar TextAnnotationicon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$4({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.087 0v31.647H32v-1.788h-8.125V1.788H32V0h-9.913zm-2.924 13.999l-2.737 2.167 2.167 2.738 2.738-2.167-2.168-2.738zm-5.475 4.335L10.95 20.5l2.168 2.738 2.737-2.168-2.167-2.737zm-5.475 4.335l-2.738 2.167 2.168 2.738 2.737-2.168-2.167-2.737zm-5.476 4.335L0 29.17l2.167 2.738 2.738-2.168-2.168-2.737z\"\n})));\n\nfunction _extends$3() { _extends$3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3.apply(this, arguments); }\nvar TransactionIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$3({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.422 3A5.424 5.424 0 000 8.422v15.822a5.424 5.424 0 005.422 5.423h21.156A5.424 5.424 0 0032 24.244V8.422A5.424 5.424 0 0026.578 3H5.422zm0 1.244h21.156a4.155 4.155 0 014.178 4.178v15.822a4.155 4.155 0 01-4.178 4.178H5.422a4.155 4.155 0 01-4.178-4.178V8.422a4.155 4.155 0 014.178-4.178zm1.056 1.778a3.373 3.373 0 00-3.367 3.366v13.89a3.373 3.373 0 003.367 3.366h19.044a3.373 3.373 0 003.367-3.366V9.388a3.373 3.373 0 00-3.367-3.366H6.478zm0 1.245h19.044c1.187 0 2.122.935 2.122 2.121v13.89a2.104 2.104 0 01-2.122 2.122H6.478a2.104 2.104 0 01-2.122-2.122V9.388c0-1.186.935-2.121 2.122-2.121z\"\n})));\n\nfunction _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }\nvar UserTaskIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$2({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M10.263 7.468c-1.698 0-2.912 1.305-2.915 2.791v.001c0 .45.121.924.311 1.352.138.309.308.593.516.82-1.235.423-2.683 1.119-3.414 2.49l-.04.075v4.44h11.083v-4.44l-.04-.074c-.72-1.352-2.136-2.047-3.36-2.471.597-.608.774-1.392.774-2.192-.004-1.487-1.218-2.792-2.915-2.792zm-1.16 1.583c.08 0 .165.003.26.008.757.045 1.012.181 1.207.31.196.13.334.252.851.268.404-.016.598-.087.737-.169.056-.033.103-.067.152-.1.128.275.197.578.198.893 0 .894-.154 1.52-.975 2.034l.08.604c.171.052.348.11.527.171.025.105.054.242.073.387.02.153.029.311.016.43a.422.422 0 01-.056.19c-.417.417-1.157.66-1.908.66-.75 0-1.49-.243-1.908-.66a.422.422 0 01-.056-.19 1.949 1.949 0 01.016-.43c.02-.146.049-.284.074-.388.177-.062.352-.118.521-.17l.048-.648a.616.616 0 00-.126-.118c-.183-.138-.405-.44-.562-.793-.157-.353-.254-.757-.254-1.08 0-.387.105-.758.297-1.079l.11-.04c.143-.046.339-.09.679-.09zm-1.448 4.304l-.002.014c-.025.185-.04.387-.018.589.021.202.074.42.248.593.595.594 1.494.857 2.382.857.889 0 1.788-.263 2.382-.857.174-.174.227-.391.249-.593a2.496 2.496 0 00-.018-.59l-.002-.01c.903.396 1.776.963 2.258 1.81v3.599H13.53v-2.538h-.67v2.538H7.651v-2.538h-.67v2.538H5.39v-3.599c.483-.849 1.359-1.416 2.264-1.813zM6.495 3C2.914 3 0 5.903 0 9.475v13.383c0 3.572 2.916 6.475 6.494 6.475h19.012c3.578 0 6.494-2.903 6.494-6.475V9.475C32 5.903 29.084 3 25.506 3H6.494zm0 2h19.01C28.016 5 30 6.98 30 9.475v13.383c0 2.495-1.985 4.475-4.494 4.475H6.494C3.985 27.333 2 25.353 2 22.858V9.475C2 6.98 3.985 5 6.494 5z\"\n})));\n\nvar iconsByType = {\n  'Association': AssociationIcon,\n  'BusinessRuleTask': BusinessRuleTaskIcon,\n  'CallActivity': CallActivityIcon,\n  'Collaboration': CollaborationIcon,\n  'ConditionalFlow': ConditionalFlowIcon,\n  'SequenceFlow': ConnectionIcon,\n  'DataInput': DataInputIcon,\n  'DataInputAssociation': DataInputOutputAssociationIcon,\n  'DataOutput': DataOutputIcon,\n  'DataOutputAssociation': DataInputOutputAssociationIcon,\n  'DataObjectReference': DataObjectIcon,\n  'DataStoreReference': DataStoreIcon,\n  'DefaultFlow': DefaultFlowIcon,\n  'CancelEndEvent': EndEventCancelIcon,\n  'CompensateEndEvent': EndEventCompensationIcon,\n  'ErrorEndEvent': EndEventErrorIcon,\n  'EscalationEndEvent': EndEventEscalationIcon,\n  'LinkEndEvent': EndEventLinkIcon,\n  'MessageEndEvent': EndEventMessageIcon,\n  'MultipleEndEvent': EndEventMultipleIcon,\n  'EndEvent': EndEventNoneIcon,\n  'SignalEndEvent': EndEventSignalIcon,\n  'TerminateEndEvent': EndEventTerminateIcon,\n  'EventSubProcess': EventSubProcessExpandedIcon,\n  'ComplexGateway': GatewayComplexIcon,\n  'EventBasedGateway': GatewayEventBasedIcon,\n  'ExclusiveGateway': GatewayXorIcon,\n  'Gateway': GatewayNoneIcon,\n  'InclusiveGateway': GatewayOrIcon,\n  'ParallelGateway': GatewayParallelIcon,\n  'Group': GroupIcon,\n  'CancelIntermediateCatchEvent': IntermediateEventCatchCancelIcon,\n  'CompensateIntermediateCatchEvent': IntermediateEventCatchCompensationIcon,\n  'ConditionalIntermediateCatchEvent': IntermediateEventCatchConditionIcon,\n  'ErrorIntermediateCatchEvent': IntermediateEventCatchErrorIcon,\n  'EscalationIntermediateCatchEvent': IntermediateEventCatchEscalationIcon,\n  'LinkIntermediateCatchEvent': IntermediateEventCatchLinkIcon,\n  'MessageIntermediateCatchEvent': IntermediateEventCatchMessageIcon,\n  'MultipleIntermediateCatchEvent': IntermediateEventCatchMultipleIcon,\n  'ConditionalIntermediateCatchEventNonInterrupting': IntermediateEventCatchNonInterruptingConditionIcon,\n  'EscalationIntermediateCatchEventNonInterrupting': IntermediateEventCatchNonInterruptingEscalationIcon,\n  'MessageIntermediateCatchEventNonInterrupting': IntermediateEventCatchNonInterruptingMessageIcon,\n  'MultipleIntermediateCatchEventNonInterrupting': IntermediateEventCatchNonInterruptingMultipleIcon,\n  'ParallelIntermediateCatchEventNonInterrupting': IntermediateEventCatchNonInterruptingParallelIcon,\n  'SignalIntermediateCatchEventNonInterrupting': IntermediateEventCatchNonInterruptingSignalIcon,\n  'TimerIntermediateCatchEventNonInterrupting': IntermediateEventCatchNonInterruptingTimerIcon,\n  'ParallelMultipleIntermediateCatchEvent': IntermediateEventCatchParallelMultipleIcon,\n  'SignalIntermediateCatchEvent': IntermediateEventCatchSignalIcon,\n  'TimerIntermediateCatchEvent': IntermediateEventCatchTimerIcon,\n  'IntermediateThrowEvent': IntermediateEventNoneIcon,\n  'CompensateIntermediateThrowEvent': IntermediateEventThrowCompensationIcon,\n  'EscalationIntermediateThrowEvent': IntermediateEventThrowEscalationIcon,\n  'LinkIntermediateThrowEvent': IntermediateEventThrowLinkIcon,\n  'MessageIntermediateThrowEvent': IntermediateEventThrowMessageIcon,\n  'MultipleIntermediateThrowEvent': IntermediateEventThrowMultipleIcon,\n  'SignalIntermediateThrowEvent': IntermediateEventThrowSignalIcon,\n  'Lane': LaneIcon,\n  'ManualTask': ManualTaskIcon,\n  'MessageFlow': MessageFlowIcon,\n  'Participant': ParticipantIcon,\n  'Process': ProcessIcon,\n  'ReceiveTask': ReceiveTaskIcon,\n  'ScriptTask': ScriptTaskIcon,\n  'SendTask': SendTaskIcon,\n  'ServiceTask': ServiceTaskIcon,\n  'CompensateStartEvent': StartEventCompensationIcon,\n  'ConditionalStartEvent': StartEventConditionIcon,\n  'ErrorStartEvent': StartEventErrorIcon,\n  'EscalationStartEvent': StartEventEscalationIcon,\n  'MessageStartEvent': StartEventMessageIcon,\n  'MultipleStartEvent': StartEventMultipleIcon,\n  'ConditionalStartEventNonInterrupting': StartEventNonInterruptingConditionIcon,\n  'EscalationStartEventNonInterrupting': StartEventNonInterruptingEscalationIcon,\n  'MessageStartEventNonInterrupting': StartEventNonInterruptingMessageIcon,\n  'MultipleStartEventNonInterrupting': StartEventNonInterruptingMultipleIcon,\n  'ParallelMultipleStartEventNonInterrupting': StartEventNonInterruptingParallelMultipleIcon,\n  'SignalStartEventNonInterrupting': StartEventNonInterruptingSignalIcon,\n  'TimerStartEventNonInterrupting': StartEventNonInterruptingTimerIcon,\n  'CancelBoundaryEvent': IntermediateEventCatchCancelIcon,\n  'CompensateBoundaryEvent': IntermediateEventCatchCompensationIcon,\n  'ConditionalBoundaryEvent': IntermediateEventCatchConditionIcon,\n  'ErrorBoundaryEvent': IntermediateEventCatchErrorIcon,\n  'EscalationBoundaryEvent': IntermediateEventCatchEscalationIcon,\n  'LinkBoundaryEvent': IntermediateEventCatchLinkIcon,\n  'MessageBoundaryEvent': IntermediateEventCatchMessageIcon,\n  'MultipleBoundaryEvent': IntermediateEventCatchMultipleIcon,\n  'BoundaryEvent': IntermediateEventNoneIcon,\n  'ConditionalBoundaryEventNonInterrupting': IntermediateEventCatchNonInterruptingConditionIcon,\n  'EscalationBoundaryEventNonInterrupting': IntermediateEventCatchNonInterruptingEscalationIcon,\n  'MessageBoundaryEventNonInterrupting': IntermediateEventCatchNonInterruptingMessageIcon,\n  'MultipleBoundaryEventNonInterrupting': IntermediateEventCatchNonInterruptingMultipleIcon,\n  'ParallelBoundaryEventNonInterrupting': IntermediateEventCatchNonInterruptingParallelIcon,\n  'SignalBoundaryEventNonInterrupting': IntermediateEventCatchNonInterruptingSignalIcon,\n  'TimerBoundaryEventNonInterrupting': IntermediateEventCatchNonInterruptingTimerIcon,\n  'ParallelMultipleBoundaryEvent': IntermediateEventCatchParallelMultipleIcon,\n  'SignalBoundaryEvent': IntermediateEventCatchSignalIcon,\n  'TimerBoundaryEvent': IntermediateEventCatchTimerIcon,\n  'StartEvent': StartEventNoneIcon,\n  'ParallelMultipleStartEvent': StartEventParallelMultipleIcon,\n  'SignalStartEvent': StartEventSignalIcon,\n  'TimerStartEvent': StartEventTimerIcon,\n  'CollapsedSubProcess': SubprocessCollapsedIcon,\n  'CollapsedAdHocSubProcess': SubprocessCollapsedIcon,\n  'ExpandedSubProcess': SubprocessExpandedIcon,\n  'ExpandedAdHocSubProcess': SubprocessExpandedIcon,\n  'Task': TaskNoneIcon,\n  'TextAnnotation': TextAnnotationicon,\n  'Transaction': TransactionIcon,\n  'UserTask': UserTaskIcon\n};\n\nfunction getConcreteType(element) {\n  const {\n    type: elementType\n  } = element;\n  let type = getRawType(elementType); // (1) event definition types\n\n  const eventDefinition = getEventDefinition$1(element);\n\n  if (eventDefinition) {\n    type = `${getEventDefinitionPrefix(eventDefinition)}${type}`; // (1.1) interrupting / non interrupting\n\n    if (is(element, 'bpmn:StartEvent') && !isInterrupting(element) || is(element, 'bpmn:BoundaryEvent') && !isCancelActivity(element)) {\n      type = `${type}NonInterrupting`;\n    }\n\n    return type;\n  } // (2) sub process types\n\n\n  if (is(element, 'bpmn:SubProcess') && !is(element, 'bpmn:Transaction')) {\n    if (isEventSubProcess(element)) {\n      type = `Event${type}`;\n    } else {\n      const expanded = isExpanded(element) && !isPlane(element);\n      type = `${expanded ? 'Expanded' : 'Collapsed'}${type}`;\n    }\n  } // (3) conditional + default flows\n\n\n  if (isDefaultFlow(element)) {\n    type = 'DefaultFlow';\n  }\n\n  if (isConditionalFlow(element)) {\n    type = 'ConditionalFlow';\n  }\n\n  return type;\n}\nconst PanelHeaderProvider = {\n  getDocumentationRef: element => {\n    const elementTemplates = getTemplatesService();\n\n    if (elementTemplates) {\n      return getTemplateDocumentation(element, elementTemplates);\n    }\n  },\n  getElementLabel: element => {\n    if (is(element, 'bpmn:Process')) {\n      return getBusinessObject(element).name;\n    }\n\n    return getLabel(element);\n  },\n  getElementIcon: element => {\n    const concreteType = getConcreteType(element);\n    const elementTemplates = getTemplatesService();\n\n    if (elementTemplates) {\n      const template = getTemplate(element, elementTemplates);\n\n      if (template && template.icon) {\n        return () => jsx(\"img\", {\n          class: \"bio-properties-panel-header-template-icon\",\n          width: \"32\",\n          height: \"32\",\n          src: template.icon.contents\n        });\n      }\n    }\n\n    return iconsByType[concreteType];\n  },\n  getTypeLabel: element => {\n    const elementTemplates = getTemplatesService();\n\n    if (elementTemplates) {\n      const template = getTemplate(element, elementTemplates);\n\n      if (template && template.name) {\n        return template.name;\n      }\n    }\n\n    const concreteType = getConcreteType(element);\n    return concreteType.replace(/(\\B[A-Z])/g, ' $1').replace(/(\\bNon Interrupting)/g, '($1)');\n  }\n}; // helpers ///////////////////////\n\nfunction isCancelActivity(element) {\n  const businessObject = getBusinessObject(element);\n  return businessObject && businessObject.cancelActivity !== false;\n}\n\nfunction getEventDefinition$1(element) {\n  const businessObject = getBusinessObject(element),\n        eventDefinitions = businessObject.eventDefinitions;\n  return eventDefinitions && eventDefinitions[0];\n}\n\nfunction getRawType(type) {\n  return type.split(':')[1];\n}\n\nfunction getEventDefinitionPrefix(eventDefinition) {\n  const rawType = getRawType(eventDefinition.$type);\n  return rawType.replace('EventDefinition', '');\n}\n\nfunction isDefaultFlow(element) {\n  const businessObject = getBusinessObject(element);\n  const sourceBusinessObject = getBusinessObject(element.source);\n\n  if (!is(element, 'bpmn:SequenceFlow') || !sourceBusinessObject) {\n    return false;\n  }\n\n  return sourceBusinessObject.default && sourceBusinessObject.default === businessObject && (is(sourceBusinessObject, 'bpmn:Gateway') || is(sourceBusinessObject, 'bpmn:Activity'));\n}\n\nfunction isConditionalFlow(element) {\n  const businessObject = getBusinessObject(element);\n  const sourceBusinessObject = getBusinessObject(element.source);\n\n  if (!is(element, 'bpmn:SequenceFlow') || !sourceBusinessObject) {\n    return false;\n  }\n\n  return businessObject.conditionExpression && is(sourceBusinessObject, 'bpmn:Activity');\n}\n\nfunction isPlane(element) {\n  // Backwards compatibility for bpmn-js<8\n  const di = element && (element.di || getBusinessObject(element).di);\n  return is(di, 'bpmndi:BPMNPlane');\n}\n\nfunction getTemplatesService() {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useService('elementTemplates', false);\n}\n\nfunction getTemplate(element, elementTemplates) {\n  return elementTemplates.get(element);\n}\n\nfunction getTemplateDocumentation(element, elementTemplates) {\n  const template = getTemplate(element, elementTemplates);\n  return template && template.documentationRef;\n}\n\nfunction _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }\nvar EmptyIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends$1({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n  width: \"64\",\n  height: \"64\"\n}, props), /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"a\",\n  width: \"57\",\n  height: \"47\",\n  x: \"3\",\n  y: \"8\",\n  rx: \"7\"\n}), /*#__PURE__*/React.createElement(\"mask\", {\n  id: \"b\",\n  width: \"57\",\n  height: \"47\",\n  x: \"0\",\n  y: \"0\",\n  fill: \"#fff\",\n  maskContentUnits: \"userSpaceOnUse\",\n  maskUnits: \"objectBoundingBox\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#a\"\n}))), /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#818798\",\n  d: \"M52 11a5 5 0 015 5v31a5 5 0 01-5 5H11a5 5 0 01-5-5V16a5 5 0 015-5h41zm0 2H11a3 3 0 00-2.995 2.824L8 16v31a3 3 0 002.824 2.995L11 50h41a3 3 0 002.995-2.824L55 47V16a3 3 0 00-2.824-2.995L52 13z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#D5D7DD\",\n  d: \"M16 24h31v6H16zM21 33h21v6H21z\"\n}), /*#__PURE__*/React.createElement(\"use\", {\n  stroke: \"#B9BCC6\",\n  strokeDasharray: \"5 2\",\n  strokeWidth: \"2\",\n  mask: \"url(#b)\",\n  xlinkHref: \"#a\"\n}))));\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nvar MultipleIcon = (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n  width: \"128\",\n  height: \"64\"\n}, props), /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"a\",\n  d: \"M9 9h110v47H9z\"\n}), /*#__PURE__*/React.createElement(\"mask\", {\n  id: \"b\",\n  width: \"110\",\n  height: \"47\",\n  x: \"0\",\n  y: \"0\",\n  fill: \"#fff\",\n  maskContentUnits: \"userSpaceOnUse\",\n  maskUnits: \"objectBoundingBox\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#a\"\n}))), /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#818798\",\n  d: \"M25 20.272L37.728 33 25 45.728 12.272 33 25 20.272zm0 2.829L15.1 33l9.9 9.9 9.9-9.9-9.9-9.9z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#D5D7DD\",\n  d: \"M17 47h16v6H17z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#818798\",\n  d: \"M35 32h27v2H35z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#818798\",\n  d: \"M60 30v6l6-3z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#D5D7DD\",\n  d: \"M80 34h21v6H80z\"\n}), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#818798\",\n  d: \"M111 12a5 5 0 015 5v31a5 5 0 01-5 5H70a5 5 0 01-5-5V17a5 5 0 015-5h41zm0 2H70a3 3 0 00-3 3v31a3 3 0 003 3h41a3 3 0 003-3V17a3 3 0 00-3-3z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#D5D7DD\",\n  d: \"M75 25h31v6H75z\"\n})), /*#__PURE__*/React.createElement(\"use\", {\n  stroke: \"#B9BCC6\",\n  strokeDasharray: \"5 2\",\n  strokeWidth: \"2\",\n  mask: \"url(#b)\",\n  xlinkHref: \"#a\"\n}))));\n\nconst PanelPlaceholderProvider = {\n  getEmpty: () => {\n    return {\n      text: 'Select an element to edit its properties.',\n      icon: EmptyIcon\n    };\n  },\n  getMultiple: () => {\n    return {\n      text: 'Multiple elements are selected. Select a single element to edit its properties.',\n      icon: MultipleIcon\n    };\n  }\n};\n\nfunction BpmnPropertiesPanel(props) {\n  const {\n    element,\n    injector,\n    getProviders,\n    layoutConfig,\n    descriptionConfig\n  } = props;\n  const canvas = injector.get('canvas');\n  const elementRegistry = injector.get('elementRegistry');\n  const eventBus = injector.get('eventBus');\n  const [state, setState] = useState({\n    selectedElement: element\n  });\n  const selectedElement = state.selectedElement;\n  /**\n   * @param {djs.model.Base | Array<djs.model.Base>} element\n   */\n\n  const _update = element => {\n    if (!element) {\n      return;\n    }\n\n    let newSelectedElement = element; // handle labels\n\n    if (newSelectedElement && newSelectedElement.type === 'label') {\n      newSelectedElement = newSelectedElement.labelTarget;\n    }\n\n    setState({ ...state,\n      selectedElement: newSelectedElement\n    }); // notify interested parties on property panel updates\n\n    eventBus.fire('propertiesPanel.updated', {\n      element: newSelectedElement\n    });\n  }; // (2) react on element changes\n  // (2a) selection changed\n\n\n  useEffect(() => {\n    const onSelectionChanged = e => {\n      const {\n        newSelection = []\n      } = e;\n\n      if (newSelection.length > 1) {\n        return _update(newSelection);\n      }\n\n      const newElement = newSelection[0];\n      const rootElement = canvas.getRootElement();\n\n      if (isImplicitRoot$1(rootElement)) {\n        return;\n      }\n\n      _update(newElement || rootElement);\n    };\n\n    eventBus.on('selection.changed', onSelectionChanged);\n    return () => {\n      eventBus.off('selection.changed', onSelectionChanged);\n    };\n  }, []); // (2b) selected element changed\n\n  useEffect(() => {\n    const onElementsChanged = e => {\n      const elements = e.elements;\n      const updatedElement = findElement(elements, selectedElement);\n\n      if (updatedElement && elementExists(updatedElement, elementRegistry)) {\n        _update(updatedElement);\n      }\n    };\n\n    eventBus.on('elements.changed', onElementsChanged);\n    return () => {\n      eventBus.off('elements.changed', onElementsChanged);\n    };\n  }, [selectedElement]); // (2c) root element changed\n\n  useEffect(() => {\n    const onRootAdded = e => {\n      const element = e.element;\n\n      _update(element);\n    };\n\n    eventBus.on('root.added', onRootAdded);\n    return () => {\n      eventBus.off('root.added', onRootAdded);\n    };\n  }, [selectedElement]); // (2d) provided entries changed\n\n  useEffect(() => {\n    const onProvidersChanged = () => {\n      _update(selectedElement);\n    };\n\n    eventBus.on('propertiesPanel.providersChanged', onProvidersChanged);\n    return () => {\n      eventBus.off('propertiesPanel.providersChanged', onProvidersChanged);\n    };\n  }, [selectedElement]); // (2e) element templates changed\n\n  useEffect(() => {\n    const onTemplatesChanged = () => {\n      _update(selectedElement);\n    };\n\n    eventBus.on('elementTemplates.changed', onTemplatesChanged);\n    return () => {\n      eventBus.off('elementTemplates.changed', onTemplatesChanged);\n    };\n  }, [selectedElement]); // (3) create properties panel context\n\n  const bpmnPropertiesPanelContext = {\n    selectedElement,\n    injector,\n\n    getService(type, strict) {\n      return injector.get(type, strict);\n    }\n\n  }; // (4) retrieve groups for selected element\n\n  const providers = getProviders(selectedElement);\n  const groups = useMemo(() => {\n    return reduce(providers, function (groups, provider) {\n      // do not collect groups for multi element state\n      if (isArray(selectedElement)) {\n        return [];\n      }\n\n      const updater = provider.getGroups(selectedElement);\n      return updater(groups);\n    }, []);\n  }, [providers, selectedElement]); // (5) notify layout changes\n\n  const onLayoutChanged = layout => {\n    eventBus.fire('propertiesPanel.layoutChanged', {\n      layout\n    });\n  }; // (6) notify description changes\n\n\n  const onDescriptionLoaded = description => {\n    eventBus.fire('propertiesPanel.descriptionLoaded', {\n      description\n    });\n  };\n\n  return jsx(BpmnPropertiesPanelContext.Provider, {\n    value: bpmnPropertiesPanelContext,\n    children: jsx(PropertiesPanel, {\n      element: selectedElement,\n      headerProvider: PanelHeaderProvider,\n      placeholderProvider: PanelPlaceholderProvider,\n      groups: groups,\n      layoutConfig: layoutConfig,\n      layoutChanged: onLayoutChanged,\n      descriptionConfig: descriptionConfig,\n      descriptionLoaded: onDescriptionLoaded,\n      eventBus: eventBus\n    })\n  });\n} // helpers //////////////////////////\n\nfunction isImplicitRoot$1(element) {\n  // Backwards compatibility for diagram-js<7.4.0, see https://github.com/bpmn-io/bpmn-properties-panel/pull/102\n  return element && (element.isImplicit || element.id === '__implicitroot');\n}\n\nfunction findElement(elements, element) {\n  return find(elements, e => e === element);\n}\n\nfunction elementExists(element, elementRegistry) {\n  return element && elementRegistry.get(element.id);\n}\n\nconst DEFAULT_PRIORITY = 1000;\n/**\n * @typedef { import('@bpmn-io/properties-panel').GroupDefinition } GroupDefinition\n * @typedef { import('@bpmn-io/properties-panel').ListGroupDefinition } ListGroupDefinition\n * @typedef { { getGroups: (ModdleElement) => (Array{GroupDefinition|ListGroupDefinition}) => Array{GroupDefinition|ListGroupDefinition}) } PropertiesProvider\n */\n\nclass BpmnPropertiesPanelRenderer {\n  constructor(config, injector, eventBus) {\n    const {\n      parent,\n      layout: layoutConfig,\n      description: descriptionConfig\n    } = config || {};\n    this._eventBus = eventBus;\n    this._injector = injector;\n    this._layoutConfig = layoutConfig;\n    this._descriptionConfig = descriptionConfig;\n    this._container = domify('<div style=\"height: 100%\" class=\"bio-properties-panel-container\"></div>');\n    var commandStack = injector.get('commandStack', false);\n    commandStack && setupKeyboard(this._container, eventBus, commandStack);\n    eventBus.on('diagram.init', () => {\n      if (parent) {\n        this.attachTo(parent);\n      }\n    });\n    eventBus.on('diagram.destroy', () => {\n      this.detach();\n    });\n    eventBus.on('root.added', event => {\n      const {\n        element\n      } = event;\n\n      this._render(element);\n    });\n  }\n  /**\n   * Attach the properties panel to a parent node.\n   *\n   * @param {HTMLElement} container\n   */\n\n\n  attachTo(container) {\n    if (!container) {\n      throw new Error('container required');\n    } // unwrap jQuery if provided\n\n\n    if (container.get && container.constructor.prototype.jquery) {\n      container = container.get(0);\n    }\n\n    if (typeof container === 'string') {\n      container = query(container);\n    } // (1) detach from old parent\n\n\n    this.detach(); // (2) append to parent container\n\n    container.appendChild(this._container); // (3) notify interested parties\n\n    this._eventBus.fire('propertiesPanel.attach');\n  }\n  /**\n   * Detach the properties panel from its parent node.\n   */\n\n\n  detach() {\n    const parentNode = this._container.parentNode;\n\n    if (parentNode) {\n      parentNode.removeChild(this._container);\n\n      this._eventBus.fire('propertiesPanel.detach');\n    }\n  }\n  /**\n   * Register a new properties provider to the properties panel.\n   *\n   * @param {Number} [priority]\n   * @param {PropertiesProvider} provider\n   */\n\n\n  registerProvider(priority, provider) {\n    if (!provider) {\n      provider = priority;\n      priority = DEFAULT_PRIORITY;\n    }\n\n    if (typeof provider.getGroups !== 'function') {\n      console.error('Properties provider does not implement #getGroups(element) API');\n      return;\n    }\n\n    this._eventBus.on('propertiesPanel.getProviders', priority, function (event) {\n      event.providers.push(provider);\n    });\n\n    this._eventBus.fire('propertiesPanel.providersChanged');\n  }\n\n  _getProviders() {\n    const event = this._eventBus.createEvent({\n      type: 'propertiesPanel.getProviders',\n      providers: []\n    });\n\n    this._eventBus.fire(event);\n\n    return event.providers;\n  }\n\n  _render(element) {\n    const canvas = this._injector.get('canvas');\n\n    if (!element) {\n      element = canvas.getRootElement();\n    }\n\n    if (isImplicitRoot(element)) {\n      return;\n    }\n\n    render(jsx(BpmnPropertiesPanel, {\n      element: element,\n      injector: this._injector,\n      getProviders: this._getProviders.bind(this),\n      layoutConfig: this._layoutConfig,\n      descriptionConfig: this._descriptionConfig\n    }), this._container);\n\n    this._eventBus.fire('propertiesPanel.rendered');\n  }\n\n  _destroy() {\n    if (this._container) {\n      render(null, this._container);\n\n      this._eventBus.fire('propertiesPanel.destroyed');\n    }\n  }\n\n}\nBpmnPropertiesPanelRenderer.$inject = ['config.propertiesPanel', 'injector', 'eventBus']; // helpers ///////////////////////\n\nfunction isImplicitRoot(element) {\n  // Backwards compatibility for diagram-js<7.4.0, see https://github.com/bpmn-io/bpmn-properties-panel/pull/102\n  return element && (element.isImplicit || element.id === '__implicitroot');\n}\n/**\n * Setup keyboard bindings (undo, redo) on the given container.\n *\n * @param {Element} container\n * @param {EventBus} eventBus\n * @param {CommandStack} commandStack\n */\n\n\nfunction setupKeyboard(container, eventBus, commandStack) {\n  function cancel(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  function handleKeys(event) {\n    if (isUndo(event)) {\n      commandStack.undo();\n      return cancel(event);\n    }\n\n    if (isRedo(event)) {\n      commandStack.redo();\n      return cancel(event);\n    }\n  }\n\n  eventBus.on('keyboard.bind', function () {\n    event.bind(container, 'keydown', handleKeys);\n  });\n  eventBus.on('keyboard.unbind', function () {\n    event.unbind(container, 'keydown', handleKeys);\n  });\n}\n\n/**\n * A handler that combines and executes multiple commands.\n *\n * All updates are bundled on the command stack and executed in one step.\n * This also makes it possible to revert the changes in one step.\n *\n * Example use case: remove the camunda:formKey attribute and in addition\n * add all form fields needed for the camunda:formData property.\n */\n\nclass MultiCommandHandler {\n  constructor(commandStack) {\n    this._commandStack = commandStack;\n  }\n\n  preExecute(context) {\n    const commandStack = this._commandStack;\n    forEach(context, function (command) {\n      commandStack.execute(command.cmd, command.context);\n    });\n  }\n\n}\nMultiCommandHandler.$inject = ['commandStack'];\n\nconst HANDLERS = {\n  'properties-panel.multi-command-executor': MultiCommandHandler\n};\n\nfunction CommandInitializer(eventBus, commandStack) {\n  eventBus.on('diagram.init', function () {\n    forEach(HANDLERS, function (handler, id) {\n      commandStack.registerHandler(id, handler);\n    });\n  });\n}\n\nCommandInitializer.$inject = ['eventBus', 'commandStack'];\nvar Commands = {\n  __init__: [CommandInitializer]\n};\n\nvar index$3 = {\n  __depends__: [Commands, DebounceInputModule],\n  __init__: ['propertiesPanel'],\n  propertiesPanel: ['type', BpmnPropertiesPanelRenderer]\n};\n\nfunction ReferenceSelectEntry(props) {\n  const {\n    autoFocusEntry,\n    element,\n    getOptions\n  } = props;\n  const options = getOptions(element);\n  const prevOptions = usePrevious(options); // auto focus specifc other entry when options changed\n\n  useEffect(() => {\n    if (autoFocusEntry && prevOptions && options.length > prevOptions.length) {\n      const entry = query(`[data-entry-id=\"${autoFocusEntry}\"]`);\n      const focusableInput = query('.bio-properties-panel-input', entry);\n\n      if (focusableInput) {\n        focusableInput.select();\n      }\n    }\n  }, [options]);\n  return jsx(SelectEntry, { ...props\n  });\n}\n\nfunction isErrorSupported(element) {\n  return isAny(element, ['bpmn:StartEvent', 'bpmn:BoundaryEvent', 'bpmn:EndEvent']) && !!getErrorEventDefinition(element);\n}\nfunction getErrorEventDefinition(element) {\n  return getEventDefinition(element, 'bpmn:ErrorEventDefinition');\n}\nfunction isTimerSupported(element) {\n  return isAny(element, ['bpmn:StartEvent', 'bpmn:IntermediateCatchEvent', 'bpmn:BoundaryEvent']) && !!getTimerEventDefinition(element);\n}\n/**\n * Get the timer definition type for a given timer event definition.\n *\n * @param {ModdleElement<bpmn:TimerEventDefinition>} timer\n *\n * @return {string|undefined} the timer definition type\n */\n\nfunction getTimerDefinitionType(timer) {\n  if (!timer) {\n    return;\n  }\n\n  const timeDate = timer.get('timeDate');\n\n  if (typeof timeDate !== 'undefined') {\n    return 'timeDate';\n  }\n\n  const timeCycle = timer.get('timeCycle');\n\n  if (typeof timeCycle !== 'undefined') {\n    return 'timeCycle';\n  }\n\n  const timeDuration = timer.get('timeDuration');\n\n  if (typeof timeDuration !== 'undefined') {\n    return 'timeDuration';\n  }\n}\nfunction getTimerEventDefinition(element) {\n  return getEventDefinition(element, 'bpmn:TimerEventDefinition');\n}\nfunction getError(element) {\n  const errorEventDefinition = getErrorEventDefinition(element);\n  return errorEventDefinition && errorEventDefinition.get('errorRef');\n}\nfunction getEventDefinition(element, eventType) {\n  const businessObject = getBusinessObject(element);\n  const eventDefinitions = businessObject.get('eventDefinitions') || [];\n  return find(eventDefinitions, function (definition) {\n    return is(definition, eventType);\n  });\n}\nfunction isMessageSupported(element) {\n  return is(element, 'bpmn:ReceiveTask') || isAny(element, ['bpmn:StartEvent', 'bpmn:EndEvent', 'bpmn:IntermediateThrowEvent', 'bpmn:BoundaryEvent', 'bpmn:IntermediateCatchEvent']) && !!getMessageEventDefinition(element);\n}\nfunction getMessageEventDefinition(element) {\n  if (is(element, 'bpmn:ReceiveTask')) {\n    return getBusinessObject(element);\n  }\n\n  return getEventDefinition(element, 'bpmn:MessageEventDefinition');\n}\nfunction getMessage(element) {\n  const messageEventDefinition = getMessageEventDefinition(element);\n  return messageEventDefinition && messageEventDefinition.get('messageRef');\n}\nfunction getLinkEventDefinition(element) {\n  return getEventDefinition(element, 'bpmn:LinkEventDefinition');\n}\nfunction getSignalEventDefinition(element) {\n  return getEventDefinition(element, 'bpmn:SignalEventDefinition');\n}\nfunction isLinkSupported(element) {\n  return isAny(element, ['bpmn:IntermediateThrowEvent', 'bpmn:IntermediateCatchEvent']) && !!getLinkEventDefinition(element);\n}\nfunction isSignalSupported(element) {\n  return is(element, 'bpmn:Event') && !!getSignalEventDefinition(element);\n}\nfunction getSignal(element) {\n  const signalEventDefinition = getSignalEventDefinition(element);\n  return signalEventDefinition && signalEventDefinition.get('signalRef');\n}\nfunction getEscalationEventDefinition(element) {\n  return getEventDefinition(element, 'bpmn:EscalationEventDefinition');\n}\nfunction isEscalationSupported(element) {\n  return is(element, 'bpmn:Event') && !!getEscalationEventDefinition(element);\n}\nfunction getEscalation(element) {\n  const escalationEventDefinition = getEscalationEventDefinition(element);\n  return escalationEventDefinition && escalationEventDefinition.get('escalationRef');\n}\nfunction isCompensationSupported(element) {\n  return isAny(element, ['bpmn:EndEvent', 'bpmn:IntermediateThrowEvent']) && !!getCompensateEventDefinition(element);\n}\nfunction getCompensateEventDefinition(element) {\n  return getEventDefinition(element, 'bpmn:CompensateEventDefinition');\n}\nfunction getCompensateActivity(element) {\n  const compensateEventDefinition = getCompensateEventDefinition(element);\n  return compensateEventDefinition && compensateEventDefinition.get('activityRef');\n}\n\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction CompensationProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!isCompensationSupported(element)) {\n    return [];\n  }\n\n  return [{\n    id: 'waitForCompletion',\n    component: WaitForCompletion,\n    isEdited: isCheckboxEntryEdited\n  }, {\n    id: 'activityRef',\n    component: ActivityRef,\n    isEdited: isSelectEntryEdited\n  }];\n}\n\nfunction WaitForCompletion(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const compensateEventDefinition = getCompensateEventDefinition(element);\n\n  const getValue = () => {\n    return compensateEventDefinition.get('waitForCompletion');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: compensateEventDefinition,\n      properties: {\n        waitForCompletion: value\n      }\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: 'waitForCompletion',\n    label: translate('Wait for completion'),\n    getValue,\n    setValue\n  });\n}\n\nfunction ActivityRef(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const elementRegistry = useService('elementRegistry');\n  const translate = useService('translate');\n  const compensateEventDefinition = getCompensateEventDefinition(element);\n\n  const getValue = () => {\n    const activityRef = getCompensateActivity(element);\n    return activityRef && activityRef.get('id');\n  };\n\n  const setValue = value => {\n    // update (or remove) activityRef\n    const activityRef = value ? getBusinessObject(elementRegistry.get(value)) : undefined;\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: compensateEventDefinition,\n      properties: {\n        activityRef\n      }\n    });\n  };\n\n  const getOptions = () => {\n    let options = [{\n      value: '',\n      label: translate('<none>')\n    }];\n    const activities = findActivityRefs(element);\n    sortByName$6(activities).forEach(function (activity) {\n      options.push({\n        value: activity.id,\n        label: createOptionLabel(activity)\n      });\n    });\n    return options;\n  };\n\n  return ReferenceSelectEntry({\n    element,\n    id: 'activityRef',\n    label: translate('Activity reference'),\n    getValue,\n    setValue,\n    getOptions\n  });\n} // helper /////////////////////////\n\n\nfunction getFlowElements(element, type) {\n  const {\n    flowElements\n  } = element;\n  return flowElements.filter(function (flowElement) {\n    return is(flowElement, type);\n  });\n}\n\nfunction getContainedActivities(element) {\n  return getFlowElements(element, 'bpmn:Activity');\n}\n\nfunction getContainedBoundaryEvents(element) {\n  return getFlowElements(element, 'bpmn:BoundaryEvent');\n}\n/**\n * Checks whether an Activity is attaching a CompensateEvent of the parent container.\n *\n * @param {ModdleElement} activity\n * @param {Array<ModdleElement>} boundaryEvents\n * @returns {Boolean}\n */\n\n\nfunction hasCompensationEventAttached(activity, boundaryEvents) {\n  const {\n    id: activityId\n  } = activity;\n  return !!find(boundaryEvents, function (boundaryEvent) {\n    const {\n      attachedToRef\n    } = boundaryEvent;\n    const compensateEventDefinition = getCompensateEventDefinition(boundaryEvent);\n    return attachedToRef && compensateEventDefinition && attachedToRef.id === activityId;\n  });\n}\n/**\n * Checks whether an Activity can be compensated. That's the case when it is\n * a) a CallActivity\n * b) a SubProcess, when it is not event based and not a compensation\n * c) any other Activity, when it is attaching a CompensateEvent of the parent container\n *\n * @param {ModdleElement} activity\n * @param {Array<ModdleElement>} boundaryEvents\n * @returns {Boolean}\n */\n\n\nfunction canBeCompensated(activity, boundaryEvents) {\n  return is(activity, 'bpmn:CallActivity') || is(activity, 'bpmn:SubProcess') && !activity.triggeredByEvent && !activity.isForCompensation || hasCompensationEventAttached(activity, boundaryEvents);\n}\n\nfunction getActivitiesForCompensation(element) {\n  const activities = getContainedActivities(element);\n  const boundaryEvents = getContainedBoundaryEvents(element);\n  return activities.filter(function (activity) {\n    return canBeCompensated(activity, boundaryEvents);\n  });\n}\n/**\n * Retrieves all possible activities to reference for a Compensation.\n *\n * @param {djs.model.Base} element\n * @returns {Array<ModdleElement>}\n */\n\n\nfunction findActivityRefs(element) {\n  const businessObject = getBusinessObject(element);\n  let parent = businessObject.$parent; // (1) get all activities in parent container\n\n  let activities = getActivitiesForCompensation(parent); // (2) if throwing compensation event is inside an EventSubProcess,\n  // also get all activities outside of the event sub process\n\n  if (is(parent, 'bpmn:SubProcess') && parent.triggeredByEvent) {\n    parent = parent.$parent;\n\n    if (parent) {\n      activities = [...activities, ...getActivitiesForCompensation(parent)];\n    }\n  }\n\n  return activities;\n}\n/**\n * Retrieves an option label in the form\n * a) with name: \"my Task (id=Task_1)\"\n * b) without name: \"(id=Task_1)\"\n *\n * @param {ModdleElement} activity\n * @returns {String}\n */\n\n\nfunction createOptionLabel(activity) {\n  const {\n    id,\n    name\n  } = activity;\n  return `${name ? name + ' ' : ''}(id=${id})`;\n}\n\nfunction sortByName$6(elements) {\n  return sortBy(elements, e => (e.name || '').toLowerCase());\n}\n\nconst DOCUMENTATION_TEXT_FORMAT = 'text/plain';\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction DocumentationProps(props) {\n  const {\n    element\n  } = props;\n  const entries = [{\n    id: 'documentation',\n    component: ElementDocumentationProperty,\n    isEdited: isTextAreaEntryEdited\n  }];\n\n  if (hasProcessRef$2(element)) {\n    entries.push({\n      id: 'processDocumentation',\n      component: ProcessDocumentationProperty,\n      isEdited: isTextAreaEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction ElementDocumentationProperty(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const getValue = getDocumentation(getBusinessObject(element));\n  const setValue = setDocumentation(element, getBusinessObject(element), bpmnFactory, commandStack);\n  return TextAreaEntry({\n    element,\n    id: 'documentation',\n    label: translate('Element documentation'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ProcessDocumentationProperty(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const processRef = getBusinessObject(element).processRef;\n  const getValue = getDocumentation(processRef);\n  const setValue = setDocumentation(element, processRef, bpmnFactory, commandStack);\n  return TextAreaEntry({\n    element,\n    id: 'processDocumentation',\n    label: translate('Process documentation'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ////////////////////////////\n\n\nfunction hasProcessRef$2(element) {\n  return is(element, 'bpmn:Participant') && element.businessObject.get('processRef');\n}\n\nfunction findDocumentation(docs) {\n  return docs.find(function (d) {\n    return (d.textFormat || DOCUMENTATION_TEXT_FORMAT) === DOCUMENTATION_TEXT_FORMAT;\n  });\n}\n/**\n * Retrieves a documentation element from a given moddle element.\n *\n * @param {ModdleElement} businessObject\n *\n * @returns {ModdleElement} documentation element inside the given moddle element.\n */\n\n\nfunction getDocumentation(businessObject) {\n  return function () {\n    const documentation = findDocumentation(businessObject && businessObject.get('documentation'));\n    return documentation && documentation.text;\n  };\n}\n/**\n * Sets a documentation element for a given moddle element.\n *\n * @param {ModdleElement} businessObject\n */\n\n\nfunction setDocumentation(element, businessObject, bpmnFactory, commandStack) {\n  return function (value) {\n    let documentation = findDocumentation(businessObject && businessObject.get('documentation')); // (1) update or removing existing documentation\n\n    if (documentation) {\n      if (value) {\n        return commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: documentation,\n          properties: {\n            text: value\n          }\n        });\n      } else {\n        return commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            documentation: without(businessObject.get('documentation'), documentation)\n          }\n        });\n      }\n    } // (2) create new documentation entry\n\n\n    if (value) {\n      documentation = bpmnFactory.create('bpmn:Documentation', {\n        text: value\n      });\n      return commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: businessObject,\n        properties: {\n          documentation: [...businessObject.get('documentation'), documentation]\n        }\n      });\n    }\n  };\n}\n\n/**\n * Create a new element and set its parent.\n *\n * @param {String} elementType of the new element\n * @param {Object} properties of the new element in key-value pairs\n * @param {moddle.object} parent of the new element\n * @param {BpmnFactory} factory which creates the new element\n *\n * @returns {djs.model.Base} element which is created\n */\n\nfunction createElement(elementType, properties, parent, factory) {\n  const element = factory.create(elementType, properties);\n\n  if (parent) {\n    element.$parent = parent;\n  }\n\n  return element;\n}\n/**\n * generate a semantic id with given prefix\n */\n\nfunction nextId(prefix) {\n  const ids = new Ids([32, 32, 1]);\n  return ids.nextPrefixed(prefix);\n}\nfunction getRoot(businessObject) {\n  let parent = businessObject;\n\n  while (parent.$parent) {\n    parent = parent.$parent;\n  }\n\n  return parent;\n}\nfunction filterElementsByType(objectList, type) {\n  const list = objectList || [];\n  return list.filter(element => is(element, type));\n}\nfunction findRootElementsByType(businessObject, referencedType) {\n  const root = getRoot(businessObject);\n  return filterElementsByType(root.get('rootElements'), referencedType);\n}\nfunction findRootElementById(businessObject, type, id) {\n  const elements = findRootElementsByType(businessObject, type);\n  return elements.find(element => element.id === id);\n}\n\nconst EMPTY_OPTION$4 = '';\nconst CREATE_NEW_OPTION$4 = 'create-new';\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction ErrorProps$1(props) {\n  const {\n    element\n  } = props;\n\n  if (!isErrorSupported(element)) {\n    return [];\n  }\n\n  const error = getError(element);\n  let entries = [{\n    id: 'errorRef',\n    component: ErrorRef$1,\n    isEdited: isSelectEntryEdited\n  }];\n\n  if (error) {\n    entries = [...entries, {\n      id: 'errorName',\n      component: ErrorName$1,\n      isEdited: isTextFieldEntryEdited\n    }, {\n      id: 'errorCode',\n      component: ErrorCode$1,\n      isEdited: isTextFieldEntryEdited\n    }];\n  }\n\n  return entries;\n}\n\nfunction ErrorRef$1(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const errorEventDefinition = getErrorEventDefinition(element);\n\n  const getValue = () => {\n    const error = getError(element);\n\n    if (error) {\n      return error.get('id');\n    }\n\n    return EMPTY_OPTION$4;\n  };\n\n  const setValue = value => {\n    const root = getRoot(errorEventDefinition);\n    const commands = [];\n    let error; // (1) create new error\n\n    if (value === CREATE_NEW_OPTION$4) {\n      error = createElement('bpmn:Error', {\n        name: nextId('Error_')\n      }, root, bpmnFactory);\n      value = error.get('id');\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: root,\n          properties: {\n            rootElements: [...root.get('rootElements'), error]\n          }\n        }\n      });\n    } // (2) update (or remove) errorRef\n\n\n    error = error || findRootElementById(errorEventDefinition, 'bpmn:Error', value);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: errorEventDefinition,\n        properties: {\n          errorRef: error\n        }\n      }\n    }); // (3) commit all updates\n\n    return commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  const getOptions = () => {\n    let options = [{\n      value: EMPTY_OPTION$4,\n      label: translate('<none>')\n    }, {\n      value: CREATE_NEW_OPTION$4,\n      label: translate('Create new ...')\n    }];\n    const errors = findRootElementsByType(getBusinessObject(element), 'bpmn:Error');\n    sortByName$5(errors).forEach(error => {\n      options.push({\n        value: error.get('id'),\n        label: error.get('name')\n      });\n    });\n    return options;\n  };\n\n  return ReferenceSelectEntry({\n    element,\n    id: 'errorRef',\n    label: translate('Global error reference'),\n    autoFocusEntry: 'errorName',\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction ErrorName$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const error = getError(element);\n\n  const getValue = () => {\n    return error.get('name');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: error,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'errorName',\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ErrorCode$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const error = getError(element);\n\n  const getValue = () => {\n    return error.get('errorCode');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: error,\n      properties: {\n        errorCode: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'errorCode',\n    label: translate('Code'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper /////////////////////////\n\n\nfunction sortByName$5(elements) {\n  return sortBy(elements, e => (e.name || '').toLowerCase());\n}\n\nconst CREATE_NEW_OPTION$3 = 'create-new';\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction EscalationProps$1(props) {\n  const {\n    element\n  } = props;\n\n  if (!isEscalationSupported(element)) {\n    return [];\n  }\n\n  const escalation = getEscalation(element);\n  let entries = [{\n    id: 'escalationRef',\n    component: EscalationRef,\n    isEdited: isSelectEntryEdited\n  }];\n\n  if (escalation) {\n    entries = [...entries, {\n      id: 'escalationName',\n      component: EscalationName,\n      isEdited: isTextFieldEntryEdited\n    }, {\n      id: 'escalationCode',\n      component: EscalationCode,\n      isEdited: isTextFieldEntryEdited\n    }];\n  }\n\n  return entries;\n}\n\nfunction EscalationRef(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const escalationEventDefinition = getEscalationEventDefinition(element);\n\n  const getValue = () => {\n    const escalation = getEscalation(element);\n    return escalation && escalation.get('id');\n  };\n\n  const setValue = value => {\n    const root = getRoot(escalationEventDefinition);\n    const commands = [];\n    let escalation; // (1) create new escalation\n\n    if (value === CREATE_NEW_OPTION$3) {\n      const id = nextId('Escalation_');\n      escalation = createElement('bpmn:Escalation', {\n        id,\n        name: id\n      }, root, bpmnFactory);\n      value = escalation.get('id');\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: root,\n          properties: {\n            rootElements: [...root.get('rootElements'), escalation]\n          }\n        }\n      });\n    } // (2) update (or remove) escalationRef\n\n\n    escalation = escalation || findRootElementById(escalationEventDefinition, 'bpmn:Escalation', value);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: escalationEventDefinition,\n        properties: {\n          escalationRef: escalation\n        }\n      }\n    }); // (3) commit all updates\n\n    return commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  const getOptions = () => {\n    let options = [{\n      value: '',\n      label: translate('<none>')\n    }, {\n      value: CREATE_NEW_OPTION$3,\n      label: translate('Create new ...')\n    }];\n    const escalations = findRootElementsByType(getBusinessObject(element), 'bpmn:Escalation');\n    sortByName$4(escalations).forEach(escalation => {\n      options.push({\n        value: escalation.get('id'),\n        label: escalation.get('name')\n      });\n    });\n    return options;\n  };\n\n  return ReferenceSelectEntry({\n    element,\n    id: 'escalationRef',\n    label: translate('Global escalation reference'),\n    autoFocusEntry: 'escalationName',\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction EscalationName(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const escalation = getEscalation(element);\n\n  const getValue = () => {\n    return escalation.get('name');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: escalation,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'escalationName',\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction EscalationCode(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const escalation = getEscalation(element);\n\n  const getValue = () => {\n    return escalation.get('escalationCode');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: escalation,\n      properties: {\n        escalationCode: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'escalationCode',\n    label: translate('Code'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper /////////////////////////\n\n\nfunction sortByName$4(elements) {\n  return sortBy(elements, e => (e.name || '').toLowerCase());\n}\n\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction ExecutableProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'bpmn:Process') && !hasProcessRef$1(element)) {\n    return [];\n  }\n\n  return [{\n    id: 'isExecutable',\n    component: Executable,\n    isEdited: isCheckboxEntryEdited\n  }];\n}\n\nfunction Executable(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  let getValue, setValue;\n\n  setValue = value => {\n    modeling.updateProperties(element, {\n      isExecutable: value\n    });\n  };\n\n  getValue = element => {\n    return element.businessObject.isExecutable;\n  }; // handle properties on processRef level for participants\n\n\n  if (is(element, 'bpmn:Participant')) {\n    const process = element.businessObject.get('processRef');\n\n    setValue = value => {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: process,\n        properties: {\n          isExecutable: value\n        }\n      });\n    };\n\n    getValue = () => {\n      return process.get('isExecutable');\n    };\n  }\n\n  return CheckboxEntry({\n    element,\n    id: 'isExecutable',\n    label: translate('Executable'),\n    getValue,\n    setValue\n  });\n} // helper /////////////////////\n\n\nfunction hasProcessRef$1(element) {\n  return is(element, 'bpmn:Participant') && element.businessObject.get('processRef');\n}\n\nconst SPACE_REGEX = /\\s/; // for QName validation as per http://www.w3.org/TR/REC-xml/#NT-NameChar\n\nconst QNAME_REGEX = /^([a-z][\\w-.]*:)?[a-z_][\\w-.]*$/i; // for ID validation as per BPMN Schema (QName - Namespace)\n\nconst ID_REGEX = /^[a-z_][\\w-.]*$/i;\n/**\n * checks whether the id value is valid\n *\n * @param {ModdleElement} element\n * @param {String} idValue\n * @param {Function} translate\n *\n * @return {String} error message\n */\n\nfunction isIdValid(element, idValue, translate) {\n  const assigned = element.$model.ids.assigned(idValue);\n  const idAlreadyExists = assigned && assigned !== element;\n\n  if (!idValue) {\n    return translate('ID must not be empty.');\n  }\n\n  if (idAlreadyExists) {\n    return translate('ID must be unique.');\n  }\n\n  return validateId(idValue, translate);\n}\nfunction validateId(idValue, translate) {\n  if (containsSpace(idValue)) {\n    return translate('ID must not contain spaces.');\n  }\n\n  if (!ID_REGEX.test(idValue)) {\n    if (QNAME_REGEX.test(idValue)) {\n      return translate('ID must not contain prefix.');\n    }\n\n    return translate('ID must be a valid QName.');\n  }\n}\nfunction containsSpace(value) {\n  return SPACE_REGEX.test(value);\n}\n\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction IdProps() {\n  return [{\n    id: 'id',\n    component: Id$3,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction Id$3(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const debounce = useService('debounceInput');\n  const translate = useService('translate');\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      id: value\n    });\n  };\n\n  const getValue = element => {\n    return element.businessObject.id;\n  };\n\n  const validate = value => {\n    const businessObject = getBusinessObject(element);\n    return isIdValid(businessObject, value, translate);\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'id',\n    label: translate(is(element, 'bpmn:Participant') ? 'Participant ID' : 'ID'),\n    getValue,\n    setValue,\n    debounce,\n    validate\n  });\n}\n\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction LinkProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!isLinkSupported(element)) {\n    return [];\n  }\n\n  return [{\n    id: 'linkName',\n    component: LinkName,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction LinkName(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const linkEventDefinition = getLinkEventDefinition(element);\n\n  const getValue = () => {\n    return linkEventDefinition.get('name');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: linkEventDefinition,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'linkName',\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nconst EMPTY_OPTION$3 = '';\nconst CREATE_NEW_OPTION$2 = 'create-new';\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction MessageProps$1(props) {\n  const {\n    element\n  } = props;\n\n  if (!isMessageSupported(element)) {\n    return [];\n  }\n\n  const message = getMessage(element);\n  let entries = [{\n    id: 'messageRef',\n    component: MessageRef,\n    isEdited: isSelectEntryEdited\n  }];\n\n  if (message) {\n    entries = [...entries, {\n      id: 'messageName',\n      component: MessageName$1,\n      isEdited: isTextFieldEntryEdited\n    }];\n  }\n\n  return entries;\n}\n\nfunction MessageRef(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const messageEventDefinition = getMessageEventDefinition(element);\n\n  const getValue = () => {\n    const message = getMessage(element);\n\n    if (message) {\n      return message.get('id');\n    }\n\n    return EMPTY_OPTION$3;\n  };\n\n  const setValue = value => {\n    const root = getRoot(messageEventDefinition);\n    const commands = [];\n    let message; // (1) create new message\n\n    if (value === CREATE_NEW_OPTION$2) {\n      const id = nextId('Message_');\n      message = createElement('bpmn:Message', {\n        id,\n        name: id\n      }, root, bpmnFactory);\n      value = message.get('id');\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: root,\n          properties: {\n            rootElements: [...root.get('rootElements'), message]\n          }\n        }\n      });\n    } // (2) update (or remove) messageRef\n\n\n    message = message || findRootElementById(messageEventDefinition, 'bpmn:Message', value);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: messageEventDefinition,\n        properties: {\n          messageRef: message\n        }\n      }\n    }); // (3) commit all updates\n\n    return commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  const getOptions = () => {\n    let options = [{\n      value: EMPTY_OPTION$3,\n      label: translate('<none>')\n    }, {\n      value: CREATE_NEW_OPTION$2,\n      label: translate('Create new ...')\n    }];\n    const messages = findRootElementsByType(getBusinessObject(element), 'bpmn:Message');\n    sortByName$3(messages).forEach(message => {\n      options.push({\n        value: message.get('id'),\n        label: message.get('name')\n      });\n    });\n    return options;\n  };\n\n  return ReferenceSelectEntry({\n    element,\n    id: 'messageRef',\n    label: translate('Global message reference'),\n    autoFocusEntry: 'messageName',\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction MessageName$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const message = getMessage(element);\n\n  const getValue = () => {\n    return message.get('name');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: message,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'messageName',\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper /////////////////////////\n\n\nfunction sortByName$3(elements) {\n  return sortBy(elements, e => (e.name || '').toLowerCase());\n}\n\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction MultiInstanceProps$2(props) {\n  const {\n    element\n  } = props;\n\n  if (!isMultiInstanceSupported$1(element)) {\n    return [];\n  }\n\n  const entries = [{\n    id: 'loopCardinality',\n    component: LoopCardinality,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'completionCondition',\n    component: CompletionCondition$1,\n    isEdited: isTextFieldEntryEdited\n  }];\n  return entries;\n}\n\nfunction LoopCardinality(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const debounce = useService('debounceInput');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getLoopCardinalityValue(element);\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', updateFormalExpression(element, 'loopCardinality', value, bpmnFactory));\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'loopCardinality',\n    label: translate('Loop cardinality'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction CompletionCondition$1(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const debounce = useService('debounceInput');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getCompletionConditionValue(element);\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', updateFormalExpression(element, 'completionCondition', value, bpmnFactory));\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'completionCondition',\n    label: translate('Completion condition'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ////////////////////////////\n// generic ///////////////////////////\n\n/**\n * isMultiInstanceSupported - check whether given element supports MultiInstanceLoopCharacteristics.\n *\n * @param {djs.model.Base} element\n * @return {boolean}\n */\n\n\nfunction isMultiInstanceSupported$1(element) {\n  const loopCharacteristics = getLoopCharacteristics$2(element);\n  return !!loopCharacteristics && is(loopCharacteristics, 'bpmn:MultiInstanceLoopCharacteristics');\n}\n/**\n * getBody - get the body of a given expression.\n *\n * @param {ModdleElement<bpmn:FormalExpression>} expression\n * @return {string} the body (value) of the expression\n */\n\n\nfunction getBody(expression) {\n  return expression && expression.get('body');\n}\n/**\n * getProperty - get a property value of the loop characteristics.\n *\n * @param {djs.model.Base} element\n * @param {string} propertyName\n *\n * @return {any} the property value\n */\n\n\nfunction getProperty$2(element, propertyName) {\n  const loopCharacteristics = getLoopCharacteristics$2(element);\n  return loopCharacteristics && loopCharacteristics.get(propertyName);\n}\n/**\n * getLoopCharacteristics - get loopCharacteristics of a given element.\n *\n * @param {djs.model.Base} element\n * @return {ModdleElement<bpmn:MultiInstanceLoopCharacteristics> | undefined}\n */\n\n\nfunction getLoopCharacteristics$2(element) {\n  const bo = getBusinessObject(element);\n  return bo.loopCharacteristics;\n}\n/**\n * createFormalExpression - creates a 'bpmn:FormalExpression' element.\n *\n * @param {ModdleElement} parent\n * @param {string} body\n * @param {BpmnFactory} bpmnFactory\n *\n * @result {ModdleElement<bpmn:FormalExpression>} a formal expression\n */\n\n\nfunction createFormalExpression$1(parent, body, bpmnFactory) {\n  return createElement('bpmn:FormalExpression', {\n    body: body\n  }, parent, bpmnFactory);\n}\n/**\n * updateFormalExpression - updates a specific formal expression of the loop characteristics.\n *\n * @param {djs.model.Base} element\n * @param {string} propertyName\n * @param {string} newValue\n * @param {BpmnFactory} bpmnFactory\n */\n\n\nfunction updateFormalExpression(element, propertyName, newValue, bpmnFactory) {\n  const loopCharacteristics = getLoopCharacteristics$2(element);\n  const expressionProps = {};\n\n  if (!newValue) {\n    // remove formal expression\n    expressionProps[propertyName] = undefined;\n    return {\n      element,\n      moddleElement: loopCharacteristics,\n      properties: expressionProps\n    };\n  }\n\n  const existingExpression = loopCharacteristics.get(propertyName);\n\n  if (!existingExpression) {\n    // add formal expression\n    expressionProps[propertyName] = createFormalExpression$1(loopCharacteristics, newValue, bpmnFactory);\n    return {\n      element,\n      moddleElement: loopCharacteristics,\n      properties: expressionProps\n    };\n  } // edit existing formal expression\n\n\n  return {\n    element,\n    moddleElement: existingExpression,\n    properties: {\n      body: newValue\n    }\n  };\n} // loopCardinality\n\n/**\n * getLoopCardinality - get the loop cardinality of the loop characteristics.\n *\n * @param {djs.model.Base} element\n *\n * @return {ModdleElement<bpmn:FormalExpression>} an expression representing the loop cardinality\n */\n\n\nfunction getLoopCardinality(element) {\n  return getProperty$2(element, 'loopCardinality');\n}\n/**\n * getLoopCardinalityValue - get the loop cardinality value of the loop characteristics.\n *\n * @param {djs.model.Base} element\n *\n * @return {string} the loop cardinality value\n */\n\n\nfunction getLoopCardinalityValue(element) {\n  const loopCardinality = getLoopCardinality(element);\n  return getBody(loopCardinality);\n} // completionCondition /////////////////////\n\n/**\n * getCompletionCondition - get the completion condition of the loop characteristics.\n *\n * @param {djs.model.Base} element\n *\n * @return {ModdleElement<bpmn:FormalExpression>} an expression representing the completion condition\n */\n\n\nfunction getCompletionCondition$1(element) {\n  return getProperty$2(element, 'completionCondition');\n}\n/**\n * getCompletionConditionValue - get the completion condition value of the loop characteristics.\n *\n * @param {djs.model.Base} element\n *\n * @return {string} the completion condition value\n */\n\n\nfunction getCompletionConditionValue(element) {\n  const completionCondition = getCompletionCondition$1(element);\n  return getBody(completionCondition);\n}\n\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction NameProps(props) {\n  const {\n    element\n  } = props;\n\n  if (isAny(element, ['bpmn:Collaboration', 'bpmn:DataAssociation', 'bpmn:Association'])) {\n    return [];\n  }\n\n  return [{\n    id: 'name',\n    component: Name$3,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction Name$3(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const debounce = useService('debounceInput');\n  const canvas = useService('canvas');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate'); // (1) default: name\n\n  let options = {\n    element,\n    id: 'name',\n    label: translate('Name'),\n    debounce,\n    setValue: value => {\n      modeling.updateProperties(element, {\n        name: value\n      });\n    },\n    getValue: element => {\n      return element.businessObject.name;\n    }\n  }; // (2) text annotations\n\n  if (is(element, 'bpmn:TextAnnotation')) {\n    options = { ...options,\n      setValue: value => {\n        modeling.updateProperties(element, {\n          text: value\n        });\n      },\n      getValue: element => {\n        return element.businessObject.text;\n      }\n    };\n  } // (3) groups\n  else if (is(element, 'bpmn:Group')) {\n    options = { ...options,\n      setValue: value => {\n        const businessObject = getBusinessObject(element),\n              categoryValueRef = businessObject.categoryValueRef;\n\n        if (!categoryValueRef) {\n          initializeCategory(businessObject, canvas.getRootElement(), bpmnFactory);\n        }\n\n        modeling.updateLabel(element, value);\n      },\n      getValue: element => {\n        const businessObject = getBusinessObject(element),\n              categoryValueRef = businessObject.categoryValueRef;\n        return categoryValueRef && categoryValueRef.value;\n      }\n    };\n  } // (4) participants (only update label)\n  else if (is(element, 'bpmn:Participant')) {\n    options.label = translate('Participant Name');\n  }\n\n  return TextFieldEntry(options);\n} // helpers ////////////////////////\n\n\nfunction initializeCategory(businessObject, rootElement, bpmnFactory) {\n  const definitions = getBusinessObject(rootElement).$parent;\n  const categoryValue = createCategoryValue(definitions, bpmnFactory);\n  businessObject.categoryValueRef = categoryValue;\n}\n\nfunction createCategoryValue(definitions, bpmnFactory) {\n  const categoryValue = bpmnFactory.create('bpmn:CategoryValue');\n  const category = bpmnFactory.create('bpmn:Category', {\n    categoryValue: [categoryValue]\n  }); // add to correct place\n\n  add(definitions.get('rootElements'), category);\n  getBusinessObject(category).$parent = definitions;\n  getBusinessObject(categoryValue).$parent = category;\n  return categoryValue;\n}\n\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction ProcessProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!hasProcessRef(element)) {\n    return [];\n  }\n\n  return [{\n    id: 'processId',\n    component: ProcessId,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'processName',\n    component: ProcessName,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction ProcessName(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const process = element.businessObject.get('processRef');\n\n  const getValue = () => {\n    return process.get('name');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: process,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'processName',\n    label: translate('Process name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ProcessId(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const process = element.businessObject.get('processRef');\n\n  const getValue = () => {\n    return process.get('id');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: process,\n      properties: {\n        id: value\n      }\n    });\n  };\n\n  const validate = value => {\n    return isIdValid(process, value, translate);\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'processId',\n    label: translate('Process ID'),\n    getValue,\n    setValue,\n    debounce,\n    validate\n  });\n} // helper ////////////////\n\n\nfunction hasProcessRef(element) {\n  return is(element, 'bpmn:Participant') && element.businessObject.get('processRef');\n}\n\nconst EMPTY_OPTION$2 = '';\nconst CREATE_NEW_OPTION$1 = 'create-new';\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction SignalProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!isSignalSupported(element)) {\n    return [];\n  }\n\n  const signal = getSignal(element);\n  let entries = [{\n    id: 'signalRef',\n    component: SignalRef,\n    isEdited: isSelectEntryEdited\n  }];\n\n  if (signal) {\n    entries = [...entries, {\n      id: 'signalName',\n      component: SignalName,\n      isEdited: isTextFieldEntryEdited\n    }];\n  }\n\n  return entries;\n}\n\nfunction SignalRef(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const signalEventDefinition = getSignalEventDefinition(element);\n\n  const getValue = () => {\n    const signal = getSignal(element);\n\n    if (signal) {\n      return signal.get('id');\n    }\n\n    return EMPTY_OPTION$2;\n  };\n\n  const setValue = value => {\n    const root = getRoot(signalEventDefinition);\n    const commands = [];\n    let signal; // (1) create new signal\n\n    if (value === CREATE_NEW_OPTION$1) {\n      const id = nextId('Signal_');\n      signal = createElement('bpmn:Signal', {\n        id,\n        name: id\n      }, root, bpmnFactory);\n      value = signal.get('id');\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: root,\n          properties: {\n            rootElements: [...root.get('rootElements'), signal]\n          }\n        }\n      });\n    } // (2) update (or remove) signalRef\n\n\n    signal = signal || findRootElementById(signalEventDefinition, 'bpmn:Signal', value);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: signalEventDefinition,\n        properties: {\n          signalRef: signal\n        }\n      }\n    }); // (3) commit all updates\n\n    return commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  const getOptions = () => {\n    let options = [{\n      value: EMPTY_OPTION$2,\n      label: translate('<none>')\n    }, {\n      value: CREATE_NEW_OPTION$1,\n      label: translate('Create new ...')\n    }];\n    const signals = findRootElementsByType(getBusinessObject(element), 'bpmn:Signal');\n    sortByName$2(signals).forEach(signal => {\n      options.push({\n        value: signal.get('id'),\n        label: signal.get('name')\n      });\n    });\n    return options;\n  };\n\n  return ReferenceSelectEntry({\n    element,\n    id: 'signalRef',\n    label: translate('Global signal reference'),\n    autoFocusEntry: 'signalName',\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction SignalName(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const signal = getSignal(element);\n\n  const getValue = () => {\n    return signal.get('name');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: signal,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'signalName',\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper /////////////////////////\n\n\nfunction sortByName$2(elements) {\n  return sortBy(elements, e => (e.name || '').toLowerCase());\n}\n\nfunction TimerProps$1(props) {\n  const {\n    element,\n    listener,\n    idPrefix\n  } = props;\n  let {\n    timerEventDefinition\n  } = props;\n\n  if (!timerEventDefinition) {\n    const businessObject = getBusinessObject(element);\n    timerEventDefinition = getTimerEventDefinition(businessObject);\n  }\n\n  const timerEventDefinitionType = getTimerDefinitionType(timerEventDefinition); // (1) Only show for supported elements\n\n  if (!isTimerSupported(element) && !isTimerSupportedOnListener(listener)) {\n    return [];\n  } // (2) Provide entries, have a value only if selection was made\n\n\n  const entries = [];\n  entries.push({\n    id: getId(idPrefix, 'timerEventDefinitionType'),\n    component: TimerEventDefinitionType$1,\n    isEdited: isSelectEntryEdited,\n    timerEventDefinition,\n    timerEventDefinitionType\n  });\n\n  if (timerEventDefinitionType) {\n    entries.push({\n      id: getId(idPrefix, 'timerEventDefinitionValue'),\n      component: TimerEventDefinitionValue$1,\n      isEdited: isTextFieldEntryEdited,\n      timerEventDefinition,\n      timerEventDefinitionType\n    });\n  }\n\n  return entries;\n}\n/**\n * TimerEventDefinitionType - Generic select entry allowing to select a specific\n * timerEventDefintionType. To be used together with timerEventDefinitionValue.\n *\n * @param  {type} props\n * @return {SelectEntry}\n */\n\nfunction TimerEventDefinitionType$1(props) {\n  const {\n    element,\n    timerEventDefinition,\n    timerEventDefinitionType\n  } = props;\n  const commandStack = useService('commandStack'),\n        bpmnFactory = useService('bpmnFactory'),\n        translate = useService('translate');\n\n  const getValue = () => {\n    return timerEventDefinitionType || '';\n  };\n\n  const setValue = value => {\n    // (1) Check if value is different to current type\n    if (value === timerEventDefinitionType) {\n      return;\n    } // (2) Create empty formalExpression element\n\n\n    const formalExpression = bpmnFactory.create('bpmn:FormalExpression', {\n      body: undefined\n    });\n    formalExpression.$parent = timerEventDefinition; // (3) Set the value for selected timerEventDefinitionType\n\n    const newProps = {\n      timeDuration: undefined,\n      timeDate: undefined,\n      timeCycle: undefined\n    };\n\n    if (value !== '') {\n      newProps[value] = formalExpression;\n    } // (4) Execute businessObject update\n\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: timerEventDefinition,\n      properties: newProps\n    });\n  };\n\n  const getOptions = element => {\n    return [{\n      value: '',\n      label: translate('<none>')\n    }, {\n      value: 'timeDate',\n      label: translate('Date')\n    }, {\n      value: 'timeDuration',\n      label: translate('Duration')\n    }, {\n      value: 'timeCycle',\n      label: translate('Cycle')\n    }];\n  };\n\n  return SelectEntry({\n    element,\n    id: 'timerEventDefinitionType',\n    label: translate('Type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n/**\n * TimerEventDefinitionValue - Generic textField entry allowing to specify the\n * timerEventDefintionValue based on the set timerEventDefintionType. To be used\n * together with timerEventDefinitionType.\n *\n * @param  {type} props\n * @return {TextFieldEntry}\n */\n\n\nfunction TimerEventDefinitionValue$1(props) {\n  const {\n    element,\n    timerEventDefinition,\n    timerEventDefinitionType\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n  const timerEventFormalExpression = timerEventDefinition.get(timerEventDefinitionType);\n\n  const getValue = () => {\n    return timerEventFormalExpression && timerEventFormalExpression.get('body');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: timerEventFormalExpression,\n      properties: {\n        body: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'timerEventDefinitionValue',\n    label: translate('Value'),\n    getValue,\n    setValue,\n    debounce,\n    description: getTimerEventDefinitionValueDescription$1(timerEventDefinitionType, translate)\n  });\n} // helper //////////////////////////\n\n\nfunction getTimerEventDefinitionValueDescription$1(timerDefinitionType, translate) {\n  switch (timerDefinitionType) {\n    case 'timeDate':\n      return jsxs(\"div\", {\n        children: [jsx(\"p\", {\n          children: translate('A specific point in time defined as ISO 8601 combined date and time representation.')\n        }), jsxs(\"ul\", {\n          children: [jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"2019-10-01T12:00:00Z\"\n            }), \" - \", translate('UTC time')]\n          }), jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"2019-10-02T08:09:40+02:00\"\n            }), \" - \", translate('UTC plus 2 hours zone offset')]\n          })]\n        }), jsx(\"a\", {\n          href: \"https://docs.camunda.org/manual/latest/reference/bpmn20/events/timer-events/#time-date\",\n          target: \"_blank\",\n          rel: \"noopener\",\n          children: translate('Documentation: Timer events')\n        })]\n      });\n\n    case 'timeCycle':\n      return jsxs(\"div\", {\n        children: [jsx(\"p\", {\n          children: translate('A cycle defined as ISO 8601 repeating intervals format.')\n        }), jsxs(\"ul\", {\n          children: [jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"R5/PT10S\"\n            }), \" - \", translate('every 10 seconds, up to 5 times')]\n          }), jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"R/P1D\"\n            }), \" - \", translate('every day, infinitely')]\n          })]\n        }), jsx(\"a\", {\n          href: \"https://docs.camunda.org/manual/latest/reference/bpmn20/events/timer-events/#time-cycle\",\n          target: \"_blank\",\n          rel: \"noopener\",\n          children: translate('Documentation: Timer events')\n        })]\n      });\n\n    case 'timeDuration':\n      return jsxs(\"div\", {\n        children: [jsx(\"p\", {\n          children: translate('A time duration defined as ISO 8601 durations format.')\n        }), jsxs(\"ul\", {\n          children: [jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"PT15S\"\n            }), \" - \", translate('15 seconds')]\n          }), jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"PT1H30M\"\n            }), \" - \", translate('1 hour and 30 minutes')]\n          }), jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"P14D\"\n            }), \" - \", translate('14 days')]\n          })]\n        }), jsx(\"a\", {\n          href: \"https://docs.camunda.org/manual/latest/reference/bpmn20/events/timer-events/#time-duration\",\n          target: \"_blank\",\n          rel: \"noopener\",\n          children: translate('Documentation: Timer events')\n        })]\n      });\n  }\n}\n\nfunction isTimerSupportedOnListener(listener) {\n  return listener && is(listener, 'camunda:TaskListener') && getTimerEventDefinition(listener);\n}\n\nfunction getId(idPrefix, id) {\n  return idPrefix ? idPrefix + id : id;\n}\n\nfunction GeneralGroup(element) {\n  const entries = [...NameProps({\n    element\n  }), ...IdProps(), ...ProcessProps({\n    element\n  }), ...ExecutableProps({\n    element\n  })];\n  return {\n    id: 'general',\n    label: 'General',\n    entries,\n    component: Group\n  };\n}\n\nfunction CompensationGroup(element) {\n  const group = {\n    label: 'Compensation',\n    id: 'compensation',\n    component: Group,\n    entries: [...CompensationProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction DocumentationGroup(element) {\n  const entries = [...DocumentationProps({\n    element\n  })];\n  return {\n    id: 'documentation',\n    label: 'Documentation',\n    entries,\n    component: Group\n  };\n}\n\nfunction ErrorGroup(element) {\n  const group = {\n    id: 'error',\n    label: 'Error',\n    component: Group,\n    entries: [...ErrorProps$1({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction MessageGroup(element) {\n  const group = {\n    id: 'message',\n    label: 'Message',\n    component: Group,\n    entries: [...MessageProps$1({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction SignalGroup(element) {\n  const group = {\n    id: 'signal',\n    label: 'Signal',\n    component: Group,\n    entries: [...SignalProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction LinkGroup(element) {\n  const group = {\n    label: 'Link',\n    id: 'link',\n    component: Group,\n    entries: [...LinkProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction EscalationGroup(element) {\n  const group = {\n    id: 'escalation',\n    label: 'Escalation',\n    component: Group,\n    entries: [...EscalationProps$1({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction TimerGroup(element) {\n  const group = {\n    label: 'Timer',\n    id: 'timer',\n    component: Group,\n    entries: [...TimerProps$1({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction MultiInstanceGroup(element) {\n  const group = {\n    label: 'Multi-instance',\n    id: 'multiInstance',\n    component: Group,\n    entries: [...MultiInstanceProps$2({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction getGroups(element) {\n  const groups = [GeneralGroup(element), DocumentationGroup(element), CompensationGroup(element), ErrorGroup(element), LinkGroup(element), MessageGroup(element), MultiInstanceGroup(element), SignalGroup(element), EscalationGroup(element), TimerGroup(element)]; // contract: if a group returns null, it should not be displayed at all\n\n  return groups.filter(group => group !== null);\n}\n\nclass BpmnPropertiesProvider {\n  constructor(propertiesPanel) {\n    propertiesPanel.registerProvider(this);\n  }\n\n  getGroups(element) {\n    return groups => {\n      groups = groups.concat(getGroups(element));\n      return groups;\n    };\n  }\n\n}\nBpmnPropertiesProvider.$inject = ['propertiesPanel'];\n\nvar index$2 = {\n  __init__: ['bpmnPropertiesProvider'],\n  bpmnPropertiesProvider: ['type', BpmnPropertiesProvider]\n};\n\n/**\n * Get extension elements of business object. Optionally filter by type.\n *\n * @param  {ModdleElement} businessObject\n * @param  {String} [type=undefined]\n * @returns {Array<ModdleElement>}\n */\n\nfunction getExtensionElementsList(businessObject, type = undefined) {\n  const extensionElements = businessObject.get('extensionElements');\n\n  if (!extensionElements) {\n    return [];\n  }\n\n  const values = extensionElements.get('values');\n\n  if (!values || !values.length) {\n    return [];\n  }\n\n  if (type) {\n    return values.filter(value => is(value, type));\n  }\n\n  return values;\n}\n/**\n * Add one or more extension elements. Create bpmn:ExtensionElements if it doesn't exist.\n *\n * @param {ModdleElement} element\n * @param {ModdleElement} businessObject\n * @param {ModdleElement|Array<ModdleElement>} extensionElementsToAdd\n * @param {CommandStack} commandStack\n */\n\nfunction addExtensionElements(element, businessObject, extensionElementToAdd, bpmnFactory, commandStack) {\n  const commands = [];\n  let extensionElements = businessObject.get('extensionElements'); // (1) create bpmn:ExtensionElements if it doesn't exist\n\n  if (!extensionElements) {\n    extensionElements = createElement('bpmn:ExtensionElements', {\n      values: []\n    }, businessObject, bpmnFactory);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: businessObject,\n        properties: {\n          extensionElements\n        }\n      }\n    });\n  }\n\n  extensionElementToAdd.$parent = extensionElements; // (2) add extension element to list\n\n  commands.push({\n    cmd: 'element.updateModdleProperties',\n    context: {\n      element,\n      moddleElement: extensionElements,\n      properties: {\n        values: [...extensionElements.get('values'), extensionElementToAdd]\n      }\n    }\n  });\n  commandStack.execute('properties-panel.multi-command-executor', commands);\n}\n/**\n * Remove one or more extension elements. Remove bpmn:ExtensionElements afterwards if it's empty.\n *\n * @param {ModdleElement} element\n * @param {ModdleElement} businessObject\n * @param {ModdleElement|Array<ModdleElement>} extensionElementsToRemove\n * @param {CommandStack} commandStack\n */\n\nfunction removeExtensionElements(element, businessObject, extensionElementsToRemove, commandStack) {\n  if (!isArray(extensionElementsToRemove)) {\n    extensionElementsToRemove = [extensionElementsToRemove];\n  }\n\n  const extensionElements = businessObject.get('extensionElements'),\n        values = extensionElements.get('values').filter(value => !extensionElementsToRemove.includes(value));\n  commandStack.execute('element.updateModdleProperties', {\n    element,\n    moddleElement: extensionElements,\n    properties: {\n      values\n    }\n  });\n}\n\nfunction withVariableContext(Component) {\n  return props => {\n    const {\n      bpmnElement,\n      element\n    } = props;\n    const bo = (bpmnElement || element).businessObject;\n    const context = useMemo(() => {\n      const variables = getVariablesForElement(bo);\n      return variables.map(variable => {\n        return {\n          name: variable.name,\n          info: 'Written in ' + variable.origin.map(origin => origin.name || origin.id).join(', ')\n        };\n      });\n    }, [bo]);\n    return jsx(Component, { ...props,\n      variables: context\n    });\n  };\n}\n\nfunction AssignmentDefinitionProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'bpmn:UserTask')) {\n    return [];\n  }\n\n  return [{\n    id: 'assignmentDefinitionAssignee',\n    component: Assignee$1,\n    isEdited: isFeelEntryEdited\n  }, {\n    id: 'assignmentDefinitionCandidateGroups',\n    component: CandidateGroups$1,\n    isEdited: isFeelEntryEdited\n  }];\n}\n\nfunction Assignee$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return (getAssignmentDefinition(element) || {}).assignee;\n  };\n\n  const setValue = value => {\n    const commands = [];\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure AssignmentDefinition\n\n\n    let assignmentDefinition = getAssignmentDefinition(element);\n\n    if (!assignmentDefinition) {\n      assignmentDefinition = createElement('zeebe:AssignmentDefinition', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), assignmentDefinition]\n          }\n        }\n      });\n    } // (3) update assignee definition type\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: assignmentDefinition,\n        properties: {\n          assignee: value\n        }\n      }\n    }); // (4) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id: 'assignmentDefinitionAssignee',\n    label: translate('Assignee'),\n    feel: 'optional',\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction CandidateGroups$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return (getAssignmentDefinition(element) || {}).candidateGroups;\n  };\n\n  const setValue = value => {\n    let commands = [];\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure assignmentDefinition\n\n\n    let assignmentDefinition = getAssignmentDefinition(element);\n\n    if (!assignmentDefinition) {\n      assignmentDefinition = createElement('zeebe:AssignmentDefinition', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), assignmentDefinition]\n          }\n        }\n      });\n    } // (3) update candidateGroups\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: assignmentDefinition,\n        properties: {\n          candidateGroups: value\n        }\n      }\n    });\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id: 'assignmentDefinitionCandidateGroups',\n    label: translate('Candidate groups'),\n    feel: 'optional',\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ///////////////////////\n\n\nfunction getAssignmentDefinition(element) {\n  const businessObject = getBusinessObject(element);\n  return getExtensionElementsList(businessObject, 'zeebe:AssignmentDefinition')[0];\n}\n\nconst DMN_IMPLEMENTATION_OPTION = 'dmn',\n      JOB_WORKER_IMPLEMENTATION_OPTION = 'jobWorker',\n      DEFAULT_IMPLEMENTATION_OPTION = '';\nfunction BusinessRuleImplementationProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'bpmn:BusinessRuleTask')) {\n    return [];\n  }\n\n  return [{\n    id: 'businessRuleImplementation',\n    component: BusinessRuleImplementation,\n    isEdited: () => isBusinessRuleImplementationEdited(element)\n  }];\n}\n\nfunction BusinessRuleImplementation(props) {\n  const {\n    element,\n    id\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    if (getCalledDecision$1(element)) {\n      return DMN_IMPLEMENTATION_OPTION;\n    }\n\n    if (getTaskDefinition$2(element)) {\n      return JOB_WORKER_IMPLEMENTATION_OPTION;\n    }\n\n    return DEFAULT_IMPLEMENTATION_OPTION;\n  };\n  /**\n   * Set value by either creating a zeebe:calledDecision or a zeebe:taskDefintion\n   * extension element. Note that they must not exist both at the same time, however\n   * this will be ensured by a bpmn-js behavior (and not by the propPanel).\n   */\n\n\n  const setValue = value => {\n    let extensionElement, extensionElementType;\n\n    if (value === DMN_IMPLEMENTATION_OPTION) {\n      extensionElement = getCalledDecision$1(element);\n      extensionElementType = 'zeebe:CalledDecision';\n    } else if (value === JOB_WORKER_IMPLEMENTATION_OPTION) {\n      extensionElement = getTaskDefinition$2(element);\n      extensionElementType = 'zeebe:TaskDefinition';\n    } else {\n      resetElement(element, commandStack);\n    }\n\n    if (!extensionElement && extensionElementType) {\n      extensionElement = createElement(extensionElementType, {}, null, bpmnFactory);\n      updateExtensionElements(element, extensionElement, bpmnFactory, commandStack);\n    }\n  };\n\n  const getOptions = () => {\n    const options = [{\n      value: DEFAULT_IMPLEMENTATION_OPTION,\n      label: translate('<none>')\n    }, {\n      value: DMN_IMPLEMENTATION_OPTION,\n      label: translate('DMN decision')\n    }, {\n      value: JOB_WORKER_IMPLEMENTATION_OPTION,\n      label: translate('Job worker')\n    }];\n    return options;\n  };\n\n  return SelectEntry({\n    element,\n    id,\n    label: translate('Implementation'),\n    getValue,\n    setValue,\n    getOptions\n  });\n} // helper ///////////////////////\n\n\nfunction getTaskDefinition$2(element) {\n  const businessObject = getBusinessObject(element);\n  return getExtensionElementsList(businessObject, 'zeebe:TaskDefinition')[0];\n}\n\nfunction getCalledDecision$1(element) {\n  const businessObject = getBusinessObject(element);\n  return getExtensionElementsList(businessObject, 'zeebe:CalledDecision')[0];\n}\n\nfunction isBusinessRuleImplementationEdited(element) {\n  return getTaskDefinition$2(element);\n}\n\nfunction resetElement(element, commandStack) {\n  const businessObject = getBusinessObject(element);\n  const taskDefintion = getTaskDefinition$2(element);\n  const calledDecision = getCalledDecision$1(element);\n\n  if (taskDefintion) {\n    removeExtensionElements(element, businessObject, taskDefintion, commandStack);\n  }\n\n  if (calledDecision) {\n    removeExtensionElements(element, businessObject, calledDecision, commandStack);\n  }\n}\n\nfunction updateExtensionElements(element, extensionElementToAdd, bpmnFactory, commandStack) {\n  const businessObject = getBusinessObject(element);\n  const commands = [];\n  let extensionElements = businessObject.get('extensionElements');\n  let extensionElementValues; // (1) create bpmn:ExtensionElements if it doesn't exist\n\n  if (!extensionElements) {\n    extensionElements = createElement('bpmn:ExtensionElements', {\n      values: []\n    }, businessObject, bpmnFactory);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: businessObject,\n        properties: {\n          extensionElements\n        }\n      }\n    });\n  }\n\n  extensionElementToAdd.$parent = extensionElements; // (2) remove old exension element from extensionElements\n\n  if (is(extensionElementToAdd, 'zeebe:TaskDefinition')) {\n    extensionElementValues = without(extensionElements.get('values'), getCalledDecision$1(element));\n  } else if (is(extensionElementToAdd, 'zeebe:CalledDecision')) {\n    extensionElementValues = without(extensionElements.get('values'), getTaskDefinition$2(element));\n  } // (3) add extension element to list\n\n\n  commands.push({\n    cmd: 'element.updateModdleProperties',\n    context: {\n      element,\n      moddleElement: extensionElements,\n      properties: {\n        values: [...extensionElementValues, extensionElementToAdd]\n      }\n    }\n  });\n  commandStack.execute('properties-panel.multi-command-executor', commands);\n}\n\nfunction CalledDecisionProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'bpmn:BusinessRuleTask') || !getCalledDecision(element)) {\n    return [];\n  }\n\n  return [{\n    id: 'decisionId',\n    component: DecisionID,\n    isEdited: isFeelEntryEdited\n  }, {\n    id: 'resultVariable',\n    component: ResultVariable$3,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction DecisionID(props) {\n  const {\n    element,\n    id\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return (getCalledDecision(element) || {}).decisionId;\n  };\n\n  const setValue = value => {\n    const commands = [];\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure calledDecision\n\n\n    let calledDecision = getCalledDecision(element);\n\n    if (!calledDecision) {\n      calledDecision = createElement('zeebe:CalledDecision', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), calledDecision]\n          }\n        }\n      });\n    } // (3) update caledDecision.decisionId\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: calledDecision,\n        properties: {\n          decisionId: value\n        }\n      }\n    }); // (4) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id,\n    label: translate('Decision ID'),\n    feel: 'optional',\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ResultVariable$3(props) {\n  const {\n    element,\n    id\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return (getCalledDecision(element) || {}).resultVariable;\n  };\n\n  const setValue = value => {\n    const commands = [];\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure calledDecision\n\n\n    let calledDecision = getCalledDecision(element);\n\n    if (!calledDecision) {\n      calledDecision = createElement('zeebe:CalledDecision', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), calledDecision]\n          }\n        }\n      });\n    } // (3) update caledDecision.decisionId\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: calledDecision,\n        properties: {\n          resultVariable: value\n        }\n      }\n    }); // (4) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return TextFieldEntry({\n    element,\n    id,\n    label: translate('Result variable'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ///////////////////////\n\n\nfunction getCalledDecision(element) {\n  const businessObject = getBusinessObject(element);\n  return getExtensionElementsList(businessObject, 'zeebe:CalledDecision')[0];\n}\n\nfunction ConditionProps$1(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'bpmn:SequenceFlow')) {\n    return [];\n  }\n\n  const conditionProps = [];\n\n  if (isConditionalSource$1(element.source)) {\n    conditionProps.push({\n      id: 'conditionExpression',\n      component: ConditionExpression$1,\n      isEdited: isFeelEntryEdited\n    });\n  }\n\n  return conditionProps;\n}\n\nfunction ConditionExpression$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        bpmnFactory = useService('bpmnFactory'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getConditionExpression$1(element);\n  };\n\n  const setValue = value => {\n    const commands = [];\n    const businessObject = getBusinessObject(element); // (1) If we set value to a default flow, make it a non-default flow\n    // by updating the element source\n\n    const source = element.source;\n\n    if (source.businessObject.default === businessObject) {\n      commands.push({\n        cmd: 'element.updateProperties',\n        context: {\n          element: source,\n          properties: {\n            'default': undefined\n          }\n        }\n      });\n    } // (2) Create and set formalExpression element containing the conditionExpression,\n    // unless the provided value is empty\n\n\n    const formalExpressionElement = value && value != '' ? createElement('bpmn:FormalExpression', {\n      body: value\n    }, businessObject, bpmnFactory) : undefined;\n    commands.push({\n      cmd: 'element.updateProperties',\n      context: {\n        element: element,\n        properties: {\n          conditionExpression: formalExpressionElement\n        }\n      }\n    }); // (3) Execute the commands\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id: 'conditionExpression',\n    label: translate('Condition expression'),\n    feel: 'required',\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper //////////////////////////\n\n\nconst CONDITIONAL_SOURCES$1 = ['bpmn:Activity', 'bpmn:ExclusiveGateway'];\n\nfunction isConditionalSource$1(element) {\n  return isAny(element, CONDITIONAL_SOURCES$1);\n}\n/**\n * getConditionExpression - get the body value of a condition expression for a given element\n *\n * @param  {ModdleElement} element\n *\n * @return {string|undefined}\n */\n\n\nfunction getConditionExpression$1(element) {\n  const businessObject = getBusinessObject(element);\n  const conditionExpression = businessObject.conditionExpression;\n\n  if (conditionExpression) {\n    return conditionExpression.get('body');\n  }\n}\n\nfunction FormProps$1(props) {\n  const {\n    element,\n    injector\n  } = props;\n  const formHelper = injector.invoke(FormHelper);\n\n  if (!is(element, 'bpmn:UserTask')) {\n    return [];\n  }\n\n  const entries = [{\n    id: 'formType',\n    component: FormType$1,\n    isEdited: isSelectEntryEdited\n  }];\n\n  if (isCamundaForm(element, formHelper)) {\n    entries.push({\n      id: 'formConfiguration',\n      component: FormConfiguration,\n      isEdited: isTextAreaEntryEdited\n    });\n  } else if (isCustomKey(element, formHelper)) {\n    entries.push({\n      id: 'customFormKey',\n      component: CustomFormKey,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction FormType$1(props) {\n  const {\n    element\n  } = props;\n  const translate = useService('translate');\n  const injector = useService('injector');\n  const formHelper = injector.invoke(FormHelper);\n\n  const getValue = () => {\n    const formDefinition = formHelper.getFormDefinition(element);\n    const userTaskForm = formHelper.getUserTaskForm(element);\n\n    if (formDefinition) {\n      if (userTaskForm) {\n        return 'camundaForm';\n      }\n\n      return 'formKey';\n    }\n\n    return '';\n  };\n\n  const setValue = value => {\n    formHelper.resetForm(element);\n\n    if (value === 'camundaForm') {\n      formHelper.setUserTaskForm(element, '');\n    } else if (value === 'formKey') {\n      formHelper.setFormDefinition(element, '');\n    }\n  };\n\n  const getOptions = () => {\n    return [{\n      value: '',\n      label: translate('<none>')\n    }, {\n      value: 'camundaForm',\n      label: translate('Camunda forms')\n    }, {\n      value: 'formKey',\n      label: translate('Custom form key')\n    }];\n  };\n\n  return SelectEntry({\n    element,\n    id: 'formType',\n    label: translate('Type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction FormConfiguration(props) {\n  const {\n    element\n  } = props;\n  const injector = useService('injector');\n  const debounce = useService('debounceInput');\n  const translate = useService('translate');\n  const formHelper = injector.invoke(FormHelper);\n\n  const getValue = () => {\n    const userTaskForm = formHelper.getUserTaskForm(element);\n    return userTaskForm.get('body');\n  };\n\n  const setValue = value => {\n    formHelper.setUserTaskForm(element, value);\n  };\n\n  return TextAreaEntry({\n    element,\n    id: 'formConfiguration',\n    label: translate('Form JSON configuration'),\n    rows: 4,\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction CustomFormKey(props) {\n  const {\n    element\n  } = props;\n  const injector = useService('injector');\n  const debounce = useService('debounceInput');\n  const translate = useService('translate');\n  const formHelper = injector.invoke(FormHelper);\n\n  const getValue = () => {\n    const formDefinition = formHelper.getFormDefinition(element);\n    return formDefinition.get('formKey');\n  };\n\n  const setValue = value => {\n    formHelper.setFormDefinition(element, value);\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'customFormKey',\n    label: translate('Form key'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nconst USER_TASK_FORM_PREFIX = 'userTaskForm_';\n\nfunction FormHelper(bpmnFactory, commandStack) {\n  function getFormDefinition(element) {\n    const businessObject = getBusinessObject(element);\n    const formDefinitions = getExtensionElementsList(businessObject, 'zeebe:FormDefinition');\n    return formDefinitions[0];\n  }\n\n  function getUserTaskForm(element, parent) {\n    const rootElement = parent || getRootElement(element); // (1) get form definition from user task\n\n    const formDefinition = getFormDefinition(element);\n\n    if (isUndefined(formDefinition)) {\n      return;\n    }\n\n    const formKey = formDefinition.get('formKey'); // (2) retrieve user task form via form key\n\n    const userTaskForm = findUserTaskForm(formKey, rootElement);\n    return userTaskForm;\n  }\n\n  function ensureTaskForm(element, values) {\n    let commands = [];\n    const rootElement = getRootElement(element); // (1) ensure root element extension elements\n\n    let rootExtensionElements = rootElement.get('extensionElements');\n\n    if (!rootExtensionElements) {\n      rootExtensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, rootElement, bpmnFactory);\n      commands.push(UpdateModdlePropertiesCmd(element, rootElement, {\n        extensionElements: rootExtensionElements\n      }));\n    } // (2) ensure user task form\n\n\n    let userTaskForm = getUserTaskForm(element); // (2.1) create user task form if doesn't exist\n\n    if (!userTaskForm) {\n      userTaskForm = createUserTaskForm(values, rootExtensionElements, bpmnFactory);\n      commands.push(UpdateModdlePropertiesCmd(element, rootExtensionElements, {\n        values: [...rootExtensionElements.get('values'), userTaskForm]\n      }));\n    }\n\n    commands.push(UpdateModdlePropertiesCmd(element, userTaskForm, values));\n    return commands;\n  }\n\n  function ensureFormDefinition(element, customFormKey) {\n    const businessObject = getBusinessObject(element);\n    let commands = []; // (1) ensure extension elements\n\n    let extensionElements = businessObject.get('extensionElements');\n\n    if (isUndefined(extensionElements)) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push(UpdateModdlePropertiesCmd(element, businessObject, {\n        extensionElements: extensionElements\n      }));\n    } // (2) ensure form definition\n\n\n    let formDefinition = getFormDefinition(element); // (2.1) create if doesn't exist\n\n    if (!formDefinition) {\n      let formKey = customFormKey;\n\n      if (isUndefined(formKey)) {\n        const formId = createFormId();\n        formKey = createFormKey(formId);\n      }\n\n      formDefinition = createFormDefinition({\n        formKey\n      }, extensionElements, bpmnFactory);\n      commands.push(UpdateModdlePropertiesCmd(element, extensionElements, {\n        values: [...extensionElements.get('values'), formDefinition]\n      }));\n    } // (2.2) update existing form definition with custom key\n    else if (customFormKey) {\n      commands.push(UpdateModdlePropertiesCmd(element, formDefinition, {\n        formKey: customFormKey\n      }));\n    }\n\n    return {\n      formId: resolveFormId(formDefinition.get('formKey')),\n      commands\n    };\n  }\n\n  function setFormDefinition(element, customFormKey) {\n    const {\n      commands\n    } = ensureFormDefinition(element, customFormKey);\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  }\n\n  function setUserTaskForm(element, value) {\n    const {\n      formId,\n      commands: formDefCommands\n    } = ensureFormDefinition(element);\n    const userTaskCommands = ensureTaskForm(element, {\n      id: formId,\n      body: value\n    });\n    const commands = formDefCommands.concat(userTaskCommands);\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  }\n\n  function unsetFormDefinition(element) {\n    const businessObject = getBusinessObject(element),\n          extensionElements = businessObject.get('extensionElements');\n    let commands = [];\n    const formDefinition = getFormDefinition(element);\n\n    if (!formDefinition) {\n      return commands;\n    }\n\n    let values = without(extensionElements.get('values'), formDefinition);\n    commands.push(UpdateModdlePropertiesCmd(element, extensionElements, {\n      values\n    }));\n    return commands;\n  }\n\n  function resetForm(element) {\n    const rootElement = getRootElement(element),\n          rootExtensionElements = rootElement.get('extensionElements'); // (1) remove form definition\n\n    const commands = unsetFormDefinition(element); // (2) remove referenced user task form\n\n    const userTaskForm = getUserTaskForm(element);\n\n    if (!userTaskForm) {\n      commandStack.execute('properties-panel.multi-command-executor', commands);\n      return;\n    }\n\n    const values = without(rootExtensionElements.get('values'), userTaskForm);\n    commands.push(UpdateModdlePropertiesCmd(element, rootExtensionElements, {\n      values\n    }));\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  }\n\n  function createFormKey(formId) {\n    return 'camunda-forms:bpmn:' + formId;\n  }\n\n  function createFormId() {\n    return nextId(USER_TASK_FORM_PREFIX);\n  }\n\n  function resolveFormId(formKey) {\n    return formKey.split(':')[2];\n  }\n\n  function createFormDefinition(properties, extensionElements, bpmnFactory) {\n    return createElement('zeebe:FormDefinition', properties, extensionElements, bpmnFactory);\n  }\n\n  function createUserTaskForm(properties, extensionElements, bpmnFactory) {\n    return createElement('zeebe:UserTaskForm', properties, extensionElements, bpmnFactory);\n  }\n\n  function findUserTaskForm(formKey, rootElement) {\n    const forms = getExtensionElementsList(rootElement, 'zeebe:UserTaskForm');\n    return find(forms, function (userTaskForm) {\n      return createFormKey(userTaskForm.id) === formKey;\n    });\n  }\n\n  function getRootElement(element) {\n    const businessObject = getBusinessObject(element);\n    let parent = businessObject;\n\n    while (parent.$parent && !is(parent, 'bpmn:Process')) {\n      parent = parent.$parent;\n    }\n\n    return parent;\n  }\n\n  return {\n    getFormDefinition,\n    getUserTaskForm,\n    setFormDefinition,\n    setUserTaskForm,\n    resetForm\n  };\n}\n\nFormHelper.$inject = ['bpmnFactory', 'commandStack']; // helpers /////////////\n\nfunction UpdateModdlePropertiesCmd(element, businessObject, newProperties) {\n  return {\n    cmd: 'element.updateModdleProperties',\n    context: {\n      element,\n      moddleElement: businessObject,\n      properties: newProperties\n    }\n  };\n}\n\nfunction isCamundaForm(element, formHelper) {\n  const formDefinition = formHelper.getFormDefinition(element);\n  const userTaskForm = formHelper.getUserTaskForm(element);\n  return formDefinition && userTaskForm;\n}\n\nfunction isCustomKey(element, formHelper) {\n  const formDefinition = formHelper.getFormDefinition(element);\n  const userTaskForm = formHelper.getUserTaskForm(element);\n  return formDefinition && !userTaskForm;\n}\n\nfunction Header(props) {\n  const {\n    idPrefix,\n    header\n  } = props;\n  const entries = [{\n    id: idPrefix + '-key',\n    component: KeyProperty,\n    header,\n    idPrefix\n  }, {\n    id: idPrefix + '-value',\n    component: ValueProperty$2,\n    header,\n    idPrefix\n  }];\n  return entries;\n}\n\nfunction KeyProperty(props) {\n  const {\n    idPrefix,\n    element,\n    header\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: header,\n      properties: {\n        key: value\n      }\n    });\n  };\n\n  const getValue = header => {\n    return header.key;\n  };\n\n  return TextFieldEntry({\n    element: header,\n    id: idPrefix + '-key',\n    label: translate('Key'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ValueProperty$2(props) {\n  const {\n    idPrefix,\n    element,\n    header\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: header,\n      properties: {\n        value\n      }\n    });\n  };\n\n  const getValue = header => {\n    return header.value;\n  };\n\n  return TextFieldEntry({\n    element: header,\n    id: idPrefix + '-value',\n    label: translate('Value'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction isZeebeServiceTask(element) {\n  if (!is(element, 'zeebe:ZeebeServiceTask')) return false;\n\n  if (is(element, 'bpmn:EndEvent') || is(element, 'bpmn:IntermediateThrowEvent')) {\n    return !!getMessageEventDefinition(element);\n  } // A BusinessRuleTask is per default not a ServiceTask, only if it has a TaskDefinition\n  // (ie. if the implementation is set to ==JobWorker)\n\n\n  if (is(element, 'bpmn:BusinessRuleTask') && !getTaskDefinition$1(element)) {\n    return false;\n  }\n\n  return true;\n}\nfunction isMessageEndEvent(element) {\n  return is(element, 'bpmn:EndEvent') && !!getMessageEventDefinition(element);\n}\nfunction isMessageThrowEvent(element) {\n  return is(element, 'bpmn:IntermediateThrowEvent') && !!getMessageEventDefinition(element);\n} // helper ////////////////\n\nfunction getTaskDefinition$1(element) {\n  const businessObject = getBusinessObject(element);\n  return getExtensionElementsList(businessObject, 'zeebe:TaskDefinition')[0];\n}\n\nfunction areHeadersSupported(element) {\n  return is(element, 'bpmn:UserTask') || isZeebeServiceTask(element);\n}\n/**\n * Get first zeebe:TaskHeaders element for a specific element.\n *\n * @param  {ModdleElement} element\n *\n * @return {ModdleElement} a zeebe:TaskHeader element\n */\n\nfunction getTaskHeaders(element) {\n  const businessObject = getBusinessObject(element);\n  return getExtensionElementsList(businessObject, 'zeebe:TaskHeaders')[0];\n}\n/**\n * Retrieve all zeebe:Header elements for a specific element.\n *\n * @param  {ModdleElement} element\n *\n * @return {Array<ModdleElement>} a list of zeebe:Header elements\n */\n\nfunction getHeaders(element) {\n  const taskHeaders = getTaskHeaders(element);\n  return taskHeaders ? taskHeaders.get('values') : [];\n}\n\nfunction HeaderProps({\n  element,\n  injector\n}) {\n  if (!areHeadersSupported(element)) {\n    return null;\n  }\n\n  const headers = getHeaders(element) || [];\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = headers.map((header, index) => {\n    const id = element.id + '-header-' + index;\n    return {\n      id,\n      label: header.get('key') || '',\n      entries: Header({\n        idPrefix: id,\n        element,\n        header\n      }),\n      autoFocusEntry: id + '-key',\n      remove: removeFactory$c({\n        commandStack,\n        element,\n        header\n      })\n    };\n  });\n  return {\n    items,\n    add: addFactory$9({\n      bpmnFactory,\n      commandStack,\n      element\n    })\n  };\n}\n\nfunction removeFactory$c({\n  commandStack,\n  element,\n  header\n}) {\n  return function (event) {\n    event.stopPropagation();\n    let commands = [];\n    const taskHeaders = getTaskHeaders(element);\n\n    if (!taskHeaders) {\n      return;\n    }\n\n    const newTaskHeaders = without(taskHeaders.get('values'), header);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: taskHeaders,\n        properties: {\n          values: newTaskHeaders\n        }\n      }\n    }); // remove zeebe:TaskHeaders if there are no headers anymore\n\n    if (!newTaskHeaders.length) {\n      const businessObject = getBusinessObject(element),\n            extensionElements = businessObject.get('extensionElements');\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: without(extensionElements.get('values'), taskHeaders)\n          }\n        }\n      });\n    }\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n}\n\nfunction addFactory$9({\n  bpmnFactory,\n  commandStack,\n  element\n}) {\n  return function (event) {\n    event.stopPropagation();\n    let commands = [];\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure zeebe:TaskHeaders\n\n\n    let taskHeaders = getTaskHeaders(element);\n\n    if (!taskHeaders) {\n      const parent = extensionElements;\n      taskHeaders = createElement('zeebe:TaskHeaders', {\n        values: []\n      }, parent, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), taskHeaders]\n          }\n        }\n      });\n    } // (3) create header\n\n\n    const header = createElement('zeebe:Header', {}, taskHeaders, bpmnFactory); // (4) add header to list\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: taskHeaders,\n        properties: {\n          values: [...taskHeaders.get('values'), header]\n        }\n      }\n    });\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n}\n\nfunction InputOutputParameter$1(props) {\n  const {\n    idPrefix,\n    parameter\n  } = props;\n  const entries = [{\n    id: idPrefix + '-target',\n    component: TargetProperty,\n    idPrefix,\n    parameter\n  }, {\n    id: idPrefix + '-source',\n    component: SourceProperty,\n    idPrefix,\n    parameter\n  }];\n  return entries;\n}\n\nfunction TargetProperty(props) {\n  const {\n    idPrefix,\n    element,\n    parameter\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: parameter,\n      properties: {\n        target: value\n      }\n    });\n  };\n\n  const getValue = parameter => {\n    return parameter.target;\n  };\n\n  return TextFieldEntry({\n    element: parameter,\n    id: idPrefix + '-target',\n    label: translate(is(parameter, 'zeebe:Input') ? 'Local variable name' : 'Process variable name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction SourceProperty(props) {\n  const {\n    idPrefix,\n    element,\n    parameter\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: parameter,\n      properties: {\n        source: value\n      }\n    });\n  };\n\n  const getValue = parameter => {\n    return parameter.source;\n  };\n\n  return withVariableContext(FeelEntry)({\n    bpmnElement: element,\n    element: parameter,\n    id: idPrefix + '-source',\n    label: translate('Variable assignment value'),\n    feel: 'required',\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction getElements$1(bo, type, prop) {\n  const elems = getExtensionElementsList(bo, type);\n  return !prop ? elems : (elems[0] || {})[prop] || [];\n}\n\nfunction getParameters$1(element, prop) {\n  const ioMapping = getIoMapping(element);\n  return ioMapping && ioMapping.get(prop) || [];\n}\n/**\n * Get a ioMapping from the business object\n *\n * @param {djs.model.Base} element\n *\n * @return {ModdleElement} the ioMapping object\n */\n\n\nfunction getIoMapping(element) {\n  const bo = getBusinessObject(element);\n  return (getElements$1(bo, 'zeebe:IoMapping') || [])[0];\n}\n/**\n * Return all input parameters existing in the business object, and\n * an empty array if none exist.\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array} a list of input parameter objects\n */\n\nfunction getInputParameters$1(element) {\n  return getParameters$1.apply(this, [element, 'inputParameters']);\n}\n/**\n * Return all output parameters existing in the business object, and\n * an empty array if none exist.\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array} a list of output parameter objects\n */\n\nfunction getOutputParameters$1(element) {\n  return getParameters$1.apply(this, [element, 'outputParameters']);\n}\nfunction areInputParametersSupported$1(element) {\n  return isAny(element, ['bpmn:UserTask', 'bpmn:SubProcess', 'bpmn:CallActivity', 'bpmn:BusinessRuleTask']) || isZeebeServiceTask(element);\n}\nfunction areOutputParametersSupported$1(element) {\n  return isAny(element, ['zeebe:ZeebeServiceTask', 'bpmn:UserTask', 'bpmn:SubProcess', 'bpmn:ReceiveTask', 'bpmn:CallActivity', 'bpmn:Event', 'bpmn:BusinessRuleTask']);\n}\nfunction createIOMapping(properties, parent, bpmnFactory) {\n  return createElement('zeebe:IoMapping', properties, parent, bpmnFactory);\n}\n\nfunction InputProps$1({\n  element,\n  injector\n}) {\n  if (!areInputParametersSupported$1(element)) {\n    return null;\n  }\n\n  const inputParameters = getInputParameters$1(element) || [];\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = inputParameters.map((parameter, index) => {\n    const id = element.id + '-input-' + index;\n    return {\n      id,\n      label: parameter.get('target') || '',\n      entries: InputOutputParameter$1({\n        idPrefix: id,\n        element,\n        parameter\n      }),\n      autoFocusEntry: id + '-target',\n      remove: removeFactory$b({\n        commandStack,\n        element,\n        parameter\n      })\n    };\n  });\n  return {\n    items,\n    add: addFactory$8({\n      element,\n      bpmnFactory,\n      commandStack\n    })\n  };\n}\n\nfunction removeFactory$b({\n  commandStack,\n  element,\n  parameter\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const commands = [];\n    const ioMapping = getIoMapping(element);\n\n    if (!ioMapping) {\n      return;\n    }\n\n    const inputParameters = without(ioMapping.get('inputParameters'), parameter);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: ioMapping,\n        properties: {\n          inputParameters\n        }\n      }\n    });\n    const businessObject = getBusinessObject(element),\n          extensionElements = businessObject.get('extensionElements'),\n          values = without(extensionElements.get('values'), ioMapping); // remove ioMapping if there are no input/output parameters anymore\n\n    if (!inputParameters.length && !ioMapping.get('outputParameters').length) {\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values\n          }\n        }\n      });\n    }\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n}\n\nfunction addFactory$8({\n  element,\n  bpmnFactory,\n  commandStack\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const commands = [];\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure IoMapping\n\n\n    let ioMapping = getIoMapping(element);\n\n    if (!ioMapping) {\n      ioMapping = createIOMapping({\n        inputParameters: [],\n        outputParameters: []\n      }, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), ioMapping]\n          }\n        }\n      });\n    } // (3) create parameter\n\n\n    const newParameter = createElement('zeebe:Input', {\n      source: '=source',\n      target: nextId('InputVariable_')\n    }, ioMapping, bpmnFactory); // (4) add parameter to list\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: ioMapping,\n        properties: {\n          inputParameters: [...ioMapping.get('inputParameters'), newParameter]\n        }\n      }\n    });\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n}\n\nfunction MessageProps(props) {\n  const {\n    element\n  } = props;\n  const message = getMessage(element);\n  const entries = [];\n\n  if (message) {\n    entries.push({\n      id: 'messageName',\n      component: MessageName,\n      isEdited: isFeelEntryEdited\n    });\n  }\n\n  if (message && canHaveSubscriptionCorrelationKey(element)) {\n    entries.push({\n      id: 'messageSubscriptionCorrelationKey',\n      component: SubscriptionCorrelationKey,\n      isEdited: isFeelEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction MessageName(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const message = getMessage(element);\n\n  const getValue = () => {\n    return message.get('name');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: message,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id: 'messageName',\n    label: translate('Name'),\n    feel: 'optional',\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction SubscriptionCorrelationKey(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getCorrelationKey(element);\n  };\n\n  const setValue = value => {\n    const commands = [];\n    const message = getMessage(element);\n    let extensionElements = message.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, message, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: message,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure subscription\n\n\n    let subscription = getSubscription(element);\n\n    if (!subscription) {\n      subscription = createElement('zeebe:Subscription', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), subscription]\n          }\n        }\n      });\n    } // (3) update subscription correlation key\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: subscription,\n        properties: {\n          correlationKey: value\n        }\n      }\n    }); // (4) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id: 'messageSubscriptionCorrelationKey',\n    label: translate('Subscription correlation key'),\n    feel: 'required',\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ///////////////////////\n\n\nfunction canHaveSubscriptionCorrelationKey(element) {\n  // (1) allow for receive task\n  if (is(element, 'bpmn:ReceiveTask')) {\n    return true;\n  } // (2) allow for non start events\n\n\n  if (!is(element, 'bpmn:StartEvent')) {\n    return true;\n  } // (3) allow for start events inside event sub processes\n\n\n  if (is(element, 'bpmn:StartEvent') && isEventSubProcess(element.parent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getCorrelationKey(element) {\n  const subscription = getSubscription(element);\n  return subscription ? subscription.get('correlationKey') : '';\n}\n\nfunction getSubscription(element) {\n  const message = getMessage(element);\n  const subscriptions = getSubscriptions(message);\n  return subscriptions[0];\n}\n\nfunction getSubscriptions(message) {\n  const extensionElements = getExtensionElementsList(message, 'zeebe:Subscription');\n  return extensionElements;\n}\n\nfunction MultiInstanceProps$1(props) {\n  const {\n    element\n  } = props;\n\n  if (!supportsMultiInstances(element)) {\n    return [];\n  }\n\n  return [{\n    id: 'multiInstance-inputCollection',\n    component: InputCollection,\n    isEdited: isFeelEntryEdited\n  }, {\n    id: 'multiInstance-inputElement',\n    component: InputElement,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'multiInstance-outputCollection',\n    component: OutputCollection,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'multiInstance-outputElement',\n    component: OutputElement,\n    isEdited: isFeelEntryEdited\n  }, {\n    id: 'multiInstance-completionCondition',\n    component: CompletionCondition,\n    isEdited: isFeelEntryEdited\n  }];\n}\n\nfunction InputCollection(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getProperty$1(element, 'inputCollection');\n  };\n\n  const setValue = value => {\n    return setProperty(element, 'inputCollection', value, commandStack, bpmnFactory);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id: 'multiInstance-inputCollection',\n    label: translate('Input collection'),\n    feel: 'required',\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction InputElement(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getProperty$1(element, 'inputElement');\n  };\n\n  const setValue = value => {\n    return setProperty(element, 'inputElement', value, commandStack, bpmnFactory);\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'multiInstance-inputElement',\n    label: translate('Input element'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction OutputCollection(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getProperty$1(element, 'outputCollection');\n  };\n\n  const setValue = value => {\n    return setProperty(element, 'outputCollection', value, commandStack, bpmnFactory);\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'multiInstance-outputCollection',\n    label: translate('Output collection'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction OutputElement(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getProperty$1(element, 'outputElement');\n  };\n\n  const setValue = value => {\n    return setProperty(element, 'outputElement', value, commandStack, bpmnFactory);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id: 'multiInstance-outputElement',\n    label: translate('Output element'),\n    feel: 'required',\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction CompletionCondition(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    const completionCondition = getCompletionCondition(element);\n    return completionCondition && completionCondition.get('body');\n  };\n\n  const setValue = value => {\n    if (value && value !== '') {\n      const loopCharacteristics = getLoopCharacteristics$1(element);\n      const completionCondition = createElement('bpmn:FormalExpression', {\n        body: value\n      }, loopCharacteristics, bpmnFactory);\n      setCompletionCondition(element, commandStack, completionCondition);\n    } else {\n      setCompletionCondition(element, commandStack, undefined);\n    }\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id: 'multiInstance-completionCondition',\n    label: translate('Completion condition'),\n    feel: 'required',\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ///////////////////////\n\n\nfunction getLoopCharacteristics$1(element) {\n  const businessObject = getBusinessObject(element);\n  return businessObject.get('loopCharacteristics');\n}\n\nfunction getZeebeLoopCharacteristics(loopCharacteristics) {\n  const extensionElements = getExtensionElementsList(loopCharacteristics, 'zeebe:LoopCharacteristics');\n  return extensionElements && extensionElements[0];\n}\n\nfunction supportsMultiInstances(element) {\n  return !!getLoopCharacteristics$1(element);\n}\n\nfunction getCompletionCondition(element) {\n  return getLoopCharacteristics$1(element).get('completionCondition');\n}\n\nfunction setCompletionCondition(element, commandStack, completionCondition = undefined) {\n  commandStack.execute('element.updateModdleProperties', {\n    element,\n    moddleElement: getLoopCharacteristics$1(element),\n    properties: {\n      completionCondition\n    }\n  });\n}\n\nfunction getProperty$1(element, propertyName) {\n  const loopCharacteristics = getLoopCharacteristics$1(element),\n        zeebeLoopCharacteristics = getZeebeLoopCharacteristics(loopCharacteristics);\n  return zeebeLoopCharacteristics && zeebeLoopCharacteristics.get(propertyName);\n}\n\nfunction setProperty(element, propertyName, value, commandStack, bpmnFactory) {\n  const loopCharacteristics = getLoopCharacteristics$1(element);\n  const commands = []; // (1) ensure extension elements\n\n  let extensionElements = loopCharacteristics.get('extensionElements');\n\n  if (!extensionElements) {\n    extensionElements = createElement('bpmn:ExtensionElements', {\n      values: []\n    }, loopCharacteristics, bpmnFactory);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: loopCharacteristics,\n        properties: {\n          extensionElements\n        }\n      }\n    });\n  } // (2) ensure zeebe loop characteristics\n\n\n  let zeebeLoopCharacteristics = getZeebeLoopCharacteristics(loopCharacteristics);\n\n  if (!zeebeLoopCharacteristics) {\n    zeebeLoopCharacteristics = createElement('zeebe:LoopCharacteristics', {}, extensionElements, bpmnFactory);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: extensionElements,\n        properties: {\n          values: [...extensionElements.get('values'), zeebeLoopCharacteristics]\n        }\n      }\n    });\n  } // (3) update defined property\n\n\n  commands.push({\n    cmd: 'element.updateModdleProperties',\n    context: {\n      element,\n      moddleElement: zeebeLoopCharacteristics,\n      properties: {\n        [propertyName]: value\n      }\n    }\n  }); // (4) commit all updates\n\n  commandStack.execute('properties-panel.multi-command-executor', commands);\n}\n\nfunction getProcessId(element) {\n  const calledElement = getCalledElement(element);\n  return calledElement ? calledElement.get('processId') : '';\n}\nfunction getCalledElement(element) {\n  const calledElements = getCalledElements(element);\n  return calledElements[0];\n}\n\nfunction getCalledElements(element) {\n  const bo = getBusinessObject(element);\n  const extElements = getExtensionElementsList(bo, 'zeebe:CalledElement');\n  return extElements;\n}\n\nfunction OutputPropagationProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'bpmn:CallActivity')) {\n    return [];\n  }\n\n  return [{\n    id: 'propagateAllChildVariables',\n    component: PropagateAllChildVariables,\n    isEdited: isToggleSwitchEntryEdited\n  }];\n}\n\nfunction PropagateAllChildVariables(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        bpmnFactory = useService('bpmnFactory'),\n        translate = useService('translate');\n  const propagateAllChildVariables = isPropagateAllChildVariables(element);\n\n  const getValue = () => {\n    return propagateAllChildVariables;\n  };\n\n  const setValue = value => {\n    const commands = [];\n    const businessObject = getBusinessObject(element); // (1) ensure extension elements\n\n    let extensionElements = businessObject.get('extensionElements');\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure zeebe:calledElement\n\n\n    let calledElement = getCalledElement(businessObject);\n\n    if (!calledElement) {\n      calledElement = createElement('zeebe:CalledElement', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), calledElement]\n          }\n        }\n      });\n    } // (3) Update propagateAllChildVariables attribute\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: calledElement,\n        properties: {\n          propagateAllChildVariables: value\n        }\n      }\n    }); // (4) Execute the commands\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return ToggleSwitchEntry({\n    id: 'propagateAllChildVariables',\n    label: translate('Propagate all child process variables'),\n    switcherLabel: propagateAllChildVariables ? translate('On') : translate('Off'),\n    description: propagateAllChildVariables ? translate('All variables from the child process instance will be propagated to the parent process instance') : translate('Only variables defined via output mappings will be propagated from the child to the parent process instance'),\n    getValue,\n    setValue\n  });\n} // helper //////////////////////////\n\n/**\n  * Determine default value for propagateAllChildVariables attribute\n  * @param {Object} element representing a bpmn:CallActivity\n  *\n  * @returns {boolean}\n  */\n\n\nfunction determinePropAllChildVariablesDefault(element) {\n  const outputParameters = getOutputParameters$1(element);\n\n  if (outputParameters) {\n    return outputParameters.length > 0 ? false : true;\n  }\n}\n/**\n  * Check whether the propagateAllChildVariables attribute is set on an element.\n  * Note that a default logic will be determine if it is not explicitly set.\n  * @param {Object} element\n  *\n  * @returns {boolean}\n  */\n\n\nfunction isPropagateAllChildVariables(element) {\n  if (!is(element, 'bpmn:CallActivity')) {\n    return undefined;\n  }\n\n  const bo = getBusinessObject(element),\n        calledElement = getCalledElement(bo);\n  return calledElement && has(calledElement, 'propagateAllChildVariables') ? calledElement.get('propagateAllChildVariables') : determinePropAllChildVariablesDefault(element);\n}\n\nfunction OutputProps$1({\n  element,\n  injector\n}) {\n  if (!areOutputParametersSupported$1(element)) {\n    return null;\n  }\n\n  const outputParameters = getOutputParameters$1(element) || [];\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = outputParameters.map((parameter, index) => {\n    const id = element.id + '-output-' + index;\n    return {\n      id,\n      label: parameter.get('target') || '',\n      entries: InputOutputParameter$1({\n        idPrefix: id,\n        element,\n        parameter\n      }),\n      autoFocusEntry: id + '-target',\n      remove: removeFactory$a({\n        commandStack,\n        element,\n        parameter\n      })\n    };\n  });\n  return {\n    items,\n    add: addFactory$7({\n      element,\n      bpmnFactory,\n      commandStack\n    })\n  };\n}\n\nfunction removeFactory$a({\n  commandStack,\n  element,\n  parameter\n}) {\n  return function (event) {\n    event.stopPropagation();\n    let commands = [];\n    const ioMapping = getIoMapping(element);\n\n    if (!ioMapping) {\n      return;\n    }\n\n    const outputParameters = without(ioMapping.get('outputParameters'), parameter);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: ioMapping,\n        properties: {\n          outputParameters\n        }\n      }\n    }); // remove ioMapping if there are no input/output parameters anymore\n\n    if (!ioMapping.get('inputParameters').length && !outputParameters.length) {\n      const businessObject = getBusinessObject(element),\n            extensionElements = businessObject.get('extensionElements'),\n            values = without(extensionElements.get('values'), ioMapping);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values\n          }\n        }\n      });\n    }\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n}\n\nfunction addFactory$7({\n  element,\n  bpmnFactory,\n  commandStack\n}) {\n  return function (event) {\n    event.stopPropagation();\n    let commands = [];\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure IoMapping\n\n\n    let ioMapping = getIoMapping(element);\n\n    if (!ioMapping) {\n      const parent = extensionElements;\n      ioMapping = createIOMapping({\n        inputParameters: [],\n        outputParameters: []\n      }, parent, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), ioMapping]\n          }\n        }\n      });\n    } // (3) create parameter\n\n\n    const newParameter = createElement('zeebe:Output', {\n      source: '=source',\n      target: nextId('OutputVariable_')\n    }, ioMapping, bpmnFactory); // (4) add parameter to list\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: ioMapping,\n        properties: {\n          outputParameters: [...ioMapping.get('outputParameters'), newParameter]\n        }\n      }\n    });\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n}\n\nfunction TargetProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'bpmn:CallActivity')) {\n    return [];\n  }\n\n  return [{\n    id: 'targetProcessId',\n    component: TargetProcessId,\n    isEdited: isFeelEntryEdited\n  }];\n}\n\nfunction TargetProcessId(props) {\n  const {\n    element,\n    id\n  } = props;\n  const commandStack = useService('commandStack'),\n        bpmnFactory = useService('bpmnFactory'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getProcessId(element);\n  };\n\n  const setValue = value => {\n    const commands = [];\n    const businessObject = getBusinessObject(element); // (1) ensure extension elements\n\n    let extensionElements = businessObject.get('extensionElements');\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure zeebe:calledElement\n\n\n    let calledElement = getCalledElement(businessObject);\n\n    if (!calledElement) {\n      calledElement = createElement('zeebe:CalledElement', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), calledElement]\n          }\n        }\n      });\n    } // (3) Update processId attribute\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: calledElement,\n        properties: {\n          processId: value\n        }\n      }\n    }); // (4) Execute the commands\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id,\n    label: translate('Process ID'),\n    feel: 'optional',\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction TaskDefinitionProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!isZeebeServiceTask(element)) {\n    return [];\n  }\n\n  return [{\n    id: 'taskDefinitionType',\n    component: TaskDefinitionType,\n    isEdited: isFeelEntryEdited\n  }, {\n    id: 'taskDefinitionRetries',\n    component: TaskDefinitionRetries,\n    isEdited: isFeelEntryEdited\n  }];\n}\n\nfunction TaskDefinitionType(props) {\n  const {\n    element,\n    id\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return (getTaskDefinition(element) || {}).type;\n  };\n\n  const setValue = value => {\n    const commands = [];\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure task definition\n\n\n    let taskDefinition = getTaskDefinition(element);\n\n    if (!taskDefinition) {\n      taskDefinition = createElement('zeebe:TaskDefinition', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), taskDefinition]\n          }\n        }\n      });\n    } // (3) update task definition type\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: taskDefinition,\n        properties: {\n          type: value\n        }\n      }\n    }); // (4) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id,\n    label: translate('Type'),\n    feel: 'optional',\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction TaskDefinitionRetries(props) {\n  const {\n    element,\n    id\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return (getTaskDefinition(element) || {}).retries;\n  };\n\n  const setValue = value => {\n    let commands = [];\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure task definition\n\n\n    let taskDefinition = getTaskDefinition(element);\n\n    if (!taskDefinition) {\n      taskDefinition = createElement('zeebe:TaskDefinition', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), taskDefinition]\n          }\n        }\n      });\n    } // (3) update task definition retries\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: taskDefinition,\n        properties: {\n          retries: value\n        }\n      }\n    });\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id,\n    label: translate('Retries'),\n    feel: 'optional',\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ///////////////////////\n\n\nfunction getTaskDefinition(element) {\n  const businessObject = getBusinessObject(element);\n  return getExtensionElementsList(businessObject, 'zeebe:TaskDefinition')[0];\n}\n\nfunction TimerProps(props) {\n  const {\n    element\n  } = props;\n  const businessObject = getBusinessObject(element),\n        timerEventDefinition = getTimerEventDefinition(businessObject),\n        timerEventDefinitionType = getTimerDefinitionType(timerEventDefinition); // (1) Only show for supported elements\n\n  if (!isTimerSupported(element)) {\n    return [];\n  } // (2) Return duration-specific TexField only if only duration is supported\n\n\n  const onlySupportDuration = !isTimerDefinitionTypeSupported('timeCycle', element) && !isTimerDefinitionTypeSupported('timeDate', element); // (3) Only provide duration-specific textField if only duration is supported,\n  // otherwise push type-select and generic textField is type was selected\n\n  const entries = [];\n\n  if (onlySupportDuration) {\n    entries.push({\n      id: 'timerEventDefinitionDurationValue',\n      component: TimerEventDefinitionDurationValue,\n      isEdited: isFeelEntryEdited\n    });\n  } else {\n    entries.push({\n      id: 'timerEventDefinitionType',\n      component: TimerEventDefinitionType,\n      isEdited: isSelectEntryEdited\n    });\n\n    if (timerEventDefinitionType) {\n      entries.push({\n        id: 'timerEventDefinitionValue',\n        component: TimerEventDefinitionValue,\n        isEdited: isFeelEntryEdited\n      });\n    }\n  }\n\n  return entries;\n}\n/**\n * TimerEventDefinitionType - Generic select entry allowing to select a specific\n * timerEventDefintionType. To be used together with timerEventDefinitionValue.\n *\n * @param  {type} props\n * @return {SelectEntry}\n */\n\nfunction TimerEventDefinitionType(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        bpmnFactory = useService('bpmnFactory'),\n        translate = useService('translate');\n  const businessObject = getBusinessObject(element),\n        timerEventDefinition = getTimerEventDefinition(businessObject),\n        timerEventDefinitionType = getTimerDefinitionType(timerEventDefinition);\n\n  const getValue = () => {\n    return timerEventDefinitionType || '';\n  };\n\n  const setValue = value => {\n    // (1) Check if value is different to current type\n    if (value === timerEventDefinitionType) {\n      return;\n    } // (2) Create empty formalExpression element\n\n\n    const formalExpression = bpmnFactory.create('bpmn:FormalExpression', {\n      body: undefined\n    });\n    formalExpression.$parent = timerEventDefinition; // (3) Set the value for selected timerEventDefinitionType\n\n    const newProps = {\n      timeDuration: undefined,\n      timeDate: undefined,\n      timeCycle: undefined\n    };\n    newProps[value] = formalExpression; // (4) Execute businessObject update\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: timerEventDefinition,\n      properties: newProps\n    });\n  };\n\n  const getOptions = element => {\n    const options = [{\n      value: '',\n      label: translate('<none>')\n    }];\n\n    if (isTimerDefinitionTypeSupported('timeDate', element)) {\n      options.push({\n        value: 'timeDate',\n        label: translate('Date')\n      });\n    }\n\n    if (isTimerDefinitionTypeSupported('timeDuration', element)) {\n      options.push({\n        value: 'timeDuration',\n        label: translate('Duration')\n      });\n    }\n\n    if (isTimerDefinitionTypeSupported('timeCycle', element)) {\n      options.push({\n        value: 'timeCycle',\n        label: translate('Cycle')\n      });\n    }\n\n    return options;\n  };\n\n  return SelectEntry({\n    element,\n    id: 'timerEventDefinitionType',\n    label: translate('Type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n/**\n * TimerEventDefinitionValue - Generic textField entry allowing to specify the\n * timerEventDefintionValue based on the set timerEventDefintionType. To be used\n * together with timerEventDefinitionType.\n *\n * @param  {type} props\n * @return {TextFieldEntry}\n */\n\n\nfunction TimerEventDefinitionValue(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element),\n        timerEventDefinition = getTimerEventDefinition(businessObject),\n        timerEventDefinitionType = getTimerDefinitionType(timerEventDefinition),\n        timerEventFormalExpression = timerEventDefinition.get(timerEventDefinitionType);\n\n  const getValue = () => {\n    return timerEventFormalExpression && timerEventFormalExpression.get('body');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: timerEventFormalExpression,\n      properties: {\n        body: value\n      }\n    });\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id: 'timerEventDefinitionValue',\n    label: translate('Value'),\n    feel: 'optional',\n    getValue,\n    setValue,\n    debounce,\n    description: getTimerEventDefinitionValueDescription(timerEventDefinitionType, translate)\n  });\n}\n/**\n * TimerEventDefinitionDurationValue - textField entry allowing to specify the\n * duration value. This is to be used stand-alone, without the TimerEventDefinitionType\n *\n * @param  {type} props\n * @return {TextFieldEntry}\n */\n\n\nfunction TimerEventDefinitionDurationValue(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element),\n        timerEventDefinition = getTimerEventDefinition(businessObject);\n  let timerEventFormalExpression = timerEventDefinition.get('timeDuration');\n\n  const getValue = () => {\n    return timerEventFormalExpression && timerEventFormalExpression.get('body');\n  };\n\n  const setValue = value => {\n    const commands = []; // (1) re-use formalExpression\n\n    if (!timerEventFormalExpression) {\n      timerEventFormalExpression = bpmnFactory.create('bpmn:FormalExpression', {\n        body: undefined\n      });\n      timerEventFormalExpression.$parent = timerEventDefinition; // (1.1) update the formalExpression\n\n      const properties = {\n        timeDuration: timerEventFormalExpression,\n        timeDate: undefined,\n        timeCycle: undefined\n      }; // (1.2) push command\n\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: timerEventDefinition,\n          properties\n        }\n      });\n    } // (2) update value\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: timerEventFormalExpression,\n        properties: {\n          body: value\n        }\n      }\n    }); // (3) commit all commands\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return withVariableContext(FeelEntry)({\n    element,\n    id: 'timerEventDefinitionDurationValue',\n    label: translate('Timer duration'),\n    feel: 'optional',\n    getValue,\n    setValue,\n    debounce,\n    description: getTimerEventDefinitionValueDescription('timeDuration', translate)\n  });\n} // helper //////////////////////////\n\n/**\n * isTimerDefinitionTypeSupported - Checks whether a given timerDefinitionType\n * is supported for a given element\n *\n * @param  {string} timerDefinitionType\n * @param  {ModdleElement} element\n *\n * @return {boolean}\n */\n\n\nfunction isTimerDefinitionTypeSupported(timerDefinitionType, element) {\n  const businessObject = getBusinessObject(element);\n\n  switch (timerDefinitionType) {\n    case 'timeDate':\n      if (is(element, 'bpmn:StartEvent')) {\n        return true;\n      }\n\n      return false;\n\n    case 'timeCycle':\n      if (is(element, 'bpmn:StartEvent')) {\n        return true;\n      }\n\n      if (is(element, 'bpmn:BoundaryEvent') && !businessObject.cancelActivity) {\n        return true;\n      }\n\n      return false;\n\n    case 'timeDuration':\n      if (is(element, 'bpmn:IntermediateCatchEvent')) {\n        return true;\n      }\n\n      if (is(element, 'bpmn:BoundaryEvent') && !businessObject.cancelActivity) {\n        return true;\n      }\n\n      return false;\n\n    default:\n      return undefined;\n  }\n}\n\nfunction getTimerEventDefinitionValueDescription(timerDefinitionType, translate) {\n  switch (timerDefinitionType) {\n    case 'timeDate':\n      return jsxs(\"div\", {\n        children: [jsx(\"p\", {\n          children: translate('A specific point in time defined as ISO 8601 combined date and time representation.')\n        }), jsxs(\"ul\", {\n          children: [jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"2019-10-01T12:00:00Z\"\n            }), \" - \", translate('UTC time')]\n          }), jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"2019-10-02T08:09:40+02:00\"\n            }), \" - \", translate('UTC plus 2 hours zone offset')]\n          })]\n        }), jsx(\"a\", {\n          href: \"https://docs.camunda.io/docs/reference/bpmn-processes/timer-events/timer-events#time-date\",\n          target: \"_blank\",\n          rel: \"noopener\",\n          title: translate('Timer documentation'),\n          children: translate('How to configure a timer')\n        })]\n      });\n\n    case 'timeCycle':\n      return jsxs(\"div\", {\n        children: [jsx(\"p\", {\n          children: translate('A cycle defined as ISO 8601 repeating intervals format.')\n        }), jsxs(\"ul\", {\n          children: [jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"R5/PT10S\"\n            }), \" - \", translate('every 10 seconds, up to 5 times')]\n          }), jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"R/P1D\"\n            }), \" - \", translate('every day, infinitely')]\n          })]\n        }), jsx(\"a\", {\n          href: \"https://docs.camunda.io/docs/reference/bpmn-processes/timer-events/timer-events#time-cycle\",\n          target: \"_blank\",\n          rel: \"noopener\",\n          title: translate('Timer documentation'),\n          children: translate('How to configure a timer')\n        })]\n      });\n\n    case 'timeDuration':\n      return jsxs(\"div\", {\n        children: [jsx(\"p\", {\n          children: translate('A time duration defined as ISO 8601 durations format.')\n        }), jsxs(\"ul\", {\n          children: [jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"PT15S\"\n            }), \" - \", translate('15 seconds')]\n          }), jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"PT1H30M\"\n            }), \" - \", translate('1 hour and 30 minutes')]\n          }), jsxs(\"li\", {\n            children: [jsx(\"code\", {\n              children: \"P14D\"\n            }), \" - \", translate('14 days')]\n          })]\n        }), jsx(\"a\", {\n          href: \"https://docs.camunda.io/docs/reference/bpmn-processes/timer-events/timer-events#time-duration\",\n          target: \"_blank\",\n          rel: \"noopener\",\n          title: translate('Timer documentation'),\n          children: translate('How to configure a timer')\n        })]\n      });\n  }\n}\n\nconst LOW_PRIORITY$1 = 500;\nconst ZEEBE_GROUPS = [BusinessRuleImplementationGroup, CalledDecisionGroup, TaskDefinitionGroup, AssignmentDefinitionGroup, FormGroup$1, ConditionGroup$1, TargetGroup, InputGroup$1, OutputPropagationGroup, OutputGroup$1, HeaderGroup];\nclass ZeebePropertiesProvider {\n  constructor(propertiesPanel, injector) {\n    propertiesPanel.registerProvider(LOW_PRIORITY$1, this);\n    this._injector = injector;\n  }\n\n  getGroups(element) {\n    return groups => {\n      // (1) add zeebe specific groups\n      groups = groups.concat(this._getGroups(element)); // (2) update existing groups with zeebe specific properties\n\n      updateMessageGroup(groups, element);\n      updateTimerGroup(groups, element);\n      updateMultiInstanceGroup$1(groups, element); // (3) remove message group when not applicable\n\n      groups = removeMessageGroup(groups, element);\n      return groups;\n    };\n  }\n\n  _getGroups(element) {\n    const groups = ZEEBE_GROUPS.map(createGroup => createGroup(element, this._injector));\n    return groups.filter(group => group !== null);\n  }\n\n}\nZeebePropertiesProvider.$inject = ['propertiesPanel', 'injector'];\n\nfunction CalledDecisionGroup(element) {\n  const group = {\n    id: 'calledDecision',\n    label: 'Called decision',\n    entries: [...CalledDecisionProps({\n      element\n    })],\n    component: Group\n  };\n  return group.entries.length ? group : null;\n}\n\nfunction TaskDefinitionGroup(element) {\n  const group = {\n    id: 'taskDefinition',\n    label: 'Task definition',\n    entries: [...TaskDefinitionProps({\n      element\n    })],\n    component: Group\n  };\n  return group.entries.length ? group : null;\n}\n\nfunction InputGroup$1(element, injector) {\n  const group = {\n    id: 'inputs',\n    label: 'Inputs',\n    component: ListGroup,\n    ...InputProps$1({\n      element,\n      injector\n    })\n  };\n  return group.items ? group : null;\n}\n\nfunction OutputGroup$1(element, injector) {\n  const group = {\n    id: 'outputs',\n    label: 'Outputs',\n    component: ListGroup,\n    ...OutputProps$1({\n      element,\n      injector\n    })\n  };\n  return group.items ? group : null;\n}\n\nfunction ConditionGroup$1(element) {\n  const group = {\n    id: 'condition',\n    label: 'Condition',\n    entries: [...ConditionProps$1({\n      element\n    })],\n    component: Group\n  };\n  return group.entries.length ? group : null;\n}\n\nfunction FormGroup$1(element, injector) {\n  const group = {\n    id: 'form',\n    label: 'Form',\n    entries: [...FormProps$1({\n      element,\n      injector\n    })],\n    component: Group\n  };\n  return group.entries.length ? group : null;\n}\n\nfunction TargetGroup(element) {\n  const group = {\n    id: 'calledElement',\n    label: 'Called element',\n    entries: [...TargetProps({\n      element\n    })],\n    component: Group\n  };\n  return group.entries.length ? group : null;\n}\n\nfunction HeaderGroup(element, injector) {\n  const group = {\n    id: 'headers',\n    label: 'Headers',\n    component: ListGroup,\n    ...HeaderProps({\n      element,\n      injector\n    })\n  };\n  return group.items ? group : null;\n}\n\nfunction OutputPropagationGroup(element) {\n  const group = {\n    id: 'outputPropagation',\n    label: 'Output propagation',\n    entries: [...OutputPropagationProps({\n      element\n    })],\n    component: Group\n  };\n  return group.entries.length ? group : null;\n}\n\nfunction BusinessRuleImplementationGroup(element) {\n  const group = {\n    id: 'businessRuleImplementation',\n    label: 'Implementation',\n    entries: [...BusinessRuleImplementationProps({\n      element\n    })],\n    component: Group\n  };\n  return group.entries.length ? group : null;\n}\n\nfunction AssignmentDefinitionGroup(element) {\n  const group = {\n    id: 'assignmentDefinition',\n    label: 'Assignment',\n    entries: [...AssignmentDefinitionProps({\n      element\n    })],\n    component: Group\n  };\n  return group.entries.length ? group : null;\n}\n\nfunction updateMessageGroup(groups, element) {\n  const messageGroup = findGroup$1(groups, 'message');\n\n  if (!messageGroup) {\n    return;\n  }\n\n  messageGroup.entries = overrideGenericEntries(messageGroup.entries, MessageProps({\n    element\n  }));\n} // overwrite bpmn generic timerEventDefinition group with zeebe-specific one\n\n\nfunction updateTimerGroup(groups, element) {\n  const timerEventGroup = findGroup$1(groups, 'timer');\n\n  if (!timerEventGroup) {\n    return;\n  }\n\n  timerEventGroup.entries = [...TimerProps({\n    element\n  })];\n} // overwrite bpmn generic multiInstance group with zeebe-specific one\n\n\nfunction updateMultiInstanceGroup$1(groups, element) {\n  const multiInstanceGroup = findGroup$1(groups, 'multiInstance');\n\n  if (!multiInstanceGroup) {\n    return;\n  }\n\n  multiInstanceGroup.entries = [...MultiInstanceProps$1({\n    element\n  })];\n} // remove message group from Message End Event & Message Throw Event\n\n\nfunction removeMessageGroup(groups, element) {\n  const messageGroup = findGroup$1(groups, 'message');\n\n  if (isMessageEndEvent(element) || isMessageThrowEvent(element)) {\n    groups = groups.filter(g => g != messageGroup);\n  }\n\n  return groups;\n} // helper /////////////////////\n\n\nfunction findGroup$1(groups, id) {\n  return groups.find(g => g.id === id);\n}\n/**\n * Replace generic bpmn components with specific zeebe ones.\n *\n * @param {Array} oldEntries\n * @param {Array} newEntries\n * @returns {Array} combined entries\n */\n\n\nfunction overrideGenericEntries(oldEntries, newEntries) {\n  const filteredEntries = oldEntries.filter(oldEntry => !newEntries.find(newEntry => newEntry.id === oldEntry.id));\n  return [...filteredEntries, ...newEntries];\n}\n\nvar zeebePropertiesProviderModule = {\n  __init__: ['zeebePropertiesProvider'],\n  zeebePropertiesProvider: ['type', ZeebePropertiesProvider]\n};\n\nfunction AsynchronousContinuationsProps(props) {\n  const {\n    element\n  } = props;\n\n  const checkboxIsEditedInverted = node => {\n    return node && !node.checked;\n  };\n\n  const businessObject = getBusinessObject(element);\n  const entries = [];\n\n  if (is(element, 'camunda:AsyncCapable')) {\n    entries.push({\n      id: 'asynchronousContinuationBefore',\n      component: AsynchronousContinuationBefore,\n      isEdited: isCheckboxEntryEdited\n    }, {\n      id: 'asynchronousContinuationAfter',\n      component: AsynchronousContinuationAfter,\n      isEdited: isCheckboxEntryEdited\n    });\n\n    if (isAsyncBefore$2(businessObject) || isAsyncAfter$2(businessObject)) {\n      entries.push({\n        id: 'exclusive',\n        component: Exclusive,\n        isEdited: checkboxIsEditedInverted\n      });\n    }\n  }\n\n  return entries;\n}\n\nfunction AsynchronousContinuationBefore(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return isAsyncBefore$2(businessObject);\n  };\n\n  const setValue = value => {\n    // overwrite the legacy `async` property, we will use the more explicit `asyncBefore`\n    const props = {\n      'camunda:asyncBefore': value,\n      'camunda:async': undefined\n    };\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: props\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: 'asynchronousContinuationBefore',\n    label: translate('Before'),\n    getValue,\n    setValue\n  });\n}\n\nfunction AsynchronousContinuationAfter(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return isAsyncAfter$2(businessObject);\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:asyncAfter': value\n      }\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: 'asynchronousContinuationAfter',\n    label: translate('After'),\n    getValue,\n    setValue\n  });\n}\n\nfunction Exclusive(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return isExclusive$1(businessObject);\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:exclusive': value\n      }\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: 'exclusive',\n    label: translate('Exclusive'),\n    getValue,\n    setValue\n  });\n} // helper //////////////////\n\n/**\n * Returns true if the attribute 'camunda:asyncBefore' is set\n * to true.\n *\n * @param  {ModdleElement} bo\n *\n * @return {boolean} a boolean value\n */\n\n\nfunction isAsyncBefore$2(bo) {\n  return !!(bo.get('camunda:asyncBefore') || bo.get('camunda:async'));\n}\n/**\n * Returns true if the attribute 'camunda:asyncAfter' is set\n * to true.\n *\n * @param  {ModdleElement} bo\n *\n * @return {boolean} a boolean value\n */\n\n\nfunction isAsyncAfter$2(bo) {\n  return !!bo.get('camunda:asyncAfter');\n}\n/**\n * Returns true if the attribute 'camunda:exclusive' is set\n * to true.\n *\n * @param  {ModdleElement} bo\n *\n * @return {boolean} a boolean value\n */\n\n\nfunction isExclusive$1(bo) {\n  return !!bo.get('camunda:exclusive');\n}\n\nconst EMPTY_OPTION$1 = '';\nfunction BusinessKeyProps$1(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'bpmn:StartEvent') || !hasFormFields(element)) {\n    return [];\n  }\n\n  return [{\n    id: 'businessKey',\n    component: BusinessKey$1,\n    isEdited: isSelectEntryEdited\n  }];\n}\n\nfunction BusinessKey$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const formData = getFormData$2(element);\n\n  const getValue = () => {\n    return formData.get('camunda:businessKey') || '';\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: formData,\n      properties: {\n        'camunda:businessKey': value\n      }\n    });\n  };\n\n  const getOptions = () => {\n    const options = [{\n      value: EMPTY_OPTION$1,\n      label: translate('<none>')\n    }];\n    const fields = formData.get('fields');\n    fields.forEach(field => {\n      const id = field.get('camunda:id');\n\n      if (id) {\n        options.push({\n          value: id,\n          label: id\n        });\n      }\n    });\n    return options;\n  };\n\n  return SelectEntry({\n    element,\n    id: 'businessKey',\n    label: translate('Key'),\n    getValue,\n    setValue,\n    getOptions\n  });\n} // helper ///////////////////\n\n\nfunction getFormData$2(element) {\n  const businessObject = getBusinessObject(element);\n  return getExtensionElementsList(businessObject, 'camunda:FormData')[0];\n}\n\nfunction hasFormFields(element) {\n  const businessObject = getBusinessObject(element);\n  const formData = getFormData$2(businessObject);\n  return formData && formData.get('camunda:fields').length;\n}\n\nfunction CalledBpmnProps(props) {\n  const {\n    element\n  } = props;\n  const entries = [{\n    id: 'calledElement',\n    component: CalledElement,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'calledElementBinding',\n    component: CalledElementBinding,\n    isEdited: isSelectEntryEdited\n  }, {\n    id: 'calledElementTenantId',\n    component: CalledElementTenantId,\n    isEdited: isTextFieldEntryEdited\n  }];\n  const binding = getBusinessObject(element).get('camunda:calledElementBinding');\n\n  if (binding === 'version') {\n    entries.splice(-1, 0, {\n      id: 'calledElementVersion',\n      component: CalledElementVersion,\n      isEdited: isTextFieldEntryEdited\n    });\n  } else if (binding === 'versionTag') {\n    entries.splice(-1, 0, {\n      id: 'calledElementVersionTag',\n      component: CalledElementVersionTag,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction CalledElement(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('calledElement');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      calledElement: value || ''\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"calledElement\",\n    label: translate('Called element'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction CalledElementBinding(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('camunda:calledElementBinding') || 'latest';\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      calledElementBinding: value === 'latest' ? undefined : value,\n      calledElementVersion: undefined,\n      calledElementVersionTag: undefined\n    });\n  };\n\n  const getOptions = () => [{\n    value: 'latest',\n    label: translate('latest')\n  }, {\n    value: 'deployment',\n    label: translate('deployment')\n  }, {\n    value: 'version',\n    label: translate('version')\n  }, {\n    value: 'versionTag',\n    label: translate('version tag')\n  }];\n\n  return jsx(SelectEntry, {\n    element: element,\n    id: \"calledElementBinding\",\n    label: translate('Binding'),\n    getValue: getValue,\n    setValue: setValue,\n    getOptions: getOptions\n  });\n}\n\nfunction CalledElementVersion(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('camunda:calledElementVersion');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      calledElementVersion: value\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"calledElementVersion\",\n    label: translate('Version'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction CalledElementVersionTag(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('camunda:calledElementVersionTag');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      calledElementVersionTag: value\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"calledElementVersionTag\",\n    label: translate('Version tag'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction CalledElementTenantId(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('camunda:calledElementTenantId');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      calledElementTenantId: value\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"calledElementTenantId\",\n    label: translate('Tenant ID'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction CalledCmmnProps(props) {\n  const {\n    element\n  } = props;\n  const entries = [{\n    id: 'calledElementCaseRef',\n    component: CaseRef,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'calledElementCaseBinding',\n    component: CaseBinding,\n    isEdited: isSelectEntryEdited\n  }, {\n    id: 'calledElementCaseTenantId',\n    component: CaseTenantId,\n    isEdited: isTextFieldEntryEdited\n  }];\n\n  if (getBusinessObject(element).get('camunda:caseBinding') === 'version') {\n    entries.splice(-1, 0, {\n      id: 'calledElementCaseVersion',\n      component: CaseVersion,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction CaseRef(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('camunda:caseRef');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      caseRef: value || ''\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"calledElementCaseRef\",\n    label: translate('Case ref'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction CaseBinding(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('camunda:caseBinding') || 'latest';\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      caseBinding: value === 'latest' ? undefined : value,\n      caseVersion: undefined\n    });\n  };\n\n  const getOptions = () => [{\n    value: 'latest',\n    label: translate('latest')\n  }, {\n    value: 'deployment',\n    label: translate('deployment')\n  }, {\n    value: 'version',\n    label: translate('version')\n  }];\n\n  return jsx(SelectEntry, {\n    element: element,\n    id: \"calledElementCaseBinding\",\n    label: translate('Binding'),\n    getValue: getValue,\n    setValue: setValue,\n    getOptions: getOptions\n  });\n}\n\nfunction CaseVersion(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('camunda:caseVersion');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      caseVersion: value\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"calledElementCaseVersion\",\n    label: translate('Version'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction CaseTenantId(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('camunda:caseTenantId');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      caseTenantId: value\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"calledElementCaseTenantId\",\n    label: translate('Tenant ID'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction DelegateVariableMappingProps(props) {\n  const {\n    element\n  } = props;\n  const entries = [{\n    id: 'calledElementDelegateVariableMappingType',\n    component: DelegateVariableMappingType,\n    isEdited: isSelectEntryEdited\n  }];\n  const type = getDelegateVariableMappingType(element);\n\n  if (type === 'class') {\n    entries.push({\n      id: 'calledElementVariableMappingClass',\n      component: VariableMappingClass,\n      isEdited: isTextFieldEntryEdited\n    });\n  } else if (type === 'delegateExpression') {\n    entries.push({\n      id: 'calledElementVariableMappingDelegateExpression',\n      component: VariableMappingDelegateExpression,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\nconst DEFAULT_PROPS$5 = {\n  'camunda:variableMappingClass': undefined,\n  'camunda:variableMappingDelegateExpression': undefined\n};\n\nfunction DelegateVariableMappingType(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getDelegateVariableMappingType(element);\n  };\n\n  const setValue = value => {\n    const properties = { ...DEFAULT_PROPS$5\n    };\n\n    if (value === 'class') {\n      properties['camunda:variableMappingClass'] = '';\n    } else if (value === 'delegateExpression') {\n      properties['camunda:variableMappingDelegateExpression'] = '';\n    }\n\n    commandStack.execute('element.updateProperties', {\n      element,\n      properties\n    });\n  };\n\n  const getOptions = () => [{\n    value: 'none',\n    label: translate('<none>')\n  }, {\n    value: 'class',\n    label: translate('Class')\n  }, {\n    value: 'delegateExpression',\n    label: translate('Delegate expression')\n  }];\n\n  return jsx(SelectEntry, {\n    element: element,\n    id: \"calledElementDelegateVariableMappingType\",\n    label: translate('Delegate Variable Mapping'),\n    getValue: getValue,\n    setValue: setValue,\n    getOptions: getOptions\n  });\n}\n\nfunction VariableMappingDelegateExpression(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('camunda:variableMappingDelegateExpression');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      variableMappingDelegateExpression: value || '',\n      variableMappingClass: undefined\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"calledElementVariableMappingDelegateExpression\",\n    label: translate('Delegate Expression'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction VariableMappingClass(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getBusinessObject(element).get('camunda:variableMappingClass');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      variableMappingDelegateExpression: undefined,\n      variableMappingClass: value || ''\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"calledElementVariableMappingClass\",\n    label: translate('Delegate Class'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n} // helper /////\n\n\nfunction getDelegateVariableMappingType(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (businessObject.get('camunda:variableMappingClass') !== undefined) {\n    return 'class';\n  } else if (businessObject.get('camunda:variableMappingDelegateExpression') !== undefined) {\n    return 'delegateExpression';\n  }\n\n  return 'none';\n}\n\nfunction CallActivityProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'bpmn:CallActivity')) {\n    return [];\n  }\n\n  const entries = [];\n  entries.push({\n    id: 'calledElementType',\n    component: CalledElementType,\n    isEdited: isSelectEntryEdited\n  });\n  const calledElementType = getCalledElementType(element);\n\n  if (calledElementType === 'bpmn') {\n    entries.push(...CalledBpmnProps({\n      element\n    }), ...BusinessKeyProps({\n      element\n    }), ...DelegateVariableMappingProps({\n      element\n    }));\n  } else if (calledElementType === 'cmmn') {\n    entries.push(...CalledCmmnProps({\n      element\n    }), ...BusinessKeyProps({\n      element\n    }));\n  } else {\n    entries.push(...BusinessKeyProps({\n      element\n    }));\n  }\n\n  return entries;\n}\nconst DEFAULT_PROPS$4 = {\n  calledElement: undefined,\n  'camunda:calledElementBinding': undefined,\n  'camunda:calledElementVersion': undefined,\n  'camunda:calledElementTenantId': undefined,\n  'camunda:variableMappingClass': undefined,\n  'camunda:variableMappingDelegateExpression': undefined,\n  'camunda:caseRef': undefined,\n  'camunda:caseBinding': undefined,\n  'camunda:caseVersion': undefined,\n  'camunda:caseTenantId': undefined\n};\nconst DEFAULT_BUSINESS_KEY = '#{execution.processBusinessKey}';\n\nfunction CalledElementType(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getCalledElementType(element);\n  };\n\n  const setValue = value => {\n    const properties = { ...DEFAULT_PROPS$4\n    };\n\n    if (value === 'bpmn') {\n      properties['calledElement'] = '';\n    } else if (value === 'cmmn') {\n      properties['camunda:caseRef'] = '';\n    }\n\n    commandStack.execute('element.updateProperties', {\n      element,\n      properties\n    });\n  };\n\n  const getOptions = () => [{\n    value: '',\n    label: translate('<none>')\n  }, {\n    value: 'bpmn',\n    label: translate('BPMN')\n  }, {\n    value: 'cmmn',\n    label: translate('CMMN')\n  }];\n\n  return jsx(SelectEntry, {\n    element: element,\n    id: \"calledElementType\",\n    label: translate('Type'),\n    getValue: getValue,\n    setValue: setValue,\n    getOptions: getOptions\n  });\n}\n\nfunction BusinessKeyProps(props) {\n  const {\n    element\n  } = props;\n  const entries = [{\n    id: 'calledElementBusinessKey',\n    component: BusinessKey,\n    isEdited: isCheckboxEntryEdited\n  }];\n\n  if (hasBusinessKey(element)) {\n    entries.push({\n      id: 'calledElementBusinessKeyExpression',\n      component: BusinessKeyExpression,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction BusinessKey(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const modeling = useService('modeling');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return hasBusinessKey(element);\n  };\n\n  const setValue = value => {\n    if (value) {\n      addBusinessKey();\n    } else {\n      removeBusinessKey();\n    }\n  };\n\n  function addBusinessKey() {\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) If there are no extension elements, create camunda:In and update element's properties\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {}, businessObject, bpmnFactory);\n      const businessKeyItem = createBusinessKey(extensionElements);\n      extensionElements.set('values', [businessKeyItem]);\n      modeling.updateProperties(element, {\n        extensionElements\n      });\n    } else {\n      // (2) Otherwise, add camunda:In to the existing values\n      const businessKeyItem = createBusinessKey(extensionElements);\n      addExtensionElements(element, businessObject, businessKeyItem, bpmnFactory, commandStack);\n    }\n  }\n\n  function createBusinessKey(parent) {\n    return createElement('camunda:In', {\n      businessKey: DEFAULT_BUSINESS_KEY\n    }, parent, bpmnFactory);\n  }\n\n  function removeBusinessKey() {\n    const businessObject = getBusinessObject(element);\n    const camundaInList = getExtensionElementsList(businessObject, 'camunda:In');\n    const businessKeyItems = camundaInList.filter(camundaIn => camundaIn.get('businessKey') !== undefined);\n    removeExtensionElements(element, businessObject, businessKeyItems, commandStack);\n  }\n\n  return jsx(CheckboxEntry, {\n    element: element,\n    id: \"calledElementBusinessKey\",\n    label: translate('Business key'),\n    getValue: getValue,\n    setValue: setValue\n  });\n}\n\nfunction BusinessKeyExpression(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => getBusinessKey(element);\n\n  const setValue = value => {\n    const camundaIn = findCamundaInWithBusinessKey(element);\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: camundaIn,\n      properties: {\n        businessKey: value || ''\n      }\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"calledElementBusinessKeyExpression\",\n    label: translate('Business key expression'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n} // helper //////\n\n\nfunction getCalledElementType(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (businessObject.get('calledElement') !== undefined) {\n    return 'bpmn';\n  } else if (businessObject.get('camunda:caseRef') !== undefined) {\n    return 'cmmn';\n  }\n\n  return '';\n}\n\nfunction hasBusinessKey(element) {\n  return getBusinessKey(element) !== undefined;\n}\n\nfunction getBusinessKey(element) {\n  const camundaIn = findCamundaInWithBusinessKey(element);\n\n  if (camundaIn) {\n    return camundaIn.get('businessKey');\n  }\n}\n\nfunction findCamundaInWithBusinessKey(element) {\n  const businessObject = getBusinessObject(element);\n  const camundaInList = getExtensionElementsList(businessObject, 'camunda:In');\n\n  for (const camundaIn of camundaInList) {\n    const businessKey = camundaIn.get('businessKey');\n\n    if (businessKey !== undefined) {\n      return camundaIn;\n    }\n  }\n}\n\nfunction CandidateStarterProps(props) {\n  const {\n    element\n  } = props;\n  const businessObject = getBusinessObject(element);\n\n  if (!is(element, 'bpmn:Process') && !(is(element, 'bpmn:Participant') && businessObject.get('processRef'))) {\n    return [];\n  }\n\n  return [{\n    id: 'candidateStarterGroups',\n    component: CandidateStarterGroups,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'candidateStarterUsers',\n    component: CandidateStarterUsers,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction CandidateStarterGroups(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n  const process = getProcess$3(element);\n\n  const getValue = () => {\n    return process.get('camunda:candidateStarterGroups') || '';\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: process,\n      properties: {\n        'camunda:candidateStarterGroups': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'candidateStarterGroups',\n    label: translate('Candidate starter groups'),\n    description: translate('Specify more than one group as a comma separated list.'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction CandidateStarterUsers(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n  const process = getProcess$3(element);\n\n  const getValue = () => {\n    return process.get('camunda:candidateStarterUsers') || '';\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: process,\n      properties: {\n        'camunda:candidateStarterUsers': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'candidateStarterUsers',\n    label: translate('Candidate starter users'),\n    description: translate('Specify more than one user as a comma separated list.'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper //////////////////\n\n/**\n * getProcess - get the businessObject of the process referred to by a bpmn:Process\n * or by a bpmn:Participant\n *\n * @param  {ModdleElement} element either a bpmn:Process or a bpmn:Participant\n * @return {BusinessObject}\n */\n\n\nfunction getProcess$3(element) {\n  return is(element, 'bpmn:Process') ? getBusinessObject(element) : getBusinessObject(element).get('processRef');\n}\n\nfunction ConditionProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!(is(element, 'bpmn:SequenceFlow') && isConditionalSource(element.source)) && !getConditionalEventDefinition(element)) {\n    return [];\n  }\n\n  const entries = [];\n\n  if (getConditionalEventDefinition(element)) {\n    entries.push(...VariableEventProps({\n      element\n    }));\n  }\n\n  entries.push({\n    id: 'conditionType',\n    component: ConditionType,\n    isEdited: isSelectEntryEdited\n  });\n  const conditionType = getConditionType(element);\n\n  if (conditionType === 'script') {\n    entries.push(...ConditionScriptProps({\n      element\n    }));\n  } else if (conditionType === 'expression') {\n    entries.push({\n      id: 'conditionExpression',\n      component: ConditionExpression,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction ConditionType(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getConditionType(element);\n  };\n\n  const setValue = value => {\n    // (1) Remove formalExpression if <none> is selected\n    if (value === '') {\n      updateCondition(element, commandStack, undefined);\n    } else {\n      // (2) Create and set formalExpression element containing the conditionExpression\n      const attributes = {\n        body: '',\n        language: value === 'script' ? '' : undefined\n      };\n      const formalExpressionElement = createFormalExpression(element, attributes, bpmnFactory);\n      updateCondition(element, commandStack, formalExpressionElement);\n    }\n  };\n\n  const getOptions = () => [{\n    value: '',\n    label: translate('<none>')\n  }, {\n    value: 'script',\n    label: translate('Script')\n  }, {\n    value: 'expression',\n    label: translate('Expression')\n  }];\n\n  return jsx(SelectEntry, {\n    element: element,\n    id: \"conditionType\",\n    label: translate('Type'),\n    getValue: getValue,\n    setValue: setValue,\n    getOptions: getOptions\n  });\n}\n\nfunction ConditionExpression(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        bpmnFactory = useService('bpmnFactory'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getConditionExpression(element).get('body');\n  };\n\n  const setValue = value => {\n    const conditionExpression = createFormalExpression(element, {\n      body: value\n    }, bpmnFactory);\n    updateCondition(element, commandStack, conditionExpression);\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"conditionExpression\",\n    label: translate('Condition Expression'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction ConditionScriptProps(props) {\n  const {\n    element\n  } = props;\n  const entries = [];\n  const scriptType = getScriptType$1(element); // (1) language\n\n  entries.push({\n    id: 'conditionScriptLanguage',\n    component: Language,\n    isEdited: isTextFieldEntryEdited\n  }); // (2) type\n\n  entries.push({\n    id: 'conditionScriptType',\n    component: ScriptType,\n    isEdited: isSelectEntryEdited\n  }); // (3) script\n\n  if (scriptType === 'script') {\n    entries.push({\n      id: 'conditionScriptValue',\n      component: Script$1,\n      isEdited: isTextAreaEntryEdited\n    });\n  } else if (scriptType === 'resource') {\n    // (4) resource\n    entries.push({\n      id: 'conditionScriptResource',\n      component: Resource$1,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction Language(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getConditionExpression(element).get('language');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: getConditionExpression(element),\n      properties: {\n        language: value || ''\n      }\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"conditionScriptLanguage\",\n    label: translate('Format'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction ScriptType(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getScriptType$1(element);\n  };\n\n  const setValue = value => {\n    // reset script properties on type change\n    const updatedProperties = {\n      'body': value === 'script' ? '' : undefined,\n      'camunda:resource': value === 'resource' ? '' : undefined\n    };\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: getConditionExpression(element),\n      properties: updatedProperties\n    });\n  };\n\n  const getOptions = () => {\n    const options = [{\n      value: 'resource',\n      label: translate('External resource')\n    }, {\n      value: 'script',\n      label: translate('Inline script')\n    }];\n    return options;\n  };\n\n  return SelectEntry({\n    element,\n    id: 'conditionScriptType',\n    label: translate('Script type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction Script$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getConditionExpression(element).get('body');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: getConditionExpression(element),\n      properties: {\n        'body': value || ''\n      }\n    });\n  };\n\n  return jsx(TextAreaEntry, {\n    element: element,\n    id: \"conditionScriptValue\",\n    label: translate('Script'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce,\n    monospace: true\n  });\n}\n\nfunction Resource$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getConditionExpression(element).get('camunda:resource');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: getConditionExpression(element),\n      properties: {\n        'camunda:resource': value || ''\n      }\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: true,\n    id: \"conditionScriptResource\",\n    label: translate('Resource'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction VariableEventProps(props) {\n  const {\n    element\n  } = props;\n  const entries = [];\n  entries.push({\n    id: 'conditionVariableName',\n    component: VariableName,\n    isEdited: isTextFieldEntryEdited\n  });\n\n  if (!is(element, 'bpmn:StartEvent')) {\n    entries.push({\n      id: 'conditionVariableEvents',\n      component: VariableEvents,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction VariableName(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getConditionalEventDefinition(element).get('variableName');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: getConditionalEventDefinition(element),\n      properties: {\n        variableName: value || ''\n      }\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"conditionVariableName\",\n    label: translate('Variable name'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n}\n\nfunction VariableEvents(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return getConditionalEventDefinition(element).get('variableEvents');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: getConditionalEventDefinition(element),\n      properties: {\n        variableEvents: value || ''\n      }\n    });\n  };\n\n  return jsx(TextFieldEntry, {\n    element: element,\n    id: \"conditionVariableEvents\",\n    label: translate('Variable events'),\n    description: translate('Specify more than one variable change event as a comma separated list.'),\n    getValue: getValue,\n    setValue: setValue,\n    debounce: debounce\n  });\n} // helper ////////////////////\n\n\nconst CONDITIONAL_SOURCES = ['bpmn:Activity', 'bpmn:ExclusiveGateway', 'bpmn:InclusiveGateway', 'bpmn:ComplexGateway'];\n\nfunction isConditionalSource(element) {\n  return isAny(element, CONDITIONAL_SOURCES);\n}\n\nfunction getConditionalEventDefinition(element) {\n  if (!is(element, 'bpmn:Event')) {\n    return false;\n  }\n\n  return getEventDefinition(element, 'bpmn:ConditionalEventDefinition');\n}\n\nfunction getConditionType(element) {\n  const conditionExpression = getConditionExpression(element);\n\n  if (!conditionExpression) {\n    return '';\n  } else {\n    return conditionExpression.get('language') === undefined ? 'expression' : 'script';\n  }\n}\n/**\n * getConditionExpression - get the body value of a condition expression for a given element\n *\n * @param  {ModdleElement} element\n *\n * @return {string|undefined}\n */\n\n\nfunction getConditionExpression(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (is(businessObject, 'bpmn:SequenceFlow')) {\n    return businessObject.get('conditionExpression');\n  } else if (getConditionalEventDefinition(businessObject)) {\n    return getConditionalEventDefinition(businessObject).get('condition');\n  }\n}\n\nfunction getScriptType$1(element) {\n  const conditionExpression = getConditionExpression(element);\n  const resource = conditionExpression.get('camunda:resource');\n\n  if (typeof resource !== 'undefined') {\n    return 'resource';\n  } else {\n    return 'script';\n  }\n}\n\nfunction updateCondition(element, commandStack, condition = undefined) {\n  if (is(element, 'bpmn:SequenceFlow')) {\n    commandStack.execute('element.updateProperties', {\n      element,\n      properties: {\n        conditionExpression: condition\n      }\n    });\n  } else {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: getConditionalEventDefinition(element),\n      properties: {\n        condition\n      }\n    });\n  }\n}\n\nfunction createFormalExpression(parent, attributes, bpmnFactory) {\n  return createElement('bpmn:FormalExpression', attributes, is(parent, 'bpmn:SequenceFlow') ? getBusinessObject(parent) : getConditionalEventDefinition(parent), bpmnFactory);\n}\n\n/**\n * Cf. https://docs.camunda.org/manual/latest/user-guide/process-engine/scripting/\n */\n\nfunction ScriptProps(props) {\n  const {\n    element,\n    script,\n    prefix\n  } = props;\n  const entries = [];\n  const scriptType = getScriptType(script || element);\n  const idPrefix = prefix || ''; // (1) scriptFormat\n\n  entries.push({\n    id: idPrefix + 'scriptFormat',\n    component: Format,\n    isEdited: isTextFieldEntryEdited,\n    idPrefix,\n    script\n  }); // (2) type\n\n  entries.push({\n    id: idPrefix + 'scriptType',\n    component: Type$3,\n    isEdited: isSelectEntryEdited,\n    idPrefix,\n    script\n  }); // (3) script\n\n  if (scriptType === 'script') {\n    entries.push({\n      id: idPrefix + 'scriptValue',\n      component: Script,\n      isEdited: isTextAreaEntryEdited,\n      idPrefix,\n      script\n    });\n  } // (4) resource\n\n\n  if (scriptType === 'resource') {\n    entries.push({\n      id: idPrefix + 'scriptResource',\n      component: Resource,\n      isEdited: isTextFieldEntryEdited,\n      idPrefix,\n      script\n    });\n  }\n\n  return entries;\n}\n\nfunction Format(props) {\n  const {\n    element,\n    idPrefix,\n    script\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = script || getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('scriptFormat');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        scriptFormat: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: idPrefix + 'scriptFormat',\n    label: translate('Format'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Type$3(props) {\n  const {\n    element,\n    idPrefix,\n    script\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const businessObject = script || getBusinessObject(element);\n  const scriptProperty = getScriptProperty(businessObject);\n\n  const getValue = () => {\n    return getScriptType(businessObject);\n  };\n\n  const setValue = value => {\n    // reset script properties on type change\n    const properties = {\n      [scriptProperty]: value === 'script' ? '' : undefined,\n      'camunda:resource': value === 'resource' ? '' : undefined\n    };\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties\n    });\n  };\n\n  const getOptions = () => {\n    const options = [{\n      value: '',\n      label: translate('<none>')\n    }, {\n      value: 'resource',\n      label: translate('External resource')\n    }, {\n      value: 'script',\n      label: translate('Inline script')\n    }];\n    return options;\n  };\n\n  return SelectEntry({\n    element,\n    id: idPrefix + 'scriptType',\n    label: translate('Type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction Script(props) {\n  const {\n    element,\n    idPrefix,\n    script\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = script || getBusinessObject(element);\n  const scriptProperty = getScriptProperty(businessObject);\n\n  const getValue = () => {\n    return getScriptValue(businessObject);\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        [scriptProperty]: value || ''\n      }\n    });\n  };\n\n  return TextAreaEntry({\n    element,\n    id: idPrefix + 'scriptValue',\n    label: translate('Script'),\n    getValue,\n    setValue,\n    debounce,\n    monospace: true\n  });\n}\n\nfunction Resource(props) {\n  const {\n    element,\n    idPrefix,\n    script\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = script || getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:resource');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:resource': value || ''\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: idPrefix + 'scriptResource',\n    label: translate('Resource'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ////////////////////\n\n\nfunction getScriptType(element) {\n  const businessObject = getBusinessObject(element);\n  const scriptValue = getScriptValue(businessObject);\n\n  if (typeof scriptValue !== 'undefined') {\n    return 'script';\n  }\n\n  const resource = businessObject.get('camunda:resource');\n\n  if (typeof resource !== 'undefined') {\n    return 'resource';\n  }\n}\n\nfunction getScriptValue(businessObject) {\n  return businessObject.get(getScriptProperty(businessObject));\n}\n\nfunction isScript$2(element) {\n  return is(element, 'camunda:Script');\n}\n\nfunction getScriptProperty(businessObject) {\n  return isScript$2(businessObject) ? 'value' : 'script';\n}\n\nfunction getElements(businessObject, type, property) {\n  const elements = getExtensionElementsList(businessObject, type);\n  return !property ? elements : (elements[0] || {})[property] || [];\n}\n\nfunction getParameters(element, prop) {\n  const inputOutput = getInputOutput(element);\n  return inputOutput && inputOutput.get(prop) || [];\n}\n/**\n * Get a camunda:inputOutput from the business object\n *\n * @param {djs.model.Base | ModdleElement} element\n *\n * @return {ModdleElement} the inputOutput object\n */\n\n\nfunction getInputOutput(element) {\n  if (is(element, 'camunda:Connector')) {\n    return element.get('inputOutput');\n  }\n\n  const businessObject = getBusinessObject(element);\n  return (getElements(businessObject, 'camunda:InputOutput') || [])[0];\n}\n/**\n * Return all input parameters existing in the business object, and\n * an empty array if none exist.\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array} a list of input parameter objects\n */\n\nfunction getInputParameters(element) {\n  return getParameters(element, 'inputParameters');\n}\n/**\n * Return all output parameters existing in the business object, and\n * an empty array if none exist.\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array} a list of output parameter objects\n */\n\nfunction getOutputParameters(element) {\n  return getParameters(element, 'outputParameters');\n}\nfunction isInputOutputSupported(element) {\n  const businessObject = getBusinessObject(element);\n  return is(businessObject, 'bpmn:FlowNode') && !(isAny(businessObject, ['bpmn:StartEvent', 'bpmn:BoundaryEvent', 'bpmn:Gateway']) || is(businessObject, 'bpmn:SubProcess') && businessObject.get('triggeredByEvent'));\n}\nfunction areInputParametersSupported(element) {\n  return isInputOutputSupported(element);\n}\nfunction areOutputParametersSupported(element) {\n  const businessObject = getBusinessObject(element);\n  return isInputOutputSupported(element) && !is(businessObject, 'bpmn:EndEvent') && !businessObject.loopCharacteristics;\n}\nfunction getInputOutputType(parameter) {\n  const definitionTypes = {\n    'camunda:Map': 'map',\n    'camunda:List': 'list',\n    'camunda:Script': 'script'\n  };\n  let type = 'stringOrExpression';\n  const definition = parameter.get('definition');\n\n  if (typeof definition !== 'undefined') {\n    type = definitionTypes[definition.$type];\n  }\n\n  return type;\n}\nfunction CreateParameterCmd(element, type, parent, bpmnFactory) {\n  const isInput = type === 'camunda:InputParameter';\n  const newParameter = createElement(type, {\n    name: nextId(isInput ? 'Input_' : 'Output_')\n  }, parent, bpmnFactory);\n  const propertyName = isInput ? 'inputParameters' : 'outputParameters';\n  return {\n    cmd: 'element.updateModdleProperties',\n    context: {\n      element,\n      moddleElement: parent,\n      properties: {\n        [propertyName]: [...parent.get(propertyName), newParameter]\n      }\n    }\n  };\n}\nfunction AddParameterCmd(element, type, bpmnFactory) {\n  const commands = [];\n  const businessObject = getBusinessObject(element);\n  let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n  if (!extensionElements) {\n    extensionElements = createElement('bpmn:ExtensionElements', {\n      values: []\n    }, businessObject, bpmnFactory);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: businessObject,\n        properties: {\n          extensionElements\n        }\n      }\n    });\n  } // (2) ensure inputOutput\n\n\n  let inputOutput = getInputOutput(element);\n\n  if (!inputOutput) {\n    const parent = extensionElements;\n    inputOutput = createElement('camunda:InputOutput', {\n      inputParameters: [],\n      outputParameters: []\n    }, parent, bpmnFactory);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: extensionElements,\n        properties: {\n          values: [...extensionElements.get('values'), inputOutput]\n        }\n      }\n    });\n  } // (3) create + add parameter\n\n\n  commands.push(CreateParameterCmd(element, type, inputOutput, bpmnFactory));\n  return commands;\n}\n\nfunction ListProp(props) {\n  const {\n    element,\n    id: idPrefix,\n    index,\n    item\n  } = props;\n  const id = `${idPrefix}-listItem-${index}`;\n  return jsx(ListItem, {\n    idPrefix: id,\n    element: element,\n    item: item\n  });\n}\n\nfunction ListProps(props) {\n  const {\n    idPrefix,\n    element,\n    parameter\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const list = parameter.get('definition');\n  const items = list.get('items');\n\n  function addItem() {\n    const value = createElement('camunda:Value', {}, parameter, bpmnFactory);\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: list,\n      properties: {\n        items: [...list.get('items'), value]\n      }\n    });\n  }\n\n  function removeItem(item) {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: list,\n      properties: {\n        items: without(list.get('items'), item)\n      }\n    });\n  }\n\n  function compareFn(item, anotherItem) {\n    const [value = '', anotherValue = ''] = [item.value, anotherItem.value];\n    return value === anotherValue ? 0 : value > anotherValue ? 1 : -1;\n  }\n\n  return ListEntry({\n    element,\n    autoFocusEntry: true,\n    compareFn,\n    id: idPrefix + '-list',\n    items,\n    label: translate('List values'),\n    onAdd: addItem,\n    onRemove: removeItem,\n    component: ListProp\n  });\n}\n\nfunction ListItem(props) {\n  const {\n    idPrefix,\n    element,\n    item\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const definitionLabels = {\n    'camunda:Map': translate('Map'),\n    'camunda:List': translate('List'),\n    'camunda:Script': translate('Script')\n  };\n\n  const getValue = () => {\n    if (isDefinitionType$1(item)) {\n      return definitionLabels[item.$type];\n    }\n\n    return item.get('value');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: item,\n      properties: {\n        value\n      }\n    });\n  };\n\n  return ListValue({\n    id: idPrefix + '-value',\n    disabled: isDefinitionType$1(item),\n    getValue,\n    setValue\n  });\n}\n\nfunction ListValue(props) {\n  const {\n    id,\n    disabled,\n    getValue,\n    setValue\n  } = props;\n  const debounce = useService('debounceInput', true);\n  return jsx(SimpleEntry, {\n    id: id,\n    getValue: getValue,\n    setValue: setValue,\n    disabled: disabled,\n    debounce: debounce\n  });\n} // helper //////////////////////\n\n\nfunction isScript$1(element) {\n  return is(element, 'camunda:Script');\n}\n\nfunction isList$1(element) {\n  return is(element, 'camunda:List');\n}\n\nfunction isMap$1(element) {\n  return is(element, 'camunda:Map');\n}\n\nfunction isDefinitionType$1(element) {\n  return isScript$1(element) || isList$1(element) || isMap$1(element);\n}\n\nfunction MapProp(props) {\n  const {\n    element,\n    id: idPrefix,\n    index,\n    item: entry,\n    open\n  } = props;\n  const id = `${idPrefix}-mapEntry-${index}`;\n  const translate = useService('translate');\n  return jsx(CollapsibleEntry, {\n    id: id,\n    element: element,\n    entries: MapEntry({\n      element,\n      entry,\n      idPrefix: id\n    }),\n    label: entry.get('key') || translate('<empty>'),\n    open: open\n  });\n}\n\nfunction MapProps(props) {\n  const {\n    idPrefix,\n    element,\n    parameter\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const map = parameter.get('definition');\n  const entries = map.get('entries');\n\n  function addEntry() {\n    const entry = createElement('camunda:Entry', {}, parameter, bpmnFactory);\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: map,\n      properties: {\n        entries: [...map.get('entries'), entry]\n      }\n    });\n  }\n\n  function removeEntry(entry) {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: map,\n      properties: {\n        entries: without(map.get('entries'), entry)\n      }\n    });\n  }\n\n  function compareFn(entry, anotherEntry) {\n    const [key = '', anotherKey = ''] = [entry.key, anotherEntry.key];\n    return key === anotherKey ? 0 : key > anotherKey ? 1 : -1;\n  }\n\n  return ListEntry({\n    element,\n    autoFocusEntry: true,\n    compareFn,\n    id: idPrefix + '-map',\n    items: entries,\n    label: translate('Map entries'),\n    onAdd: addEntry,\n    onRemove: removeEntry,\n    component: MapProp\n  });\n}\n\nfunction MapEntry(props) {\n  const {\n    element,\n    entry,\n    idPrefix\n  } = props;\n  const entries = [{\n    id: idPrefix + '-key',\n    component: MapKey,\n    entry,\n    idPrefix,\n    element\n  }, {\n    id: idPrefix + '-value',\n    component: MapValue,\n    entry,\n    idPrefix,\n    element\n  }];\n  return entries;\n}\n\nfunction MapKey(props) {\n  const {\n    element,\n    entry,\n    idPrefix\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: entry,\n      properties: {\n        key: value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return entry.get('key');\n  };\n\n  return TextFieldEntry({\n    element: entry,\n    id: idPrefix + '-key',\n    label: translate('Key'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction MapValue(props) {\n  const {\n    element,\n    entry,\n    idPrefix\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const definition = entry.get('definition');\n  const definitionLabels = {\n    'camunda:Map': translate('Map'),\n    'camunda:List': translate('List'),\n    'camunda:Script': translate('Script')\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: entry,\n      properties: {\n        value\n      }\n    });\n  };\n\n  const getValue = () => {\n    if (isDefinitionType(definition)) {\n      return definitionLabels[definition.$type];\n    }\n\n    return entry.get('value');\n  };\n\n  return TextFieldEntry({\n    element: entry,\n    id: idPrefix + '-value',\n    label: translate('Value'),\n    getValue,\n    setValue,\n    disabled: isDefinitionType(definition),\n    debounce\n  });\n} // helper ///////////////////\n\n\nfunction isScript(element) {\n  return is(element, 'camunda:Script');\n}\n\nfunction isList(element) {\n  return is(element, 'camunda:List');\n}\n\nfunction isMap(element) {\n  return is(element, 'camunda:Map');\n}\n\nfunction isDefinitionType(element) {\n  return isScript(element) || isList(element) || isMap(element);\n}\n\nconst DEFAULT_PROPS$3 = {\n  value: undefined,\n  definition: undefined\n};\nfunction InputOutputParameter(props) {\n  const {\n    idPrefix,\n    element,\n    parameter\n  } = props;\n  const inputOutputType = getInputOutputType(parameter);\n  let entries = [{\n    id: idPrefix + '-name',\n    component: Name$2,\n    isEdited: isTextFieldEntryEdited,\n    idPrefix,\n    parameter\n  }, {\n    id: idPrefix + '-type',\n    component: Type$2,\n    isEdited: isSelectEntryEdited,\n    idPrefix,\n    parameter\n  }]; // (1) String or expression\n\n  if (inputOutputType === 'stringOrExpression') {\n    entries.push({\n      id: idPrefix + '-stringOrExpression',\n      component: StringOrExpression,\n      isEdited: isTextAreaEntryEdited,\n      idPrefix,\n      parameter\n    }); // (2) Script\n  } else if (inputOutputType === 'script') {\n    const script = parameter.get('definition');\n    entries = [...entries, ...ScriptProps({\n      element,\n      prefix: idPrefix + '-',\n      script\n    })]; // (3) List\n  } else if (inputOutputType === 'list') {\n    entries.push({\n      id: `${idPrefix}-list`,\n      component: ListProps,\n      idPrefix,\n      parameter\n    }); // (4) Map\n  } else if (inputOutputType === 'map') {\n    entries.push({\n      id: `${idPrefix}-map`,\n      component: MapProps,\n      idPrefix,\n      parameter\n    });\n  }\n\n  return entries;\n}\n\nfunction Name$2(props) {\n  const {\n    idPrefix,\n    element,\n    parameter\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: parameter,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  const getValue = parameter => {\n    return parameter.get('name');\n  };\n\n  return TextFieldEntry({\n    element: parameter,\n    id: idPrefix + '-name',\n    label: translate(isInput(parameter) ? 'Local variable name' : 'Process variable name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Type$2(props) {\n  const {\n    idPrefix,\n    element,\n    parameter\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const createDefinitionElement = type => {\n    return createElement(type, {}, parameter, bpmnFactory);\n  };\n\n  const getValue = mapping => {\n    return getInputOutputType(mapping);\n  };\n\n  const setValue = value => {\n    let properties = { ...DEFAULT_PROPS$3\n    };\n\n    if (value === 'script') {\n      properties.definition = createDefinitionElement('camunda:Script');\n    } else if (value === 'list') {\n      properties.definition = createDefinitionElement('camunda:List');\n    } else if (value === 'map') {\n      properties.definition = createDefinitionElement('camunda:Map');\n    }\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: parameter,\n      properties\n    });\n  };\n\n  const getOptions = () => {\n    const options = [{\n      label: translate('List'),\n      value: 'list'\n    }, {\n      label: translate('Map'),\n      value: 'map'\n    }, {\n      label: translate('Script'),\n      value: 'script'\n    }, {\n      label: translate('String or expression'),\n      value: 'stringOrExpression'\n    }];\n    return options;\n  };\n\n  return SelectEntry({\n    element: parameter,\n    id: idPrefix + '-type',\n    label: translate('Assignment type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction StringOrExpression(props) {\n  const {\n    idPrefix,\n    element,\n    parameter\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: parameter,\n      properties: {\n        value\n      }\n    });\n  };\n\n  const getValue = parameter => {\n    return parameter.get('value');\n  };\n\n  return TextAreaEntry({\n    element: parameter,\n    id: idPrefix + '-stringOrExpression',\n    label: translate('Value'),\n    description: translate('Start typing \"${}\" to create an expression.'),\n    getValue,\n    setValue,\n    rows: 1,\n    debounce\n  });\n} // helper /////////////////////\n\n\nfunction isInput(parameter) {\n  return is(parameter, 'camunda:InputParameter');\n}\n\n/**\n * Check whether an element is camunda:ServiceTaskLike\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\n\nfunction isServiceTaskLike(element) {\n  return is(element, 'camunda:ServiceTaskLike');\n}\n/**\n * Returns 'true' if the given element is 'camunda:DmnCapable'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\n\nfunction isDmnCapable(element) {\n  return is(element, 'camunda:DmnCapable');\n}\n/**\n * Returns 'true' if the given element is 'camunda:ExternalCapable'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\n\nfunction isExternalCapable(element) {\n  return is(element, 'camunda:ExternalCapable');\n}\n/**\n * getServiceTaskLikeBusinessObject - Get a 'camunda:ServiceTaskLike' business object.\n *\n * If the given element is not a 'camunda:ServiceTaskLike', then 'false'\n * is returned.\n *\n * @param {djs.model.Base} element\n * @return {ModdleElement} the 'camunda:ServiceTaskLike' business object\n */\n\nfunction getServiceTaskLikeBusinessObject(element) {\n  if (is(element, 'bpmn:IntermediateThrowEvent') || is(element, 'bpmn:EndEvent')) {\n    // change business object to 'messageEventDefinition' when\n    // the element is a message intermediate throw event or message end event\n    // because the camunda extensions (e.g. camunda:class) are in the message\n    // event definition tag and not in the intermediate throw event or end event tag\n    const messageEventDefinition = getMessageEventDefinition(element);\n\n    if (messageEventDefinition) {\n      element = messageEventDefinition;\n    }\n  }\n\n  return isServiceTaskLike(element) && getBusinessObject(element);\n}\n/**\n * Returns the implementation type of the given element.\n *\n * Possible implementation types are:\n * - dmn\n * - connector\n * - external\n * - class\n * - expression\n * - delegateExpression\n * - script\n * - or undefined, when no matching implementation type is found\n *\n * @param  {djs.model.Base} element\n *\n * @return {String} the implementation type\n */\n\nfunction getImplementationType(element) {\n  const businessObject = getListenerBusinessObject(element) || getServiceTaskLikeBusinessObject(element);\n\n  if (!businessObject) {\n    return;\n  }\n\n  if (isDmnCapable(businessObject)) {\n    const decisionRef = businessObject.get('camunda:decisionRef');\n\n    if (typeof decisionRef !== 'undefined') {\n      return 'dmn';\n    }\n  }\n\n  if (isServiceTaskLike(businessObject)) {\n    const connectors = getExtensionElementsList(businessObject, 'camunda:Connector');\n\n    if (connectors.length) {\n      return 'connector';\n    }\n  }\n\n  if (isExternalCapable(businessObject)) {\n    const type = businessObject.get('camunda:type');\n\n    if (type === 'external') {\n      return 'external';\n    }\n  }\n\n  const cls = businessObject.get('camunda:class');\n\n  if (typeof cls !== 'undefined') {\n    return 'class';\n  }\n\n  const expression = businessObject.get('camunda:expression');\n\n  if (typeof expression !== 'undefined') {\n    return 'expression';\n  }\n\n  const delegateExpression = businessObject.get('camunda:delegateExpression');\n\n  if (typeof delegateExpression !== 'undefined') {\n    return 'delegateExpression';\n  }\n\n  const script = businessObject.get('script');\n\n  if (typeof script !== 'undefined') {\n    return 'script';\n  }\n}\n\nfunction getListenerBusinessObject(businessObject) {\n  if (isAny(businessObject, ['camunda:ExecutionListener', 'camunda:TaskListener'])) {\n    return businessObject;\n  }\n}\n\nfunction areConnectorsSupported(element) {\n  const businessObject = getServiceTaskLikeBusinessObject(element);\n  return businessObject && getImplementationType(businessObject) === 'connector';\n}\nfunction getConnectors$2(businessObject) {\n  return getExtensionElementsList(businessObject, 'camunda:Connector');\n}\nfunction getConnector$1(element) {\n  const businessObject = getServiceTaskLikeBusinessObject(element);\n  const connectors = getConnectors$2(businessObject);\n  return connectors[0];\n}\n\nfunction ConnectorInputProps(props) {\n  const {\n    element,\n    injector\n  } = props;\n\n  if (!areConnectorsSupported(element)) {\n    return null;\n  }\n\n  const connector = getConnector$1(element);\n  const commandStack = injector.get('commandStack'),\n        bpmnFactory = injector.get('bpmnFactory');\n  const inputParameters = getInputParameters(connector) || [];\n  const items = inputParameters.map((parameter, index) => {\n    const id = element.id + '-connector-inputParameter-' + index;\n    return {\n      id,\n      label: parameter.get('name') || '',\n      entries: InputOutputParameter({\n        element,\n        idPrefix: id,\n        parameter\n      }),\n      autoFocusEntry: id + '-name',\n      remove: removeFactory$9({\n        connector,\n        element,\n        parameter,\n        commandStack\n      })\n    };\n  });\n\n  function add(event) {\n    event.stopPropagation();\n    const commands = []; // (1) ensure inputOutput\n\n    let inputOutput = getInputOutput(connector);\n\n    if (!inputOutput) {\n      inputOutput = createElement('camunda:InputOutput', {\n        inputParameters: [],\n        outputParameters: []\n      }, connector, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element: element,\n          moddleElement: connector,\n          properties: {\n            inputOutput\n          }\n        }\n      });\n    } // (2) create + add parameter\n\n\n    commands.push(CreateParameterCmd(element, 'camunda:InputParameter', inputOutput, bpmnFactory)); // (3) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  }\n\n  return {\n    items,\n    add\n  };\n}\n\nfunction removeFactory$9(props) {\n  const {\n    commandStack,\n    connector,\n    element,\n    parameter\n  } = props;\n  return function (event) {\n    event.stopPropagation();\n    const inputOutput = getInputOutput(connector);\n\n    if (!inputOutput) {\n      return;\n    }\n\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: inputOutput,\n      properties: {\n        inputParameters: without(inputOutput.get('inputParameters'), parameter)\n      }\n    });\n  };\n}\n\nfunction ConnectorOutputProps(props) {\n  const {\n    element,\n    injector\n  } = props;\n\n  if (!areConnectorsSupported(element)) {\n    return null;\n  }\n\n  const connector = getConnector$1(element);\n  const commandStack = injector.get('commandStack'),\n        bpmnFactory = injector.get('bpmnFactory');\n  const outputParameters = getOutputParameters(connector) || [];\n  const items = outputParameters.map((parameter, index) => {\n    const id = element.id + '-connector-outputParameter-' + index;\n    return {\n      id,\n      label: parameter.get('name') || '',\n      entries: InputOutputParameter({\n        idPrefix: id,\n        element,\n        parameter\n      }),\n      autoFocusEntry: id + '-name',\n      remove: removeFactory$8({\n        connector,\n        element,\n        commandStack,\n        parameter\n      })\n    };\n  });\n\n  function add(event) {\n    event.stopPropagation();\n    const commands = []; // (1) ensure inputOutput\n\n    let inputOutput = getInputOutput(connector);\n\n    if (!inputOutput) {\n      inputOutput = createElement('camunda:InputOutput', {\n        inputParameters: [],\n        outputParameters: []\n      }, connector, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element: element,\n          moddleElement: connector,\n          properties: {\n            inputOutput\n          }\n        }\n      });\n    } // (2) create + add parameter\n\n\n    commands.push(CreateParameterCmd(element, 'camunda:OutputParameter', inputOutput, bpmnFactory)); // (3) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  }\n\n  return {\n    items,\n    add\n  };\n}\n\nfunction removeFactory$8(props) {\n  const {\n    commandStack,\n    connector,\n    element,\n    parameter\n  } = props;\n  return function (event) {\n    event.stopPropagation();\n    const inputOutput = getInputOutput(connector);\n\n    if (!inputOutput) {\n      return;\n    }\n\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: inputOutput,\n      properties: {\n        outputParameters: without(inputOutput.get('outputParameters'), parameter)\n      }\n    });\n  };\n}\n\nfunction ErrorProps(props) {\n  const {\n    element,\n    entries\n  } = props;\n\n  if (!isErrorSupported(element)) {\n    return entries;\n  }\n\n  const error = getError(element); // (1) errorMessage (error)\n\n  if (error) {\n    const idx = findPlaceToInsert(entries, 'errorCode'); // place below errorCode\n\n    entries.splice(idx, 0, {\n      id: 'errorMessage',\n      component: ErrorMessage$1,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  if (!canHaveErrorVariables(element)) {\n    return entries;\n  } // (2) errorCodeVariable + errorMessageVariable (errorEventDefinition)\n\n\n  entries.push({\n    id: 'errorCodeVariable',\n    component: ErrorCodeVariable,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'errorMessageVariable',\n    component: ErrorMessageVariable,\n    isEdited: isTextFieldEntryEdited\n  });\n  return entries;\n}\n\nfunction ErrorMessage$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const error = getError(element);\n\n  const getValue = () => {\n    return error.get('camunda:errorMessage');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: error,\n      properties: {\n        'camunda:errorMessage': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'errorMessage',\n    label: translate('Message'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ErrorCodeVariable(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const errorEventDefinition = getErrorEventDefinition(element);\n\n  const getValue = () => {\n    return errorEventDefinition.get('camunda:errorCodeVariable');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: errorEventDefinition,\n      properties: {\n        'camunda:errorCodeVariable': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'errorCodeVariable',\n    label: translate('Code variable'),\n    description: translate('Define the name of the variable that will contain the error code.'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ErrorMessageVariable(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const errorEventDefinition = getErrorEventDefinition(element);\n\n  const getValue = () => {\n    return errorEventDefinition.get('camunda:errorMessageVariable');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: errorEventDefinition,\n      properties: {\n        'camunda:errorMessageVariable': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'errorMessageVariable',\n    label: translate('Message variable'),\n    description: translate('Define the name of the variable that will contain the error message.'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ///////////////////////\n\n\nfunction canHaveErrorVariables(element) {\n  return is(element, 'bpmn:StartEvent') || is(element, 'bpmn:BoundaryEvent');\n}\n\nfunction findPlaceToInsert(entries, idx) {\n  const entryIndex = findIndex(entries, entry => entry.id === idx);\n  return entryIndex >= 0 ? entryIndex + 1 : entries.length;\n}\n\nconst EMPTY_OPTION = '';\nconst CREATE_NEW_OPTION = 'create-new';\nfunction Error$1(props) {\n  const {\n    idPrefix,\n    errorEventDefinition\n  } = props;\n  let entries = [{\n    id: idPrefix + '-errorRef',\n    component: ErrorRef,\n    isEdited: isSelectEntryEdited,\n    errorEventDefinition,\n    idPrefix\n  }];\n  const error = errorEventDefinition.get('errorRef');\n\n  if (error) {\n    entries = [...entries, {\n      id: idPrefix + '-errorName',\n      component: ErrorName,\n      isEdited: isTextFieldEntryEdited,\n      error,\n      errorEventDefinition,\n      idPrefix\n    }, {\n      id: idPrefix + '-errorCode',\n      component: ErrorCode,\n      isEdited: isTextFieldEntryEdited,\n      error,\n      errorEventDefinition,\n      idPrefix\n    }, {\n      id: idPrefix + '-errorMessage',\n      component: ErrorMessage,\n      isEdited: isTextFieldEntryEdited,\n      error,\n      errorEventDefinition,\n      idPrefix\n    }];\n  }\n\n  entries.push({\n    id: idPrefix + '-expression',\n    component: Expression$2,\n    errorEventDefinition,\n    idPrefix\n  });\n  return entries;\n}\n\nfunction ErrorRef(props) {\n  const {\n    element,\n    errorEventDefinition,\n    idPrefix\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    const error = errorEventDefinition.get('errorRef');\n\n    if (error) {\n      return error.get('id');\n    }\n\n    return EMPTY_OPTION;\n  };\n\n  const setValue = value => {\n    const root = getRoot(businessObject);\n    const commands = [];\n    let error; // (1) create new error\n\n    if (value === CREATE_NEW_OPTION) {\n      error = createElement('bpmn:Error', {\n        name: nextId('Error_')\n      }, root, bpmnFactory);\n      value = error.get('id');\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: root,\n          properties: {\n            rootElements: [...root.get('rootElements'), error]\n          }\n        }\n      });\n    } // (2) update (or remove) errorRef\n\n\n    error = error || findRootElementById(businessObject, 'bpmn:Error', value);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: errorEventDefinition,\n        properties: {\n          errorRef: error\n        }\n      }\n    }); // (3) commit all updates\n\n    return commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  const getOptions = () => {\n    let options = [{\n      value: EMPTY_OPTION,\n      label: translate('<none>')\n    }, {\n      value: CREATE_NEW_OPTION,\n      label: translate('Create new ...')\n    }];\n    const errors = findRootElementsByType(getBusinessObject(element), 'bpmn:Error');\n    sortByName$1(errors).forEach(error => {\n      options.push({\n        value: error.get('id'),\n        label: error.get('name') || error.get('id')\n      });\n    });\n    return options;\n  };\n\n  return ReferenceSelectEntry({\n    element,\n    id: idPrefix + '-errorRef',\n    label: translate('Global error reference'),\n    autoFocusEntry: idPrefix + '-errorName',\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction ErrorName(props) {\n  const {\n    element,\n    error,\n    idPrefix\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return error.get('name');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: error,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: idPrefix + '-errorName',\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ErrorCode(props) {\n  const {\n    element,\n    error,\n    idPrefix\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return error.get('errorCode');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: error,\n      properties: {\n        errorCode: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: idPrefix + '-errorCode',\n    label: translate('Code'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ErrorMessage(props) {\n  const {\n    element,\n    error,\n    idPrefix\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return error.get('errorMessage');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: error,\n      properties: {\n        errorMessage: value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: idPrefix + '-errorMessage',\n    label: translate('Message'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Expression$2(props) {\n  const {\n    element,\n    errorEventDefinition,\n    idPrefix\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: errorEventDefinition,\n      properties: {\n        'camunda:expression': value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return errorEventDefinition.get('camunda:expression');\n  };\n\n  return TextFieldEntry({\n    element: errorEventDefinition,\n    id: idPrefix + '-expression',\n    label: translate('Throw expression'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helpers //////////\n\n\nfunction sortByName$1(elements) {\n  return sortBy(elements, e => (e.name || '').toLowerCase());\n}\n\nfunction ErrorsProps({\n  element,\n  injector\n}) {\n  const businessObject = getBusinessObject(element);\n\n  if (!is(element, 'bpmn:ServiceTask') || getImplementationType(element) !== 'external') {\n    return null;\n  }\n\n  const errorEventDefinitions = getExtensionElementsList(businessObject, 'camunda:ErrorEventDefinition');\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = errorEventDefinitions.map((errorEventDefinition, index) => {\n    const id = element.id + '-error-' + index;\n    return {\n      id,\n      label: getErrorLabel(errorEventDefinition),\n      entries: Error$1({\n        idPrefix: id,\n        element,\n        errorEventDefinition\n      }),\n      autoFocusEntry: id + '-errorRef',\n      remove: removeFactory$7({\n        commandStack,\n        element,\n        errorEventDefinition\n      })\n    };\n  });\n  return {\n    items,\n    add: addFactory$6({\n      bpmnFactory,\n      commandStack,\n      element\n    }),\n    shouldSort: false\n  };\n}\n\nfunction removeFactory$7({\n  commandStack,\n  element,\n  errorEventDefinition\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const businessObject = getBusinessObject(element);\n    removeExtensionElements(element, businessObject, errorEventDefinition, commandStack);\n  };\n}\n\nfunction addFactory$6({\n  bpmnFactory,\n  commandStack,\n  element\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const businessObject = getBusinessObject(element);\n    const error = createElement('camunda:ErrorEventDefinition', {}, undefined, bpmnFactory);\n    addExtensionElements(element, businessObject, error, bpmnFactory, commandStack);\n  };\n} // helpers //////////\n\n\nfunction getErrorLabel(errorEventDefinition) {\n  const error = errorEventDefinition.get('errorRef');\n\n  if (!error) {\n    return '<no reference>';\n  }\n\n  const errorCode = error.get('errorCode'),\n        name = error.get('name') || '<unnamed>';\n\n  if (errorCode) {\n    return `${name} (code = ${errorCode})`;\n  }\n\n  return name;\n}\n\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction EscalationProps(props) {\n  const {\n    element,\n    entries\n  } = props;\n\n  if (!(isEscalationSupported(element) && canHaveEscalationVariables(element))) {\n    return entries;\n  }\n\n  entries.push({\n    id: 'escalationCodeVariable',\n    component: EscalationCodeVariable,\n    isEdited: isTextFieldEntryEdited\n  });\n  return entries;\n}\n\nfunction EscalationCodeVariable(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const escalationEventDefinition = getEscalationEventDefinition(element);\n\n  const getValue = () => {\n    return escalationEventDefinition.get('camunda:escalationCodeVariable');\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: escalationEventDefinition,\n      properties: {\n        'camunda:escalationCodeVariable': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'escalationCodeVariable',\n    label: translate('Code variable'),\n    description: translate('Define the name of the variable that will contain the escalation code.'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ///////////////////////\n\n\nfunction canHaveEscalationVariables(element) {\n  return is(element, 'bpmn:StartEvent') || is(element, 'bpmn:BoundaryEvent');\n}\n\nfunction ExtensionProperty(props) {\n  const {\n    idPrefix,\n    property\n  } = props;\n  const entries = [{\n    id: idPrefix + '-name',\n    component: NameProperty$1,\n    idPrefix,\n    property\n  }, {\n    id: idPrefix + '-value',\n    component: ValueProperty$1,\n    idPrefix,\n    property\n  }];\n  return entries;\n}\n\nfunction NameProperty$1(props) {\n  const {\n    idPrefix,\n    element,\n    property\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: property,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return property.name;\n  };\n\n  return TextFieldEntry({\n    element: property,\n    id: idPrefix + '-name',\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ValueProperty$1(props) {\n  const {\n    idPrefix,\n    element,\n    property\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: property,\n      properties: {\n        value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return property.value;\n  };\n\n  return TextFieldEntry({\n    element: property,\n    id: idPrefix + '-value',\n    label: translate('Value'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ExtensionPropertiesProps({\n  element,\n  injector\n}) {\n  let businessObject = getRelevantBusinessObject(element); // do not offer for empty pools\n\n  if (!businessObject) {\n    return;\n  }\n\n  const properties = getPropertiesList(businessObject) || [];\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = properties.map((property, index) => {\n    const id = element.id + '-extensionProperty-' + index;\n    return {\n      id,\n      label: property.get('name') || '',\n      entries: ExtensionProperty({\n        idPrefix: id,\n        element,\n        property\n      }),\n      autoFocusEntry: id + '-name',\n      remove: removeFactory$6({\n        commandStack,\n        element,\n        property\n      })\n    };\n  });\n  return {\n    items,\n    add: addFactory$5({\n      bpmnFactory,\n      commandStack,\n      element\n    })\n  };\n}\n\nfunction removeFactory$6({\n  commandStack,\n  element,\n  property\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const commands = [];\n    const businessObject = getRelevantBusinessObject(element);\n    const properties = getProperties(businessObject);\n\n    if (!properties) {\n      return;\n    }\n\n    const values = without(properties.get('values'), property);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: properties,\n        properties: {\n          values\n        }\n      }\n    }); // remove camunda:Properties if there are no properties anymore\n\n    if (!values.length) {\n      const businessObject = getBusinessObject(element),\n            extensionElements = businessObject.get('extensionElements');\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: without(extensionElements.get('values'), properties)\n          }\n        }\n      });\n    }\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n}\n\nfunction addFactory$5({\n  bpmnFactory,\n  commandStack,\n  element\n}) {\n  return function (event) {\n    event.stopPropagation();\n    let commands = [];\n    const businessObject = getRelevantBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure camunda:Properties\n\n\n    let properties = getProperties(businessObject);\n\n    if (!properties) {\n      const parent = extensionElements;\n      properties = createElement('camunda:Properties', {\n        values: []\n      }, parent, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), properties]\n          }\n        }\n      });\n    } // (3) create camunda:Property\n\n\n    const property = createElement('camunda:Property', {}, properties, bpmnFactory); // (4) add property to list\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: properties,\n        properties: {\n          values: [...properties.get('values'), property]\n        }\n      }\n    }); // (5) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n} // helper //////////////////\n\n\nfunction getRelevantBusinessObject(element) {\n  let businessObject = getBusinessObject(element);\n\n  if (is(element, 'bpmn:Participant')) {\n    return businessObject.get('processRef');\n  }\n\n  return businessObject;\n}\n\nfunction getProperties(businessObject) {\n  return getExtensionElementsList(businessObject, 'camunda:Properties')[0];\n}\n\nfunction getPropertiesList(businessObject) {\n  const properties = getProperties(businessObject);\n  return properties && properties.get('values');\n}\n\nfunction ExternalTaskPriorityProps(props) {\n  const {\n    element\n  } = props;\n  const businessObject = getBusinessObject(element);\n\n  if (!is(element, 'bpmn:Process') && !(is(element, 'bpmn:Participant') && businessObject.get('processRef')) && !isExternalTaskLike(element)) {\n    return [];\n  }\n\n  return [{\n    id: 'externalTaskPriority',\n    component: ExternalTaskPriority,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction ExternalTaskPriority(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n  let businessObject;\n\n  if (is(element, 'bpmn:Participant')) {\n    businessObject = getBusinessObject(element).get('processRef');\n  } else if (isExternalTaskLike(element)) {\n    businessObject = getServiceTaskLikeBusinessObject(element);\n  } else {\n    businessObject = getBusinessObject(element);\n  }\n\n  const getValue = () => {\n    return businessObject.get('camunda:taskPriority');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:taskPriority': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'externalTaskPriority',\n    label: translate('Priority'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper //////////////////\n\n\nfunction isExternalTaskLike(element) {\n  const bo = getServiceTaskLikeBusinessObject(element),\n        type = bo && bo.get('camunda:type');\n  return is(bo, 'camunda:ServiceTaskLike') && type && type === 'external';\n}\n\nconst DEFAULT_PROPS$2 = {\n  'stringValue': undefined,\n  'string': undefined,\n  'expression': undefined\n};\nfunction FieldInjection(props) {\n  const {\n    element,\n    idPrefix,\n    field\n  } = props;\n  const entries = [{\n    id: idPrefix + '-name',\n    component: NameProperty,\n    field,\n    idPrefix,\n    element\n  }, {\n    id: idPrefix + '-type',\n    component: TypeProperty,\n    field,\n    idPrefix,\n    element\n  }, {\n    id: idPrefix + '-value',\n    component: ValueProperty,\n    field,\n    idPrefix,\n    element\n  }];\n  return entries;\n}\n\nfunction NameProperty(props) {\n  const {\n    idPrefix,\n    element,\n    field\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: field,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  const getValue = field => {\n    return field.name;\n  };\n\n  return TextFieldEntry({\n    element: field,\n    id: idPrefix + '-name',\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction TypeProperty(props) {\n  const {\n    idPrefix,\n    element,\n    field\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate');\n\n  const getValue = field => {\n    return determineType(field);\n  };\n\n  const setValue = value => {\n    const properties = Object.assign({}, DEFAULT_PROPS$2);\n    properties[value] = '';\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: field,\n      properties\n    });\n  };\n\n  const getOptions = element => {\n    const options = [{\n      value: 'string',\n      label: translate('String')\n    }, {\n      value: 'expression',\n      label: translate('Expression')\n    }];\n    return options;\n  };\n\n  return SelectEntry({\n    element: field,\n    id: idPrefix + '-type',\n    label: translate('Type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction ValueProperty(props) {\n  const {\n    idPrefix,\n    element,\n    field\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    // (1) determine which type we have set\n    const type = determineType(field); // (2) set property accordingly\n\n    const properties = Object.assign({}, DEFAULT_PROPS$2);\n    properties[type] = value || ''; // (3) execute the update command\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: field,\n      properties\n    });\n  };\n\n  const getValue = field => {\n    return field.string || field.stringValue || field.expression;\n  };\n\n  return TextFieldEntry({\n    element: field,\n    id: idPrefix + '-value',\n    label: translate('Value'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ///////////////////\n\n/**\n * determineType - get the type of a fieldInjection based on the attributes\n * set on it\n *\n * @param  {ModdleElement} field\n * @return {('string'|'expression')}\n */\n\n\nfunction determineType(field) {\n  // string is the default type\n  return 'string' in field && 'string' || 'expression' in field && 'expression' || 'stringValue' in field && 'string' || 'string';\n}\n\nfunction FieldInjectionProps({\n  element,\n  injector\n}) {\n  const businessObject = getServiceTaskLikeBusinessObject(element);\n\n  if (!businessObject) {\n    return null;\n  }\n\n  const fieldInjections = getExtensionElementsList(businessObject, 'camunda:Field');\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = fieldInjections.map((field, index) => {\n    const id = element.id + '-fieldInjection-' + index;\n    return {\n      id,\n      label: getFieldLabel(field),\n      entries: FieldInjection({\n        idPrefix: id,\n        element,\n        field\n      }),\n      autoFocusEntry: id + '-name',\n      remove: removeFactory$5({\n        commandStack,\n        element,\n        field\n      })\n    };\n  });\n  return {\n    items,\n    add: addFactory$4({\n      bpmnFactory,\n      commandStack,\n      element\n    })\n  };\n}\n\nfunction removeFactory$5({\n  commandStack,\n  element,\n  field\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const businessObject = getServiceTaskLikeBusinessObject(element);\n    removeExtensionElements(element, businessObject, field, commandStack);\n  };\n}\n\nfunction addFactory$4({\n  bpmnFactory,\n  commandStack,\n  element\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const businessObject = getServiceTaskLikeBusinessObject(element);\n    const fieldInjection = createElement('camunda:Field', {\n      name: undefined,\n      string: '',\n      // string is the default type\n      stringValue: undefined\n    }, null, bpmnFactory);\n    addExtensionElements(element, businessObject, fieldInjection, bpmnFactory, commandStack);\n  };\n} // helper ///////////////\n\n\nfunction getFieldLabel(field) {\n  return field.name || '<empty>';\n}\n\nfunction FormFieldConstraint(props) {\n  const {\n    constraint,\n    element,\n    idPrefix\n  } = props;\n  const entries = [{\n    id: idPrefix + '-name',\n    component: Name$1,\n    constraint,\n    idPrefix,\n    element\n  }, {\n    id: idPrefix + '-config',\n    component: Config,\n    constraint,\n    idPrefix,\n    element\n  }];\n  return entries;\n}\n\nfunction Name$1(props) {\n  const {\n    idPrefix,\n    element,\n    constraint\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: constraint,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return constraint.name;\n  };\n\n  return TextFieldEntry({\n    element: constraint,\n    id: idPrefix + '-name',\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Config(props) {\n  const {\n    idPrefix,\n    element,\n    constraint\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: constraint,\n      properties: {\n        config: value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return constraint.config;\n  };\n\n  return TextFieldEntry({\n    element: constraint,\n    id: idPrefix + '-config',\n    label: translate('Config'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction FormFieldProperty(props) {\n  const {\n    element,\n    idPrefix,\n    property\n  } = props;\n  const entries = [{\n    id: idPrefix + '-id',\n    component: Id$2,\n    idPrefix,\n    property,\n    element\n  }, {\n    id: idPrefix + '-value',\n    component: Value$1,\n    idPrefix,\n    property,\n    element\n  }];\n  return entries;\n}\n\nfunction Id$2(props) {\n  const {\n    idPrefix,\n    element,\n    property\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: property,\n      properties: {\n        id: value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return property.id;\n  };\n\n  return TextFieldEntry({\n    element: property,\n    id: idPrefix + '-id',\n    label: translate('ID'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Value$1(props) {\n  const {\n    idPrefix,\n    element,\n    property\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: property,\n      properties: {\n        value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return property.value;\n  };\n\n  return TextFieldEntry({\n    element: property,\n    id: idPrefix + '-value',\n    label: translate('Value'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction FormFieldValue(props) {\n  const {\n    element,\n    idPrefix,\n    value\n  } = props;\n  const entries = [{\n    id: idPrefix + '-id',\n    component: Id$1,\n    idPrefix,\n    value,\n    element\n  }, {\n    id: idPrefix + '-name',\n    component: Name,\n    idPrefix,\n    value,\n    element\n  }];\n  return entries;\n}\n\nfunction Id$1(props) {\n  const {\n    idPrefix,\n    element,\n    value\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n\n  const setValue = val => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: value,\n      properties: {\n        id: val\n      }\n    });\n  };\n\n  const getValue = () => {\n    return value.id;\n  };\n\n  return TextFieldEntry({\n    element: value,\n    id: idPrefix + '-id',\n    label: translate('ID'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Name(props) {\n  const {\n    idPrefix,\n    element,\n    value\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n\n  const setValue = val => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: value,\n      properties: {\n        name: val\n      }\n    });\n  };\n\n  const getValue = () => {\n    return value.name;\n  };\n\n  return TextFieldEntry({\n    element: value,\n    id: idPrefix + '-name',\n    label: translate('Name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nconst CUSTOM_TYPE_VALUE = '',\n      DEFINED_TYPE_VALUES = ['boolean', 'date', 'enum', 'long', 'string', undefined];\nfunction FormField(props) {\n  const {\n    idPrefix,\n    formField\n  } = props;\n  const entries = [{\n    id: idPrefix + '-formFieldID',\n    component: Id,\n    idPrefix,\n    formField\n  }, {\n    id: idPrefix + '-formFieldLabel',\n    component: Label,\n    idPrefix,\n    formField\n  }, {\n    id: idPrefix + '-formFieldType',\n    component: Type$1,\n    idPrefix,\n    formField\n  }];\n\n  if (!DEFINED_TYPE_VALUES.includes(formField.get('type'))) {\n    entries.push({\n      id: idPrefix + '-formFieldCustomType',\n      component: CustomType,\n      idPrefix,\n      formField\n    });\n  }\n\n  entries.push({\n    id: idPrefix + '-formFieldDefaultValue',\n    component: DefaultValue,\n    idPrefix,\n    formField\n  });\n\n  if (formField.get('type') === 'enum') {\n    entries.push({\n      id: idPrefix + '-formFieldValues',\n      component: ValueList,\n      formField,\n      idPrefix\n    });\n  }\n\n  entries.push({\n    id: idPrefix + '-formFieldConstraints',\n    component: ConstraintList,\n    formField,\n    idPrefix\n  }, {\n    id: idPrefix + '-formFieldProperties',\n    component: PropertiesList,\n    formField,\n    idPrefix\n  });\n  return entries;\n}\n\nfunction Id(props) {\n  const {\n    idPrefix,\n    element,\n    formField\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: formField,\n      properties: {\n        id: value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return formField.get('id');\n  };\n\n  return TextFieldEntry({\n    element: formField,\n    id: idPrefix + '-formFieldID',\n    label: translate('ID'),\n    description: translate('Refers to the process variable name'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Label(props) {\n  const {\n    idPrefix,\n    element,\n    formField\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: formField,\n      properties: {\n        label: value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return formField.get('label');\n  };\n\n  return TextFieldEntry({\n    element: formField,\n    id: idPrefix + '-formFieldLabel',\n    label: translate('Label'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Type$1(props) {\n  const {\n    idPrefix,\n    element,\n    formField\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: formField,\n      properties: {\n        type: value\n      }\n    });\n  };\n\n  const getValue = () => {\n    const type = formField.get('type');\n    return DEFINED_TYPE_VALUES.includes(type) ? type : CUSTOM_TYPE_VALUE;\n  };\n\n  const getOptions = () => {\n    const options = [{\n      label: translate('boolean'),\n      value: 'boolean'\n    }, {\n      label: translate('date'),\n      value: 'date'\n    }, {\n      label: translate('enum'),\n      value: 'enum'\n    }, {\n      label: translate('long'),\n      value: 'long'\n    }, {\n      label: translate('string'),\n      value: 'string'\n    }, {\n      label: translate('<custom type>'),\n      value: CUSTOM_TYPE_VALUE\n    }]; // for the initial state only, we want to show an empty state\n\n    if (formField.get('type') === undefined) {\n      options.unshift({\n        label: translate('<none>'),\n        value: ''\n      });\n    }\n\n    return options;\n  };\n\n  return SelectEntry({\n    element: formField,\n    id: idPrefix + '-formFieldType',\n    label: translate('Type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction CustomType(props) {\n  const {\n    idPrefix,\n    element,\n    formField\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    const type = value || '';\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: formField,\n      properties: {\n        type\n      }\n    });\n  };\n\n  const getValue = () => {\n    return formField.get('type');\n  };\n\n  return TextFieldEntry({\n    element: formField,\n    id: idPrefix + '-formFieldCustomType',\n    label: translate('Custom type'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction DefaultValue(props) {\n  const {\n    idPrefix,\n    element,\n    formField\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: formField,\n      properties: {\n        defaultValue: value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return formField.get('defaultValue');\n  };\n\n  return TextFieldEntry({\n    element: formField,\n    id: idPrefix + '-formFieldDefaultValue',\n    label: translate('Default value'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Value(props) {\n  const {\n    element,\n    id: idPrefix,\n    index,\n    item: value,\n    open\n  } = props;\n  const translate = useService('translate');\n  const id = `${idPrefix}-value-${index}`;\n  return jsx(CollapsibleEntry, {\n    id: id,\n    element: element,\n    entries: FormFieldValue({\n      idPrefix: id,\n      element,\n      value\n    }),\n    label: value.get('id') || translate('<empty>'),\n    open: open\n  });\n}\n\nfunction ValueList(props) {\n  const {\n    element,\n    formField,\n    idPrefix\n  } = props;\n  const id = `${idPrefix}-formFieldValues`;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const values = formField.get('values') || [];\n\n  function addValue() {\n    const value = createElement('camunda:Value', {\n      id: undefined,\n      name: undefined\n    }, formField, bpmnFactory);\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: formField,\n      properties: {\n        values: [...formField.get('values'), value]\n      }\n    });\n  }\n\n  function removeValue(value) {\n    commandStack.execute('element.updateModdleProperties', {\n      element: element,\n      moddleElement: formField,\n      properties: {\n        values: without(formField.get('values'), value)\n      }\n    });\n  }\n\n  return jsx(ListEntry, {\n    element: element,\n    autoFocusEntry: `[data-entry-id=\"${id}-value-${values.length - 1}\"] input`,\n    id: id,\n    label: translate('Values'),\n    items: values,\n    component: Value,\n    onAdd: addValue,\n    onRemove: removeValue\n  });\n}\n\nfunction Constraint(props) {\n  const {\n    element,\n    id: idPrefix,\n    index,\n    item: constraint,\n    open\n  } = props;\n  const translate = useService('translate');\n  const id = `${idPrefix}-constraint-${index}`;\n  return jsx(CollapsibleEntry, {\n    id: id,\n    element: element,\n    entries: FormFieldConstraint({\n      constraint,\n      element,\n      idPrefix: id\n    }),\n    label: constraint.get('name') || translate('<empty>'),\n    open: open\n  });\n}\n\nfunction ConstraintList(props) {\n  const {\n    element,\n    formField,\n    idPrefix\n  } = props;\n  const id = `${idPrefix}-formFieldConstraints`;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const businessObject = getBusinessObject(element);\n  let validation = formField.get('validation');\n  const constraints = validation && validation.get('constraints') || [];\n\n  function addConstraint() {\n    const commands = []; // (1) ensure validation\n\n    if (!validation) {\n      validation = createElement('camunda:Validation', {}, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: formField,\n          properties: {\n            validation\n          }\n        }\n      });\n    } // (2) add constraint\n\n\n    const constraint = createElement('camunda:Constraint', {\n      name: undefined,\n      config: undefined\n    }, validation, bpmnFactory);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: validation,\n        properties: {\n          constraints: [...validation.get('constraints'), constraint]\n        }\n      }\n    }); // (3) commit updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  }\n\n  function removeConstraint(constraint) {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: validation,\n      properties: {\n        constraints: without(validation.get('constraints'), constraint)\n      }\n    });\n  }\n\n  return jsx(ListEntry, {\n    element: element,\n    autoFocusEntry: `[data-entry-id=\"${id}-constraint-${constraints.length - 1}\"] input`,\n    id: id,\n    label: translate('Constraints'),\n    items: constraints,\n    component: Constraint,\n    onAdd: addConstraint,\n    onRemove: removeConstraint\n  });\n}\n\nfunction Property(props) {\n  const {\n    element,\n    id: idPrefix,\n    index,\n    item: property,\n    open\n  } = props;\n  const translate = useService('translate');\n  const id = `${idPrefix}-property-${index}`;\n  return jsx(CollapsibleEntry, {\n    id: id,\n    element: element,\n    entries: FormFieldProperty({\n      element,\n      idPrefix: id,\n      property\n    }),\n    label: property.get('id') || translate('<empty>'),\n    open: open\n  });\n}\n\nfunction PropertiesList(props) {\n  const {\n    element,\n    formField,\n    idPrefix\n  } = props;\n  const id = `${idPrefix}-formFieldProperties`;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const businessObject = getBusinessObject(element);\n  let properties = formField.get('properties');\n  const propertyEntries = properties && properties.get('values') || [];\n\n  function addProperty() {\n    const commands = []; // (1) ensure properties\n\n    if (!properties) {\n      properties = createElement('camunda:Properties', {}, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: formField,\n          properties: {\n            properties\n          }\n        }\n      });\n    } // (2) add property\n\n\n    const property = createElement('camunda:Property', {\n      id: undefined,\n      value: undefined\n    }, properties, bpmnFactory);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: properties,\n        properties: {\n          values: [...properties.get('values'), property]\n        }\n      }\n    }); // (3) commit updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  }\n\n  function removeProperty(property) {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: properties,\n      properties: {\n        values: without(properties.get('values'), property)\n      }\n    });\n  }\n\n  return jsx(ListEntry, {\n    element: element,\n    autoFocusEntry: true,\n    id: id,\n    compareFn: createAlphanumericCompare('id'),\n    label: translate('Properties'),\n    items: propertyEntries,\n    component: Property,\n    onAdd: addProperty,\n    onRemove: removeProperty\n  });\n} // helper //////////////////\n\n\nfunction createAlphanumericCompare(field) {\n  return function (entry, anotherEntry) {\n    const [key = '', anotherKey = ''] = [entry[field], anotherEntry[field]];\n    return key === anotherKey ? 0 : key > anotherKey ? 1 : -1;\n  };\n}\n\nfunction FormDataProps({\n  element,\n  injector\n}) {\n  if (!isFormDataSupported(element)) {\n    return;\n  }\n\n  const formFields = getFormFieldsList(element) || [];\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = formFields.map((formField, index) => {\n    const id = element.id + '-formField-' + index;\n    return {\n      id,\n      label: formField.get('id') || '',\n      entries: FormField({\n        idPrefix: id,\n        element,\n        formField\n      }),\n      autoFocusEntry: id + '-formFieldID',\n      remove: removeFactory$4({\n        commandStack,\n        element,\n        formField\n      })\n    };\n  });\n  return {\n    items,\n    add: addFactory$3({\n      bpmnFactory,\n      commandStack,\n      element\n    }),\n    shouldSort: false\n  };\n}\n\nfunction addFactory$3({\n  bpmnFactory,\n  commandStack,\n  element\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const commands = []; // (1) get camunda:FormData\n\n    const formData = getFormData$1(element); // (2) create camunda:FormField\n\n    const formField = createElement('camunda:FormField', {}, formData, bpmnFactory); // (3) add formField to list\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: formData,\n        properties: {\n          fields: [...formData.get('fields'), formField]\n        }\n      }\n    }); // (4) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n}\n\nfunction removeFactory$4({\n  commandStack,\n  element,\n  formField\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const formData = getFormData$1(element),\n          formFields = getFormFieldsList(element);\n\n    if (!formFields || !formFields.length) {\n      return;\n    }\n\n    const fields = without(formData.get('fields'), formField); // update formData\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: formData,\n      properties: {\n        fields\n      }\n    });\n  };\n} // helper ///////////////////////////////\n\n\nfunction isFormDataSupported(element) {\n  const formData = getFormData$1(element);\n  return (is(element, 'bpmn:StartEvent') && !is(element.parent, 'bpmn:SubProcess') || is(element, 'bpmn:UserTask')) && formData;\n}\n\nfunction getFormData$1(element) {\n  const bo = getBusinessObject(element);\n  return getExtensionElementsList(bo, 'camunda:FormData')[0];\n}\n\nfunction getFormFieldsList(element) {\n  const businessObject = getBusinessObject(element);\n  const formData = getFormData$1(businessObject);\n  return formData && formData.fields;\n}\n\nconst FORM_KEY_PROPS = {\n  'camunda:formRef': undefined,\n  'camunda:formRefBinding': undefined,\n  'camunda:formRefVersion': undefined\n};\nconst FORM_REF_PROPS = {\n  'camunda:formKey': undefined\n};\nfunction FormTypeProps(props) {\n  return [{\n    id: 'formType',\n    component: FormType,\n    isEdited: isSelectEntryEdited\n  }];\n}\n\nfunction FormType(props) {\n  const {\n    element\n  } = props;\n  const translate = useService('translate');\n  const bpmnFactory = useService('bpmnFactory');\n  const businessObject = getBusinessObject(element);\n  const commandStack = useService('commandStack');\n  let extensionElements = businessObject.get('extensionElements');\n\n  const getValue = () => {\n    if (isDefined(businessObject.get('camunda:formKey'))) {\n      return 'formKey';\n    } else if (isDefined(businessObject.get('camunda:formRef'))) {\n      return 'formRef';\n    } else if (getFormData(element)) {\n      return 'formData';\n    }\n\n    return '';\n  };\n\n  const setValue = value => {\n    const commands = removePropertiesCommands(element);\n\n    if (value === 'formData') {\n      // (1) ensure extension elements\n      if (!extensionElements) {\n        extensionElements = createElement('bpmn:ExtensionElements', {\n          values: []\n        }, businessObject, bpmnFactory);\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: {\n            element,\n            moddleElement: businessObject,\n            properties: {\n              extensionElements\n            }\n          }\n        });\n      } // (2) create camunda:FormData\n\n\n      const parent = extensionElements;\n      const formData = createElement('camunda:FormData', {\n        fields: []\n      }, parent, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), formData]\n          }\n        }\n      });\n    } else if (value === 'formKey') {\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            'camunda:formKey': ''\n          }\n        }\n      });\n    } else if (value === 'formRef') {\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            'camunda:formRef': ''\n          }\n        }\n      });\n    }\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  const getOptions = () => {\n    return [{\n      value: '',\n      label: translate('<none>')\n    }, {\n      value: 'formRef',\n      label: translate('Camunda Forms')\n    }, {\n      value: 'formKey',\n      label: translate('Embedded or External Task Forms')\n    }, {\n      value: 'formData',\n      label: translate('Generated Task Forms')\n    }];\n  };\n\n  return SelectEntry({\n    element,\n    id: 'formType',\n    label: translate('Type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction getFormData(element) {\n  const bo = getBusinessObject(element);\n  return getExtensionElementsList(bo, 'camunda:FormData')[0];\n}\n\nfunction removePropertiesCommands(element, commandStack) {\n  const businessObject = getBusinessObject(element);\n  const extensionElements = businessObject.get('extensionElements');\n  const commands = []; // (1) reset formKey and formRef\n\n  commands.push({\n    cmd: 'element.updateModdleProperties',\n    context: {\n      element,\n      moddleElement: businessObject,\n      properties: { ...FORM_KEY_PROPS,\n        ...FORM_REF_PROPS\n      }\n    }\n  }); // (2) remove formData if defined\n\n  if (extensionElements && getFormData(element)) {\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: extensionElements,\n        properties: {\n          values: without(extensionElements.get('values'), getFormData(element))\n        }\n      }\n    });\n  }\n\n  return commands;\n}\n\nfunction getFormRefBinding(element) {\n  const businessObject = getBusinessObject(element);\n  return businessObject.get('camunda:formRefBinding') || 'latest';\n}\nfunction getFormType(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (isDefined(businessObject.get('camunda:formKey'))) {\n    return 'formKey';\n  } else if (isDefined(businessObject.get('camunda:formRef'))) {\n    return 'formRef';\n  }\n}\nfunction isFormSupported(element) {\n  return is(element, 'bpmn:StartEvent') && !is(element.parent, 'bpmn:SubProcess') || is(element, 'bpmn:UserTask');\n}\n\nfunction FormProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!isFormSupported(element)) {\n    return [];\n  }\n\n  const formType = getFormType(element),\n        bindingType = getFormRefBinding(element); // (1) display form type select\n\n  const entries = [...FormTypeProps()]; // (2) display form properties based on type\n\n  if (formType === 'formKey') {\n    entries.push({\n      id: 'formKey',\n      component: FormKey,\n      isEdited: isTextFieldEntryEdited\n    });\n  } else if (formType === 'formRef') {\n    entries.push({\n      id: 'formRef',\n      component: FormRef,\n      isEdited: isTextFieldEntryEdited\n    }, {\n      id: 'formRefBinding',\n      component: Binding$1,\n      isEdited: isSelectEntryEdited\n    });\n\n    if (bindingType === 'version') {\n      entries.push({\n        id: 'formRefVersion',\n        component: Version$1,\n        isEdited: isTextFieldEntryEdited\n      });\n    }\n  }\n\n  return entries;\n}\n\nfunction FormKey(props) {\n  const {\n    element\n  } = props;\n  const debounce = useService('debounceInput');\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:formKey');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      'camunda:formKey': value\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'formKey',\n    label: translate('Form key'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction FormRef(props) {\n  const {\n    element\n  } = props;\n  const debounce = useService('debounceInput');\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:formRef');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      'camunda:formRef': value\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'formRef',\n    label: translate('Form reference'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Binding$1(props) {\n  const {\n    element\n  } = props;\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getFormRefBinding(element);\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      'camunda:formRefBinding': value\n    });\n  }; // Note: default is \"latest\",\n  // cf. https://docs.camunda.org/manual/develop/reference/bpmn20/custom-extensions/extension-attributes/#formrefbinding\n\n\n  const getOptions = () => {\n    const options = [{\n      value: 'deployment',\n      label: translate('deployment')\n    }, {\n      value: 'latest',\n      label: translate('latest')\n    }, {\n      value: 'version',\n      label: translate('version')\n    }];\n    return options;\n  };\n\n  return SelectEntry({\n    element,\n    id: 'formRefBinding',\n    label: translate('Binding'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction Version$1(props) {\n  const {\n    element\n  } = props;\n  const debounce = useService('debounceInput');\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:formRefVersion');\n  };\n\n  const setValue = value => {\n    modeling.updateProperties(element, {\n      'camunda:formRefVersion': value\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'formRefVersion',\n    label: translate('Version'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction HistoryCleanupProps(props) {\n  const {\n    element\n  } = props;\n  const businessObject = getBusinessObject(element);\n\n  if (!is(element, 'bpmn:Process') && !(is(element, 'bpmn:Participant') && businessObject.get('processRef'))) {\n    return [];\n  }\n\n  return [{\n    id: 'historyTimeToLive',\n    component: HistoryTimeToLive,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction HistoryTimeToLive(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const process = getProcess$2(element);\n\n  const getValue = () => {\n    return process.get('camunda:historyTimeToLive') || '';\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: process,\n      properties: {\n        'camunda:historyTimeToLive': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'historyTimeToLive',\n    label: translate('Time to live'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper //////////////////\n\n\nfunction getProcess$2(element) {\n  return is(element, 'bpmn:Process') ? getBusinessObject(element) : getBusinessObject(element).get('processRef');\n}\n\nfunction DmnImplementationProps(props) {\n  const {\n    element\n  } = props;\n  const entries = [];\n  const implementationType = getImplementationType(element);\n  const bindingType = getDecisionRefBinding(element);\n\n  if (implementationType !== 'dmn') {\n    return entries;\n  } // (1) decisionRef\n\n\n  entries.push({\n    id: 'decisionRef',\n    component: DecisionRef,\n    isEdited: isTextFieldEntryEdited\n  }); // (2) binding\n\n  entries.push({\n    id: 'decisionRefBinding',\n    component: Binding,\n    isEdited: isSelectEntryEdited\n  }); // (3) version\n\n  if (bindingType === 'version') {\n    entries.push({\n      id: 'decisionRefVersion',\n      component: Version,\n      isEdited: isTextFieldEntryEdited\n    });\n  } // (4) versionTag\n\n\n  if (bindingType === 'versionTag') {\n    entries.push({\n      id: 'decisionRefVersionTag',\n      component: VersionTag$1,\n      isEdited: isTextFieldEntryEdited\n    });\n  } // (5) tenantId\n\n\n  entries.push({\n    id: 'decisionRefTenantId',\n    component: TenantId,\n    isEdited: isTextFieldEntryEdited\n  }); // (6) resultVariable\n\n  entries.push({\n    id: 'decisionRefResultVariable',\n    component: ResultVariable$2,\n    isEdited: isTextFieldEntryEdited\n  }); // (7) mapDecisionResult\n\n  if (getResultVariable(element)) {\n    entries.push({\n      id: 'mapDecisionResult',\n      component: MapDecisionResult,\n      isEdited: isSelectEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction DecisionRef(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:decisionRef');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:decisionRef': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'decisionRef',\n    label: translate('Decision reference'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Binding(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getDecisionRefBinding(element);\n  };\n\n  const setValue = value => {\n    const businessObject = getBusinessObject(element); // reset version properties on binding type change\n\n    const updatedProperties = {\n      'camunda:decisionRefVersion': undefined,\n      'camunda:decisionRefVersionTag': undefined,\n      'camunda:decisionRefBinding': value\n    };\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: updatedProperties\n    });\n  }; // Note: default is \"latest\",\n  // cf. https://docs.camunda.org/manual/latest/reference/bpmn20/custom-extensions/extension-attributes/#decisionrefbinding\n\n\n  const getOptions = () => {\n    const options = [{\n      value: 'deployment',\n      label: translate('deployment')\n    }, {\n      value: 'latest',\n      label: translate('latest')\n    }, {\n      value: 'version',\n      label: translate('version')\n    }, {\n      value: 'versionTag',\n      label: translate('versionTag')\n    }];\n    return options;\n  };\n\n  return SelectEntry({\n    element,\n    id: 'decisionRefBinding',\n    label: translate('Binding'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction Version(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:decisionRefVersion');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:decisionRefVersion': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'decisionRefVersion',\n    label: translate('Version'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction VersionTag$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:decisionRefVersionTag');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:decisionRefVersionTag': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'decisionRefVersionTag',\n    label: translate('Version tag'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction TenantId(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:decisionRefTenantId');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:decisionRefTenantId': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'decisionRefTenantId',\n    label: translate('Tenant ID'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ResultVariable$2(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return getResultVariable(businessObject);\n  }; // Note: camunda:mapDecisionResult got cleaned up in modeling behavior\n  // cf. https://github.com/camunda/camunda-bpmn-js/blob/main/lib/camunda-platform/features/modeling/behavior/UpdateResultVariableBehavior.js\n\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:resultVariable': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'decisionRefResultVariable',\n    label: translate('Result variable'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction MapDecisionResult(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:mapDecisionResult') || 'resultList';\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:mapDecisionResult': value\n      }\n    });\n  }; // Note: default is \"resultList\",\n  // cf. https://docs.camunda.org/manual/latest/reference/bpmn20/custom-extensions/extension-attributes/#mapdecisionresult\n\n\n  const getOptions = () => {\n    const options = [{\n      value: 'collectEntries',\n      label: translate('collectEntries (List<Object>)')\n    }, {\n      value: 'resultList',\n      label: translate('resultList (List<Map<String, Object>>)')\n    }, {\n      value: 'singleEntry',\n      label: translate('singleEntry (TypedValue)')\n    }, {\n      value: 'singleResult',\n      label: translate('singleResult (Map<String, Object>)')\n    }];\n    return options;\n  };\n\n  return SelectEntry({\n    element,\n    id: 'mapDecisionResult',\n    label: translate('Map decision result'),\n    getValue,\n    setValue,\n    getOptions\n  });\n} // helper ////////////////////\n\n\nfunction getDecisionRefBinding(element) {\n  const businessObject = getBusinessObject(element);\n  return businessObject.get('camunda:decisionRefBinding') || 'latest';\n}\n\nfunction getResultVariable(element) {\n  const businessObject = getBusinessObject(element);\n  return businessObject.get('camunda:resultVariable');\n}\n\nconst DELEGATE_PROPS = {\n  'camunda:class': undefined,\n  'camunda:expression': undefined,\n  'camunda:delegateExpression': undefined,\n  'camunda:resultVariable': undefined\n};\nconst DMN_CAPABLE_PROPS = {\n  'camunda:decisionRef': undefined,\n  'camunda:decisionRefBinding': 'latest',\n  'camunda:decisionRefVersion': undefined,\n  'camunda:mapDecisionResult': 'resultList',\n  'camunda:decisionRefTenantId': undefined\n};\nconst EXTERNAL_CAPABLE_PROPS = {\n  'camunda:type': undefined,\n  'camunda:topic': undefined\n};\nconst IMPLEMENTATION_TYPE_NONE_LABEL = '<none>',\n      IMPLEMENTATION_TYPE_JAVA_LABEL = 'Java class',\n      IMPLEMENTATION_TYPE_EXPRESSION_LABEL = 'Expression',\n      IMPLEMENTATION_TYPE_DELEGATE_LABEL = 'Delegate expression',\n      IMPLEMENTATION_TYPE_DMN_LABEL = 'DMN',\n      IMPLEMENTATION_TYPE_EXTERNAL_LABEL = 'External',\n      IMPLEMENTATION_TYPE_CONNECTOR_LABEL = 'Connector';\nfunction ImplementationTypeProps(props) {\n  return [{\n    id: 'implementationType',\n    component: ImplementationType,\n    isEdited: isSelectEntryEdited\n  }];\n}\n\nfunction ImplementationType(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return getImplementationType(element) || '';\n  };\n\n  const setValue = value => {\n    const oldType = getImplementationType(element);\n    const businessObject = getServiceTaskLikeBusinessObject(element);\n    const commands = [];\n    let updatedProperties = DELEGATE_PROPS;\n    let extensionElements = businessObject.get('extensionElements'); // (1) class, expression, delegateExpression\n\n    if (isDelegateType(value)) {\n      updatedProperties = { ...updatedProperties,\n        [value]: isDelegateType(oldType) ? businessObject.get(`camunda:${oldType}`) : ''\n      };\n    } // (2) dmn\n\n\n    if (isDmnCapable(businessObject)) {\n      updatedProperties = { ...updatedProperties,\n        ...DMN_CAPABLE_PROPS\n      };\n\n      if (value === 'dmn') {\n        updatedProperties = { ...updatedProperties,\n          'camunda:decisionRef': ''\n        };\n      }\n    } // (3) external\n    // Note: error event definition elements got cleaned up in modeling behavior\n    // cf. https://github.com/camunda/camunda-bpmn-js/blob/main/lib/camunda-platform/features/modeling/behavior/DeleteErrorEventDefinitionBehavior.js\n\n\n    if (isExternalCapable(businessObject)) {\n      updatedProperties = { ...updatedProperties,\n        ...EXTERNAL_CAPABLE_PROPS\n      };\n\n      if (value === 'external') {\n        updatedProperties = { ...updatedProperties,\n          'camunda:type': 'external',\n          'camunda:topic': ''\n        };\n      }\n    } // (4) connector\n\n\n    if (isServiceTaskLike(businessObject)) {\n      // (4.1) remove all connectors on type change\n      const connectors = getConnectors$1(businessObject);\n\n      if (connectors.length) {\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: {\n            element,\n            moddleElement: extensionElements,\n            properties: {\n              values: without(extensionElements.get('values'), value => connectors.includes(value))\n            }\n          }\n        });\n      } // (4.2) create connector\n\n\n      if (value === 'connector') {\n        // ensure extension elements\n        if (!extensionElements) {\n          extensionElements = createElement('bpmn:ExtensionElements', {\n            values: []\n          }, businessObject, bpmnFactory);\n          commands.push(UpdateModdlePropertiesCommand(element, businessObject, {\n            extensionElements\n          }));\n        }\n\n        const connector = createElement('camunda:Connector', {}, extensionElements, bpmnFactory);\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: {\n            element,\n            moddleElement: extensionElements,\n            properties: {\n              values: [...extensionElements.get('values'), connector]\n            }\n          }\n        });\n      }\n    } // (5) collect all property updates\n\n\n    commands.push(UpdateModdlePropertiesCommand(element, businessObject, updatedProperties)); // (6) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  const getOptions = () => {\n    const businessObject = getServiceTaskLikeBusinessObject(element);\n    const options = [{\n      value: '',\n      label: translate(IMPLEMENTATION_TYPE_NONE_LABEL)\n    }, {\n      value: 'class',\n      label: translate(IMPLEMENTATION_TYPE_JAVA_LABEL)\n    }, {\n      value: 'expression',\n      label: translate(IMPLEMENTATION_TYPE_EXPRESSION_LABEL)\n    }, {\n      value: 'delegateExpression',\n      label: translate(IMPLEMENTATION_TYPE_DELEGATE_LABEL)\n    }];\n\n    if (isDmnCapable(businessObject)) {\n      options.push({\n        value: 'dmn',\n        label: translate(IMPLEMENTATION_TYPE_DMN_LABEL)\n      });\n    }\n\n    if (isExternalCapable(businessObject)) {\n      options.push({\n        value: 'external',\n        label: translate(IMPLEMENTATION_TYPE_EXTERNAL_LABEL)\n      });\n    }\n\n    if (isServiceTaskLike(businessObject)) {\n      options.push({\n        value: 'connector',\n        label: translate(IMPLEMENTATION_TYPE_CONNECTOR_LABEL)\n      });\n    }\n\n    return sortByPriority(options);\n  };\n\n  return SelectEntry({\n    element,\n    id: 'implementationType',\n    label: translate('Type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n} // helper ///////////////////////\n\n\nfunction isDelegateType(type) {\n  return ['class', 'expression', 'delegateExpression'].includes(type);\n}\n\nfunction getConnectors$1(businessObject) {\n  return getExtensionElementsList(businessObject, 'camunda:Connector');\n}\n\nfunction UpdateModdlePropertiesCommand(element, businessObject, newProperties) {\n  return {\n    cmd: 'element.updateModdleProperties',\n    context: {\n      element,\n      moddleElement: businessObject,\n      properties: newProperties\n    }\n  };\n}\n\nfunction sortByPriority(options) {\n  const priorities = {\n    [IMPLEMENTATION_TYPE_NONE_LABEL]: 0,\n    [IMPLEMENTATION_TYPE_JAVA_LABEL]: 3,\n    [IMPLEMENTATION_TYPE_EXPRESSION_LABEL]: 4,\n    [IMPLEMENTATION_TYPE_DELEGATE_LABEL]: 5,\n    [IMPLEMENTATION_TYPE_DMN_LABEL]: 1,\n    [IMPLEMENTATION_TYPE_EXTERNAL_LABEL]: 2,\n    [IMPLEMENTATION_TYPE_CONNECTOR_LABEL]: 6\n  };\n  return sortBy(options, o => priorities[o.label]);\n}\n\nfunction ImplementationProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!getServiceTaskLikeBusinessObject(element)) {\n    return [];\n  }\n\n  const implementationType = getImplementationType(element); // (1) display implementation type select\n\n  const entries = [...ImplementationTypeProps()]; // (2) display implementation properties based on type\n\n  if (implementationType === 'class') {\n    entries.push({\n      id: 'javaClass',\n      component: JavaClass,\n      isEdited: isTextFieldEntryEdited\n    });\n  } else if (implementationType === 'expression') {\n    entries.push({\n      id: 'expression',\n      component: Expression$1,\n      isEdited: isTextFieldEntryEdited\n    }, {\n      id: 'expressionResultVariable',\n      component: ResultVariable$1,\n      isEdited: isTextFieldEntryEdited\n    });\n  } else if (implementationType === 'delegateExpression') {\n    entries.push({\n      id: 'delegateExpression',\n      component: DelegateExpression,\n      isEdited: isTextFieldEntryEdited\n    });\n  } else if (implementationType === 'dmn') {\n    entries.push(...DmnImplementationProps({\n      element\n    }));\n  } else if (implementationType === 'external') {\n    entries.push({\n      id: 'externalTopic',\n      component: Topic,\n      isEdited: isTextFieldEntryEdited\n    });\n  } else if (implementationType === 'connector') {\n    entries.push({\n      id: 'connectorId',\n      component: ConnectorId,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\nfunction JavaClass(props) {\n  const {\n    element,\n    businessObject = getServiceTaskLikeBusinessObject(element),\n    id = 'javaClass'\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return businessObject.get('camunda:class');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:class': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id,\n    label: translate('Java class'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\nfunction Expression$1(props) {\n  const {\n    element,\n    businessObject = getServiceTaskLikeBusinessObject(element),\n    id = 'expression'\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return businessObject.get('camunda:expression');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:expression': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id,\n    label: translate('Expression'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ResultVariable$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getServiceTaskLikeBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:resultVariable');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:resultVariable': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'expressionResultVariable',\n    label: translate('Result variable'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction DelegateExpression(props) {\n  const {\n    element,\n    businessObject = getServiceTaskLikeBusinessObject(element),\n    id = 'delegateExpression'\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const getValue = () => {\n    return businessObject.get('camunda:delegateExpression');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:delegateExpression': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id,\n    label: translate('Delegate expression'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Topic(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getServiceTaskLikeBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:topic');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:topic': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'externalTopic',\n    label: translate('Topic'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ConnectorId(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const connector = getConnector(element);\n\n  const getValue = () => {\n    return connector.get('camunda:connectorId');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: connector,\n      properties: {\n        'camunda:connectorId': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'connectorId',\n    label: translate('Connector ID'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper //////////////////\n\n\nfunction getConnectors(businessObject) {\n  return getExtensionElementsList(businessObject, 'camunda:Connector');\n}\n\nfunction getConnector(element) {\n  const businessObject = getServiceTaskLikeBusinessObject(element);\n  const connectors = getConnectors(businessObject);\n  return connectors[0];\n}\n\nfunction InitiatorProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!isInitiator(element)) {\n    return [];\n  }\n\n  return [{\n    id: 'initiator',\n    component: Initiator,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction Initiator(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:initiator');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:initiator': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'initiator',\n    label: translate('Initiator'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ///////////////////\n\n\nfunction isInitiator(element) {\n  return is(element, 'camunda:Initiator') && !is(element.parent, 'bpmn:SubProcess');\n}\n\n/**\n * Cf. https://docs.camunda.org/manual/7.15/reference/bpmn20/subprocesses/call-activity/#passing-variables\n */\n\nfunction InMappingPropagationProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!areInMappingsSupported$1(element)) {\n    return [];\n  }\n\n  const entries = [{\n    id: 'inMapping-propagation',\n    component: PropagateAll$1,\n    isEdited: isCheckboxEntryEdited\n  }];\n\n  if (isPropagateAll$1(element)) {\n    entries.push({\n      id: 'inMapping-propagation-local',\n      component: Local$2,\n      isEdited: isCheckboxEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction PropagateAll$1(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return isPropagateAll$1(element);\n  };\n\n  const setValue = value => {\n    if (value) {\n      addInMapping();\n    } else {\n      removeInMapping();\n    }\n  };\n\n  function addInMapping() {\n    const businessObject = getSignalEventDefinition(element) || getBusinessObject(element);\n    const mapping = createElement('camunda:In', {\n      variables: 'all'\n    }, null, bpmnFactory);\n    addExtensionElements(element, businessObject, mapping, bpmnFactory, commandStack);\n  }\n\n  function removeInMapping() {\n    const businessObject = getSignalEventDefinition(element) || getBusinessObject(element);\n    const mappings = findRelevantInMappings(element);\n    removeExtensionElements(element, businessObject, mappings, commandStack);\n  }\n\n  return CheckboxEntry({\n    id: 'inMapping-propagation',\n    label: translate('Propagate all variables'),\n    getValue,\n    setValue\n  });\n}\n\nfunction Local$2(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const mapping = findRelevantInMappings(element)[0];\n\n  const getValue = () => {\n    return mapping.get('camunda:local');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: mapping,\n      properties: {\n        local: value\n      }\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: 'inMapping-propagation-local',\n    label: translate('Local'),\n    getValue,\n    setValue\n  });\n} // helper //////////////////////////\n\n\nfunction areInMappingsSupported$1(element) {\n  const signalEventDefinition = getSignalEventDefinition(element);\n\n  if (signalEventDefinition) {\n    return isAny(element, ['bpmn:IntermediateThrowEvent', 'bpmn:EndEvent']);\n  }\n\n  return is(element, 'bpmn:CallActivity');\n}\n\nfunction getInMappings$1(element) {\n  const businessObject = getBusinessObject(element);\n  const signalEventDefinition = getSignalEventDefinition(businessObject);\n  return getExtensionElementsList(signalEventDefinition || businessObject, 'camunda:In');\n}\n\nfunction findRelevantInMappings(element) {\n  const inMappings = getInMappings$1(element);\n  return filter(inMappings, function (mapping) {\n    const variables = mapping.get('variables');\n    return variables && variables === 'all';\n  });\n}\n\nfunction isPropagateAll$1(element) {\n  const mappings = findRelevantInMappings(element);\n  return !!mappings.length;\n}\n\nconst DEFAULT_PROPS$1 = {\n  'source': undefined,\n  'sourceExpression': undefined\n};\nfunction InOutMapping(props) {\n  const {\n    idPrefix,\n    mapping\n  } = props;\n  const type = getInOutType(mapping);\n  const entries = []; // (1) Type\n\n  entries.push({\n    id: idPrefix + '-type',\n    component: Type,\n    idPrefix,\n    mapping\n  }); // (2) Source\n\n  if (type === 'source') {\n    entries.push({\n      id: idPrefix + '-source',\n      component: Source,\n      idPrefix,\n      mapping\n    });\n  } // (3) Source expression\n\n\n  if (type === 'sourceExpression') {\n    entries.push({\n      id: idPrefix + '-sourceExpression',\n      component: SourceExpression,\n      idPrefix,\n      mapping\n    });\n  } // (4) Target\n\n\n  entries.push({\n    id: idPrefix + '-target',\n    component: Target,\n    idPrefix,\n    mapping\n  }); // (5) Local\n\n  entries.push({\n    id: idPrefix + '-local',\n    component: Local$1,\n    idPrefix,\n    mapping\n  });\n  return entries;\n}\n\nfunction Type(props) {\n  const {\n    idPrefix,\n    element,\n    mapping\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const getValue = mapping => {\n    return getInOutType(mapping);\n  };\n\n  const setValue = value => {\n    const properties = { ...DEFAULT_PROPS$1,\n      [value]: ''\n    };\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: mapping,\n      properties\n    });\n  };\n\n  const getOptions = () => {\n    const options = [{\n      label: translate('Source'),\n      value: 'source'\n    }, {\n      label: translate('Source expression'),\n      value: 'sourceExpression'\n    }];\n    return options;\n  };\n\n  return SelectEntry({\n    element: mapping,\n    id: idPrefix + '-type',\n    label: translate('Type'),\n    getValue,\n    setValue,\n    getOptions\n  });\n}\n\nfunction Source(props) {\n  const {\n    idPrefix,\n    element,\n    mapping\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: mapping,\n      properties: {\n        source: value\n      }\n    });\n  };\n\n  const getValue = mapping => {\n    return mapping.get('camunda:source');\n  };\n\n  return TextFieldEntry({\n    element: mapping,\n    id: idPrefix + '-source',\n    label: translate('Source'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction SourceExpression(props) {\n  const {\n    idPrefix,\n    element,\n    mapping\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: mapping,\n      properties: {\n        sourceExpression: value\n      }\n    });\n  };\n\n  const getValue = mapping => {\n    return mapping.get('camunda:sourceExpression');\n  };\n\n  return TextFieldEntry({\n    element: mapping,\n    id: idPrefix + '-sourceExpression',\n    label: translate('Source expression'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Target(props) {\n  const {\n    idPrefix,\n    element,\n    mapping\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: mapping,\n      properties: {\n        target: value\n      }\n    });\n  };\n\n  const getValue = mapping => {\n    return mapping.get('camunda:target');\n  };\n\n  return TextFieldEntry({\n    element: mapping,\n    id: idPrefix + '-target',\n    label: translate('Target'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Local$1(props) {\n  const {\n    idPrefix,\n    element,\n    mapping\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return mapping.get('camunda:local');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: mapping,\n      properties: {\n        local: value\n      }\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: idPrefix + '-local',\n    label: translate('Local'),\n    getValue,\n    setValue\n  });\n} // helper ///////////////////\n\n\nfunction getInOutType(mapping) {\n  let inOutType = '';\n\n  if (typeof mapping.source !== 'undefined') {\n    inOutType = 'source';\n  } else if (typeof mapping.sourceExpression !== 'undefined') {\n    inOutType = 'sourceExpression';\n  }\n\n  return inOutType;\n}\n\n/**\n * Cf. https://docs.camunda.org/manual/latest/reference/bpmn20/custom-extensions/extension-elements/#in\n */\n\nfunction InMappingProps({\n  element,\n  injector\n}) {\n  if (!areInMappingsSupported(element)) {\n    return null;\n  }\n\n  const variableMappings = getInMappings(element) || [];\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = variableMappings.map((mapping, index) => {\n    const id = element.id + '-inMapping-' + index;\n    return {\n      id,\n      label: mapping.get('target') || '',\n      entries: InOutMapping({\n        idPrefix: id,\n        element,\n        mapping\n      }),\n      autoFocusEntry: id + '-target',\n      remove: removeFactory$3({\n        commandStack,\n        element,\n        mapping\n      })\n    };\n  });\n  return {\n    items,\n    add: addFactory$2({\n      bpmnFactory,\n      commandStack,\n      element\n    })\n  };\n}\n\nfunction removeFactory$3({\n  commandStack,\n  element,\n  mapping\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const businessObject = getSignalEventDefinition(element) || getBusinessObject(element);\n    removeExtensionElements(element, businessObject, mapping, commandStack);\n  };\n}\n\nfunction addFactory$2({\n  bpmnFactory,\n  commandStack,\n  element\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const businessObject = getSignalEventDefinition(element) || getBusinessObject(element);\n    const newMapping = createElement('camunda:In', {\n      source: '' // source is the default type\n\n    }, null, bpmnFactory);\n    addExtensionElements(element, businessObject, newMapping, bpmnFactory, commandStack);\n  };\n} // helper ///////////////\n\n\nfunction getInMappings(element) {\n  const businessObject = getBusinessObject(element);\n  const signalEventDefinition = getSignalEventDefinition(businessObject);\n  const mappings = getExtensionElementsList(signalEventDefinition || businessObject, 'camunda:In'); // only retrieve relevant mappings here, others are handled in other groups\n  // mapping.businessKey => camunda-platform/CallAvtivityProps\n  // mapping.variables => camunda-platform/InMappingPropagationProps\n\n  return filter(mappings, function (mapping) {\n    return !mapping.businessKey && !(mapping.variables && mapping.variables === 'all');\n  });\n}\n\nfunction areInMappingsSupported(element) {\n  const signalEventDefinition = getSignalEventDefinition(element);\n\n  if (signalEventDefinition) {\n    return isAny(element, ['bpmn:IntermediateThrowEvent', 'bpmn:EndEvent']);\n  }\n\n  return is(element, 'bpmn:CallActivity');\n}\n\nfunction InputProps(props) {\n  const {\n    element,\n    injector\n  } = props;\n\n  if (!areInputParametersSupported(element)) {\n    return null;\n  }\n\n  const inputParameters = getInputParameters(element) || [];\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = inputParameters.map((parameter, index) => {\n    const id = element.id + '-inputParameter-' + index;\n    return {\n      id,\n      label: parameter.get('name') || '',\n      entries: InputOutputParameter({\n        idPrefix: id,\n        element,\n        parameter\n      }),\n      autoFocusEntry: id + '-name',\n      remove: removeFactory$2({\n        element,\n        commandStack,\n        parameter\n      })\n    };\n  });\n\n  function add(event) {\n    event.stopPropagation();\n    commandStack.execute('properties-panel.multi-command-executor', AddParameterCmd(element, 'camunda:InputParameter', bpmnFactory));\n  }\n\n  return {\n    items,\n    add\n  };\n}\n\nfunction removeFactory$2(props) {\n  const {\n    commandStack,\n    element,\n    parameter\n  } = props;\n  return function (event) {\n    event.stopPropagation();\n    const inputOutput = getInputOutput(element);\n\n    if (!inputOutput) {\n      return;\n    }\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: inputOutput,\n      properties: {\n        inputParameters: without(inputOutput.get('inputParameters'), parameter)\n      }\n    });\n  };\n}\n\nfunction JobExecutionProps(props) {\n  const {\n    element\n  } = props;\n  const businessObject = getBusinessObject(element);\n  const entries = []; // (1) add retryTimeCycle field for camunda:asyncCapable enabled Elements\n  // or TimerEvents\n\n  if (is(element, 'camunda:AsyncCapable') && isAsync$1(businessObject) || isTimerEvent(element)) {\n    entries.push({\n      id: 'retryTimeCycle',\n      component: RetryTimeCycle,\n      isEdited: isTextFieldEntryEdited\n    });\n  } // (2) add jobPriority field for camunda:jobPriorized with async enabled\n  //  or Processes\n  //  or Processes referred to by participants\n  //  or TimerEvents\n\n\n  if (is(element, 'camunda:JobPriorized') && isAsync$1(businessObject) || is(element, 'bpmn:Process') || is(element, 'bpmn:Participant') && businessObject.get('processRef') || isTimerEvent(element)) {\n    entries.push({\n      id: 'jobPriority',\n      component: JobPriority,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction JobPriority(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n  const businessObject = is(element, 'bpmn:Participant') ? getBusinessObject(element).get('processRef') : getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:jobPriority');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:jobPriority': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'jobPriority',\n    label: translate('Priority'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction RetryTimeCycle(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    const failedJobRetryTimeCycle = getExtensionElementsList(businessObject, 'camunda:FailedJobRetryTimeCycle')[0];\n    return failedJobRetryTimeCycle && failedJobRetryTimeCycle.body;\n  };\n\n  const setValue = value => {\n    const commands = [];\n    let extensionElements = businessObject.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure failedJobRetryTimeCycle\n\n\n    let failedJobRetryTimeCycle = getExtensionElementsList(businessObject, 'camunda:FailedJobRetryTimeCycle')[0];\n\n    if (!failedJobRetryTimeCycle) {\n      failedJobRetryTimeCycle = createElement('camunda:FailedJobRetryTimeCycle', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), failedJobRetryTimeCycle]\n          }\n        }\n      });\n    } // (3) update failedJobRetryTimeCycle value\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: failedJobRetryTimeCycle,\n        properties: {\n          body: value\n        }\n      }\n    }); // (4) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'retryTimeCycle',\n    label: translate('Retry time cycle'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper //////////////////\n\n/**\n * @param  {ModdleElement} bo\n * @return {boolean} a boolean value\n */\n\n\nfunction isAsyncBefore$1(bo) {\n  return !!(bo.get('camunda:asyncBefore') || bo.get('camunda:async'));\n}\n/**\n * @param  {ModdleElement} bo\n * @return {boolean}\n */\n\n\nfunction isAsyncAfter$1(bo) {\n  return !!bo.get('camunda:asyncAfter');\n}\n/**\n * isAsync - returns true if the attribute 'camunda:asyncAfter' or 'camunda:asyncBefore'\n * is set to true.\n *\n * @param  {ModdleElement} bo\n * @return {boolean}\n */\n\n\nfunction isAsync$1(bo) {\n  return isAsyncAfter$1(bo) || isAsyncBefore$1(bo);\n}\n/**\n * isTimerEvent - returns true if the element is a bpmn:Event with a timerEventDefinition\n *\n * @param  {ModdleElement} element\n * @return {boolean}\n */\n\n\nfunction isTimerEvent(element) {\n  return is(element, 'bpmn:Event') && getTimerEventDefinition(element);\n}\n\n/**\n * @typedef { import('@bpmn-io/properties-panel').EntryDefinition } Entry\n */\n\n/**\n * @returns {Array<Entry>} entries\n */\n\nfunction MultiInstanceProps(props) {\n  const {\n    element\n  } = props;\n  const loopCharacteristics = getLoopCharacteristics(element);\n  let entries = props.entries || [];\n\n  if (!isMultiInstanceSupported(element)) {\n    return entries;\n  }\n\n  entries.push({\n    id: 'collection',\n    component: Collection,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'elementVariable',\n    component: ElementVariable,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'multiInstanceAsynchronousBefore',\n    component: MultiInstanceAsynchronousBefore,\n    isEdited: isCheckboxEntryEdited\n  }, {\n    id: 'multiInstanceAsynchronousAfter',\n    component: MultiInstanceAsynchronousAfter,\n    isEdited: isCheckboxEntryEdited\n  });\n\n  if (isAsync(loopCharacteristics)) {\n    entries.push({\n      id: 'multiInstanceExclusive',\n      component: MultiInstanceExclusive,\n      isEdited: checkboxIsEditedInverted\n    }, {\n      id: 'multiInstanceRetryTimeCycle',\n      component: MultiInstanceRetryTimeCycle,\n      isEdited: isTextFieldEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction Collection(props) {\n  const {\n    element\n  } = props;\n  const debounce = useService('debounceInput');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const loopCharacteristics = getLoopCharacteristics(element);\n\n  const getValue = () => {\n    return getCollection(element);\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: loopCharacteristics,\n      properties: {\n        'camunda:collection': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'collection',\n    label: translate('Collection'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction ElementVariable(props) {\n  const {\n    element\n  } = props;\n  const debounce = useService('debounceInput');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const loopCharacteristics = getLoopCharacteristics(element);\n\n  const getValue = () => {\n    return getElementVariable(element);\n  };\n\n  const setValue = value => {\n    return commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: loopCharacteristics,\n      properties: {\n        'camunda:elementVariable': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'elementVariable',\n    label: translate('Element variable'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction MultiInstanceAsynchronousBefore(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const loopCharacteristics = getLoopCharacteristics(element);\n\n  const getValue = () => {\n    return isAsyncBefore(loopCharacteristics);\n  };\n\n  const setValue = value => {\n    // overwrite the legacy `async` property, we will use the more explicit `asyncBefore`\n    const properties = {\n      'camunda:asyncBefore': value,\n      'camunda:async': undefined\n    };\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: loopCharacteristics,\n      properties\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: 'multiInstanceAsynchronousBefore',\n    label: translate('Asynchronous before'),\n    getValue,\n    setValue\n  });\n}\n\nfunction MultiInstanceAsynchronousAfter(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const loopCharacteristics = getLoopCharacteristics(element);\n\n  const getValue = () => {\n    return isAsyncAfter(loopCharacteristics);\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: loopCharacteristics,\n      properties: {\n        'camunda:asyncAfter': value\n      }\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: 'multiInstanceAsynchronousAfter',\n    label: translate('Asynchronous after'),\n    getValue,\n    setValue\n  });\n}\n\nfunction MultiInstanceExclusive(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack'),\n        translate = useService('translate');\n  const loopCharacteristics = getLoopCharacteristics(element);\n\n  const getValue = () => {\n    return isExclusive(loopCharacteristics);\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: loopCharacteristics,\n      properties: {\n        'camunda:exclusive': value\n      }\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: 'multiInstanceExclusive',\n    label: translate('Exclusive'),\n    getValue,\n    setValue\n  });\n}\n\nfunction MultiInstanceRetryTimeCycle(props) {\n  const {\n    element\n  } = props;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack'),\n        translate = useService('translate'),\n        debounce = useService('debounceInput');\n  const loopCharacteristics = getLoopCharacteristics(element);\n\n  const getValue = () => {\n    const failedJobRetryTimeCycle = getExtensionElementsList(loopCharacteristics, 'camunda:FailedJobRetryTimeCycle')[0];\n    return failedJobRetryTimeCycle && failedJobRetryTimeCycle.body;\n  };\n\n  const setValue = value => {\n    const commands = [];\n    let extensionElements = loopCharacteristics.get('extensionElements'); // (1) ensure extension elements\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', {\n        values: []\n      }, loopCharacteristics, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: loopCharacteristics,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    } // (2) ensure failedJobRetryTimeCycle\n\n\n    let failedJobRetryTimeCycle = getExtensionElementsList(loopCharacteristics, 'camunda:FailedJobRetryTimeCycle')[0];\n\n    if (!failedJobRetryTimeCycle) {\n      failedJobRetryTimeCycle = createElement('camunda:FailedJobRetryTimeCycle', {}, extensionElements, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element: loopCharacteristics,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), failedJobRetryTimeCycle]\n          }\n        }\n      });\n    } // (3) update failedJobRetryTimeCycle value\n\n\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: {\n        element,\n        moddleElement: failedJobRetryTimeCycle,\n        properties: {\n          body: value\n        }\n      }\n    }); // (4) commit all updates\n\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'multiInstanceRetryTimeCycle',\n    label: translate('Retry time cycle'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper ////////////////////////////\n// generic ///////////////////////////\n\n/**\n * isMultiInstanceSupported - check whether given element supports camunda specific props\n * for multiInstance (ref. <camunda:Cllectable>).\n *\n * @param {djs.model.Base} element\n * @return {boolean}\n */\n\n\nfunction isMultiInstanceSupported(element) {\n  const loopCharacteristics = getLoopCharacteristics(element);\n  return !!loopCharacteristics && is(loopCharacteristics, 'camunda:Collectable');\n}\n/**\n * getProperty - get a property value of the loop characteristics.\n *\n * @param {djs.model.Base} element\n * @param {string} propertyName\n *\n * @return {any} the property value\n */\n\n\nfunction getProperty(element, propertyName) {\n  var loopCharacteristics = getLoopCharacteristics(element);\n  return loopCharacteristics && loopCharacteristics.get(propertyName);\n}\n/**\n * getLoopCharacteristics - get loopCharacteristics of a given element.\n *\n * @param {djs.model.Base} element\n * @return {ModdleElement<bpmn:MultiInstanceLoopCharacteristics> | undefined}\n */\n\n\nfunction getLoopCharacteristics(element) {\n  const bo = getBusinessObject(element);\n  return bo.loopCharacteristics;\n} // collection\n\n/**\n * getCollection - get the 'camunda:collection' attribute value of the loop characteristics.\n *\n * @param {djs.model.Base} element\n *\n * @return {string} the 'camunda:collection' value\n */\n\n\nfunction getCollection(element) {\n  return getProperty(element, 'camunda:collection');\n} // elementVariable\n\n/**\n * getElementVariable - get the 'camunda:elementVariable' attribute value of the loop characteristics.\n *\n * @param {djs.model.Base} element\n *\n * @return {string} the 'camunda:elementVariable' value\n */\n\n\nfunction getElementVariable(element) {\n  return getProperty(element, 'camunda:elementVariable');\n} // asyncBefore asyncAfter\n\n/**\n * Returns true if the attribute 'camunda:asyncBefore' is set\n * to true.\n *\n * @param  {ModdleElement} bo\n *\n * @return {boolean} a boolean value\n */\n\n\nfunction isAsyncBefore(bo) {\n  return !!(bo.get('camunda:asyncBefore') || bo.get('camunda:async'));\n}\n/**\n * Returns true if the attribute 'camunda:asyncAfter' is set\n * to true.\n *\n * @param  {ModdleElement} bo\n *\n * @return {boolean} a boolean value\n */\n\n\nfunction isAsyncAfter(bo) {\n  return !!bo.get('camunda:asyncAfter');\n}\n/**\n * Returns true if the attribute 'camunda:exclusive' is set\n * to true.\n *\n * @param  {ModdleElement} bo\n *\n * @return {boolean} a boolean value\n */\n\n\nfunction isExclusive(bo) {\n  return !!bo.get('camunda:exclusive');\n}\n/**\n * isAsync - returns true if the attribute 'camunda:asyncAfter' or 'camunda:asyncBefore'\n * is set to true.\n *\n * @param  {ModdleElement} bo\n * @return {boolean}\n */\n\n\nfunction isAsync(bo) {\n  return isAsyncAfter(bo) || isAsyncBefore(bo);\n} // Checkbox\n\n\nfunction checkboxIsEditedInverted(node) {\n  return node && !node.checked;\n}\n\n/**\n * Cf. https://docs.camunda.org/manual/7.15/reference/bpmn20/subprocesses/call-activity/#passing-variables\n */\n\nfunction OutMappingPropagationProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!areOutMappingsSupported$1(element)) {\n    return [];\n  }\n\n  const entries = [{\n    id: 'outMapping-propagation',\n    component: PropagateAll,\n    isEdited: isCheckboxEntryEdited\n  }];\n\n  if (isPropagateAll(element)) {\n    entries.push({\n      id: 'outMapping-propagation-local',\n      component: Local,\n      isEdited: isCheckboxEntryEdited\n    });\n  }\n\n  return entries;\n}\n\nfunction PropagateAll(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const bpmnFactory = useService('bpmnFactory');\n  const translate = useService('translate');\n\n  const getValue = () => {\n    return isPropagateAll(element);\n  };\n\n  const setValue = value => {\n    if (value) {\n      addOutMapping();\n    } else {\n      removeOutMapping();\n    }\n  };\n\n  function addOutMapping() {\n    const businessObject = getBusinessObject(element);\n    const mapping = createElement('camunda:Out', {\n      variables: 'all'\n    }, null, bpmnFactory);\n    addExtensionElements(element, businessObject, mapping, bpmnFactory, commandStack);\n  }\n\n  function removeOutMapping() {\n    const businessObject = getBusinessObject(element);\n    const mappings = findRelevantOutMappings(element);\n    removeExtensionElements(element, businessObject, mappings, commandStack);\n  }\n\n  return CheckboxEntry({\n    id: 'outMapping-propagation',\n    label: translate('Propagate all variables'),\n    getValue,\n    setValue\n  });\n}\n\nfunction Local(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const mapping = findRelevantOutMappings(element)[0];\n\n  const getValue = () => {\n    return mapping.get('camunda:local');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: mapping,\n      properties: {\n        local: value\n      }\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: 'outMapping-propagation-local',\n    label: translate('Local'),\n    getValue,\n    setValue\n  });\n} // helper //////////////////////////\n\n\nfunction areOutMappingsSupported$1(element) {\n  return is(element, 'bpmn:CallActivity');\n}\n\nfunction getOutMappings$1(element) {\n  const businessObject = getBusinessObject(element);\n  return getExtensionElementsList(businessObject, 'camunda:Out');\n}\n\nfunction findRelevantOutMappings(element) {\n  const inMappings = getOutMappings$1(element);\n  return filter(inMappings, function (mapping) {\n    const variables = mapping.get('variables');\n    return variables && variables === 'all';\n  });\n}\n\nfunction isPropagateAll(element) {\n  const mappings = findRelevantOutMappings(element);\n  return !!mappings.length;\n}\n\n/**\n * Cf. https://docs.camunda.org/manual/latest/reference/bpmn20/custom-extensions/extension-elements/#out\n */\n\nfunction OutMappingProps({\n  element,\n  injector\n}) {\n  if (!areOutMappingsSupported(element)) {\n    return null;\n  }\n\n  const variableMappings = getOutMappings(element) || [];\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = variableMappings.map((mapping, index) => {\n    const id = element.id + '-outMapping-' + index;\n    return {\n      id,\n      label: mapping.get('target') || '',\n      entries: InOutMapping({\n        idPrefix: id,\n        element,\n        mapping\n      }),\n      autoFocusEntry: id + '-target',\n      remove: removeFactory$1({\n        commandStack,\n        element,\n        mapping\n      })\n    };\n  });\n  return {\n    items,\n    add: addFactory$1({\n      bpmnFactory,\n      commandStack,\n      element\n    })\n  };\n}\n\nfunction removeFactory$1({\n  commandStack,\n  element,\n  mapping\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const businessObject = getBusinessObject(element);\n    removeExtensionElements(element, businessObject, mapping, commandStack);\n  };\n}\n\nfunction addFactory$1({\n  bpmnFactory,\n  commandStack,\n  element\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const businessObject = getBusinessObject(element);\n    const newMapping = createElement('camunda:Out', {\n      source: '' // source is the default type\n\n    }, null, bpmnFactory);\n    addExtensionElements(element, businessObject, newMapping, bpmnFactory, commandStack);\n  };\n} // helper ///////////////\n\n\nfunction getOutMappings(element) {\n  const businessObject = getBusinessObject(element);\n  const mappings = getExtensionElementsList(businessObject, 'camunda:Out'); // only retrieve relevant mappings here, others are handled in other groups\n  // mapping.businessKey => camunda-platform/CallAvtivityProps\n  // mapping.variables => camunda-platform/OutMappingPropagationProps\n\n  return filter(mappings, function (mapping) {\n    return !mapping.businessKey && !(mapping.variables && mapping.variables === 'all');\n  });\n}\n\nfunction areOutMappingsSupported(element) {\n  return is(element, 'bpmn:CallActivity');\n}\n\nfunction OutputProps({\n  element,\n  injector\n}) {\n  if (!areOutputParametersSupported(element)) {\n    return null;\n  }\n\n  const outputParameters = getOutputParameters(element) || [];\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const items = outputParameters.map((parameter, index) => {\n    const id = element.id + '-outputParameter-' + index;\n    return {\n      id,\n      label: parameter.get('name') || '',\n      entries: InputOutputParameter({\n        idPrefix: id,\n        element,\n        parameter\n      }),\n      autoFocusEntry: id + '-name',\n      remove: removeFactory({\n        commandStack,\n        element,\n        parameter\n      })\n    };\n  });\n  return {\n    items,\n    add: addFactory({\n      bpmnFactory,\n      commandStack,\n      element\n    })\n  };\n}\n\nfunction removeFactory({\n  commandStack,\n  element,\n  parameter\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const inputOutput = getInputOutput(element);\n\n    if (!inputOutput) {\n      return;\n    }\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: inputOutput,\n      properties: {\n        outputParameters: without(inputOutput.get('outputParameters'), parameter)\n      }\n    });\n  };\n}\n\nfunction addFactory({\n  bpmnFactory,\n  commandStack,\n  element\n}) {\n  return function (event) {\n    event.stopPropagation();\n    commandStack.execute('properties-panel.multi-command-executor', AddParameterCmd(element, 'camunda:OutputParameter', bpmnFactory));\n  };\n}\n\nconst LISTENER_ALLOWED_TYPES = ['bpmn:Activity', 'bpmn:Event', 'bpmn:Gateway', 'bpmn:SequenceFlow', 'bpmn:Process', 'bpmn:Participant'];\nconst SCRIPT_PROPS = {\n  'script': undefined,\n  'resource': undefined,\n  'scriptFormat': undefined\n};\nconst CLASS_PROPS = {\n  'class': undefined\n};\nconst EXPRESSION_PROPS = {\n  'expression': undefined\n};\nconst DELEGATE_EXPRESSION_PROPS = {\n  'delegateExpression': undefined\n};\nconst DEFAULT_PROPS = { ...SCRIPT_PROPS,\n  ...CLASS_PROPS,\n  ...EXPRESSION_PROPS,\n  ...DELEGATE_EXPRESSION_PROPS\n};\nconst DEFAULT_EVENT_PROPS = {\n  'eventDefinitions': undefined,\n  'event': undefined\n};\nconst IMPLEMENTATION_TYPE_TO_LABEL = {\n  class: 'Java class',\n  expression: 'Expression',\n  delegateExpression: 'Delegate expression',\n  script: 'Script'\n};\nconst EVENT_TO_LABEL = {\n  start: 'Start',\n  end: 'End',\n  take: 'Take',\n  create: 'Create',\n  assignment: 'Assignment',\n  complete: 'Complete',\n  delete: 'Delete',\n  update: 'Update',\n  timeout: 'Timeout'\n};\n/**\n * Cf. https://docs.camunda.org/manual/latest/user-guide/process-engine/delegation-code/#execution-listener\n */\n\nfunction ExecutionListenerProps({\n  element,\n  injector\n}) {\n  if (!isAny(element, LISTENER_ALLOWED_TYPES)) {\n    return;\n  }\n\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n\n  if (is(element, 'bpmn:Participant') && !element.businessObject.processRef) {\n    return;\n  }\n\n  const businessObject = getListenersContainer(element);\n  const listeners = getExtensionElementsList(businessObject, 'camunda:ExecutionListener');\n  return {\n    items: listeners.map((listener, index) => {\n      const id = `${element.id}-executionListener-${index}`; // @TODO(barmac): Find a way to pass translate for internationalized label.\n\n      return {\n        id,\n        label: getListenerLabel(listener),\n        entries: ExecutionListener({\n          idPrefix: id,\n          element,\n          listener\n        }),\n        remove: removeListenerFactory({\n          element,\n          listener,\n          commandStack\n        })\n      };\n    }),\n    add: addExecutionListenerFactory({\n      bpmnFactory,\n      commandStack,\n      element\n    })\n  };\n}\n\nfunction ExecutionListener(props) {\n  const {\n    idPrefix,\n    element,\n    listener\n  } = props;\n  return [{\n    id: `${idPrefix}-eventType`,\n    component: EventType,\n    listener\n  }, {\n    id: `${idPrefix}-listenerType`,\n    component: ListenerType,\n    listener\n  }, ...ImplementationDetails({\n    idPrefix,\n    element,\n    listener\n  }), {\n    id: `${idPrefix}-fields`,\n    component: Fields,\n    listener\n  }];\n}\n\nfunction TaskListenerProps({\n  element,\n  injector\n}) {\n  if (!is(element, 'bpmn:UserTask')) {\n    return;\n  }\n\n  const bpmnFactory = injector.get('bpmnFactory'),\n        commandStack = injector.get('commandStack');\n  const businessObject = getListenersContainer(element);\n  const listeners = getExtensionElementsList(businessObject, 'camunda:TaskListener');\n  return {\n    items: listeners.map((listener, index) => {\n      const id = `${element.id}-taskListener-${index}`; // @TODO(barmac): Find a way to pass translate for internationalized label.\n\n      return {\n        id,\n        label: getListenerLabel(listener),\n        entries: TaskListener({\n          idPrefix: id,\n          element,\n          listener\n        }),\n        remove: removeListenerFactory({\n          element,\n          listener,\n          commandStack\n        })\n      };\n    }),\n    add: addTaskListenerFactory({\n      bpmnFactory,\n      commandStack,\n      element\n    })\n  };\n}\n\nfunction TaskListener(props) {\n  const {\n    idPrefix,\n    element,\n    listener\n  } = props;\n  return [{\n    id: `${idPrefix}-eventType`,\n    component: EventType,\n    listener\n  }, {\n    id: `${idPrefix}-listenerId`,\n    component: ListenerId,\n    listener\n  }, {\n    id: `${idPrefix}-listenerType`,\n    component: ListenerType,\n    listener\n  }, ...ImplementationDetails({\n    idPrefix,\n    element,\n    listener\n  }), ...EventTypeDetails({\n    idPrefix,\n    element,\n    listener\n  }), {\n    id: `${idPrefix}-fields`,\n    component: Fields,\n    listener\n  }];\n}\n\nfunction removeListenerFactory({\n  element,\n  listener,\n  commandStack\n}) {\n  return function removeListener(event) {\n    event.stopPropagation();\n    removeExtensionElements(element, getListenersContainer(element), listener, commandStack);\n  };\n}\n\nfunction EventType({\n  id,\n  element,\n  listener\n}) {\n  const translate = useService('translate');\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n\n  function getValue() {\n    return listener.get('event');\n  }\n\n  function setValue(value) {\n    const properties = getDefaultEventTypeProperties(value, bpmnFactory);\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: listener,\n      properties\n    });\n  }\n\n  function getOptions() {\n    if (is(listener, 'camunda:TaskListener')) {\n      return [{\n        value: 'create',\n        label: translate('create')\n      }, {\n        value: 'assignment',\n        label: translate('assignment')\n      }, {\n        value: 'complete',\n        label: translate('complete')\n      }, {\n        value: 'delete',\n        label: translate('delete')\n      }, {\n        value: 'update',\n        label: translate('update')\n      }, {\n        value: 'timeout',\n        label: translate('timeout')\n      }];\n    }\n\n    if (is(element, 'bpmn:SequenceFlow')) {\n      return [{\n        value: 'take',\n        label: translate('take')\n      }];\n    }\n\n    return [{\n      value: 'start',\n      label: translate('start')\n    }, {\n      value: 'end',\n      label: translate('end')\n    }];\n  }\n\n  return jsx(SelectEntry, {\n    id: id,\n    label: translate('Event type'),\n    getValue: getValue,\n    setValue: setValue,\n    getOptions: getOptions\n  });\n}\n\nfunction ListenerId({\n  id,\n  element,\n  listener\n}) {\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const commandStack = useService('commandStack');\n  let options = {\n    element,\n    id: id,\n    label: translate('Listener ID'),\n    debounce,\n    isEdited: isTextFieldEntryEdited,\n    setValue: value => {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: listener,\n        properties: {\n          'camunda:id': value\n        }\n      });\n    },\n    getValue: () => {\n      return listener.get('camunda:id');\n    }\n  };\n  return TextFieldEntry(options);\n}\n\nfunction ListenerType({\n  id,\n  element,\n  listener\n}) {\n  const modeling = useService('modeling');\n  const translate = useService('translate');\n  const bpmnFactory = useService('bpmnFactory');\n\n  function getValue() {\n    return getListenerType(listener);\n  }\n\n  function setValue(value) {\n    const properties = getDefaultImplementationProperties(value, bpmnFactory);\n    modeling.updateModdleProperties(element, listener, properties);\n  }\n\n  function getOptions() {\n    return getListenerTypeOptions(translate);\n  }\n\n  return jsx(SelectEntry, {\n    id: id,\n    label: translate('Listener type'),\n    getValue: getValue,\n    setValue: setValue,\n    getOptions: getOptions\n  });\n}\n\nfunction ImplementationDetails(props) {\n  const {\n    idPrefix,\n    element,\n    listener\n  } = props;\n  const type = getListenerType(listener);\n\n  if (type === 'class') {\n    return [{\n      id: getPrefixedId(idPrefix, 'javaClass'),\n      component: JavaClass,\n      businessObject: listener\n    }];\n  } else if (type === 'expression') {\n    return [{\n      id: getPrefixedId(idPrefix, 'expression'),\n      component: Expression$1,\n      businessObject: listener\n    }];\n  } else if (type === 'delegateExpression') {\n    return [{\n      id: getPrefixedId(idPrefix, 'delegateExpression'),\n      component: DelegateExpression,\n      businessObject: listener\n    }];\n  } else if (type === 'script') {\n    return ScriptProps({\n      element,\n      script: listener.get('script'),\n      prefix: idPrefix\n    });\n  }\n}\n\nfunction EventTypeDetails(props) {\n  const {\n    idPrefix,\n    element,\n    listener\n  } = props;\n  const type = listener.get('event');\n\n  if (type === 'timeout') {\n    return TimerProps$1({\n      element,\n      listener,\n      timerEventDefinition: getTimerEventDefinition(listener),\n      idPrefix: idPrefix\n    });\n  }\n\n  return [];\n}\n\nfunction Field(props) {\n  const {\n    element,\n    id: idPrefix,\n    index,\n    item: field,\n    open\n  } = props;\n  const fieldId = `${idPrefix}-field-${index}`;\n  return jsx(CollapsibleEntry, {\n    id: fieldId,\n    element: element,\n    entries: FieldInjection({\n      element,\n      field,\n      idPrefix: fieldId\n    }),\n    label: field.get('name') || '<empty>',\n    open: open\n  });\n}\n\nfunction Fields(props) {\n  const {\n    id,\n    element,\n    listener\n  } = props;\n  const bpmnFactory = useService('bpmnFactory');\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const fields = listener.get('fields');\n\n  function addField() {\n    const field = createElement('camunda:Field', {}, listener, bpmnFactory);\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: listener,\n      properties: {\n        fields: [...listener.get('fields'), field]\n      }\n    });\n  }\n\n  function removeField(field) {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: listener,\n      properties: {\n        fields: without(listener.get('fields'), field)\n      }\n    });\n  }\n\n  return jsx(ListEntry, {\n    id: id,\n    element: element,\n    label: translate('Field injection'),\n    items: fields,\n    component: Field,\n    onAdd: addField,\n    onRemove: removeField,\n    compareFn: compareName,\n    autoFocusEntry: true\n  });\n}\n\nfunction addListenerFactory({\n  bpmnFactory,\n  commandStack,\n  element,\n  listenerGroup\n}) {\n  return function (event) {\n    event.stopPropagation();\n    const listener = bpmnFactory.create(listenerGroup, {\n      event: getDefaultEvent(element, listenerGroup),\n      class: ''\n    });\n    const businessObject = getListenersContainer(element);\n    addExtensionElements(element, businessObject, listener, bpmnFactory, commandStack);\n  };\n}\n\nfunction addTaskListenerFactory(props) {\n  return addListenerFactory({ ...props,\n    listenerGroup: 'camunda:TaskListener'\n  });\n}\n\nfunction addExecutionListenerFactory(props) {\n  return addListenerFactory({ ...props,\n    listenerGroup: 'camunda:ExecutionListener'\n  });\n} // helper\n\n/**\n * Get a readable label for a listener.\n *\n * @param {ModdleElement} listener\n * @param {string => string} [translate]\n */\n\n\nfunction getListenerLabel(listener, translate = value => value) {\n  const event = listener.get('event');\n  const implementationType = getListenerType(listener);\n  return `${translate(EVENT_TO_LABEL[event])}: ${translate(IMPLEMENTATION_TYPE_TO_LABEL[implementationType])}`;\n}\n\nfunction getListenerTypeOptions(translate) {\n  return Object.entries(IMPLEMENTATION_TYPE_TO_LABEL).map(([value, label]) => ({\n    value,\n    label: translate(label)\n  }));\n}\n\nfunction getListenerType(listener) {\n  return getImplementationType(listener);\n}\n\nfunction getDefaultEvent(element, listenerGroup) {\n  if (listenerGroup === 'camunda:TaskListener') return 'create';\n  return is(element, 'bpmn:SequenceFlow') ? 'take' : 'start';\n}\n\nfunction getDefaultImplementationProperties(type, bpmnFactory) {\n  switch (type) {\n    case 'class':\n      return { ...DEFAULT_PROPS,\n        'class': ''\n      };\n\n    case 'expression':\n      return { ...DEFAULT_PROPS,\n        'expression': ''\n      };\n\n    case 'delegateExpression':\n      return { ...DEFAULT_PROPS,\n        'delegateExpression': ''\n      };\n\n    case 'script':\n      return { ...DEFAULT_PROPS,\n        'script': bpmnFactory.create('camunda:Script')\n      };\n  }\n}\n\nfunction getDefaultEventTypeProperties(type, bpmnFactory) {\n  switch (type) {\n    case 'timeout':\n      return { ...DEFAULT_EVENT_PROPS,\n        eventDefinitions: [bpmnFactory.create('bpmn:TimerEventDefinition')],\n        event: type\n      };\n\n    default:\n      return { ...DEFAULT_EVENT_PROPS,\n        event: type\n      };\n  }\n}\n\nfunction getPrefixedId(prefix, id) {\n  return `${prefix}-${id}`;\n}\n\nfunction compareName(field, anotherField) {\n  const [name = '', anotherName = ''] = [field.name, anotherField.name];\n  return name === anotherName ? 0 : name > anotherName ? 1 : -1;\n}\n\nfunction getListenersContainer(element) {\n  const businessObject = getBusinessObject(element);\n  return businessObject.get('processRef') || businessObject;\n}\n\nfunction ProcessVariablesProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!canHaveProcessVariables(element)) {\n    return null;\n  }\n\n  const businessObject = getBusinessObject(element);\n  const rootElement = getRootElement(businessObject);\n  const scope = getScope(element); // (1) fetch available process variables for given scope\n\n  const variables = getVariablesForScope(scope, rootElement);\n\n  if (!variables.length) {\n    return null;\n  }\n\n  const withNames = populateElementNames(sortByName(variables));\n  const byScope = groupByScope(withNames);\n  const multiScope = isMultiScope(byScope);\n  let variableItems = []; // (2) get variables to display\n\n  if (multiScope) {\n    // (2a) multiple scopes, sub scopes first\n    // assumption: variables extractor fetches parent variables first\n    const reversed = map(reverse(keys(byScope)), scopeKey => byScope[scopeKey]);\n    variableItems = flatten(reversed);\n  } else {\n    // (2b) single scope\n    variableItems = withNames;\n  }\n\n  const items = variableItems.map((variable, index) => {\n    const id = element.id + '-variable-' + index;\n    return {\n      id,\n      label: variable.name,\n      entries: [...ProcessVariableItem({\n        idPrefix: id,\n        multiScope,\n        variable\n      })]\n    };\n  });\n  return {\n    items,\n    shouldSort: false\n  };\n}\n\nfunction ProcessVariableItem(props) {\n  const {\n    idPrefix,\n    multiScope,\n    variable\n  } = props;\n  let entries = [];\n\n  if (multiScope) {\n    entries.push({\n      id: idPrefix + '-scope',\n      component: Scope,\n      idPrefix,\n      variable\n    });\n  }\n\n  entries.push({\n    id: idPrefix + '-createdIn',\n    component: CreatedIn,\n    idPrefix,\n    variable\n  });\n  return entries;\n}\n\nfunction Scope(props) {\n  const {\n    idPrefix,\n    variable\n  } = props;\n  const translate = useService('translate');\n  const id = idPrefix + '-scope';\n  return jsxs(\"div\", {\n    \"data-entry-id\": id,\n    class: \"bio-properties-panel-entry\",\n    children: [jsx(\"b\", {\n      style: \"font-weight: bold\",\n      class: \"bio-properties-panel-label\",\n      children: translate('Scope')\n    }), jsx(\"label\", {\n      id: prefixId(id),\n      class: \"bio-properties-panel-label\",\n      children: variable.scope\n    })]\n  });\n}\n\nfunction CreatedIn(props) {\n  const {\n    idPrefix,\n    variable\n  } = props;\n  const translate = useService('translate');\n  const id = idPrefix + '-createdIn';\n  const origin = variable.origin.join(', ');\n  return jsxs(\"div\", {\n    \"data-entry-id\": id,\n    class: \"bio-properties-panel-entry\",\n    children: [jsx(\"b\", {\n      style: \"font-weight: bold\",\n      class: \"bio-properties-panel-label\",\n      children: translate('Created in')\n    }), jsx(\"label\", {\n      id: prefixId(id),\n      class: \"bio-properties-panel-label\",\n      children: origin\n    })]\n  });\n} // helper //////////////////////\n\n\nfunction canHaveProcessVariables(element) {\n  const businessObject = getBusinessObject(element);\n  return isAny(element, ['bpmn:Process', 'bpmn:SubProcess']) || is(element, 'bpmn:Participant') && businessObject.get('processRef');\n}\n\nfunction getRootElement(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (is(businessObject, 'bpmn:Participant')) {\n    return businessObject.processRef;\n  }\n\n  if (is(businessObject, 'bpmn:Process')) {\n    return businessObject;\n  }\n\n  let parent = businessObject;\n\n  while (parent.$parent && !is(parent, 'bpmn:Process')) {\n    parent = parent.$parent;\n  }\n\n  return parent;\n}\n\nfunction getScope(element) {\n  const bo = getBusinessObject(element);\n\n  if (is(element, 'bpmn:Participant')) {\n    return bo.processRef.id;\n  }\n\n  return bo.id;\n}\n\nfunction sortByName(variables) {\n  return sortBy(variables, function (variable) {\n    return variable.name;\n  });\n}\n\nfunction groupByScope(variables) {\n  return groupBy(variables, 'scope');\n}\n\nfunction populateElementNames(variables) {\n  forEach(variables, function (variable) {\n    const names = map(variable.origin, function (element) {\n      return element.name || element.id;\n    });\n    variable.origin = names;\n    variable.scope = variable.scope.name || variable.scope.id;\n  });\n  return variables;\n}\n\nfunction isMultiScope(scopedVariables) {\n  return keys(scopedVariables).length > 1;\n}\n\nfunction reverse(array) {\n  return map(array, function (a, i) {\n    return array[array.length - 1 - i];\n  });\n}\n\nfunction prefixId(id) {\n  return `bio-properties-panel-${id}`;\n}\n\nfunction ScriptTaskProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'bpmn:ScriptTask')) {\n    return [];\n  }\n\n  const entries = [...ScriptProps({\n    element\n  })];\n  entries.push({\n    id: 'scriptResultVariable',\n    component: ResultVariable,\n    isEdited: isTextFieldEntryEdited\n  });\n  return entries;\n}\n\nfunction ResultVariable(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:resultVariable');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:resultVariable': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'scriptResultVariable',\n    label: translate('Result variable'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction TasklistProps(props) {\n  const {\n    element\n  } = props;\n  const businessObject = getBusinessObject(element);\n\n  const isEdited = node => {\n    return node && !node.checked;\n  };\n\n  if (!is(element, 'bpmn:Process') && !(is(element, 'bpmn:Participant') && businessObject.get('processRef'))) {\n    return [];\n  }\n\n  return [{\n    id: 'isStartableInTasklist',\n    component: Startable,\n    isEdited\n  }];\n}\n\nfunction Startable(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const process = getProcess$1(element);\n\n  const getValue = () => {\n    return process.get('camunda:isStartableInTasklist');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: process,\n      properties: {\n        'camunda:isStartableInTasklist': value\n      }\n    });\n  };\n\n  return CheckboxEntry({\n    element,\n    id: 'isStartableInTasklist',\n    label: translate('Startable'),\n    getValue,\n    setValue\n  });\n} // helper //////////////////\n\n\nfunction getProcess$1(element) {\n  return is(element, 'bpmn:Process') ? getBusinessObject(element) : getBusinessObject(element).get('processRef');\n}\n\n/**\n * Cf. https://docs.camunda.org/manual/latest/reference/bpmn20/tasks/user-task/\n */\n\nfunction UserAssignmentProps(props) {\n  const {\n    element\n  } = props;\n\n  if (!is(element, 'camunda:Assignable')) {\n    return [];\n  }\n\n  return [{\n    id: 'assignee',\n    component: Assignee,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'candidateGroups',\n    component: CandidateGroups,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'candidateUsers',\n    component: CandidateUsers,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'dueDate',\n    component: DueDate,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'followUpDate',\n    component: FollowUpDate,\n    isEdited: isTextFieldEntryEdited\n  }, {\n    id: 'priority',\n    component: Priority,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction Assignee(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:assignee');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:assignee': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'assignee',\n    label: translate('Assignee'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction CandidateUsers(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:candidateUsers');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:candidateUsers': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'candidateUsers',\n    label: translate('Candidate users'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction CandidateGroups(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:candidateGroups');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:candidateGroups': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'candidateGroups',\n    label: translate('Candidate groups'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction DueDate(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:dueDate');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:dueDate': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'dueDate',\n    label: translate('Due date'),\n    description: translate('The due date as an EL expression (e.g. ${someDate}) or an ISO date (e.g. 2015-06-26T09:54:00).'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction FollowUpDate(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:followUpDate');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:followUpDate': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'followUpDate',\n    label: translate('Follow up date'),\n    description: translate('The follow up date as an EL expression (e.g. ${someDate}) or an ' + 'ISO date (e.g. 2015-06-26T09:54:00).'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction Priority(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const businessObject = getBusinessObject(element);\n\n  const getValue = () => {\n    return businessObject.get('camunda:priority');\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: businessObject,\n      properties: {\n        'camunda:priority': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'priority',\n    label: translate('Priority'),\n    getValue,\n    setValue,\n    debounce\n  });\n}\n\nfunction VersionTagProps(props) {\n  const {\n    element\n  } = props;\n  const businessObject = getBusinessObject(element);\n\n  if (!is(element, 'bpmn:Process') && !(is(element, 'bpmn:Participant') && businessObject.get('processRef'))) {\n    return [];\n  }\n\n  return [{\n    id: 'versionTag',\n    component: VersionTag,\n    isEdited: isTextFieldEntryEdited\n  }];\n}\n\nfunction VersionTag(props) {\n  const {\n    element\n  } = props;\n  const commandStack = useService('commandStack');\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n  const process = getProcess(element);\n\n  const getValue = () => {\n    return process.get('camunda:versionTag') || '';\n  };\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: process,\n      properties: {\n        'camunda:versionTag': value\n      }\n    });\n  };\n\n  return TextFieldEntry({\n    element,\n    id: 'versionTag',\n    label: translate('Version tag'),\n    getValue,\n    setValue,\n    debounce\n  });\n} // helper //////////////////\n\n\nfunction getProcess(element) {\n  return is(element, 'bpmn:Process') ? getBusinessObject(element) : getBusinessObject(element).get('processRef');\n}\n\nconst LOW_PRIORITY = 500;\nconst CAMUNDA_PLATFORM_GROUPS = [HistoryCleanupGroup, TasklistGroup, CandidateStarterGroup, ImplementationGroup, ExternalTaskGroup, ProcessVariablesGroup, ErrorsGroup, UserAssignmentGroup, FormGroup, FormDataGroup, TaskListenerGroup, StartInitiatorGroup, ScriptGroup, ConditionGroup, CallActivityGroup, AsynchronousContinuationsGroup, JobExecutionGroup, InMappingPropagationGroup, InMappingGroup, InputGroup, ConnectorInputGroup, OutMappingPropagationGroup, OutMappingGroup, OutputGroup, ConnectorOutputGroup, ExecutionListenerGroup, ExtensionPropertiesGroup, FieldInjectionGroup, BusinessKeyGroup];\n/**\n * Provides `camunda` namespace properties.\n *\n * @example\n * ```javascript\n * import BpmnModeler from 'bpmn-js/lib/Modeler';\n * import {\n *   BpmnPropertiesPanelModule,\n *   BpmnPropertiesProviderModule,\n *   CamundaPlatformPropertiesProviderModule\n * } from 'bpmn-js-properties-panel';\n *\n * const modeler = new BpmnModeler({\n *   container: '#canvas',\n *   propertiesPanel: {\n *     parent: '#properties'\n *   },\n *   additionalModules: [\n *     BpmnPropertiesPanelModule,\n *     BpmnPropertiesProviderModule,\n *     CamundaPlatformPropertiesProviderModule\n *   ]\n * });\n * ```\n */\n\nclass CamundaPlatformPropertiesProvider {\n  constructor(propertiesPanel, injector) {\n    propertiesPanel.registerProvider(LOW_PRIORITY, this);\n    this._injector = injector;\n  }\n\n  getGroups(element) {\n    return groups => {\n      // (1) add Camunda Platform specific groups\n      groups = groups.concat(this._getGroups(element)); // (2) update existing groups with Camunda Platform specific properties\n\n      updateGeneralGroup(groups, element);\n      updateErrorGroup(groups, element);\n      updateEscalationGroup(groups, element);\n      updateMultiInstanceGroup(groups, element); // (3) move groups given specific priorities\n\n      moveImplementationGroup(groups);\n      return groups;\n    };\n  }\n\n  _getGroups(element) {\n    const groups = CAMUNDA_PLATFORM_GROUPS.map(createGroup => createGroup(element, this._injector)); // contract: if a group returns null, it should not be displayed at all\n\n    return groups.filter(group => group !== null);\n  }\n\n}\nCamundaPlatformPropertiesProvider.$inject = ['propertiesPanel', 'injector'];\n/**\n * This ensures the <Implementation> group always locates after <Documentation>\n */\n\nfunction moveImplementationGroup(groups) {\n  const documentationGroupIdx = findGroupIndex(groups, 'documentation');\n\n  if (documentationGroupIdx < 0) {\n    return;\n  }\n\n  return moveGroup(groups, 'CamundaPlatform__Implementation', documentationGroupIdx + 1);\n}\n\nfunction updateGeneralGroup(groups, element) {\n  const generalGroup = findGroup(groups, 'general');\n\n  if (!generalGroup) {\n    return;\n  }\n\n  const {\n    entries\n  } = generalGroup; // (1) add version tag before executable (if existing)\n\n  const executableEntry = findIndex(entries, entry => entry.id === 'isExecutable');\n  const insertIndex = executableEntry >= 0 ? executableEntry : entries.length;\n  entries.splice(insertIndex, 0, ...VersionTagProps({\n    element\n  }));\n}\n\nfunction updateErrorGroup(groups, element) {\n  const errorGroup = findGroup(groups, 'error');\n\n  if (!errorGroup) {\n    return;\n  }\n\n  const {\n    entries\n  } = errorGroup;\n  ErrorProps({\n    element,\n    entries\n  });\n}\n\nfunction updateMultiInstanceGroup(groups, element) {\n  const multiInstanceGroup = findGroup(groups, 'multiInstance');\n\n  if (!multiInstanceGroup) {\n    return;\n  }\n\n  const {\n    entries\n  } = multiInstanceGroup;\n  MultiInstanceProps({\n    element,\n    entries\n  });\n}\n\nfunction updateEscalationGroup(groups, element) {\n  const escalationGroup = findGroup(groups, 'escalation');\n\n  if (!escalationGroup) {\n    return;\n  }\n\n  const {\n    entries\n  } = escalationGroup;\n  EscalationProps({\n    element,\n    entries\n  });\n}\n\nfunction ImplementationGroup(element) {\n  const group = {\n    label: 'Implementation',\n    id: 'CamundaPlatform__Implementation',\n    component: Group,\n    entries: [...ImplementationProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction ErrorsGroup(element, injector) {\n  const group = {\n    label: 'Errors',\n    id: 'CamundaPlatform__Errors',\n    component: ListGroup,\n    ...ErrorsProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction UserAssignmentGroup(element) {\n  const group = {\n    label: 'User assignment',\n    id: 'CamundaPlatform__UserAssignment',\n    component: Group,\n    entries: [...UserAssignmentProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction ScriptGroup(element) {\n  const group = {\n    label: 'Script',\n    id: 'CamundaPlatform__Script',\n    component: Group,\n    entries: [...ScriptTaskProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction CallActivityGroup(element) {\n  const group = {\n    label: 'Called element',\n    id: 'CamundaPlatform__CallActivity',\n    component: Group,\n    entries: [...CallActivityProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction ConditionGroup(element) {\n  const group = {\n    label: 'Condition',\n    id: 'CamundaPlatform__Condition',\n    component: Group,\n    entries: [...ConditionProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction StartInitiatorGroup(element) {\n  const group = {\n    label: 'Start initiator',\n    id: 'CamundaPlatform__StartInitiator',\n    component: Group,\n    entries: [...InitiatorProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction ExternalTaskGroup(element) {\n  const group = {\n    label: 'External task',\n    id: 'CamundaPlatform__ExternalTask',\n    component: Group,\n    entries: [...ExternalTaskPriorityProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction AsynchronousContinuationsGroup(element) {\n  const group = {\n    label: 'Asynchronous continuations',\n    id: 'CamundaPlatform__AsynchronousContinuations',\n    component: Group,\n    entries: [...AsynchronousContinuationsProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction JobExecutionGroup(element) {\n  const group = {\n    label: 'Job execution',\n    id: 'CamundaPlatform__JobExecution',\n    component: Group,\n    entries: [...JobExecutionProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction CandidateStarterGroup(element) {\n  const group = {\n    label: 'Candidate starter',\n    id: 'CamundaPlatform__CandidateStarter',\n    component: Group,\n    entries: [...CandidateStarterProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction FieldInjectionGroup(element, injector) {\n  const group = {\n    label: 'Field injections',\n    id: 'CamundaPlatform__FieldInjection',\n    component: ListGroup,\n    ...FieldInjectionProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction HistoryCleanupGroup(element) {\n  const group = {\n    label: 'History cleanup',\n    id: 'CamundaPlatform__HistoryCleanup',\n    component: Group,\n    entries: [...HistoryCleanupProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction TasklistGroup(element) {\n  const group = {\n    label: 'Tasklist',\n    id: 'CamundaPlatform__Tasklist',\n    component: Group,\n    entries: [...TasklistProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction InMappingGroup(element, injector) {\n  const group = {\n    label: 'In mappings',\n    id: 'CamundaPlatform__InMapping',\n    component: ListGroup,\n    ...InMappingProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction InMappingPropagationGroup(element) {\n  const group = {\n    label: 'In mapping propagation',\n    id: 'CamundaPlatform__InMappingPropagation',\n    component: Group,\n    entries: [...InMappingPropagationProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction OutMappingGroup(element, injector) {\n  const group = {\n    label: 'Out mappings',\n    id: 'CamundaPlatform__OutMapping',\n    component: ListGroup,\n    ...OutMappingProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction OutMappingPropagationGroup(element) {\n  const group = {\n    label: 'Out mapping propagation',\n    id: 'CamundaPlatform__OutMappingPropagation',\n    component: Group,\n    entries: [...OutMappingPropagationProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction ProcessVariablesGroup(element, injector) {\n  const group = {\n    label: 'Process variables',\n    id: 'CamundaPlatform__ProcessVariables',\n    component: ListGroup,\n    ...ProcessVariablesProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction FormDataGroup(element, injector) {\n  const group = {\n    label: 'Form fields',\n    id: 'CamundaPlatform__FormData',\n    component: ListGroup,\n    ...FormDataProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction BusinessKeyGroup(element) {\n  const group = {\n    label: 'Business key',\n    id: 'CamundaPlatform__BusinessKey',\n    component: Group,\n    entries: [...BusinessKeyProps$1({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction FormGroup(element) {\n  const group = {\n    label: 'Forms',\n    id: 'CamundaPlatform__Form',\n    component: Group,\n    entries: [...FormProps({\n      element\n    })]\n  };\n\n  if (group.entries.length) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction ExecutionListenerGroup(element, injector) {\n  const group = {\n    label: 'Execution listeners',\n    id: 'CamundaPlatform__ExecutionListener',\n    component: ListGroup,\n    ...ExecutionListenerProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction TaskListenerGroup(element, injector) {\n  const group = {\n    label: 'Task listeners',\n    id: 'CamundaPlatform__TaskListener',\n    component: ListGroup,\n    ...TaskListenerProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction InputGroup(element, injector) {\n  const group = {\n    label: 'Inputs',\n    id: 'CamundaPlatform__Input',\n    component: ListGroup,\n    ...InputProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction OutputGroup(element, injector) {\n  const group = {\n    label: 'Outputs',\n    id: 'CamundaPlatform__Output',\n    component: ListGroup,\n    ...OutputProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction ConnectorInputGroup(element, injector) {\n  const group = {\n    label: 'Connector inputs',\n    id: 'CamundaPlatform__ConnectorInput',\n    component: ListGroup,\n    ...ConnectorInputProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction ConnectorOutputGroup(element, injector) {\n  const group = {\n    label: 'Connector outputs',\n    id: 'CamundaPlatform__ConnectorOutput',\n    component: ListGroup,\n    ...ConnectorOutputProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n}\n\nfunction ExtensionPropertiesGroup(element, injector) {\n  const group = {\n    label: 'Extension properties',\n    id: 'CamundaPlatform__ExtensionProperties',\n    component: ListGroup,\n    ...ExtensionPropertiesProps({\n      element,\n      injector\n    })\n  };\n\n  if (group.items) {\n    return group;\n  }\n\n  return null;\n} // helper /////////////////////\n\n\nfunction findGroup(groups, id) {\n  return groups.find(g => g.id === id);\n}\n\nfunction findGroupIndex(groups, id) {\n  return findIndex(groups, g => g.id === id);\n}\n\nfunction moveGroup(groups, id, position) {\n  const groupIndex = findGroupIndex(groups, id);\n\n  if (position < 0 || groupIndex < 0) {\n    return;\n  }\n\n  return mutate(groups, groupIndex, position);\n}\n\nvar camundaPlatformPropertiesProviderModule = {\n  __init__: ['camundaPlatformPropertiesProvider'],\n  camundaPlatformPropertiesProvider: ['type', CamundaPlatformPropertiesProvider]\n};\n\nconst PROPERTY_TYPE$1 = 'property';\nconst ZEBBE_INPUT_TYPE = 'zeebe:input';\nconst ZEEBE_OUTPUT_TYPE = 'zeebe:output';\nconst ZEEBE_TASK_DEFINITION_TYPE_TYPE = 'zeebe:taskDefinition:type';\nconst ZEEBE_TASK_HEADER_TYPE = 'zeebe:taskHeader';\nconst EXTENSION_BINDING_TYPES$1 = [ZEBBE_INPUT_TYPE, ZEEBE_OUTPUT_TYPE, ZEEBE_TASK_DEFINITION_TYPE_TYPE, ZEEBE_TASK_HEADER_TYPE];\nconst TASK_DEFINITION_TYPES = [ZEEBE_TASK_DEFINITION_TYPE_TYPE];\nconst IO_BINDING_TYPES$1 = [ZEBBE_INPUT_TYPE, ZEEBE_OUTPUT_TYPE];\n\n/**\n * The BPMN 2.0 extension attribute name under\n * which the element template ID is stored.\n *\n * @type {String}\n */\n\nconst TEMPLATE_ID_ATTR$1 = 'zeebe:modelerTemplate';\n/**\n * The BPMN 2.0 extension attribute name under\n * which the element template version is stored.\n *\n * @type {String}\n */\n\nconst TEMPLATE_VERSION_ATTR$1 = 'zeebe:modelerTemplateVersion';\n/**\n * Get template id for a given diagram element.\n *\n * @param {djs.model.Base} element\n *\n * @return {String}\n */\n\nfunction getTemplateId$1(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (businessObject) {\n    return businessObject.get(TEMPLATE_ID_ATTR$1);\n  }\n}\n/**\n * Get template version for a given diagram element.\n *\n * @param {djs.model.Base} element\n *\n * @return {String}\n */\n\nfunction getTemplateVersion$1(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (businessObject) {\n    return businessObject.get(TEMPLATE_VERSION_ATTR$1);\n  }\n}\n/**\n * Find extension with given type in\n * BPMN element, diagram element or ExtensionElement.\n *\n * @param {ModdleElement|djs.model.Base} element\n * @param {String} type\n *\n * @return {ModdleElement} the extension\n */\n\nfunction findExtension$1(element, type) {\n  const businessObject = getBusinessObject(element);\n  let extensionElements;\n\n  if (is(businessObject, 'bpmn:ExtensionElements')) {\n    extensionElements = businessObject;\n  } else {\n    extensionElements = businessObject.get('extensionElements');\n  }\n\n  if (!extensionElements) {\n    return null;\n  }\n\n  return extensionElements.get('values').find(value => {\n    return is(value, type);\n  });\n}\nfunction findInputParameter$1(ioMapping, binding) {\n  const parameters = ioMapping.get('inputParameters');\n  return parameters.find(parameter => {\n    return parameter.target === binding.name;\n  });\n}\nfunction findOutputParameter$1(ioMapping, binding) {\n  const parameters = ioMapping.get('outputParameters');\n  return parameters.find(parameter => {\n    return parameter.source === binding.source;\n  });\n}\nfunction findTaskHeader(taskHeaders, binding) {\n  const headers = taskHeaders.get('values');\n  return headers.find(header => {\n    return header.key === binding.key;\n  });\n}\n\n/**\n * Create an input parameter representing the given\n * binding and value.\n *\n * @param {PropertyBinding} binding\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createInputParameter$1(binding, value, bpmnFactory) {\n  const {\n    name\n  } = binding;\n  return bpmnFactory.create('zeebe:Input', {\n    source: value,\n    target: name\n  });\n}\n/**\n * Create an output parameter representing the given\n * binding and value.\n *\n * @param {PropertyBinding} binding\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createOutputParameter$1(binding, value, bpmnFactory) {\n  const {\n    source\n  } = binding;\n  return bpmnFactory.create('zeebe:Output', {\n    source,\n    target: value\n  });\n}\n/**\n * Create a task header representing the given\n * binding and value.\n *\n * @param {PropertyBinding} binding\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createTaskHeader(binding, value, bpmnFactory) {\n  const {\n    key\n  } = binding;\n  return bpmnFactory.create('zeebe:Header', {\n    key,\n    value\n  });\n}\n/**\n * Create a task definition representing the given value.\n *\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createTaskDefinitionWithType(value, bpmnFactory) {\n  return bpmnFactory.create('zeebe:TaskDefinition', {\n    type: value\n  });\n}\n/**\n * Retrieves whether an element should be updated for a given property.\n *\n * That matches once\n * a) the property value is not empty, or\n * b) the property is not optional\n *\n * @param {String} value\n * @param {Object} property\n * @returns {Boolean}\n */\n\nfunction shouldUpdate(value, property) {\n  const {\n    optional\n  } = property;\n  return value || !optional;\n}\n/**\n * Gets or, in case not existent, creates extension element for given element.\n *\n * @param {djs.model.Base} element\n * @param {String} type\n * @param {BpmnFactory} bpmnFactory\n * @returns {ModdleElement}\n */\n\nfunction ensureExtension(element, type, bpmnFactory) {\n  const businessObject = getBusinessObject(element);\n  const extensionElements = businessObject.get('extensionElements');\n  let extension = findExtension$1(extensionElements, type);\n\n  if (!extension) {\n    extension = bpmnFactory.create(type);\n    extension.$parent = extensionElements;\n    extensionElements.get('values').push(extension);\n  }\n\n  return extension;\n}\n\nconst PRIMITIVE_MODDLE_TYPES$1 = ['Boolean', 'Integer', 'String'];\nfunction getPropertyValue$1(element, property, scope) {\n  let businessObject = getBusinessObject(element);\n  const defaultValue = '';\n  const {\n    binding\n  } = property;\n  const {\n    name,\n    type\n  } = binding; // property\n\n  if (type === 'property') {\n    const value = businessObject.get(name);\n\n    if (!isUndefined(value)) {\n      return value;\n    }\n\n    return defaultValue;\n  } // zeebe:taskDefinition\n\n\n  if (TASK_DEFINITION_TYPES.includes(type)) {\n    const taskDefinition = findExtension$1(businessObject, 'zeebe:TaskDefinition');\n\n    if (taskDefinition) {\n      if (type === ZEEBE_TASK_DEFINITION_TYPE_TYPE) {\n        return taskDefinition.get('type');\n      }\n    }\n\n    return defaultValue;\n  }\n\n  if (IO_BINDING_TYPES$1.includes(type)) {\n    const ioMapping = findExtension$1(businessObject, 'zeebe:IoMapping');\n\n    if (!ioMapping) {\n      return defaultValue;\n    } // zeebe:Input\n\n\n    if (type === ZEBBE_INPUT_TYPE) {\n      const inputParameter = findInputParameter$1(ioMapping, binding);\n\n      if (inputParameter) {\n        return inputParameter.get('source');\n      }\n\n      return defaultValue;\n    } // zeebe:Output\n\n\n    if (type === ZEEBE_OUTPUT_TYPE) {\n      const outputParameter = findOutputParameter$1(ioMapping, binding);\n\n      if (outputParameter) {\n        return outputParameter.get('target');\n      }\n\n      return defaultValue;\n    }\n  } // zeebe:taskHeaders\n\n\n  if (type === ZEEBE_TASK_HEADER_TYPE) {\n    const taskHeaders = findExtension$1(businessObject, 'zeebe:TaskHeaders');\n\n    if (!taskHeaders) {\n      return defaultValue;\n    }\n\n    const header = findTaskHeader(taskHeaders, binding);\n\n    if (header) {\n      return header.get('value');\n    }\n\n    return defaultValue;\n  } // should never throw as templates are validated beforehand\n\n\n  throw unknownBindingError$1(element, property);\n}\nfunction setPropertyValue(bpmnFactory, commandStack, element, property, value) {\n  let businessObject = getBusinessObject(element);\n  const {\n    binding\n  } = property;\n  const {\n    name,\n    type\n  } = binding;\n  let extensionElements;\n  let propertyValue;\n  const commands = [];\n  const context = {\n    element,\n    property\n  }; // ensure extension elements\n\n  if (EXTENSION_BINDING_TYPES$1.includes(type)) {\n    extensionElements = businessObject.get('extensionElements');\n\n    if (!extensionElements) {\n      extensionElements = createElement('bpmn:ExtensionElements', null, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: { ...context,\n          moddleElement: businessObject,\n          properties: {\n            extensionElements\n          }\n        }\n      });\n    }\n  } // property\n\n\n  if (type === 'property') {\n    const propertyDescriptor = businessObject.$descriptor.propertiesByName[name]; // if property not created yet\n\n    if (!propertyDescriptor) {\n      propertyValue = value;\n    } else {\n      const {\n        type: propertyType\n      } = propertyDescriptor; // do not override non-primitive types\n\n      if (!PRIMITIVE_MODDLE_TYPES$1.includes(propertyType)) {\n        throw new Error(`cannot set property of type <${propertyType}>`);\n      }\n\n      if (propertyType === 'Boolean') {\n        propertyValue = !!value;\n      } else if (propertyType === 'Integer') {\n        propertyValue = parseInt(value, 10);\n\n        if (isNaN(propertyValue)) {\n          // do not set NaN value\n          propertyValue = undefined;\n        }\n      } else {\n        // make sure we don't remove the property\n        propertyValue = value || '';\n      }\n    }\n\n    if (!isUndefined(propertyValue)) {\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: { ...context,\n          moddleElement: businessObject,\n          properties: {\n            [name]: propertyValue\n          }\n        }\n      });\n    }\n  } // zeebe:taskDefinition\n\n\n  if (TASK_DEFINITION_TYPES.includes(type)) {\n    const oldTaskDefinition = findExtension$1(extensionElements, 'zeebe:TaskDefinition');\n    let newTaskDefinition;\n\n    if (type === ZEEBE_TASK_DEFINITION_TYPE_TYPE) {\n      newTaskDefinition = createTaskDefinitionWithType(value, bpmnFactory);\n    } else {\n      return unknownBindingError$1(element, property);\n    }\n\n    const values = extensionElements.get('values').filter(value => value !== oldTaskDefinition);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: { ...context,\n        moddleElement: extensionElements,\n        properties: {\n          values: [...values, newTaskDefinition]\n        }\n      }\n    });\n  }\n\n  if (IO_BINDING_TYPES$1.includes(type)) {\n    let ioMapping = findExtension$1(extensionElements, 'zeebe:IoMapping');\n\n    if (!ioMapping) {\n      ioMapping = createElement('zeebe:IoMapping', null, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: { ...context,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), ioMapping]\n          }\n        }\n      });\n    } // zeebe:Input\n\n\n    if (type === ZEBBE_INPUT_TYPE) {\n      const oldZeebeInputParameter = findInputParameter$1(ioMapping, binding);\n      const values = ioMapping.get('inputParameters').filter(value => value !== oldZeebeInputParameter); // do not persist empty parameters when configured as <optional>\n\n      if (shouldUpdate(value, property)) {\n        const newZeebeInputParameter = createInputParameter$1(binding, value, bpmnFactory);\n        values.push(newZeebeInputParameter);\n      }\n\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: { ...context,\n          moddleElement: ioMapping,\n          properties: {\n            inputParameters: [...values]\n          }\n        }\n      });\n    } // zeebe:Output\n\n\n    if (type === ZEEBE_OUTPUT_TYPE) {\n      const oldZeebeOutputParameter = findOutputParameter$1(ioMapping, binding);\n      const values = ioMapping.get('outputParameters').filter(value => value !== oldZeebeOutputParameter); // do not persist empty parameters when configured as <optional>\n\n      if (shouldUpdate(value, property)) {\n        const newZeebeOutputParameter = createOutputParameter$1(binding, value, bpmnFactory);\n        values.push(newZeebeOutputParameter);\n      }\n\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: { ...context,\n          moddleElement: ioMapping,\n          properties: {\n            'outputParameters': [...values]\n          }\n        }\n      });\n    }\n  } // zeebe:taskHeaders\n\n\n  if (type === ZEEBE_TASK_HEADER_TYPE) {\n    let taskHeaders = findExtension$1(extensionElements, 'zeebe:TaskHeaders');\n\n    if (!taskHeaders) {\n      taskHeaders = createElement('zeebe:TaskHeaders', null, businessObject, bpmnFactory);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: { ...context,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), taskHeaders]\n          }\n        }\n      });\n    }\n\n    const oldTaskHeader = findTaskHeader(taskHeaders, binding);\n    const newTaskHeader = createTaskHeader(binding, value, bpmnFactory);\n    const values = taskHeaders.get('values').filter(value => value !== oldTaskHeader);\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: { ...context,\n        moddleElement: taskHeaders,\n        properties: {\n          values: [...values, newTaskHeader]\n        }\n      }\n    });\n  }\n\n  if (commands.length) {\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n    return;\n  } // should never throw as templates are validated beforehand\n\n\n  throw unknownBindingError$1(element, property);\n}\nfunction unsetProperty(commandStack, element, property) {\n  let businessObject = getBusinessObject(element);\n  const {\n    binding\n  } = property;\n  const {\n    type\n  } = binding;\n  let extensionElements;\n  const commands = [];\n  const context = {\n    element,\n    property\n  };\n\n  if (EXTENSION_BINDING_TYPES$1.includes(type)) {\n    extensionElements = businessObject.get('extensionElements');\n    if (!extensionElements) return;\n  } // zeebe:taskDefinition\n\n\n  if (TASK_DEFINITION_TYPES.includes(type)) {\n    const oldTaskDefinition = findExtension$1(extensionElements, 'zeebe:TaskDefinition');\n    commands.push({\n      cmd: 'element.updateModdleProperties',\n      context: { ...context,\n        moddleElement: extensionElements,\n        properties: {\n          values: without(extensionElements.get('values'), oldTaskDefinition)\n        }\n      }\n    });\n  } // zeebe:IoMapping\n\n\n  if (IO_BINDING_TYPES$1.includes(type)) {\n    let ioMapping = findExtension$1(extensionElements, 'zeebe:IoMapping');\n    if (!ioMapping) return; // zeebe:Input\n\n    if (type === ZEBBE_INPUT_TYPE) {\n      const oldZeebeInputParameter = findInputParameter$1(ioMapping, binding);\n      const values = ioMapping.get('inputParameters').filter(value => value !== oldZeebeInputParameter);\n\n      if (ioMapping.get('outputParameters').length == 0 && values.length == 0) {\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: { ...context,\n            moddleElement: extensionElements,\n            properties: {\n              values: without(extensionElements.get('values'), ioMapping)\n            }\n          }\n        });\n      } else {\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: { ...context,\n            moddleElement: ioMapping,\n            properties: {\n              inputParameters: [...values]\n            }\n          }\n        });\n      }\n    } // zeebe:Output\n\n\n    if (type === ZEEBE_OUTPUT_TYPE) {\n      const oldZeebeOutputParameter = findOutputParameter$1(ioMapping, binding);\n      const values = ioMapping.get('outputParameters').filter(value => value !== oldZeebeOutputParameter);\n\n      if (ioMapping.get('inputParameters').length == 0 && values.length == 0) {\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: { ...context,\n            moddleElement: extensionElements,\n            properties: {\n              values: without(extensionElements.get('values'), ioMapping)\n            }\n          }\n        });\n      }\n\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: { ...context,\n          moddleElement: ioMapping,\n          properties: {\n            'outputParameters': [...values]\n          }\n        }\n      });\n    }\n  } // zeebe:taskHeaders\n\n\n  if (type === ZEEBE_TASK_HEADER_TYPE) {\n    let taskHeaders = findExtension$1(extensionElements, 'zeebe:TaskHeaders');\n    if (!taskHeaders) return;\n    const oldTaskHeader = findTaskHeader(taskHeaders, binding);\n    const values = taskHeaders.get('values').filter(value => value !== oldTaskHeader);\n\n    if (values.length === 0) {\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: { ...context,\n          moddleElement: extensionElements,\n          properties: {\n            values: without(extensionElements.get('values'), taskHeaders)\n          }\n        }\n      });\n    } else {\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: { ...context,\n          moddleElement: taskHeaders,\n          properties: {\n            values: [...values]\n          }\n        }\n      });\n    }\n  }\n\n  if (commands.length) {\n    commandStack.execute('properties-panel.multi-command-executor', commands);\n    return;\n  }\n} // helpers\n\nfunction unknownBindingError$1(element, property) {\n  const businessObject = getBusinessObject(element);\n  const id = businessObject.get('id');\n  const {\n    binding\n  } = property;\n  const {\n    type\n  } = binding;\n  return new Error(`unknown binding <${type}> for element <${id}>, this should never happen`);\n}\n\n/**\n * Based on conditions, remove properties from the template.\n */\n\nfunction applyConditions(element, elementTemplate) {\n  const {\n    properties\n  } = elementTemplate;\n  const filteredProperties = properties.filter(property => {\n    return isConditionMet(element, properties, property);\n  });\n  return { ...elementTemplate,\n    properties: filteredProperties\n  };\n}\n\nfunction isConditionMet(element, properties, property) {\n  const {\n    condition\n  } = property; // If no condition is defined, return true.\n\n  if (!condition) {\n    return true;\n  }\n\n  return isSimpleConditionMet(element, properties, condition);\n}\n\nfunction isSimpleConditionMet(element, properties, condition) {\n  const {\n    property,\n    equals,\n    oneOf\n  } = condition;\n  const propertyValue = getValue(element, properties, property);\n\n  if (equals) {\n    return propertyValue === equals;\n  }\n\n  if (oneOf) {\n    return oneOf.includes(propertyValue);\n  }\n\n  return false;\n}\n\nfunction getValue(element, properties, propertyId) {\n  const property = properties.find(p => p.id === propertyId);\n\n  if (!property) {\n    return;\n  }\n\n  return getPropertyValue$1(element, property);\n}\n\n/**\n * Applies an element template to an element. Sets `zeebe:modelerTemplate` and\n * `zeebe:modelerTemplateVersion`.\n */\n\nclass ChangeElementTemplateHandler$1 {\n  constructor(bpmnFactory, bpmnReplace, commandStack, modeling) {\n    this._bpmnFactory = bpmnFactory;\n    this._bpmnReplace = bpmnReplace;\n    this._commandStack = commandStack;\n    this._modeling = modeling;\n  }\n  /**\n   * Change an element's template and update its properties as specified in `newTemplate`. Specify\n   * `oldTemplate` to update from one template to another. If `newTemplate` isn't specified the\n   * `zeebe:modelerTemplate` and `zeebe:modelerTemplateVersion` properties will be removed from\n   * the element.\n   *\n   * @param {Object} context\n   * @param {Object} context.element\n   * @param {Object} [context.oldTemplate]\n   * @param {Object} [context.newTemplate]\n   */\n\n\n  preExecute(context) {\n    let newTemplate = context.newTemplate,\n        oldTemplate = context.oldTemplate;\n    let element = context.element; // update zeebe:modelerTemplate attribute\n\n    this._updateZeebeModelerTemplate(element, newTemplate); // update zeebe:modelerTemplateIcon\n\n\n    this._updateZeebeModelerTemplateIcon(element, newTemplate);\n\n    if (newTemplate) {\n      // do not apply properties that don't meet conditions\n      newTemplate = applyConditions(element, newTemplate); // update task type\n\n      element = context.element = this._updateTaskType(element, newTemplate); // update properties\n\n      this._updateProperties(element, oldTemplate, newTemplate); // update zeebe:TaskDefinition\n\n\n      this._updateZeebeTaskDefinition(element, oldTemplate, newTemplate); // update zeebe:Input and zeebe:Output properties\n\n\n      this._updateZeebeInputOutputParameterProperties(element, oldTemplate, newTemplate); // update zeebe:Header properties\n\n\n      this._updateZeebeTaskHeaderProperties(element, oldTemplate, newTemplate);\n    }\n  }\n\n  _getOrCreateExtensionElements(element) {\n    const bpmnFactory = this._bpmnFactory,\n          modeling = this._modeling;\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements');\n\n    if (!extensionElements) {\n      extensionElements = bpmnFactory.create('bpmn:ExtensionElements', {\n        values: []\n      });\n      extensionElements.$parent = businessObject;\n      modeling.updateProperties(element, {\n        extensionElements: extensionElements\n      });\n    }\n\n    return extensionElements;\n  }\n\n  _updateZeebeModelerTemplate(element, newTemplate) {\n    const modeling = this._modeling;\n    modeling.updateProperties(element, {\n      'zeebe:modelerTemplate': newTemplate && newTemplate.id,\n      'zeebe:modelerTemplateVersion': newTemplate && newTemplate.version\n    });\n  }\n\n  _updateZeebeModelerTemplateIcon(element, newTemplate) {\n    const modeling = this._modeling;\n    const icon = newTemplate && newTemplate.icon;\n    modeling.updateProperties(element, {\n      'zeebe:modelerTemplateIcon': icon && icon.contents\n    });\n  }\n\n  _updateProperties(element, oldTemplate, newTemplate) {\n    const commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'property';\n    });\n\n    if (!newProperties.length) {\n      return;\n    }\n\n    const businessObject = getBusinessObject(element);\n    newProperties.forEach(newProperty => {\n      const oldProperty = findOldProperty$1(oldTemplate, newProperty),\n            newBinding = newProperty.binding,\n            newBindingName = newBinding.name,\n            newPropertyValue = newProperty.value,\n            changedElement = businessObject;\n      let properties = {};\n\n      if (shouldKeepValue(changedElement, oldProperty, newProperty)) {\n        return;\n      }\n\n      properties[newBindingName] = newPropertyValue;\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: businessObject,\n        properties\n      });\n    });\n  }\n  /**\n   * Update `zeebe:TaskDefinition` properties of specified business object. This\n   * can only exist in `bpmn:ExtensionElements`.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} oldTemplate\n   * @param {Object} newTemplate\n   */\n\n\n  _updateZeebeTaskDefinition(element, oldTemplate, newTemplate) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'zeebe:taskDefinition:type';\n    }); // (1) do not override old task definition if no new properties specified\n\n    if (!newProperties.length) {\n      return;\n    }\n\n    const businessObject = this._getOrCreateExtensionElements(element);\n\n    newProperties.forEach(newProperty => {\n      const oldProperty = findOldProperty$1(oldTemplate, newProperty),\n            oldBinding = oldProperty && oldProperty.binding,\n            oldBindingType = oldBinding && oldBinding.type,\n            oldTaskDefinition = findBusinessObject(businessObject, newProperty),\n            newPropertyValue = newProperty.value,\n            newBinding = newProperty.binding,\n            newBindingType = newBinding.type; // (2) update old task definition\n\n      if (oldTaskDefinition) {\n        if (!shouldKeepValue(oldTaskDefinition, oldProperty, newProperty)) {\n          // TODO(pinussilvestrus): for now we only support <type>\n          // this needs to be adjusted once we support more\n          let properties = {};\n\n          if (oldBindingType === 'zeebe:taskDefinition:type' || !oldBindingType) {\n            properties = {\n              type: newPropertyValue\n            };\n          }\n\n          commandStack.execute('element.updateModdleProperties', {\n            element,\n            moddleElement: oldTaskDefinition,\n            properties\n          });\n        }\n      } // (3) add new task definition\n      else {\n        let newTaskDefinition; // TODO(pinussilvestrus): for now we only support <type>\n        // this needs to be adjusted once we support more\n\n        if (newBindingType === 'zeebe:taskDefinition:type') {\n          newTaskDefinition = createTaskDefinitionWithType(newPropertyValue, bpmnFactory);\n        }\n\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            values: [...businessObject.get('values'), newTaskDefinition]\n          }\n        });\n      }\n    });\n  }\n  /**\n   * Update `zeebe:Input` and `zeebe:Output` properties of specified business\n   * object. Both can only exist in `zeebe:ioMapping` which can exist in `bpmn:ExtensionElements`.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} oldTemplate\n   * @param {Object} newTemplate\n   */\n\n\n  _updateZeebeInputOutputParameterProperties(element, oldTemplate, newTemplate) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'zeebe:input' || newBindingType === 'zeebe:output';\n    });\n\n    const businessObject = this._getOrCreateExtensionElements(element);\n\n    let ioMapping = findExtension$1(businessObject, 'zeebe:IoMapping'); // (1) remove old mappings if no new specified\n\n    if (!newProperties.length) {\n      if (!ioMapping) {\n        return;\n      }\n\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: businessObject,\n        properties: {\n          values: without(businessObject.get('values'), ioMapping)\n        }\n      });\n    }\n\n    if (!ioMapping) {\n      ioMapping = bpmnFactory.create('zeebe:IoMapping');\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: businessObject,\n        properties: {\n          values: [...businessObject.get('values'), ioMapping]\n        }\n      });\n    }\n\n    const oldInputs = ioMapping.get('zeebe:inputParameters') ? ioMapping.get('zeebe:inputParameters').slice() : [];\n    const oldOutputs = ioMapping.get('zeebe:outputParameters') ? ioMapping.get('zeebe:outputParameters').slice() : [];\n    let propertyName;\n    newProperties.forEach(newProperty => {\n      const oldProperty = findOldProperty$1(oldTemplate, newProperty),\n            inputOrOutput = findBusinessObject(businessObject, newProperty),\n            newPropertyValue = newProperty.value,\n            newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      let newInputOrOutput, properties; // (2) update old inputs and outputs\n\n      if (inputOrOutput) {\n        // (2a) exclude old inputs and outputs from cleanup, unless\n        // a) optional and has empty value, and\n        // b) not changed\n        if (shouldUpdate(newPropertyValue, newProperty) || shouldKeepValue(inputOrOutput, oldProperty, newProperty)) {\n          if (is(inputOrOutput, 'zeebe:Input')) {\n            remove$1(oldInputs, inputOrOutput);\n          } else {\n            remove$1(oldOutputs, inputOrOutput);\n          }\n        } // (2a) do updates (unless changed)\n\n\n        if (!shouldKeepValue(inputOrOutput, oldProperty, newProperty)) {\n          if (is(inputOrOutput, 'zeebe:Input')) {\n            properties = {\n              source: newPropertyValue\n            };\n          } else {\n            properties = {\n              target: newPropertyValue\n            };\n          }\n\n          commandStack.execute('element.updateModdleProperties', {\n            element,\n            moddleElement: inputOrOutput,\n            properties\n          });\n        }\n      } // (3) add new inputs and outputs (unless optional)\n      else if (shouldUpdate(newPropertyValue, newProperty)) {\n        if (newBindingType === 'zeebe:input') {\n          propertyName = 'inputParameters';\n          newInputOrOutput = createInputParameter$1(newBinding, newPropertyValue, bpmnFactory);\n        } else {\n          propertyName = 'outputParameters';\n          newInputOrOutput = createOutputParameter$1(newBinding, newPropertyValue, bpmnFactory);\n        }\n\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: ioMapping,\n          properties: {\n            [propertyName]: [...ioMapping.get(propertyName), newInputOrOutput]\n          }\n        });\n      }\n    }); // (4) remove old inputs and outputs\n\n    if (oldInputs.length) {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: ioMapping,\n        properties: {\n          inputParameters: without(ioMapping.get('inputParameters'), inputParameter => oldInputs.includes(inputParameter))\n        }\n      });\n    }\n\n    if (oldOutputs.length) {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: ioMapping,\n        properties: {\n          outputParameters: without(ioMapping.get('outputParameters'), outputParameter => oldOutputs.includes(outputParameter))\n        }\n      });\n    }\n  }\n  /**\n   * Update `zeebe:Header` properties of specified business\n   * object. Those can only exist in `zeebe:taskHeaders` which can exist in `bpmn:ExtensionElements`.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} oldTemplate\n   * @param {Object} newTemplate\n   */\n\n\n  _updateZeebeTaskHeaderProperties(element, oldTemplate, newTemplate) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'zeebe:taskHeader';\n    });\n\n    const businessObject = this._getOrCreateExtensionElements(element);\n\n    let taskHeaders = findExtension$1(businessObject, 'zeebe:TaskHeaders'); // (1) remove old headers if no new specified\n\n    if (!newProperties.length) {\n      if (!taskHeaders) {\n        return;\n      }\n\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: businessObject,\n        properties: {\n          values: without(businessObject.get('values'), taskHeaders)\n        }\n      });\n    }\n\n    if (!taskHeaders) {\n      taskHeaders = bpmnFactory.create('zeebe:TaskHeaders');\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: businessObject,\n        properties: {\n          values: [...businessObject.get('values'), taskHeaders]\n        }\n      });\n    }\n\n    const oldHeaders = taskHeaders.get('zeebe:values') ? taskHeaders.get('zeebe:values').slice() : [];\n    newProperties.forEach(newProperty => {\n      const oldProperty = findOldProperty$1(oldTemplate, newProperty),\n            oldHeader = findBusinessObject(businessObject, newProperty),\n            newPropertyValue = newProperty.value,\n            newBinding = newProperty.binding; // (2) update old headers\n\n      if (oldHeader) {\n        if (!shouldKeepValue(oldHeader, oldProperty, newProperty)) {\n          const properties = {\n            value: newPropertyValue\n          };\n          commandStack.execute('element.updateModdleProperties', {\n            element,\n            moddleElement: oldHeader,\n            properties\n          });\n        }\n\n        remove$1(oldHeaders, oldHeader);\n      } // (3) add new headers\n      else {\n        const newHeader = createTaskHeader(newBinding, newPropertyValue, bpmnFactory);\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: taskHeaders,\n          properties: {\n            values: [...taskHeaders.get('values'), newHeader]\n          }\n        });\n      }\n    }); // (4) remove old headers\n\n    if (oldHeaders.length) {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: taskHeaders,\n        properties: {\n          values: without(taskHeaders.get('values'), header => oldHeaders.includes(header))\n        }\n      });\n    }\n  }\n  /**\n   * Replaces the element with the specified elementType\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} newTemplate\n   */\n\n\n  _updateTaskType(element, newTemplate) {\n    // determine new task type\n    const newType = newTemplate.elementType;\n\n    if (!newType) {\n      return element;\n    } // don't replace Task that is already the correct type\n\n\n    if (element.$type === newType.value) {\n      return element;\n    }\n\n    return this._bpmnReplace.replaceElement(element, {\n      type: newType.value\n    });\n  }\n\n}\nChangeElementTemplateHandler$1.$inject = ['bpmnFactory', 'bpmnReplace', 'commandStack', 'modeling']; // helpers //////////\n\n/**\n * Find business object matching specified property.\n *\n * @param {djs.model.Base|ModdleElement} element\n * @param {Object} property\n *\n * @returns {ModdleElement}\n */\n\nfunction findBusinessObject(element, property) {\n  const businessObject = getBusinessObject(element);\n  const binding = property.binding,\n        bindingType = binding.type;\n\n  if (bindingType === 'zeebe:taskDefinition:type') {\n    return findExtension$1(businessObject, 'zeebe:TaskDefinition');\n  }\n\n  if (bindingType === 'zeebe:input' || bindingType === 'zeebe:output') {\n    const extensionElements = findExtension$1(businessObject, 'zeebe:IoMapping');\n\n    if (!extensionElements) {\n      return;\n    }\n\n    if (bindingType === 'zeebe:input') {\n      return find(extensionElements.get('zeebe:inputParameters'), function (input) {\n        return input.get('zeebe:target') === binding.name;\n      });\n    } else {\n      return find(extensionElements.get('zeebe:outputParameters'), function (output) {\n        return output.get('zeebe:source') === binding.source;\n      });\n    }\n  }\n\n  if (bindingType === 'zeebe:taskHeader') {\n    const extensionElements = findExtension$1(businessObject, 'zeebe:TaskHeaders');\n\n    if (!extensionElements) {\n      return;\n    }\n\n    return find(extensionElements.get('zeebe:values'), function (value) {\n      return value.get('zeebe:key') === binding.key;\n    });\n  }\n}\n/**\n * Find old property matching specified new property.\n *\n * @param {Object} oldTemplate\n * @param {Object} newProperty\n *\n * @returns {Object}\n */\n\n\nfunction findOldProperty$1(oldTemplate, newProperty) {\n  if (!oldTemplate) {\n    return;\n  }\n\n  const oldProperties = oldTemplate.properties,\n        newBinding = newProperty.binding,\n        newBindingName = newBinding.name,\n        newBindingType = newBinding.type;\n\n  if (newBindingType === 'property') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingName = oldBinding.name,\n            oldBindingType = oldBinding.type;\n      return oldBindingType === 'property' && oldBindingName === newBindingName;\n    });\n  }\n\n  if (newBindingType === 'zeebe:taskDefinition:type') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingType = oldBinding.type;\n      return oldBindingType === 'zeebe:taskDefinition:type';\n    });\n  }\n\n  if (newBindingType === 'zeebe:input') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingName = oldBinding.name,\n            oldBindingType = oldBinding.type;\n\n      if (oldBindingType !== 'zeebe:input') {\n        return;\n      }\n\n      return oldBindingName === newBindingName;\n    });\n  }\n\n  if (newBindingType === 'zeebe:output') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingType = oldBinding.type;\n\n      if (oldBindingType !== 'zeebe:output') {\n        return;\n      }\n\n      return oldBinding.source === newBinding.source;\n    });\n  }\n\n  if (newBindingType === 'zeebe:taskHeader') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingType = oldBinding.type;\n\n      if (oldBindingType !== 'zeebe:taskHeader') {\n        return;\n      }\n\n      return oldBinding.key === newBinding.key;\n    });\n  }\n}\n/**\n * Check whether the existing property should be keept. This is the case if\n *  - an old template was set and the value differs from the default\n *  - no template was set but the property was set manually\n *\n * @param {djs.model.Base|ModdleElement} element\n * @param {Object} oldProperty\n * @param {Object} newProperty\n *\n * @returns {boolean}\n */\n\nfunction shouldKeepValue(element, oldProperty, newProperty) {\n  if (newProperty.type === 'Hidden') {\n    return false;\n  }\n\n  if (oldProperty) {\n    return propertyChanged$1(element, oldProperty);\n  } else {\n    return !!getPropertyValue(element, newProperty);\n  }\n}\n/**\n * Check whether property was changed after being set by template.\n *\n * @param {djs.model.Base|ModdleElement} element\n * @param {Object} oldProperty\n *\n * @returns {boolean}\n */\n\n\nfunction propertyChanged$1(element, oldProperty) {\n  const oldPropertyValue = oldProperty.value;\n  return getPropertyValue(element, oldProperty) !== oldPropertyValue;\n}\n\nfunction getPropertyValue(element, property) {\n  const businessObject = getBusinessObject(element);\n  const binding = property.binding,\n        bindingName = binding.name,\n        bindingType = binding.type;\n\n  if (bindingType === 'property') {\n    return businessObject.get(bindingName);\n  }\n\n  if (bindingType === 'zeebe:taskDefinition:type') {\n    return businessObject.get('zeebe:type');\n  }\n\n  if (bindingType === 'zeebe:input') {\n    return businessObject.get('zeebe:source');\n  }\n\n  if (bindingType === 'zeebe:output') {\n    return businessObject.get('zeebe:target');\n  }\n\n  if (bindingType === 'zeebe:taskHeader') {\n    return businessObject.get('zeebe:value');\n  }\n}\n\nfunction remove$1(array, item) {\n  const index = array.indexOf(item);\n\n  if (isUndefined(index)) {\n    return array;\n  }\n\n  array.splice(index, 1);\n  return array;\n}\n\n/**\n * Checks the conditions of an element template and sets/resets the\n * corresponding properties on the element.\n */\n\nclass ElementTemplatesConditionChecker extends CommandInterceptor {\n  constructor(eventBus, elementTemplates, commandStack, bpmnFactory) {\n    super(eventBus);\n    this._eventBus = eventBus;\n    this._elementTemplates = elementTemplates;\n    this._commandStack = commandStack;\n    this._bpmnFactory = bpmnFactory;\n    this.preExecute(['element.updateProperties', 'element.updateModdleProperties'], this._saveConditionalState, true, this);\n    this.postExecute(['element.updateProperties', 'element.updateModdleProperties', 'propertiesPanel.zeebe.changeTemplate'], this._applyConditions, true, this);\n  }\n\n  _saveConditionalState(context) {\n    const {\n      element\n    } = context;\n\n    const template = this._elementTemplates.get(element);\n\n    if (!template) {\n      return;\n    }\n\n    context.oldTemplate = applyConditions(element, template);\n  }\n\n  _applyConditions(context) {\n    const {\n      element,\n      oldTemplate\n    } = context;\n\n    const template = this._elementTemplates.get(element);\n\n    if (!template || !oldTemplate || template.id !== oldTemplate.id) {\n      return;\n    }\n\n    const newTemplate = applyConditions(element, template);\n    const propertiesToAdd = getMissingProperties(oldTemplate, newTemplate);\n    const propertiesToRemove = getMissingProperties(newTemplate, oldTemplate);\n    propertiesToAdd.forEach(property => setPropertyValue(this._bpmnFactory, this._commandStack, element, property, property.value));\n    propertiesToRemove.forEach(property => unsetProperty(this._commandStack, element, property));\n  }\n\n}\nElementTemplatesConditionChecker.$inject = ['eventBus', 'elementTemplates', 'commandStack', 'bpmnFactory']; // helpers\n\nfunction getMissingProperties(sourceTemplate, targetTemplate) {\n  let properties = targetTemplate.properties;\n  return properties.filter(targetProp => !findOldProperty$1(sourceTemplate, targetProp));\n}\n\n/**\n * The BPMN 2.0 extension attribute name under\n * which the element template ID is stored.\n *\n * @type {String}\n */\n\nconst TEMPLATE_ID_ATTR = 'camunda:modelerTemplate';\n/**\n * The BPMN 2.0 extension attribute name under\n * which the element template version is stored.\n *\n * @type {String}\n */\n\nconst TEMPLATE_VERSION_ATTR = 'camunda:modelerTemplateVersion';\n/**\n * Get template id for a given diagram element.\n *\n * @param {djs.model.Base} element\n *\n * @return {String}\n */\n\nfunction getTemplateId(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (businessObject) {\n    return businessObject.get(TEMPLATE_ID_ATTR);\n  }\n}\n/**\n * Get template version for a given diagram element.\n *\n * @param {djs.model.Base} element\n *\n * @return {String}\n */\n\nfunction getTemplateVersion(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (businessObject) {\n    return businessObject.get(TEMPLATE_VERSION_ATTR);\n  }\n}\n/**\n * Find extension with given type in\n * BPMN element, diagram element or ExtensionElement.\n *\n * @param {ModdleElement|djs.model.Base} element\n * @param {String} type\n *\n * @return {ModdleElement} the extension\n */\n\nfunction findExtension(element, type) {\n  const businessObject = getBusinessObject(element);\n  let extensionElements;\n\n  if (is(businessObject, 'bpmn:ExtensionElements')) {\n    extensionElements = businessObject;\n  } else {\n    extensionElements = businessObject.get('extensionElements');\n  }\n\n  if (!extensionElements) {\n    return null;\n  }\n\n  return extensionElements.get('values').find(value => {\n    return is(value, type);\n  });\n}\nfunction findExtensions(element, types) {\n  const extensionElements = getExtensionElements(element);\n\n  if (!extensionElements) {\n    return [];\n  }\n\n  return extensionElements.get('values').filter(value => {\n    return isAny(value, types);\n  });\n}\nfunction findCamundaInOut(element, binding) {\n  const extensionElements = getExtensionElements(element);\n\n  if (!extensionElements) {\n    return;\n  }\n\n  const {\n    type\n  } = binding;\n  let matcher;\n\n  if (type === 'camunda:in') {\n    matcher = element => {\n      return is(element, 'camunda:In') && isInOut(element, binding);\n    };\n  } else if (type === 'camunda:out') {\n    matcher = element => {\n      return is(element, 'camunda:Out') && isInOut(element, binding);\n    };\n  } else if (type === 'camunda:in:businessKey') {\n    matcher = element => {\n      return is(element, 'camunda:In') && 'businessKey' in element;\n    };\n  }\n\n  return extensionElements.get('values').find(matcher);\n}\nfunction findCamundaProperty(camundaProperties, binding) {\n  return camundaProperties.get('values').find(value => {\n    return value.name === binding.name;\n  });\n}\nfunction findInputParameter(inputOutput, binding) {\n  const parameters = inputOutput.get('inputParameters');\n  return parameters.find(parameter => {\n    return parameter.name === binding.name;\n  });\n}\nfunction findOutputParameter(inputOutput, binding) {\n  const parameters = inputOutput.get('outputParameters');\n  return parameters.find(function (parameter) {\n    const {\n      value\n    } = parameter;\n\n    if (!binding.scriptFormat) {\n      return value === binding.source;\n    }\n\n    const definition = parameter.get('camunda:definition');\n\n    if (!definition || binding.scriptFormat !== definition.get('camunda:scriptFormat')) {\n      return false;\n    }\n\n    return definition.get('camunda:value') === binding.source;\n  });\n}\nfunction findCamundaErrorEventDefinition(element, errorRef) {\n  const errorEventDefinitions = findExtensions(element, ['camunda:ErrorEventDefinition']);\n  let error; // error ID has to start with <Error_${ errorRef }_>\n\n  return errorEventDefinitions.find(definition => {\n    error = definition.get('bpmn:errorRef');\n\n    if (error) {\n      return error.get('bpmn:id').startsWith(`Error_${errorRef}`);\n    }\n  });\n}\n\nfunction getExtensionElements(element) {\n  const businessObject = getBusinessObject(element);\n\n  if (is(businessObject, 'bpmn:ExtensionElements')) {\n    return businessObject;\n  } else {\n    return businessObject.get('extensionElements');\n  }\n}\n\nfunction isInOut(element, binding) {\n  if (binding.type === 'camunda:in') {\n    // find based on target attribute\n    if (binding.target) {\n      return element.target === binding.target;\n    }\n  }\n\n  if (binding.type === 'camunda:out') {\n    // find based on source / sourceExpression\n    if (binding.source) {\n      return element.source === binding.source;\n    }\n\n    if (binding.sourceExpression) {\n      return element.sourceExpression === binding.sourceExpression;\n    }\n  } // find based variables / local combination\n\n\n  if (binding.variables) {\n    return element.variables === 'all' && (binding.variables !== 'local' || element.local);\n  }\n}\n\n/**\n * Registry for element templates.\n */\n\nclass ElementTemplates$1 {\n  constructor(commandStack) {\n    this._commandStack = commandStack;\n    this._templates = {};\n  }\n  /**\n   * Get template with given ID and optional version or for element.\n   *\n   * @param {String|djs.model.Base} id\n   * @param {number} [version]\n   *\n   * @return {ElementTemplate}\n   */\n\n\n  get(id, version) {\n    const templates = this._templates;\n    let element;\n\n    if (isUndefined(id)) {\n      return null;\n    } else if (isString(id)) {\n      if (isUndefined(version)) {\n        version = '_';\n      }\n\n      if (templates[id] && templates[id][version]) {\n        return templates[id][version];\n      } else {\n        return null;\n      }\n    } else {\n      element = id;\n      return this.get(this._getTemplateId(element), this._getTemplateVersion(element));\n    }\n  }\n  /**\n   * Get default template for given element.\n   *\n   * @param {djs.model.Base} element\n   *\n   * @return {ElementTemplate}\n   */\n\n\n  getDefault(element) {\n    return find(this.getAll(element), function (template) {\n      return template.isDefault;\n    }) || null;\n  }\n  /**\n   * Get all templates (with given ID or applicable to element).\n   *\n   * @param {String|djs.model.Base} [id]\n   * @return {Array<ElementTemplate>}\n   */\n\n\n  getAll(id) {\n    return this._getTemplateVerions(id, false);\n  }\n  /**\n   * Get all templates (with given ID or applicable to element) with the latest\n   * version.\n   *\n   * @param {String|djs.model.Base} [id]\n   * @return {Array<ElementTemplate>}\n   */\n\n\n  getLatest(id) {\n    return this._getTemplateVerions(id, true);\n  }\n  /**\n   * Set templates.\n   *\n   * @param {Array<ElementTemplate>} templates\n   */\n\n\n  set(templates) {\n    this._templates = {};\n    templates.forEach(template => {\n      const id = template.id,\n            version = isUndefined(template.version) ? '_' : template.version;\n\n      if (!this._templates[id]) {\n        this._templates[id] = {\n          latest: template\n        };\n      }\n\n      this._templates[id][version] = template;\n      const latestVerions = this._templates[id].latest.version;\n\n      if (isUndefined(latestVerions) || template.version > latestVerions) {\n        this._templates[id].latest = template;\n      }\n    });\n  }\n\n  _getTemplateVerions(id, latestOnly) {\n    if (typeof id === 'boolean') {\n      latestOnly = id;\n      id = undefined;\n    }\n\n    const templates = this._templates;\n\n    const getVersions = template => {\n      const {\n        latest,\n        ...versions\n      } = template;\n      return latestOnly ? [latest] : values(versions);\n    };\n\n    if (isUndefined(id)) {\n      return flatten(values(templates).map(getVersions));\n    }\n\n    if (isObject(id)) {\n      const element = id;\n      return filter(this._getTemplateVerions(latestOnly), function (template) {\n        return isAny(element, template.appliesTo);\n      }) || [];\n    }\n\n    if (isString(id)) {\n      return templates[id] && getVersions(templates[id]);\n    }\n\n    throw new Error('argument must be of type {String|djs.model.Base|Undefined}');\n  }\n\n  _getTemplateId(element) {\n    return getTemplateId(element);\n  }\n\n  _getTemplateVersion(element) {\n    return getTemplateVersion(element);\n  }\n  /**\n   * Apply element template to a given element.\n   *\n   * @param {djs.model.Base} element\n   * @param {ElementTemplate} newTemplate\n   *\n   * @return {djs.model.Base} the updated element\n   */\n\n\n  applyTemplate(element, newTemplate) {\n    const oldTemplate = this.get(element);\n    const context = {\n      element,\n      newTemplate,\n      oldTemplate\n    };\n\n    this._commandStack.execute('propertiesPanel.camunda.changeTemplate', context);\n\n    return context.element;\n  }\n\n}\nElementTemplates$1.$inject = ['commandStack'];\n\n/**\n * Registry for element templates.\n */\n\nclass ElementTemplates extends ElementTemplates$1 {\n  constructor(templateElementFactory, commandStack) {\n    super(commandStack);\n    this._commandStack = commandStack;\n    this._templateElementFactory = templateElementFactory;\n  }\n\n  _getTemplateId(element) {\n    return getTemplateId$1(element);\n  }\n\n  _getTemplateVersion(element) {\n    return getTemplateVersion$1(element);\n  }\n  /**\n   * Create an element based on an element template.\n   *\n   * @param {ElementTemplate} template\n   * @returns {djs.model.Base}\n   */\n\n\n  createElement(template) {\n    if (!template) {\n      throw new Error('template is missing');\n    }\n\n    const element = this._templateElementFactory.create(template);\n\n    return element;\n  }\n  /**\n   * Apply element template to a given element.\n   *\n   * @param {djs.model.Base} element\n   * @param {ElementTemplate} newTemplate\n   *\n   * @return {djs.model.Base} the updated element\n   */\n\n\n  applyTemplate(element, newTemplate) {\n    const oldTemplate = this.get(element);\n    const context = {\n      element,\n      newTemplate,\n      oldTemplate\n    };\n\n    this._commandStack.execute('propertiesPanel.zeebe.changeTemplate', context);\n\n    return context.element;\n  }\n\n}\nElementTemplates.$inject = ['templateElementFactory', 'commandStack'];\n\nconst SUPPORTED_SCHEMA_VERSION$1 = getSchemaVersion$1();\nconst MORPHABLE_TYPES = ['bpmn:Activity', 'bpmn:Event', 'bpmn:Gateway'];\n/**\n * A element template validator.\n */\n\nclass Validator$1 {\n  constructor(moddle) {\n    this._templatesById = {};\n    this._validTemplates = [];\n    this._errors = [];\n    this._moddle = moddle;\n  }\n  /**\n   * Adds the templates.\n   *\n   * @param {Array<TemplateDescriptor>} templates\n   *\n   * @return {Validator}\n   */\n\n\n  addAll(templates) {\n    if (!isArray(templates)) {\n      this._logError('templates must be []');\n    } else {\n      templates.forEach(this.add, this);\n    }\n\n    return this;\n  }\n  /**\n   * Add the given element template, if it is valid.\n   *\n   * @param {TemplateDescriptor} template\n   *\n   * @return {Validator}\n   */\n\n\n  add(template) {\n    const err = this._validateTemplate(template);\n\n    let id, version;\n\n    if (!err) {\n      id = template.id;\n      version = template.version || '_';\n\n      if (!this._templatesById[id]) {\n        this._templatesById[id] = {};\n      }\n\n      this._templatesById[id][version] = template;\n\n      this._validTemplates.push(template);\n    }\n\n    return this;\n  }\n  /**\n   * Validate given template and return error (if any).\n   *\n   * @param {TemplateDescriptor} template\n   *\n   * @return {Error} validation error, if any\n   */\n\n\n  _validateTemplate(template) {\n    let err;\n    const id = template.id,\n          version = template.version || '_',\n          schemaVersion = template.$schema && getSchemaVersion(template.$schema); // (1) compatibility\n\n    if (schemaVersion && semverCompare(SUPPORTED_SCHEMA_VERSION$1, schemaVersion) < 0) {\n      return this._logError(`unsupported element template schema version <${schemaVersion}>. Your installation only supports up to version <${SUPPORTED_SCHEMA_VERSION$1}>. Please update your installation`, template);\n    } // (2) versioning\n\n\n    if (this._templatesById[id] && this._templatesById[id][version]) {\n      if (version === '_') {\n        return this._logError(`template id <${id}> already used`, template);\n      } else {\n        return this._logError(`template id <${id}> and version <${version}> already used`, template);\n      }\n    } // (3) elementType validation\n\n\n    const elementTypeError = this._validateElementType(template);\n\n    if (elementTypeError) {\n      return elementTypeError;\n    } // (4) JSON schema compliance\n\n\n    const validationResult = validate$1(template);\n    const {\n      errors,\n      valid\n    } = validationResult;\n\n    if (!valid) {\n      err = new Error('invalid template');\n      filteredSchemaErrors(errors).forEach(error => {\n        this._logError(error.message, template);\n      });\n    }\n\n    return err;\n  }\n  /**\n   * Validate elementType for given template and return error (if any).\n   *\n   * @param {TemplateDescriptor} template\n   *\n   * @return {Error} validation error, if any\n   */\n\n\n  _validateElementType(template) {\n    if (template.elementType && template.appliesTo) {\n      const elementType = template.elementType.value,\n            appliesTo = template.appliesTo; // (3.1) template can be applied to elementType\n      // prevents cases where the elementType is not part of appliesTo\n\n      if (!appliesTo.find(type => this._isType(elementType, type))) {\n        return this._logError(`template does not apply to requested element type <${elementType}>`, template);\n      } // (3.2) template only applies to same type of element\n      // prevent elementTemplates to morph into incompatible types, e.g. Task -> SequenceFlow\n\n\n      for (const sourceType of appliesTo) {\n        if (!this._canMorph(sourceType, elementType)) {\n          return this._logError(`can not morph <${sourceType}> into <${elementType}>`, template);\n        }\n      }\n    }\n  }\n  /**\n   * Check if given type is a subtype of given base type.\n   *\n   * @param {String} type\n   * @param {String} baseType\n   * @returns {Boolean}\n   */\n\n\n  _isType(type, baseType) {\n    const moddleType = this._moddle.getType(type);\n\n    return moddleType && baseType in this._moddle.getElementDescriptor(moddleType).allTypesByName;\n  }\n  /**\n   * Checks if a given type can be morphed into another type.\n   *\n   * @param {String} sourceType\n   * @param {String} targetType\n   * @returns {Boolean}\n   */\n\n\n  _canMorph(sourceType, targetType) {\n    if (sourceType === targetType) {\n      return true;\n    }\n\n    const baseType = MORPHABLE_TYPES.find(type => this._isType(sourceType, type));\n\n    if (!baseType) {\n      return false;\n    }\n\n    return this._isType(targetType, baseType);\n  }\n  /**\n   * Log an error for the given template\n   *\n   * @param {(String|Error)} err\n   * @param {TemplateDescriptor} template\n   *\n   * @return {Error} logged validation errors\n   */\n\n\n  _logError(err, template) {\n    if (isString(err)) {\n      if (template) {\n        const {\n          id,\n          name\n        } = template;\n        err = `template(id: <${id}>, name: <${name}>): ${err}`;\n      }\n\n      err = new Error(err);\n    }\n\n    this._errors.push(err);\n\n    return err;\n  }\n\n  getErrors() {\n    return this._errors;\n  }\n\n  getValidTemplates() {\n    return this._validTemplates;\n  }\n\n} // helpers //////////\n\n/**\n * Extract schema version from schema URI\n *\n * @param {String} schemaUri - for example https://unpkg.com/@camunda/element-templates-json-schema@99.99.99/resources/schema.json\n *\n * @return {String} for example '99.99.99'\n */\n\nfunction getSchemaVersion(schemaUri) {\n  const re = /\\d+\\.\\d+\\.\\d+/g;\n  const match = schemaUri.match(re);\n  return match === null ? undefined : match[0];\n}\n/**\n * Extract only relevant errors of the validation result.\n *\n * The JSON Schema we use under the hood produces more errors than we need for a\n * detected schema violation (for example, unmatched sub-schemas, if-then-rules,\n * `oneOf`-definitions ...).\n *\n * We call these errors \"relevant\" that have a custom error message defined by us OR\n * are basic data type errors.\n *\n * @param {Array} schemaErrors\n *\n * @return {Array}\n */\n\nfunction filteredSchemaErrors(schemaErrors) {\n  return filter(schemaErrors, err => {\n    const {\n      dataPath,\n      keyword\n    } = err; // (1) regular errors are customized from the schema\n\n    if (keyword === 'errorMessage') {\n      return true;\n    } // (2) data type errors\n    // ignore type errors nested in scopes\n\n\n    if (keyword === 'type' && dataPath && !dataPath.startsWith('/scopes/')) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst SUPPORTED_SCHEMA_VERSION = getZeebeSchemaVersion();\nconst SUPPORTED_SCHEMA_PACKAGE = getZeebeSchemaPackage();\n/**\n * A Camunda Cloud element template validator.\n */\n\nclass Validator extends Validator$1 {\n  constructor(moddle) {\n    super(moddle);\n  }\n  /**\n   * Validate given template and return error (if any).\n   *\n   * @param {TemplateDescriptor} template\n   *\n   * @return {Error} validation error, if any\n   */\n\n\n  _validateTemplate(template) {\n    let err;\n    const id = template.id,\n          version = template.version || '_',\n          schema = template.$schema,\n          schemaVersion = schema && getSchemaVersion(schema); // (1) $schema attribute defined\n\n    if (!schema) {\n      return this._logError('missing $schema attribute.', template);\n    }\n\n    if (!this.isSchemaValid(schema)) {\n      return this._logError(`unsupported $schema attribute <${schema}>.`, template);\n    } // (2) compatibility\n\n\n    if (schemaVersion && semverCompare(SUPPORTED_SCHEMA_VERSION, schemaVersion) < 0) {\n      return this._logError(`unsupported element template schema version <${schemaVersion}>. Your installation only supports up to version <${SUPPORTED_SCHEMA_VERSION}>. Please update your installation`, template);\n    } // (3) versioning\n\n\n    if (this._templatesById[id] && this._templatesById[id][version]) {\n      if (version === '_') {\n        return this._logError(`template id <${id}> already used`, template);\n      } else {\n        return this._logError(`template id <${id}> and version <${version}> already used`, template);\n      }\n    } // (4) elementType validation\n\n\n    const elementTypeError = this._validateElementType(template);\n\n    if (elementTypeError) {\n      return elementTypeError;\n    } // (5) JSON schema compliance\n\n\n    const validationResult = validateZeebe(template);\n    const {\n      errors,\n      valid\n    } = validationResult;\n\n    if (!valid) {\n      err = new Error('invalid template');\n      filteredSchemaErrors(errors).forEach(error => {\n        this._logError(error.message, template);\n      });\n    }\n\n    return err;\n  }\n\n  isSchemaValid(schema) {\n    return schema && schema.includes(SUPPORTED_SCHEMA_PACKAGE);\n  }\n\n}\n\n/**\n * The guy responsible for template loading.\n *\n * Provide the actual templates via the `config.elementTemplates`.\n *\n * That configuration can either be an array of template\n * descriptors or a node style callback to retrieve\n * the templates asynchronously.\n *\n * @param {Array<TemplateDescriptor>|Function} loadTemplates\n * @param {EventBus} eventBus\n * @param {ElementTemplates} elementTemplates\n * @param {Moddle} moddle\n */\n\nclass ElementTemplatesLoader$1 {\n  constructor(loadTemplates, eventBus, elementTemplates, moddle) {\n    this._loadTemplates = loadTemplates;\n    this._eventBus = eventBus;\n    this._elementTemplates = elementTemplates;\n    this._moddle = moddle;\n    eventBus.on('diagram.init', () => {\n      this.reload();\n    });\n  }\n\n  reload() {\n    const loadTemplates = this._loadTemplates; // no templates specified\n\n    if (isUndefined(loadTemplates)) {\n      return;\n    } // template loader function specified\n\n\n    if (isFunction(loadTemplates)) {\n      return loadTemplates((err, templates) => {\n        if (err) {\n          return this.templateErrors([err]);\n        }\n\n        this.setTemplates(templates);\n      });\n    } // templates array specified\n\n\n    if (loadTemplates.length) {\n      return this.setTemplates(loadTemplates);\n    }\n  }\n\n  setTemplates(templates) {\n    const elementTemplates = this._elementTemplates,\n          moddle = this._moddle;\n    const validator = new Validator$1(moddle).addAll(templates);\n    const errors = validator.getErrors(),\n          validTemplates = validator.getValidTemplates();\n    elementTemplates.set(validTemplates);\n\n    if (errors.length) {\n      this.templateErrors(errors);\n    }\n\n    this.templatesChanged();\n  }\n\n  templatesChanged() {\n    this._eventBus.fire('elementTemplates.changed');\n  }\n\n  templateErrors(errors) {\n    this._eventBus.fire('elementTemplates.errors', {\n      errors: errors\n    });\n  }\n\n}\nElementTemplatesLoader$1.$inject = ['config.elementTemplates', 'eventBus', 'elementTemplates', 'moddle'];\n\nclass ElementTemplatesLoader extends ElementTemplatesLoader$1 {\n  constructor(loadTemplates, eventBus, elementTemplates, moddle) {\n    super(loadTemplates, eventBus, elementTemplates, moddle);\n    this._elementTemplates = elementTemplates;\n  }\n\n  setTemplates(templates) {\n    const elementTemplates = this._elementTemplates,\n          moddle = this._moddle;\n    const validator = new Validator(moddle).addAll(templates);\n    const errors = validator.getErrors(),\n          validTemplates = validator.getValidTemplates();\n    elementTemplates.set(validTemplates);\n\n    if (errors.length) {\n      this.templateErrors(errors);\n    }\n\n    this.templatesChanged();\n  }\n\n}\nElementTemplatesLoader.$inject = ['config.elementTemplates', 'eventBus', 'elementTemplates', 'moddle'];\n\nfunction unlinkTemplate$1(element, injector) {\n  const modeling = injector.get('modeling');\n  modeling.updateProperties(element, {\n    'camunda:modelerTemplate': null,\n    'camunda:modelerTemplateVersion': null\n  });\n}\nfunction removeTemplate(element, injector) {\n  const replace = injector.get('replace'),\n        selection = injector.get('selection');\n  const businessObject = getBusinessObject(element);\n  const type = businessObject.$type,\n        eventDefinitionType = getEventDefinitionType(businessObject);\n  const newBusinessObject = createBlankBusinessObject(element, injector);\n  const newElement = replace.replaceElement(element, {\n    type: type,\n    businessObject: newBusinessObject,\n    eventDefinitionType: eventDefinitionType\n  });\n  selection.select(newElement);\n}\nfunction updateTemplate$1(element, newTemplate, injector) {\n  const elementTemplates = injector.get('elementTemplates');\n  return elementTemplates.applyTemplate(element, newTemplate);\n}\nfunction getVersionOrDateFromTemplate(template) {\n  const metadata = template.metadata,\n        version = template.version;\n\n  if (metadata) {\n    if (!isUndefined(metadata.created)) {\n      return toDateString(metadata.created);\n    } else if (!isUndefined(metadata.updated)) {\n      return toDateString(metadata.updated);\n    }\n  }\n\n  if (isUndefined(version)) {\n    return null;\n  }\n\n  return version;\n} // helper ///////////\n\nfunction getEventDefinitionType(businessObject) {\n  if (!businessObject.eventDefinitions) {\n    return null;\n  }\n\n  const eventDefinition = businessObject.eventDefinitions[0];\n\n  if (!eventDefinition) {\n    return null;\n  }\n\n  return eventDefinition.$type;\n}\n/**\n * Example: 01.01.1900 01:01\n *\n * @param {number} timestamp\n * @returns {string}\n */\n\n\nfunction toDateString(timestamp) {\n  const date = new Date(timestamp);\n  const year = date.getFullYear();\n  const month = withLeadingZeros(String(date.getMonth() + 1));\n  const day = withLeadingZeros(String(date.getDate()));\n  const hours = withLeadingZeros(String(date.getHours()));\n  const minutes = withLeadingZeros(String(date.getMinutes()));\n  return day + '.' + month + '.' + year + ' ' + hours + ':' + minutes;\n}\n\nfunction withLeadingZeros(string) {\n  return leftPad(string, 2, '0');\n}\n\nfunction leftPad(string, length, character) {\n  while (string.length < length) {\n    string = character + string;\n  }\n\n  return string;\n}\n\nfunction createBlankBusinessObject(element, injector) {\n  const bpmnFactory = injector.get('bpmnFactory');\n  const bo = getBusinessObject(element),\n        newBo = bpmnFactory.create(bo.$type),\n        label = getLabel(element);\n\n  if (!label) {\n    return newBo;\n  }\n\n  if (is(element, 'bpmn:Group')) {\n    newBo.categoryValueRef = bpmnFactory.create('bpmn:CategoryValue');\n  }\n\n  setLabel({\n    businessObject: newBo\n  }, label);\n  return newBo;\n}\n\nfunction unlinkTemplate(element, injector) {\n  const modeling = injector.get('modeling'); // remove template attributes\n\n  modeling.updateProperties(element, {\n    'zeebe:modelerTemplate': null,\n    'zeebe:modelerTemplateVersion': null,\n    'zeebe:modelerTemplateIcon': null\n  });\n}\nfunction updateTemplate(element, newTemplate, injector) {\n  const elementTemplates = injector.get('elementTemplates');\n  return elementTemplates.applyTemplate(element, newTemplate);\n}\n\n/**\n * This Behavior checks if the new element's type is in\n * the list of elements the template applies to and unlinks\n * it if not.\n */\n\nclass ReplaceBehavior$1 extends CommandInterceptor {\n  constructor(elementTemplates, injector) {\n    super(injector.get('eventBus'));\n    this.postExecuted('shape.replace', function (e) {\n      var context = e.context,\n          oldShape = context.oldShape,\n          oldBo = getBusinessObject(oldShape),\n          newShape = context.newShape,\n          newBo = getBusinessObject(newShape);\n\n      if (!oldBo.modelerTemplate) {\n        return;\n      }\n\n      const template = newBo.modelerTemplate;\n      const version = newBo.modelerTemplateVersion;\n      const elementTemplate = elementTemplates.get(template, version);\n\n      if (!elementTemplate) {\n        unlinkTemplate(newShape, injector);\n        return;\n      }\n\n      const {\n        appliesTo,\n        elementType\n      } = elementTemplate;\n\n      if (elementType) {\n        if (!is(newShape, elementType.value)) {\n          unlinkTemplate(newShape, injector);\n        }\n\n        return;\n      }\n\n      const allowed = appliesTo.reduce((allowed, type) => {\n        return allowed || is(newBo, type);\n      }, false);\n\n      if (!allowed) {\n        unlinkTemplate(newShape, injector);\n      }\n    });\n  }\n\n}\nReplaceBehavior$1.$inject = ['elementTemplates', 'injector'];\n\nfunction registerHandlers$1(commandStack, elementTemplates, eventBus) {\n  commandStack.registerHandler('propertiesPanel.zeebe.changeTemplate', ChangeElementTemplateHandler$1); // apply default element templates on shape creation\n\n  eventBus.on(['commandStack.shape.create.postExecuted'], function (context) {\n    applyDefaultTemplate$1(context.context.shape, elementTemplates, commandStack);\n  }); // apply default element templates on connection creation\n\n  eventBus.on(['commandStack.connection.create.postExecuted'], function (context) {\n    applyDefaultTemplate$1(context.context.connection, elementTemplates, commandStack);\n  });\n}\n\nregisterHandlers$1.$inject = ['commandStack', 'elementTemplates', 'eventBus'];\nvar commandsModule$1 = {\n  __init__: [registerHandlers$1]\n};\n\nfunction applyDefaultTemplate$1(element, elementTemplates, commandStack) {\n  if (!elementTemplates.get(element) && elementTemplates.getDefault(element)) {\n    const command = 'propertiesPanel.zeebe.changeTemplate';\n    const commandContext = {\n      element: element,\n      newTemplate: elementTemplates.getDefault(element)\n    };\n    commandStack.execute(command, commandContext);\n  }\n}\n\n/**\n * Validate the given template descriptors and\n * return a list of errors.\n *\n * @param {Array<TemplateDescriptor>} descriptors\n * @param {Moddle} moddle\n *\n * @return {Array<Error>}\n */\n\nfunction validate(descriptors, moddle) {\n  return new Validator(moddle).addAll(descriptors).getErrors();\n}\n\nclass PropertyBindingProvider {\n  static create(element, options) {\n    const {\n      property\n    } = options;\n    const {\n      binding,\n      value\n    } = property;\n    const {\n      name\n    } = binding;\n    const businessObject = getBusinessObject(element);\n    businessObject[name] = value;\n  }\n\n}\n\nclass TaskDefinitionTypeBindingProvider {\n  static create(element, options) {\n    const {\n      property,\n      bpmnFactory\n    } = options;\n    const {\n      value\n    } = property;\n    const extensionElements = getBusinessObject(element).get('extensionElements');\n    const taskDefinition = createTaskDefinitionWithType(value, bpmnFactory);\n    taskDefinition.$parent = extensionElements;\n    extensionElements.get('values').push(taskDefinition);\n  }\n\n}\n\nclass InputBindingProvider {\n  static create(element, options) {\n    const {\n      property,\n      bpmnFactory\n    } = options;\n    const {\n      binding,\n      value\n    } = property;\n    const ioMapping = ensureExtension(element, 'zeebe:IoMapping', bpmnFactory);\n\n    if (!shouldUpdate(value, property)) {\n      return;\n    }\n\n    const input = createInputParameter$1(binding, value, bpmnFactory);\n    input.$parent = ioMapping;\n    ioMapping.get('inputParameters').push(input);\n  }\n\n}\n\nclass OutputBindingProvider {\n  static create(element, options) {\n    const {\n      property,\n      bpmnFactory\n    } = options;\n    const {\n      binding,\n      value\n    } = property;\n    const ioMapping = ensureExtension(element, 'zeebe:IoMapping', bpmnFactory);\n\n    if (!shouldUpdate(value, property)) {\n      return;\n    }\n\n    const output = createOutputParameter$1(binding, value, bpmnFactory);\n    output.$parent = ioMapping;\n    ioMapping.get('outputParameters').push(output);\n  }\n\n}\n\nclass TaskHeaderBindingProvider {\n  static create(element, options) {\n    const {\n      property,\n      bpmnFactory\n    } = options;\n    const {\n      binding,\n      value\n    } = property;\n    const taskHeaders = ensureExtension(element, 'zeebe:TaskHeaders', bpmnFactory);\n    const header = createTaskHeader(binding, value, bpmnFactory);\n    header.$parent = taskHeaders;\n    taskHeaders.get('values').push(header);\n  }\n\n}\n\nclass TemplateElementFactory {\n  constructor(bpmnFactory, elementFactory, moddle) {\n    this._bpmnFactory = bpmnFactory;\n    this._elementFactory = elementFactory;\n    this._moddle = moddle;\n    this._providers = {\n      [PROPERTY_TYPE$1]: PropertyBindingProvider,\n      [ZEEBE_TASK_DEFINITION_TYPE_TYPE]: TaskDefinitionTypeBindingProvider,\n      [ZEBBE_INPUT_TYPE]: InputBindingProvider,\n      [ZEEBE_OUTPUT_TYPE]: OutputBindingProvider,\n      [ZEEBE_TASK_HEADER_TYPE]: TaskHeaderBindingProvider\n    };\n  }\n  /**\n   * Create an element based on an element template.\n   *\n   * @param {ElementTemplate} template\n   * @returns {djs.model.Base}\n   */\n\n\n  create(template) {\n    const {\n      appliesTo,\n      elementType,\n      properties\n    } = template;\n    const elementFactory = this._elementFactory;\n    const bpmnFactory = this._bpmnFactory;\n    const moddle = this._moddle;\n    const providers = this._providers; // (0) make sure template is valid\n\n    const errors = validate([template], moddle); // todo(pinussilvestrus): return validation errors\n\n    if (errors && errors.length) {\n      throw new Error('template is invalid');\n    }\n\n    const type = elementType && elementType.value || appliesTo[0]; // (1) create element from appliesTo\n\n    const element = elementFactory.createShape({\n      type\n    }); // (2) ensure extension elements\n\n    if (hasExtensionBindings(template)) {\n      this._ensureExtensionElements(element);\n    } // (3) apply template\n\n\n    this._setModelerTemplate(element, template); // (4) apply icon\n\n\n    if (hasIcon(template)) {\n      this._setModelerTemplateIcon(element, template);\n    } // (5) apply properties\n\n\n    properties.forEach(function (property) {\n      const {\n        binding\n      } = property;\n      const {\n        type: bindingType\n      } = binding;\n      const bindingProvider = providers[bindingType];\n      bindingProvider.create(element, {\n        property,\n        bpmnFactory\n      });\n    });\n    return element;\n  }\n\n  _ensureExtensionElements(element) {\n    const bpmnFactory = this._bpmnFactory;\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements');\n\n    if (!extensionElements) {\n      extensionElements = bpmnFactory.create('bpmn:ExtensionElements', {\n        values: []\n      });\n      extensionElements.$parent = businessObject;\n      businessObject.set('extensionElements', extensionElements);\n    }\n\n    return extensionElements;\n  }\n\n  _setModelerTemplate(element, template) {\n    const {\n      id,\n      version\n    } = template;\n    const businessObject = getBusinessObject(element);\n    businessObject.set('zeebe:modelerTemplate', id);\n    businessObject.set('zeebe:modelerTemplateVersion', version);\n  }\n\n  _setModelerTemplateIcon(element, template) {\n    const {\n      icon\n    } = template;\n    const {\n      contents\n    } = icon;\n    const businessObject = getBusinessObject(element);\n    businessObject.set('zeebe:modelerTemplateIcon', contents);\n  }\n\n}\nTemplateElementFactory.$inject = ['bpmnFactory', 'elementFactory', 'moddle']; // helper ////////////////\n\nfunction hasExtensionBindings(template) {\n  const {\n    properties\n  } = template; // find icon first\n\n  if (hasIcon(template)) {\n    return true;\n  }\n\n  return find(properties, function (property) {\n    const {\n      binding\n    } = property;\n    return EXTENSION_BINDING_TYPES$1.includes(binding.type);\n  });\n}\n\nfunction hasIcon(template) {\n  const {\n    icon\n  } = template;\n  return !!(icon && icon.contents);\n}\n\nvar templateElementFactoryModule = {\n  __init__: ['templateElementFactory'],\n  templateElementFactory: ['type', TemplateElementFactory]\n};\n\nfunction createElementTemplatesGroup(props = {}) {\n  const {\n    getTemplateId: getTemplateId$1 = getTemplateId,\n    unlinkTemplate = unlinkTemplate$1,\n    updateTemplate = updateTemplate$1\n  } = props;\n  return function ElementTemplatesGroup(props) {\n    const {\n      id,\n      label,\n      element,\n      entries = []\n    } = props;\n    const [open, setOpen] = useLayoutState(['groups', id, 'open'], false);\n    const empty = !entries.length;\n\n    const toggleOpen = () => !empty && setOpen(!open);\n\n    return jsxs(\"div\", {\n      class: \"bio-properties-panel-group bio-properties-panel-templates-group\",\n      \"data-group-id\": 'group-' + id,\n      children: [jsxs(\"div\", {\n        class: classnames('bio-properties-panel-group-header', {\n          empty,\n          open: open && !empty\n        }),\n        onClick: toggleOpen,\n        children: [jsx(\"div\", {\n          title: label,\n          class: \"bio-properties-panel-group-header-title\",\n          children: label\n        }), jsxs(\"div\", {\n          class: \"bio-properties-panel-group-header-buttons\",\n          children: [jsx(TemplateGroupButtons, {\n            element: element,\n            getTemplateId: getTemplateId$1,\n            unlinkTemplate: unlinkTemplate,\n            updateTemplate: updateTemplate\n          }), !empty && jsx(SectionToggle, {\n            open: open\n          })]\n        })]\n      }), jsx(\"div\", {\n        class: classnames('bio-properties-panel-group-entries', {\n          open: open && !empty\n        }),\n        children: entries.map(entry => {\n          const {\n            component: Component,\n            id\n          } = entry;\n          return createElement$1(Component, { ...entry,\n            key: id,\n            element: element\n          });\n        })\n      })]\n    });\n  };\n}\n\nfunction SectionToggle({\n  open\n}) {\n  return jsx(HeaderButton, {\n    title: \"Toggle section\",\n    class: \"bio-properties-panel-arrow\",\n    children: jsx(ArrowIcon, {\n      class: open ? 'bio-properties-panel-arrow-down' : 'bio-properties-panel-arrow-right'\n    })\n  });\n}\n/**\n *\n * @param {object} props\n * @param {object} props.element\n * @param {function} props.getTemplateId\n * @param {function} props.unlinkTemplate\n * @param {function} props.updateTemplate\n */\n\n\nfunction TemplateGroupButtons({\n  element,\n  getTemplateId,\n  unlinkTemplate,\n  updateTemplate\n}) {\n  const elementTemplates = useService('elementTemplates');\n  const templateState = getTemplateState(elementTemplates, element, getTemplateId);\n\n  if (templateState.type === 'NO_TEMPLATE') {\n    return jsx(SelectEntryTemplate, {\n      element: element\n    });\n  } else if (templateState.type === 'KNOWN_TEMPLATE') {\n    return jsx(AppliedTemplate, {\n      element: element,\n      unlinkTemplate: unlinkTemplate\n    });\n  } else if (templateState.type === 'UNKNOWN_TEMPLATE') {\n    return jsx(UnknownTemplate, {\n      element: element,\n      unlinkTemplate: unlinkTemplate\n    });\n  } else if (templateState.type === 'OUTDATED_TEMPLATE') {\n    return jsx(OutdatedTemplate, {\n      element: element,\n      templateState: templateState,\n      unlinkTemplate: unlinkTemplate,\n      updateTemplate: updateTemplate\n    });\n  }\n}\n\nfunction SelectEntryTemplate({\n  element\n}) {\n  const translate = useService('translate');\n  const eventBus = useService('eventBus');\n\n  const selectTemplate = () => eventBus.fire('elementTemplates.select', {\n    element\n  });\n\n  return jsxs(HeaderButton, {\n    title: \"Select a template\",\n    class: \"bio-properties-panel-select-template-button\",\n    onClick: selectTemplate,\n    children: [jsx(CreateIcon, {}), jsx(\"span\", {\n      children: translate('Select')\n    })]\n  });\n}\n\nfunction AppliedTemplate({\n  element,\n  unlinkTemplate\n}) {\n  const translate = useService('translate'),\n        injector = useService('injector');\n  const menuItems = [{\n    entry: translate('Unlink'),\n    action: () => unlinkTemplate(element, injector)\n  }, {\n    entry: jsx(RemoveTemplate, {}),\n    action: () => removeTemplate(element, injector)\n  }];\n  return jsx(DropdownButton, {\n    menuItems: menuItems,\n    class: \"bio-properties-panel-applied-template-button\",\n    children: jsxs(HeaderButton, {\n      children: [jsx(\"span\", {\n        children: translate('Applied')\n      }), jsx(ArrowIcon, {\n        class: \"bio-properties-panel-arrow-down\"\n      })]\n    })\n  });\n}\n\nfunction RemoveTemplate() {\n  const translate = useService('translate');\n  return jsx(\"span\", {\n    class: \"bio-properties-panel-remove-template\",\n    children: translate('Remove')\n  });\n}\n\nfunction UnknownTemplate({\n  element,\n  unlinkTemplate\n}) {\n  const translate = useService('translate'),\n        injector = useService('injector');\n  const menuItems = [{\n    entry: jsx(NotFoundText, {})\n  }, {\n    separator: true\n  }, {\n    entry: translate('Unlink'),\n    action: () => unlinkTemplate(element, injector)\n  }, {\n    entry: jsx(RemoveTemplate, {}),\n    action: () => removeTemplate(element, injector)\n  }];\n  return jsx(DropdownButton, {\n    menuItems: menuItems,\n    class: \"bio-properties-panel-template-not-found\",\n    children: jsxs(HeaderButton, {\n      children: [jsx(\"span\", {\n        children: translate('Not found')\n      }), jsx(ArrowIcon, {\n        class: \"bio-properties-panel-arrow-down\"\n      })]\n    })\n  });\n}\n\nfunction NotFoundText() {\n  const translate = useService('translate');\n  return jsx(\"div\", {\n    class: \"bio-properties-panel-template-not-found-text\",\n    children: translate('The template applied was not found. Therefore, its properties cannot be shown. Unlink to access the data.')\n  });\n}\n/**\n *\n * @param {object} props\n * @param {object} element\n * @param {UnknownTemplate} templateState\n * @param {function} unlinkTemplate\n * @param {function} updateTemplate\n */\n\n\nfunction OutdatedTemplate({\n  element,\n  templateState,\n  unlinkTemplate,\n  updateTemplate\n}) {\n  const {\n    newerTemplate\n  } = templateState;\n  const translate = useService('translate'),\n        injector = useService('injector');\n  const menuItems = [{\n    entry: jsx(UpdateAvailableText, {\n      newerTemplate: newerTemplate\n    })\n  }, {\n    separator: true\n  }, {\n    entry: translate('Update'),\n    action: () => updateTemplate(element, newerTemplate, injector)\n  }, {\n    entry: translate('Unlink'),\n    action: () => unlinkTemplate(element, injector)\n  }, {\n    entry: jsx(RemoveTemplate, {}),\n    action: () => removeTemplate(element, injector)\n  }];\n  return jsx(DropdownButton, {\n    menuItems: menuItems,\n    class: \"bio-properties-panel-template-update-available\",\n    children: jsxs(HeaderButton, {\n      children: [jsx(\"span\", {\n        children: translate('Update available')\n      }), jsx(ArrowIcon, {\n        class: \"bio-properties-panel-arrow-down\"\n      })]\n    })\n  });\n}\n\nfunction UpdateAvailableText({\n  newerTemplate\n}) {\n  const translate = useService('translate');\n  const text = translate('A new version of the template is available: {templateVersion}', {\n    templateVersion: getVersionOrDateFromTemplate(newerTemplate)\n  });\n  return jsx(\"div\", {\n    class: \"bio-properties-panel-template-update-available-text\",\n    children: text\n  });\n} // helper //////\n\n/**\n * Determine template state in the current element.\n *\n * @param {object} elementTemplates\n * @param {object} element\n * @param {function} getTemplateId\n * @returns {TemplateState}\n */\n\n\nfunction getTemplateState(elementTemplates, element, getTemplateId) {\n  const templateId = getTemplateId(element),\n        template = elementTemplates.get(element);\n\n  if (!templateId) {\n    return {\n      type: 'NO_TEMPLATE'\n    };\n  }\n\n  if (!template) {\n    return {\n      type: 'UNKNOWN_TEMPLATE',\n      templateId\n    };\n  }\n\n  const newerTemplate = elementTemplates.getLatest(templateId)[0];\n\n  if (newerTemplate !== template) {\n    return {\n      type: 'OUTDATED_TEMPLATE',\n      template,\n      newerTemplate\n    };\n  }\n\n  return {\n    type: 'KNOWN_TEMPLATE',\n    template\n  };\n}\n\nfunction TemplateProps({\n  element,\n  elementTemplates\n}) {\n  const template = elementTemplates.get(element);\n\n  if (!template) {\n    return [];\n  }\n\n  return [{\n    id: 'template-name',\n    component: TemplateName,\n    template\n  }, {\n    id: 'template-version',\n    component: TemplateVersion,\n    template\n  }, {\n    id: 'template-description',\n    component: TemplateDescription,\n    template\n  }].filter(entry => !!entry.component);\n}\n\nfunction TemplateName({\n  id,\n  template\n}) {\n  const translate = useService('translate');\n  return jsx(TextEntry, {\n    id: id,\n    label: translate('Name'),\n    content: template.name\n  });\n}\n\nfunction TemplateVersion({\n  id,\n  template\n}) {\n  const translate = useService('translate');\n  const version = getVersionOrDateFromTemplate(template);\n  return version ? jsx(TextEntry, {\n    id: id,\n    label: translate('Version'),\n    content: version\n  }) : null;\n}\n\nfunction TemplateDescription({\n  id,\n  template\n}) {\n  const translate = useService('translate');\n  const {\n    description\n  } = template;\n  return description ? jsx(TextEntry, {\n    id: id,\n    label: translate('Description'),\n    content: template.description\n  }) : null;\n}\n\nfunction TextEntry({\n  id,\n  label,\n  content\n}) {\n  return jsxs(\"div\", {\n    \"data-entry-id\": id,\n    class: \"bio-properties-panel-entry bio-properties-panel-text-entry\",\n    children: [jsx(\"span\", {\n      class: \"bio-properties-panel-label\",\n      children: label\n    }), jsx(\"span\", {\n      class: \"bio-properties-panel-text-entry__content\",\n      children: content\n    })]\n  });\n}\n\nvar e,\n    o = {};\n\nfunction n(r, t, e) {\n  if (3 === r.nodeType) {\n    var o = \"textContent\" in r ? r.textContent : r.nodeValue || \"\";\n\n    if (!1 !== n.options.trim) {\n      var a = 0 === t || t === e.length - 1;\n      if ((!(o = o.match(/^[\\s\\n]+$/g) && \"all\" !== n.options.trim ? \" \" : o.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g, \"all\" === n.options.trim || a ? \"\" : \" \")) || \" \" === o) && e.length > 1 && a) return null;\n    }\n\n    return o;\n  }\n\n  if (1 !== r.nodeType) return null;\n  var p = String(r.nodeName).toLowerCase();\n  if (\"script\" === p && !n.options.allowScripts) return null;\n  var l,\n      s,\n      u = n.h(p, function (r) {\n    var t = r && r.length;\n    if (!t) return null;\n\n    for (var e = {}, o = 0; o < t; o++) {\n      var a = r[o],\n          i = a.name,\n          p = a.value;\n      \"on\" === i.substring(0, 2) && n.options.allowEvents && (p = new Function(p)), e[i] = p;\n    }\n\n    return e;\n  }(r.attributes), (s = (l = r.childNodes) && Array.prototype.map.call(l, n).filter(i)) && s.length ? s : null);\n  return n.visitor && n.visitor(u), u;\n}\n\nvar a,\n    i = function (r) {\n  return r;\n},\n    p = {};\n\nfunction l(r) {\n  var t = (r.type || \"\").toLowerCase(),\n      e = l.map;\n  e && e.hasOwnProperty(t) ? (r.type = e[t], r.props = Object.keys(r.props || {}).reduce(function (t, e) {\n    var o;\n    return t[(o = e, o.replace(/-(.)/g, function (r, t) {\n      return t.toUpperCase();\n    }))] = r.props[e], t;\n  }, {})) : r.type = t.replace(/[^a-z0-9-]/i, \"\");\n}\n\nvar Markup = (function (t) {\n  function i() {\n    t.apply(this, arguments);\n  }\n\n  return t && (i.__proto__ = t), (i.prototype = Object.create(t && t.prototype)).constructor = i, i.setReviver = function (r) {\n    a = r;\n  }, i.prototype.shouldComponentUpdate = function (r) {\n    var t = this.props;\n    return r.wrap !== t.wrap || r.type !== t.type || r.markup !== t.markup;\n  }, i.prototype.setComponents = function (r) {\n    if (this.map = {}, r) for (var t in r) if (r.hasOwnProperty(t)) {\n      var e = t.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g, \"$1$3-$2$4\").toLowerCase();\n      this.map[e] = r[t];\n    }\n  }, i.prototype.render = function (t) {\n    var i = t.wrap;\n    void 0 === i && (i = !0);\n\n    var s,\n        u = t.type,\n        c = t.markup,\n        m = t.components,\n        v = t.reviver,\n        f = t.onError,\n        d = t[\"allow-scripts\"],\n        h$1 = t[\"allow-events\"],\n        y = t.trim,\n        w = function (r, t) {\n      var e = {};\n\n      for (var o in r) Object.prototype.hasOwnProperty.call(r, o) && -1 === t.indexOf(o) && (e[o] = r[o]);\n\n      return e;\n    }(t, [\"wrap\", \"type\", \"markup\", \"components\", \"reviver\", \"onError\", \"allow-scripts\", \"allow-events\", \"trim\"]),\n        C = v || this.reviver || this.constructor.prototype.reviver || a || h;\n\n    this.setComponents(m);\n    var g = {\n      allowScripts: d,\n      allowEvents: h$1,\n      trim: y\n    };\n\n    try {\n      s = function (r, t, a, i, s) {\n        var u = function (r, t) {\n          var o,\n              n,\n              a,\n              i,\n              p = \"html\" === t ? \"text/html\" : \"application/xml\";\n          \"html\" === t ? (i = \"body\", a = \"<!DOCTYPE html>\\n<html><body>\" + r + \"</body></html>\") : (i = \"xml\", a = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>' + r + \"</xml>\");\n\n          try {\n            o = new DOMParser().parseFromString(a, p);\n          } catch (r) {\n            n = r;\n          }\n\n          if (o || \"html\" !== t || ((o = e || (e = function () {\n            if (document.implementation && document.implementation.createHTMLDocument) return document.implementation.createHTMLDocument(\"\");\n            var r = document.createElement(\"iframe\");\n            return r.style.cssText = \"position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;\", r.setAttribute(\"sandbox\", \"allow-forms\"), document.body.appendChild(r), r.contentWindow.document;\n          }())).open(), o.write(a), o.close()), o) {\n            var l = o.getElementsByTagName(i)[0],\n                s = l.firstChild;\n            return r && !s && (l.error = \"Document parse failed.\"), s && \"parsererror\" === String(s.nodeName).toLowerCase() && (s.removeChild(s.firstChild), s.removeChild(s.lastChild), l.error = s.textContent || s.nodeValue || n || \"Unknown error\", l.removeChild(s)), l;\n          }\n        }(r, t);\n\n        if (u && u.error) throw new Error(u.error);\n        var c = u && u.body || u;\n        l.map = i || p;\n\n        var m = c && function (r, t, e, a) {\n          return n.visitor = t, n.h = e, n.options = a || o, n(r);\n        }(c, l, a, s);\n\n        return l.map = null, m && m.props && m.props.children || null;\n      }(c, u, C, this.map, g);\n    } catch (r) {\n      f ? f({\n        error: r\n      }) : \"undefined\" != typeof console && console.error && console.error(\"preact-markup: \" + r);\n    }\n\n    if (!1 === i) return s || null;\n    var x = w.hasOwnProperty(\"className\") ? \"className\" : \"class\",\n        b = w[x];\n    return b ? b.splice ? b.splice(0, 0, \"markup\") : \"string\" == typeof b ? w[x] += \" markup\" : \"object\" == typeof b && (b.markup = !0) : w[x] = \"markup\", C(\"div\", w, s || null);\n  }, i;\n})(Component);\n\n/**\n * Copied from existing form-js#Sanitizer\n * cf. https://github.com/bpmn-io/form-js/blob/master/packages/form-js-viewer/src/render/components/Sanitizer.js\n */\nconst NODE_TYPE_TEXT = 3,\n      NODE_TYPE_ELEMENT = 1;\nconst ALLOWED_NODES = ['h1', 'h2', 'h3', 'h4', 'h5', 'span', 'em', 'a', 'p', 'div', 'ul', 'ol', 'li', 'hr', 'blockquote', 'img', 'pre', 'code', 'br', 'strong'];\nconst ALLOWED_ATTRIBUTES = ['align', 'alt', 'class', 'href', 'id', 'name', 'rel', 'target', 'src'];\nconst ALLOWED_URI_PATTERN = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i; // eslint-disable-line no-useless-escape\n\nconst ATTR_WHITESPACE_PATTERN = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g; // eslint-disable-line no-control-regex\n\nconst FORM_ELEMENT = document.createElement('form');\n/**\n * Sanitize a HTML string and return the cleaned, safe version.\n *\n * @param {string} html\n * @return {string}\n */\n\nfunction sanitizeHTML(html) {\n  const doc = new DOMParser().parseFromString(`<!DOCTYPE html>\\n<html><body><div>${html}`, 'text/html');\n  doc.normalize();\n  const element = doc.body.firstChild;\n\n  if (element) {\n    sanitizeNode(\n    /** @type Element */\n    element);\n    return new XMLSerializer().serializeToString(element);\n  } else {\n    // handle the case that document parsing\n    // does not work at all, due to HTML gibberish\n    return '';\n  }\n}\n/**\n * Recursively sanitize a HTML node, potentially\n * removing it, its children or attributes.\n *\n * Inspired by https://github.com/developit/snarkdown/issues/70\n * and https://github.com/cure53/DOMPurify. Simplified\n * for our use-case.\n *\n * @param {Element} node\n */\n\nfunction sanitizeNode(node) {\n  // allow text nodes\n  if (node.nodeType === NODE_TYPE_TEXT) {\n    return;\n  } // disallow all other nodes but Element\n\n\n  if (node.nodeType !== NODE_TYPE_ELEMENT) {\n    return node.remove();\n  }\n\n  const lcTag = node.tagName.toLowerCase(); // disallow non-whitelisted tags\n\n  if (!ALLOWED_NODES.includes(lcTag)) {\n    return node.remove();\n  }\n\n  const attributes = node.attributes; // clean attributes\n\n  for (let i = attributes.length; i--;) {\n    const attribute = attributes[i];\n    const name = attribute.name;\n    const lcName = name.toLowerCase(); // normalize node value\n\n    const value = attribute.value.trim();\n    node.removeAttribute(name);\n    const valid = isValidAttribute(lcTag, lcName, value);\n\n    if (valid) {\n      node.setAttribute(name, value);\n    }\n  } // force noopener on target=\"_blank\" links\n\n\n  if (lcTag === 'a' && node.getAttribute('target') === '_blank' && node.getAttribute('rel') !== 'noopener') {\n    node.setAttribute('rel', 'noopener');\n  }\n\n  for (let i = node.childNodes.length; i--;) {\n    sanitizeNode(\n    /** @type Element */\n    node.childNodes[i]);\n  }\n}\n/**\n * Validates attributes for validity.\n *\n * @param {string} lcTag\n * @param {string} lcName\n * @param {string} value\n * @return {boolean}\n */\n\n\nfunction isValidAttribute(lcTag, lcName, value) {\n  // disallow most attributes based on whitelist\n  if (!ALLOWED_ATTRIBUTES.includes(lcName)) {\n    return false;\n  } // disallow \"DOM clobbering\" / polution of document and wrapping form elements\n\n\n  if ((lcName === 'id' || lcName === 'name') && (value in document || value in FORM_ELEMENT)) {\n    return false;\n  }\n\n  if (lcName === 'target' && value !== '_blank') {\n    return false;\n  } // allow valid url links only\n\n\n  if (lcName === 'href' && !ALLOWED_URI_PATTERN.test(value.replace(ATTR_WHITESPACE_PATTERN, ''))) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction PropertyDescription(props) {\n  const {\n    description\n  } = props;\n  return description && jsx(Markup, {\n    markup: sanitizeHTML(description),\n    trim: false\n  });\n}\n\nconst DEFAULT_CUSTOM_GROUP$1 = {\n  id: 'ElementTemplates__CustomProperties',\n  label: 'Custom properties'\n};\nfunction CustomProperties$1(props) {\n  const {\n    element,\n    elementTemplate\n  } = props;\n  const groups = [];\n  const {\n    id,\n    properties,\n    groups: propertyGroups\n  } = elementTemplate; // (1) group properties by group id\n\n  const groupedProperties = groupByGroupId$1(properties);\n  const defaultProps = [];\n  forEach(groupedProperties, (properties, groupId) => {\n    const group = findCustomGroup$1(propertyGroups, groupId);\n\n    if (!group) {\n      return defaultProps.push(...properties);\n    }\n\n    addCustomGroup$1(groups, {\n      element,\n      id: `ElementTemplates__CustomProperties-${groupId}`,\n      label: group.label,\n      properties: properties,\n      templateId: `${id}-${groupId}`\n    });\n  }); // (2) add default custom props\n\n  if (defaultProps.length) {\n    addCustomGroup$1(groups, { ...DEFAULT_CUSTOM_GROUP$1,\n      element,\n      properties: defaultProps,\n      templateId: id\n    });\n  }\n\n  return groups;\n}\n\nfunction addCustomGroup$1(groups, props) {\n  const {\n    element,\n    id,\n    label,\n    properties,\n    templateId\n  } = props;\n  const customPropertiesGroup = {\n    id,\n    label,\n    component: Group,\n    entries: [],\n    shouldOpen: true\n  };\n  properties.forEach((property, index) => {\n    const entry = createCustomEntry$1(`custom-entry-${templateId}-${index}`, element, property);\n\n    if (entry) {\n      customPropertiesGroup.entries.push(entry);\n    }\n  });\n\n  if (customPropertiesGroup.entries.length) {\n    groups.push(customPropertiesGroup);\n  }\n}\n\nfunction createCustomEntry$1(id, element, property) {\n  let {\n    type,\n    feel\n  } = property;\n\n  if (!type) {\n    type = getDefaultType$1(property);\n  }\n\n  if (type === 'Boolean') {\n    return {\n      id,\n      component: BooleanProperty$1,\n      isEdited: isCheckboxEntryEdited,\n      property\n    };\n  }\n\n  if (type === 'Dropdown') {\n    return {\n      id,\n      component: DropdownProperty$1,\n      isEdited: isSelectEntryEdited,\n      property\n    };\n  }\n\n  if (type === 'String') {\n    if (feel) {\n      return {\n        id,\n        component: FeelProperty,\n        isEdited: isFeelEntryEdited,\n        property\n      };\n    }\n\n    return {\n      id,\n      component: StringProperty$1,\n      isEdited: isTextFieldEntryEdited,\n      property\n    };\n  }\n\n  if (type === 'Text') {\n    if (feel) {\n      return {\n        id,\n        component: FeelTextAreaProperty,\n        isEdited: isFeelEntryEdited,\n        property\n      };\n    }\n\n    return {\n      id,\n      component: TextAreaProperty$1,\n      isEdited: isTextAreaEntryEdited,\n      property\n    };\n  }\n}\n\nfunction getDefaultType$1(property) {\n  const {\n    binding\n  } = property;\n  const {\n    type\n  } = binding;\n\n  if ([PROPERTY_TYPE$1, ZEEBE_TASK_DEFINITION_TYPE_TYPE, ZEBBE_INPUT_TYPE, ZEEBE_OUTPUT_TYPE, ZEEBE_TASK_HEADER_TYPE].includes(type)) {\n    return 'String';\n  }\n}\n\nfunction BooleanProperty$1(props) {\n  const {\n    element,\n    id,\n    property\n  } = props;\n  const {\n    description,\n    editable,\n    label\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack');\n  return CheckboxEntry({\n    element,\n    getValue: propertyGetter$1(element, property),\n    id,\n    label,\n    description: PropertyDescription({\n      description\n    }),\n    setValue: propertySetter$1(bpmnFactory, commandStack, element, property),\n    disabled: editable === false\n  });\n}\n\nfunction DropdownProperty$1(props) {\n  const {\n    element,\n    id,\n    property\n  } = props;\n  const {\n    description,\n    editable,\n    label\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack');\n\n  const getOptions = () => {\n    const {\n      choices\n    } = property;\n    return choices.map(({\n      name,\n      value\n    }) => {\n      return {\n        label: name,\n        value\n      };\n    });\n  };\n\n  return SelectEntry({\n    element,\n    id,\n    label,\n    getOptions,\n    description: PropertyDescription({\n      description\n    }),\n    getValue: propertyGetter$1(element, property),\n    setValue: propertySetter$1(bpmnFactory, commandStack, element, property),\n    disabled: editable === false\n  });\n}\n\nfunction FeelTextAreaProperty(props) {\n  const {\n    element,\n    id,\n    property\n  } = props;\n  const {\n    description,\n    editable,\n    label,\n    feel\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack'),\n        debounce = useService('debounceInput'),\n        translate = useService('translate');\n  return withVariableContext(FeelTextAreaEntry)({\n    debounce,\n    element,\n    getValue: propertyGetter$1(element, property),\n    id,\n    label,\n    feel,\n    description: PropertyDescription({\n      description\n    }),\n    setValue: propertySetter$1(bpmnFactory, commandStack, element, property),\n    validate: propertyValidator$1(translate, property),\n    disabled: editable === false\n  });\n}\n\nfunction FeelProperty(props) {\n  const {\n    element,\n    id,\n    property\n  } = props;\n  const {\n    description,\n    editable,\n    label,\n    feel\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack'),\n        debounce = useService('debounceInput'),\n        translate = useService('translate');\n  return withVariableContext(FeelEntry)({\n    debounce,\n    element,\n    getValue: propertyGetter$1(element, property),\n    id,\n    label,\n    feel,\n    description: PropertyDescription({\n      description\n    }),\n    setValue: propertySetter$1(bpmnFactory, commandStack, element, property),\n    validate: propertyValidator$1(translate, property),\n    disabled: editable === false\n  });\n}\n\nfunction StringProperty$1(props) {\n  const {\n    element,\n    id,\n    property\n  } = props;\n  const {\n    description,\n    editable,\n    label,\n    feel\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack'),\n        debounce = useService('debounceInput'),\n        translate = useService('translate');\n  return TextFieldEntry({\n    debounce,\n    element,\n    getValue: propertyGetter$1(element, property),\n    id,\n    label,\n    feel,\n    description: PropertyDescription({\n      description\n    }),\n    setValue: propertySetter$1(bpmnFactory, commandStack, element, property),\n    validate: propertyValidator$1(translate, property),\n    disabled: editable === false\n  });\n}\n\nfunction TextAreaProperty$1(props) {\n  const {\n    element,\n    id,\n    property\n  } = props;\n  const {\n    description,\n    editable,\n    label,\n    feel\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack'),\n        debounce = useService('debounceInput');\n  return TextAreaEntry({\n    debounce,\n    element,\n    id,\n    label,\n    feel,\n    description: PropertyDescription({\n      description\n    }),\n    getValue: propertyGetter$1(element, property),\n    setValue: propertySetter$1(bpmnFactory, commandStack, element, property),\n    disabled: editable === false\n  });\n}\n\nfunction propertyGetter$1(element, property) {\n  return function getValue() {\n    return getPropertyValue$1(element, property);\n  };\n}\n\nfunction propertySetter$1(bpmnFactory, commandStack, element, property) {\n  return function getValue(value) {\n    return setPropertyValue(bpmnFactory, commandStack, element, property, value);\n  };\n}\n\nfunction propertyValidator$1(translate, property) {\n  return function validate(value) {\n    const {\n      constraints = {}\n    } = property;\n    const {\n      maxLength,\n      minLength,\n      notEmpty\n    } = constraints;\n\n    if (notEmpty && isEmptyString$1(value)) {\n      return translate('Must not be empty.');\n    }\n\n    if (maxLength && value.length > maxLength) {\n      return translate('Must have max length {maxLength}.', {\n        maxLength\n      });\n    }\n\n    if (minLength && value.length < minLength) {\n      return translate('Must have min length {minLength}.', {\n        minLength\n      });\n    }\n\n    let {\n      pattern\n    } = constraints;\n\n    if (pattern) {\n      let message;\n\n      if (!isString(pattern)) {\n        message = pattern.message;\n        pattern = pattern.value;\n      }\n\n      if (!matchesPattern$1(value, pattern)) {\n        return message || translate('Must match pattern {pattern}.', {\n          pattern\n        });\n      }\n    }\n  };\n}\n\nfunction isEmptyString$1(string) {\n  return !string || !string.trim().length;\n}\n\nfunction matchesPattern$1(string, pattern) {\n  return new RegExp(pattern).test(string);\n}\n\nfunction groupByGroupId$1(properties) {\n  return groupBy(properties, 'group');\n}\n\nfunction findCustomGroup$1(groups, id) {\n  return find(groups, g => g.id === id);\n}\n\nconst LOWER_PRIORITY$1 = 300;\nclass ElementTemplatesPropertiesProvider$1 {\n  constructor(elementTemplates, propertiesPanel, injector) {\n    propertiesPanel.registerProvider(LOWER_PRIORITY$1, this);\n    this._elementTemplates = elementTemplates;\n    this._injector = injector;\n  }\n\n  getGroups(element) {\n    return groups => {\n      if (!this._shouldShowTemplateProperties(element)) {\n        return groups;\n      } // (0) Copy provided groups\n\n\n      groups = groups.slice();\n      const templatesGroup = {\n        element,\n        id: 'ElementTemplates__Template',\n        label: 'Template',\n        component: createElementTemplatesGroup({\n          getTemplateId: getTemplateId$1,\n          unlinkTemplate,\n          updateTemplate\n        }),\n        entries: TemplateProps({\n          element,\n          elementTemplates: this._elementTemplates\n        })\n      }; // (1) Add templates group\n\n      addGroupsAfter$1('documentation', groups, [templatesGroup]);\n\n      let elementTemplate = this._elementTemplates.get(element);\n\n      if (elementTemplate) {\n        elementTemplate = applyConditions(element, elementTemplate);\n        const templateSpecificGroups = [].concat(CustomProperties$1({\n          element,\n          elementTemplate\n        })); // (2) add template-specific properties groups\n\n        addGroupsAfter$1('ElementTemplates__Template', groups, templateSpecificGroups);\n      } // (3) apply entries visible\n\n\n      if (getTemplateId$1(element)) {\n        groups = filterWithEntriesVisible$1(elementTemplate || {}, groups);\n      }\n\n      return groups;\n    };\n  }\n\n  _shouldShowTemplateProperties(element) {\n    return getTemplateId$1(element) || this._elementTemplates.getAll(element).length;\n  }\n\n}\nElementTemplatesPropertiesProvider$1.$inject = ['elementTemplates', 'propertiesPanel', 'injector']; // helper /////////////////////\n\n/**\n *\n * @param {string} id\n * @param {Array<{ id: string }} groups\n * @param {Array<{ id: string }>} groupsToAdd\n */\n\nfunction addGroupsAfter$1(id, groups, groupsToAdd) {\n  const index = groups.findIndex(group => group.id === id);\n\n  if (index !== -1) {\n    groups.splice(index + 1, 0, ...groupsToAdd);\n  } else {\n    // add in the beginning if group with provided id is missing\n    groups.unshift(...groupsToAdd);\n  }\n}\n\nfunction filterWithEntriesVisible$1(template, groups) {\n  if (!template.entriesVisible) {\n    return groups.filter(group => {\n      return group.id === 'general' || group.id.startsWith('ElementTemplates__');\n    });\n  }\n\n  return groups;\n}\n\nvar index$1 = {\n  __depends__: [commandsModule$1, templateElementFactoryModule, translateModule, zeebePropertiesProviderModule],\n  __init__: ['elementTemplatesLoader', 'replaceBehavior', 'elementTemplatesPropertiesProvider', 'elementTemplatesConditionChecker'],\n  elementTemplates: ['type', ElementTemplates],\n  elementTemplatesLoader: ['type', ElementTemplatesLoader],\n  replaceBehavior: ['type', ReplaceBehavior$1],\n  elementTemplatesPropertiesProvider: ['type', ElementTemplatesPropertiesProvider$1],\n  elementTemplatesConditionChecker: ['type', ElementTemplatesConditionChecker]\n};\n\n/**\n * This Behavior checks if the new element's type is in\n * the list of elements the template applies to and unlinks\n * it if not.\n */\n\nclass ReplaceBehavior extends CommandInterceptor {\n  constructor(elementTemplates, injector) {\n    super(injector.get('eventBus'));\n    this.postExecuted('shape.replace', function (e) {\n      var context = e.context,\n          oldShape = context.oldShape,\n          oldBo = getBusinessObject(oldShape),\n          newShape = context.newShape,\n          newBo = getBusinessObject(newShape);\n\n      if (!oldBo.modelerTemplate) {\n        return;\n      }\n\n      const template = newBo.modelerTemplate;\n      const version = newBo.modelerTemplateVersion;\n      const elementTemplate = elementTemplates.get(template, version);\n\n      if (!elementTemplate) {\n        unlinkTemplate$1(newShape, injector);\n        return;\n      }\n\n      const {\n        appliesTo,\n        elementType\n      } = elementTemplate;\n\n      if (elementType) {\n        if (!is(newShape, elementType.value)) {\n          unlinkTemplate$1(newShape, injector);\n        }\n\n        return;\n      }\n\n      const allowed = appliesTo.reduce((allowed, type) => {\n        return allowed || is(newBo, type);\n      }, false);\n\n      if (!allowed) {\n        unlinkTemplate$1(newShape, injector);\n      }\n    });\n  }\n\n}\nReplaceBehavior.$inject = ['elementTemplates', 'injector'];\n\n/**\n * Converts legacy scopes descriptor to newer supported array structure.\n *\n * For example, it transforms\n *\n * scopes: {\n *   'camunda:Connector':\n *     { properties: []\n *   }\n * }\n *\n * to\n *\n * scopes: [\n *   {\n *     type: 'camunda:Connector',\n *     properties: []\n *   }\n * ]\n *\n * @param {ScopesDescriptor} scopes\n *\n * @returns {Array}\n */\n\nfunction handleLegacyScopes(scopes = []) {\n  const scopesAsArray = [];\n\n  if (!isObject(scopes)) {\n    return scopes;\n  }\n\n  forEach(keys(scopes), function (scopeName) {\n    scopesAsArray.push(assign({\n      type: scopeName\n    }, scopes[scopeName]));\n  });\n  return scopesAsArray;\n}\n\n/**\n * Create an input parameter representing the given\n * binding and value.\n *\n * @param {PropertyBinding} binding\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createInputParameter(binding, value, bpmnFactory) {\n  const {\n    name,\n    scriptFormat\n  } = binding;\n  let parameterValue, parameterDefinition;\n\n  if (scriptFormat) {\n    parameterDefinition = bpmnFactory.create('camunda:Script', {\n      scriptFormat,\n      value\n    });\n  } else {\n    parameterValue = value;\n  }\n\n  return bpmnFactory.create('camunda:InputParameter', {\n    name,\n    value: parameterValue,\n    definition: parameterDefinition\n  });\n}\n/**\n * Create an output parameter representing the given\n * binding and value.\n *\n * @param {PropertyBinding} binding\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createOutputParameter(binding, value, bpmnFactory) {\n  const {\n    scriptFormat,\n    source\n  } = binding;\n  let parameterValue, parameterDefinition;\n\n  if (scriptFormat) {\n    parameterDefinition = bpmnFactory.create('camunda:Script', {\n      scriptFormat,\n      value: source\n    });\n  } else {\n    parameterValue = source;\n  }\n\n  return bpmnFactory.create('camunda:OutputParameter', {\n    name: value,\n    value: parameterValue,\n    definition: parameterDefinition\n  });\n}\n/**\n * Create camunda property from the given binding.\n *\n * @param {PropertyBinding} binding\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createCamundaProperty(binding, value = '', bpmnFactory) {\n  const {\n    name\n  } = binding;\n  return bpmnFactory.create('camunda:Property', {\n    name,\n    value\n  });\n}\n/**\n * Create camunda:in element from given binding.\n *\n * @param {PropertyBinding} binding\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createCamundaIn(binding, value, bpmnFactory) {\n  const attrs = createCamundaInOutAttrs(binding, value);\n  return bpmnFactory.create('camunda:In', attrs);\n}\n/**\n * Create camunda:in with businessKey element from given binding.\n *\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createCamundaInWithBusinessKey(value, bpmnFactory) {\n  return bpmnFactory.create('camunda:In', {\n    businessKey: value\n  });\n}\n/**\n * Create camunda:out element from given binding.\n *\n * @param {PropertyBinding} binding\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createCamundaOut(binding, value, bpmnFactory) {\n  const attrs = createCamundaInOutAttrs(binding, value);\n  return bpmnFactory.create('camunda:Out', attrs);\n}\n/**\n * Create camunda:executionListener element containing an inline script from given binding.\n *\n * @param {PropertyBinding} binding\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createCamundaExecutionListenerScript(binding, value, bpmnFactory) {\n  const {\n    event,\n    scriptFormat\n  } = binding;\n  let parameterValue, parameterDefinition;\n\n  if (scriptFormat) {\n    parameterDefinition = bpmnFactory.create('camunda:Script', {\n      scriptFormat,\n      value\n    });\n  } else {\n    parameterValue = value;\n  }\n\n  return bpmnFactory.create('camunda:ExecutionListener', {\n    event,\n    value: parameterValue,\n    script: parameterDefinition\n  });\n}\n/**\n * Create camunda:field element containing string or expression from given binding.\n *\n * @param {PropertyBinding} binding\n * @param {String} value\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createCamundaFieldInjection(binding, value, bpmnFactory) {\n  const DEFAULT_PROPS = {\n    'string': undefined,\n    'expression': undefined,\n    'name': undefined\n  };\n  const props = assign({}, DEFAULT_PROPS);\n  const {\n    expression,\n    name\n  } = binding;\n\n  if (!expression) {\n    props.string = value;\n  } else {\n    props.expression = value;\n  }\n\n  props.name = name;\n  return bpmnFactory.create('camunda:Field', props);\n}\n/**\n * Create camunda:errorEventDefinition element containing expression and errorRef\n * from given binding.\n *\n * @param {String} expression\n * @param {ModdleElement} errorRef\n * @param {ModdleElement} parent\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\n\nfunction createCamundaErrorEventDefinition(expression, errorRef, parent, bpmnFactory) {\n  const errorEventDefinition = bpmnFactory.create('camunda:ErrorEventDefinition', {\n    errorRef,\n    expression\n  });\n  errorEventDefinition.$parent = parent;\n  return errorEventDefinition;\n}\n/**\n * Create bpmn:error element containing a specific error id given by a binding.\n *\n * @param {String} bindingErrorRef\n * @param {ModdleElement} parent\n * @param {BpmnFactory} bpmnFactory\n *\n * @return { ModdleElement }\n */\n\nfunction createError(bindingErrorRef, parent, bpmnFactory) {\n  const error = bpmnFactory.create('bpmn:Error', {\n    // we need to later retrieve the error from a binding\n    id: nextId('Error_' + bindingErrorRef + '_')\n  });\n  error.$parent = parent;\n  return error;\n} // helpers //////////\n\n/**\n * Create properties for camunda:in and camunda:out types.\n */\n\nfunction createCamundaInOutAttrs(binding, value) {\n  const properties = {};\n  const {\n    expression,\n    source,\n    sourceExpression,\n    target,\n    type,\n    variables\n  } = binding; // explicitly cover all conditions as specified here:\n  // https://github.com/camunda/camunda-modeler/blob/develop/docs/element-templates/README.md#camundain\n\n  if (type === 'camunda:in') {\n    if (target && !expression && !variables) {\n      properties.target = target;\n      properties.source = value;\n    } else if (target && expression === true && !variables) {\n      properties.target = target;\n      properties.sourceExpression = value;\n    } else if (!target && !expression && variables === 'local') {\n      properties.local = true;\n      properties.variables = 'all';\n    } else if (target && !expression && variables === 'local') {\n      properties.local = true;\n      properties.source = value;\n      properties.target = target;\n    } else if (target && expression && variables === 'local') {\n      properties.local = true;\n      properties.sourceExpression = value;\n      properties.target = target;\n    } else if (!target && !expression && variables === 'all') {\n      properties.variables = 'all';\n    } else {\n      throw new Error('invalid configuration for camunda:in element template binding');\n    }\n  } // explicitly cover all conditions as specified here:\n  // https://github.com/camunda/camunda-modeler/blob/develop/docs/element-templates/README.md#camundaout\n\n\n  if (type === 'camunda:out') {\n    if (source && !sourceExpression && !variables) {\n      properties.target = value;\n      properties.source = source;\n    } else if (!source && sourceExpression && !variables) {\n      properties.target = value;\n      properties.sourceExpression = sourceExpression;\n    } else if (!source && !sourceExpression && variables === 'all') {\n      properties.variables = 'all';\n    } else if (source && !sourceExpression && variables === 'local') {\n      properties.local = true;\n      properties.source = source;\n      properties.target = value;\n    } else if (!source && sourceExpression && variables === 'local') {\n      properties.local = true;\n      properties.sourceExpression = sourceExpression;\n      properties.target = value;\n    } else if (!source && !sourceExpression && variables === 'local') {\n      properties.local = true;\n      properties.variables = 'all';\n    } else {\n      throw new Error('invalid configuration for camunda:out element template binding');\n    }\n  }\n\n  return properties;\n}\n\nconst CAMUNDA_SERVICE_TASK_LIKE = ['camunda:class', 'camunda:delegateExpression', 'camunda:expression'];\n/**\n * Applies an element template to an element. Sets `camunda:modelerTemplate` and\n * `camunda:modelerTemplateVersion`.\n */\n\nclass ChangeElementTemplateHandler {\n  constructor(bpmnFactory, bpmnReplace, commandStack, modeling) {\n    this._bpmnFactory = bpmnFactory;\n    this._bpmnReplace = bpmnReplace;\n    this._commandStack = commandStack;\n    this._modeling = modeling;\n  }\n  /**\n   * Change an element's template and update its properties as specified in `newTemplate`. Specify\n   * `oldTemplate` to update from one template to another. If `newTemplate` isn't specified the\n   * `camunda:modelerTemplate` and `camunda:modelerTemplateVersion` properties will be removed from\n   * the element.\n   *\n   * @param {Object} context\n   * @param {Object} context.element\n   * @param {Object} [context.oldTemplate]\n   * @param {Object} [context.newTemplate]\n   */\n\n\n  preExecute(context) {\n    const newTemplate = context.newTemplate,\n          oldTemplate = context.oldTemplate;\n    let element = context.element; // update camunda:modelerTemplate attribute\n\n    this._updateCamundaModelerTemplate(element, newTemplate);\n\n    if (newTemplate) {\n      element = context.element = this._updateTaskType(element, newTemplate); // update properties\n\n      this._updateProperties(element, oldTemplate, newTemplate); // update camunda:ExecutionListener properties\n\n\n      this._updateCamundaExecutionListenerProperties(element, newTemplate); // update camunda:Field properties\n\n\n      this._updateCamundaFieldProperties(element, oldTemplate, newTemplate); // update camunda:In and camunda:Out properties\n\n\n      this._updateCamundaInOutProperties(element, oldTemplate, newTemplate); // update camunda:InputParameter and camunda:OutputParameter properties\n\n\n      this._updateCamundaInputOutputParameterProperties(element, oldTemplate, newTemplate); // update camunda:Property properties\n\n\n      this._updateCamundaPropertyProperties(element, oldTemplate, newTemplate); // update camunda:ErrorEventDefinition properties\n\n\n      this._updateCamundaErrorEventDefinitionProperties(element, oldTemplate, newTemplate); // update properties for each scope\n\n\n      handleLegacyScopes(newTemplate.scopes).forEach(newScopeTemplate => {\n        this._updateScopeProperties(element, oldTemplate, newScopeTemplate, newTemplate);\n      });\n    }\n  }\n\n  _getOrCreateExtensionElements(element) {\n    const bpmnFactory = this._bpmnFactory,\n          modeling = this._modeling;\n    const businessObject = getBusinessObject(element);\n    let extensionElements = businessObject.get('extensionElements');\n\n    if (!extensionElements) {\n      extensionElements = bpmnFactory.create('bpmn:ExtensionElements', {\n        values: []\n      });\n      extensionElements.$parent = businessObject;\n      modeling.updateProperties(element, {\n        extensionElements: extensionElements\n      });\n    }\n\n    return extensionElements;\n  }\n  /**\n   * Update `camunda:ErrorEventDefinition` properties of specified business object. Event\n   * definitions can only exist in `bpmn:ExtensionElements`.\n   *\n   * Ensures an bpmn:Error exists for the event definition.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} oldTemplate\n   * @param {Object} newTemplate\n   */\n\n\n  _updateCamundaErrorEventDefinitionProperties(element, oldTemplate, newTemplate) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'camunda:errorEventDefinition';\n    }); // (1) do not override if no updates\n\n    if (!newProperties.length) {\n      return;\n    }\n\n    const extensionElements = this._getOrCreateExtensionElements(element);\n\n    const oldErrorEventDefinitions = findExtensions(element, ['camunda:ErrorEventDefinition']);\n    newProperties.forEach(newProperty => {\n      const oldProperty = findOldProperty(oldTemplate, newProperty),\n            oldEventDefinition = oldProperty && findOldBusinessObject(extensionElements, oldProperty),\n            newBinding = newProperty.binding; // (2) update old event definitions\n\n      if (oldProperty && oldEventDefinition) {\n        if (!propertyChanged(oldEventDefinition, oldProperty)) {\n          commandStack.execute('element.updateModdleProperties', {\n            element,\n            moddleElement: oldEventDefinition,\n            properties: {\n              expression: newProperty.value\n            }\n          });\n        }\n\n        remove(oldErrorEventDefinitions, oldEventDefinition);\n      } // (3) create new event definition + error\n      else {\n        const rootElement = getRoot(getBusinessObject(element)),\n              newError = createError(newBinding.errorRef, rootElement, bpmnFactory),\n              newEventDefinition = createCamundaErrorEventDefinition(newProperty.value, newError, extensionElements, bpmnFactory);\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: rootElement,\n          properties: {\n            rootElements: [...rootElement.get('rootElements'), newError]\n          }\n        });\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), newEventDefinition]\n          }\n        });\n      }\n    }); // (4) remove old event definitions\n\n    if (oldErrorEventDefinitions.length) {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: extensionElements,\n        properties: {\n          values: without(extensionElements.get('values'), value => oldErrorEventDefinitions.includes(value))\n        }\n      });\n    }\n  }\n  /**\n   * Update `camunda:ExecutionListener` properties of specified business object. Execution listeners\n   * will always be overridden. Execution listeners can only exist in `bpmn:ExtensionElements`.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} newTemplate\n   */\n\n\n  _updateCamundaExecutionListenerProperties(element, newTemplate) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'camunda:executionListener';\n    }); // (1) do not override old execution listeners if no new execution listeners specified\n\n    if (!newProperties.length) {\n      return;\n    }\n\n    const extensionElements = this._getOrCreateExtensionElements(element); // (2) remove old execution listeners\n\n\n    const oldExecutionListeners = findExtensions(element, ['camunda:ExecutionListener']); // (3) add new execution listeners\n\n    const newExecutionListeners = newProperties.map(newProperty => {\n      const newBinding = newProperty.binding,\n            propertyValue = newProperty.value;\n      return createCamundaExecutionListenerScript(newBinding, propertyValue, bpmnFactory);\n    });\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: extensionElements,\n      properties: {\n        values: [...without(extensionElements.get('values'), value => oldExecutionListeners.includes(value)), ...newExecutionListeners]\n      }\n    });\n  }\n  /**\n   * Update `camunda:Field` properties of specified business object.\n   * If business object is `camunda:ExecutionListener` or `camunda:TaskListener` `fields` property\n   * will be updated. Otherwise `extensionElements.values` property will be updated.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} oldTemplate\n   * @param {Object} newTemplate\n   * @param {ModdleElement} businessObject\n   */\n\n\n  _updateCamundaFieldProperties(element, oldTemplate, newTemplate, businessObject) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'camunda:field';\n    }); // (1) do not override old fields if no new fields specified\n\n    if (!newProperties.length) {\n      return;\n    }\n\n    if (!businessObject) {\n      businessObject = this._getOrCreateExtensionElements(element);\n    }\n\n    const propertyName = isAny(businessObject, ['camunda:ExecutionListener', 'camunda:TaskListener']) ? 'fields' : 'values';\n    const oldFields = findExtensions(element, ['camunda:Field']);\n    newProperties.forEach(newProperty => {\n      const oldProperty = findOldProperty(oldTemplate, newProperty),\n            oldField = oldProperty && findOldBusinessObject(businessObject, oldProperty),\n            newBinding = newProperty.binding; // (2) update old fields\n\n      if (oldProperty && oldField) {\n        if (!propertyChanged(oldField, oldProperty)) {\n          commandStack.execute('element.updateModdleProperties', {\n            element,\n            moddleElement: oldField,\n            properties: {\n              string: newProperty.value\n            }\n          });\n        }\n\n        remove(oldFields, oldField);\n      } // (3) add new fields\n      else {\n        const newCamundaFieldInjection = createCamundaFieldInjection(newBinding, newProperty.value, bpmnFactory);\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            [propertyName]: [...businessObject.get(propertyName), newCamundaFieldInjection]\n          }\n        });\n      }\n    }); // (4) remove old fields\n\n    if (oldFields.length) {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: businessObject,\n        properties: {\n          [propertyName]: without(businessObject.get(propertyName), value => oldFields.includes(value))\n        }\n      });\n    }\n  }\n  /**\n   * Update `camunda:In` and `camunda:Out` properties of specified business object. Only\n   * `bpmn:CallActivity` and events with `bpmn:SignalEventDefinition` can have ins. Only\n   * `camunda:CallActivity` can have outs.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} oldTemplate\n   * @param {Object} newTemplate\n   */\n\n\n  _updateCamundaInOutProperties(element, oldTemplate, newTemplate) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'camunda:in' || newBindingType === 'camunda:in:businessKey' || newBindingType === 'camunda:out';\n    }); // (1) do not override old fields if no new fields specified\n\n    if (!newProperties.length) {\n      return;\n    } // get extension elements of either signal event definition or call activity\n\n\n    const extensionElements = this._getOrCreateExtensionElements(getSignalEventDefinition(element) || element);\n\n    const oldInsAndOuts = findExtensions(extensionElements, ['camunda:In', 'camunda:Out']);\n    newProperties.forEach(newProperty => {\n      const oldProperty = findOldProperty(oldTemplate, newProperty),\n            oldBinding = oldProperty && oldProperty.binding,\n            oldInOurOut = oldProperty && findOldBusinessObject(extensionElements, oldProperty),\n            newPropertyValue = newProperty.value,\n            newBinding = newProperty.binding,\n            newBindingType = newBinding.type,\n            properties = {};\n      let newInOrOut; // (2) update old ins and outs\n\n      if (oldProperty && oldInOurOut) {\n        if (!propertyChanged(oldInOurOut, oldProperty)) {\n          if (newBindingType === 'camunda:in') {\n            if (newBinding.expression) {\n              properties['camunda:sourceExpression'] = newPropertyValue;\n            } else {\n              properties['camunda:source'] = newPropertyValue;\n            }\n          } else if (newBindingType === 'camunda:in:businessKey') {\n            properties['camunda:businessKey'] = newPropertyValue;\n          } else if (newBindingType === 'camunda:out') {\n            properties['camunda:target'] = newPropertyValue;\n          }\n        } // update camunda:local property if it changed\n\n\n        if (oldBinding.local && !newBinding.local || !oldBinding.local && newBinding.local) {\n          properties.local = newBinding.local;\n        }\n\n        if (keys(properties)) {\n          commandStack.execute('element.updateModdleProperties', {\n            element,\n            moddleElement: oldInOurOut,\n            properties\n          });\n        }\n\n        remove(oldInsAndOuts, oldInOurOut);\n      } // (3) add new ins and outs\n      else {\n        if (newBindingType === 'camunda:in') {\n          newInOrOut = createCamundaIn(newBinding, newPropertyValue, bpmnFactory);\n        } else if (newBindingType === 'camunda:out') {\n          newInOrOut = createCamundaOut(newBinding, newPropertyValue, bpmnFactory);\n        } else if (newBindingType === 'camunda:in:businessKey') {\n          newInOrOut = createCamundaInWithBusinessKey(newPropertyValue, bpmnFactory);\n        }\n\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...extensionElements.get('values'), newInOrOut]\n          }\n        });\n      }\n    }); // (4) remove old ins and outs\n\n    if (oldInsAndOuts.length) {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: extensionElements,\n        properties: {\n          values: without(extensionElements.get('values'), value => oldInsAndOuts.includes(value))\n        }\n      });\n    }\n  }\n  /**\n   * Update `camunda:InputParameter` and `camunda:OutputParameter` properties of specified business\n   * object. Both can only exist in `camunda:InputOutput` which can exist in `bpmn:ExtensionElements`\n   * or `camunda:Connector`.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} oldTemplate\n   * @param {Object} newTemplate\n   */\n\n\n  _updateCamundaInputOutputParameterProperties(element, oldTemplate, newTemplate, businessObject) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'camunda:inputParameter' || newBindingType === 'camunda:outputParameter';\n    }); // (1) do not override old inputs and outputs if no new inputs and outputs specified\n\n    if (!newProperties.length) {\n      return;\n    }\n\n    if (!businessObject) {\n      businessObject = this._getOrCreateExtensionElements(element);\n    }\n\n    let inputOutput;\n\n    if (is(businessObject, 'camunda:Connector')) {\n      inputOutput = businessObject.get('camunda:inputOutput');\n\n      if (!inputOutput) {\n        inputOutput = bpmnFactory.create('camunda:InputOutput');\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            inputOutput\n          }\n        });\n      }\n    } else {\n      inputOutput = findExtension(businessObject, 'camunda:InputOutput');\n\n      if (!inputOutput) {\n        inputOutput = bpmnFactory.create('camunda:InputOutput');\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: businessObject,\n          properties: {\n            values: [...businessObject.get('values'), inputOutput]\n          }\n        });\n      }\n    }\n\n    const oldInputs = inputOutput.get('camunda:inputParameters') ? inputOutput.get('camunda:inputParameters').slice() : [];\n    const oldOutputs = inputOutput.get('camunda:outputParameters') ? inputOutput.get('camunda:outputParameters').slice() : [];\n    let propertyName;\n    newProperties.forEach(newProperty => {\n      const oldProperty = findOldProperty(oldTemplate, newProperty),\n            oldInputOrOutput = oldProperty && findOldBusinessObject(businessObject, oldProperty),\n            newPropertyValue = newProperty.value,\n            newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      let newInputOrOutput, properties; // (2) update old inputs and outputs\n\n      if (oldProperty && oldInputOrOutput) {\n        if (!propertyChanged(oldInputOrOutput, oldProperty)) {\n          if (is(oldInputOrOutput, 'camunda:InputParameter')) {\n            properties = {\n              value: newPropertyValue\n            };\n          } else {\n            properties = {\n              name: newPropertyValue\n            };\n          }\n\n          commandStack.execute('element.updateModdleProperties', {\n            element,\n            moddleElement: oldInputOrOutput,\n            properties\n          });\n        }\n\n        if (is(oldInputOrOutput, 'camunda:InputParameter')) {\n          remove(oldInputs, oldInputOrOutput);\n        } else {\n          remove(oldOutputs, oldInputOrOutput);\n        }\n      } // (3) add new inputs and outputs\n      else {\n        if (newBindingType === 'camunda:inputParameter') {\n          propertyName = 'inputParameters';\n          newInputOrOutput = createInputParameter(newBinding, newPropertyValue, bpmnFactory);\n        } else {\n          propertyName = 'outputParameters';\n          newInputOrOutput = createOutputParameter(newBinding, newPropertyValue, bpmnFactory);\n        }\n\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: inputOutput,\n          properties: {\n            [propertyName]: [...inputOutput.get(propertyName), newInputOrOutput]\n          }\n        });\n      }\n    }); // (4) remove old inputs and outputs\n\n    if (oldInputs.length) {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: inputOutput,\n        properties: {\n          inputParameters: without(inputOutput.get('inputParameters'), inputParameter => oldInputs.includes(inputParameter))\n        }\n      });\n    }\n\n    if (oldOutputs.length) {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: inputOutput,\n        properties: {\n          outputParameters: without(inputOutput.get('outputParameters'), outputParameter => oldOutputs.includes(outputParameter))\n        }\n      });\n    }\n  }\n\n  _updateCamundaModelerTemplate(element, newTemplate) {\n    const modeling = this._modeling;\n    modeling.updateProperties(element, {\n      'camunda:modelerTemplate': newTemplate && newTemplate.id,\n      'camunda:modelerTemplateVersion': newTemplate && newTemplate.version\n    });\n  }\n  /**\n   * Update `camunda:Property` properties of specified business object. `camunda:Property` can only\n   * exist in `camunda:Properties`.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} oldTemplate\n   * @param {Object} newTemplate\n   * @param {ModdleElement} businessObject\n   */\n\n\n  _updateCamundaPropertyProperties(element, oldTemplate, newTemplate, businessObject) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'camunda:property';\n    }); // (1) do not override old properties if no new properties specified\n\n    if (!newProperties.length) {\n      return;\n    }\n\n    if (businessObject) {\n      businessObject = this._getOrCreateExtensionElements(businessObject);\n    } else {\n      businessObject = this._getOrCreateExtensionElements(element);\n    }\n\n    let camundaProperties = findExtension(businessObject, 'camunda:Properties');\n\n    if (!camundaProperties) {\n      camundaProperties = bpmnFactory.create('camunda:Properties');\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: businessObject,\n        properties: {\n          values: [...businessObject.get('values'), camundaProperties]\n        }\n      });\n    }\n\n    const oldCamundaProperties = camundaProperties.get('camunda:values') ? camundaProperties.get('camunda:values').slice() : [];\n    newProperties.forEach(newProperty => {\n      const oldProperty = findOldProperty(oldTemplate, newProperty),\n            oldCamundaProperty = oldProperty && findOldBusinessObject(businessObject, oldProperty),\n            newPropertyValue = newProperty.value,\n            newBinding = newProperty.binding; // (2) update old properties\n\n      if (oldProperty && oldCamundaProperty) {\n        if (!propertyChanged(oldCamundaProperty, oldProperty)) {\n          commandStack.execute('element.updateModdleProperties', {\n            element,\n            moddleElement: oldCamundaProperty,\n            properties: {\n              value: newPropertyValue\n            }\n          });\n        }\n\n        remove(oldCamundaProperties, oldCamundaProperty);\n      } // (3) add new properties\n      else {\n        const newCamundaProperty = createCamundaProperty(newBinding, newPropertyValue, bpmnFactory);\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: camundaProperties,\n          properties: {\n            values: [...camundaProperties.get('values'), newCamundaProperty]\n          }\n        });\n      }\n    }); // (4) remove old properties\n\n    if (oldCamundaProperties.length) {\n      commandStack.execute('element.updateModdleProperties', {\n        element,\n        moddleElement: camundaProperties,\n        properties: {\n          values: without(camundaProperties.get('values'), value => oldCamundaProperties.includes(value))\n        }\n      });\n    }\n  }\n  /**\n   * Update `bpmn:conditionExpression` property of specified element. Since condition expression is\n   * is not primitive it needs special handling.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} oldProperty\n   * @param {Object} newProperty\n   */\n\n\n  _updateConditionExpression(element, oldProperty, newProperty) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack,\n          modeling = this._modeling;\n    const newBinding = newProperty.binding,\n          newPropertyValue = newProperty.value;\n\n    if (!oldProperty) {\n      modeling.updateProperties(element, {\n        conditionExpression: bpmnFactory.create('bpmn:FormalExpression', {\n          body: newPropertyValue,\n          language: newBinding.scriptFormat\n        })\n      });\n      return;\n    }\n\n    const oldBinding = oldProperty.binding,\n          oldPropertyValue = oldProperty.value;\n    const businessObject = getBusinessObject(element),\n          conditionExpression = businessObject.get('bpmn:conditionExpression');\n    const properties = {};\n\n    if (conditionExpression.get('body') === oldPropertyValue) {\n      properties.body = newPropertyValue;\n    }\n\n    if (conditionExpression.get('language') === oldBinding.scriptFormat) {\n      properties.language = newBinding.scriptFormat;\n    }\n\n    if (!keys(properties).length) {\n      return;\n    }\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: conditionExpression,\n      properties\n    });\n  }\n\n  _updateProperties(element, oldTemplate, newTemplate, businessObject) {\n    const commandStack = this._commandStack;\n    const newProperties = newTemplate.properties.filter(newProperty => {\n      const newBinding = newProperty.binding,\n            newBindingType = newBinding.type;\n      return newBindingType === 'property';\n    });\n\n    if (!newProperties.length) {\n      return;\n    }\n\n    if (!businessObject) {\n      businessObject = getBusinessObject(element);\n    }\n\n    newProperties.forEach(newProperty => {\n      const oldProperty = findOldProperty(oldTemplate, newProperty),\n            newBinding = newProperty.binding,\n            newBindingName = newBinding.name,\n            newPropertyValue = newProperty.value;\n      let changedElement, properties;\n\n      if (newBindingName === 'conditionExpression') {\n        this._updateConditionExpression(element, oldProperty, newProperty);\n      } else {\n        if (is(businessObject, 'bpmn:Error')) {\n          changedElement = businessObject;\n        } else {\n          changedElement = element;\n        }\n\n        if (oldProperty && propertyChanged(changedElement, oldProperty)) {\n          return;\n        }\n\n        properties = {};\n        properties[newBindingName] = newPropertyValue; // only one of `camunda:class`, `camunda:delegateExpression` and `camunda:expression` can be set\n        // TODO(philippfromme): ensuring only one of these properties is set at a time should be\n        // implemented in a behavior and not in this handler and properties panel UI\n\n        if (CAMUNDA_SERVICE_TASK_LIKE.indexOf(newBindingName) !== -1) {\n          CAMUNDA_SERVICE_TASK_LIKE.forEach(camundaServiceTaskLikeProperty => {\n            if (camundaServiceTaskLikeProperty !== newBindingName) {\n              properties[camundaServiceTaskLikeProperty] = undefined;\n            }\n          });\n        }\n\n        commandStack.execute('element.updateModdleProperties', {\n          element,\n          moddleElement: businessObject,\n          properties\n        });\n      }\n    });\n  }\n  /**\n   * Update properties for a specified scope.\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} oldTemplate\n   * @param {Object} newScopeTemplate\n   * @param {Object} newTemplate\n   */\n\n\n  _updateScopeProperties(element, oldTemplate, newScopeTemplate, newTemplate) {\n    const bpmnFactory = this._bpmnFactory,\n          commandStack = this._commandStack;\n    const scopeName = newScopeTemplate.type;\n    let scopeElement;\n    scopeElement = findOldScopeElement(element, newScopeTemplate, newTemplate);\n\n    if (!scopeElement) {\n      scopeElement = bpmnFactory.create(scopeName);\n    }\n\n    const oldScopeTemplate = findOldScopeTemplate(newScopeTemplate, oldTemplate); // update properties\n\n    this._updateProperties(element, oldScopeTemplate, newScopeTemplate, scopeElement); // update camunda:ExecutionListener properties\n\n\n    this._updateCamundaExecutionListenerProperties(element, newScopeTemplate); // update camunda:In and camunda:Out properties\n\n\n    this._updateCamundaInOutProperties(element, oldScopeTemplate, newScopeTemplate); // update camunda:InputParameter and camunda:OutputParameter properties\n\n\n    this._updateCamundaInputOutputParameterProperties(element, oldScopeTemplate, newScopeTemplate, scopeElement); // update camunda:Field properties\n\n\n    this._updateCamundaFieldProperties(element, oldScopeTemplate, newScopeTemplate, scopeElement); // update camunda:Property properties\n\n\n    this._updateCamundaPropertyProperties(element, oldScopeTemplate, newScopeTemplate, scopeElement); // assume that root elements were already created in root by referenced event definition binding\n\n\n    if (isRootElementScope(scopeName)) {\n      return;\n    }\n\n    const extensionElements = this._getOrCreateExtensionElements(element);\n\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: extensionElements,\n      properties: {\n        values: [...extensionElements.get('values'), scopeElement]\n      }\n    });\n  }\n  /**\n   * Replaces the element with the specified elementType\n   *\n   * @param {djs.model.Base} element\n   * @param {Object} newTemplate\n   */\n\n\n  _updateTaskType(element, newTemplate) {\n    // determine new task type\n    const newType = newTemplate.elementType;\n\n    if (!newType) {\n      return element;\n    } // don't replace Task that is already the correct type\n\n\n    if (element.$type === newType.value) {\n      return element;\n    }\n\n    return this._bpmnReplace.replaceElement(element, {\n      type: newType.value\n    });\n  }\n\n}\nChangeElementTemplateHandler.$inject = ['bpmnFactory', 'bpmnReplace', 'commandStack', 'modeling']; // helpers //////////\n\n/**\n * Find old business object matching specified old property.\n *\n * @param {djs.model.Base|ModdleElement} element\n * @param {Object} oldProperty\n *\n * @returns {ModdleElement}\n */\n\nfunction findOldBusinessObject(element, oldProperty) {\n  let businessObject = getBusinessObject(element),\n      propertyName;\n  const oldBinding = oldProperty.binding,\n        oldBindingType = oldBinding.type;\n\n  if (oldBindingType === 'camunda:field') {\n    if (isAny(businessObject, ['camunda:ExecutionListener', 'camunda:TaskListener'])) {\n      propertyName = 'camunda:fields';\n    } else {\n      propertyName = 'bpmn:values';\n    }\n\n    if (!businessObject || !businessObject.get(propertyName) || !businessObject.get(propertyName).length) {\n      return;\n    }\n\n    return find(businessObject.get(propertyName), function (oldBusinessObject) {\n      return oldBusinessObject.get('camunda:name') === oldBinding.name;\n    });\n  }\n\n  if (oldBindingType === 'camunda:in') {\n    return find(businessObject.get('values'), function (oldBusinessObject) {\n      return oldBusinessObject.get('target') === oldBinding.target;\n    });\n  }\n\n  if (oldBindingType === 'camunda:in:businessKey') {\n    return find(businessObject.get('values'), function (oldBusinessObject) {\n      return isString(oldBusinessObject.get('businessKey'));\n    });\n  }\n\n  if (oldBindingType === 'camunda:out') {\n    return find(businessObject.get('values'), function (oldBusinessObject) {\n      return oldBusinessObject.get('source') === oldBinding.source || oldBusinessObject.get('sourceExpression') || oldBinding.sourceExpression;\n    });\n  }\n\n  if (oldBindingType === 'camunda:inputParameter' || oldBindingType === 'camunda:outputParameter') {\n    if (is(businessObject, 'camunda:Connector')) {\n      businessObject = businessObject.get('camunda:inputOutput');\n\n      if (!businessObject) {\n        return;\n      }\n    } else {\n      businessObject = findExtension(businessObject, 'camunda:InputOutput');\n\n      if (!businessObject) {\n        return;\n      }\n    }\n\n    if (oldBindingType === 'camunda:inputParameter') {\n      return find(businessObject.get('camunda:inputParameters'), function (oldBusinessObject) {\n        return oldBusinessObject.get('camunda:name') === oldBinding.name;\n      });\n    } else {\n      return find(businessObject.get('camunda:outputParameters'), function (oldBusinessObject) {\n        if (oldBinding.scriptFormat) {\n          const definition = oldBusinessObject.get('camunda:definition');\n          return definition && definition.get('camunda:value') === oldBinding.source;\n        } else {\n          return oldBusinessObject.get('camunda:value') === oldBinding.source;\n        }\n      });\n    }\n  }\n\n  if (oldBindingType === 'camunda:property') {\n    if (!businessObject || !businessObject.get('values') || !businessObject.get('values').length) {\n      return;\n    }\n\n    businessObject = findExtension(businessObject, 'camunda:Properties');\n\n    if (!businessObject) {\n      return;\n    }\n\n    return find(businessObject.get('values'), function (oldBusinessObject) {\n      return oldBusinessObject.get('camunda:name') === oldBinding.name;\n    });\n  }\n\n  if (oldBindingType === 'camunda:errorEventDefinition') {\n    return findCamundaErrorEventDefinition(element, oldBinding.errorRef);\n  }\n}\n/**\n * Find old property matching specified new property.\n *\n * @param {Object} oldTemplate\n * @param {Object} newProperty\n *\n * @returns {Object}\n */\n\n\nfunction findOldProperty(oldTemplate, newProperty) {\n  if (!oldTemplate) {\n    return;\n  }\n\n  const oldProperties = oldTemplate.properties,\n        newBinding = newProperty.binding,\n        newBindingName = newBinding.name,\n        newBindingType = newBinding.type;\n\n  if (newBindingType === 'property') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingName = oldBinding.name,\n            oldBindingType = oldBinding.type;\n      return oldBindingType === 'property' && oldBindingName === newBindingName;\n    });\n  }\n\n  if (newBindingType === 'camunda:field') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingName = oldBinding.name,\n            oldBindingType = oldBinding.type;\n      return oldBindingType === 'camunda:field' && oldBindingName === newBindingName;\n    });\n  }\n\n  if (newBindingType === 'camunda:in') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingType = oldBinding.type;\n\n      if (oldBindingType !== 'camunda:in') {\n        return;\n      } // always override if change from source to source expression or vice versa\n\n\n      if (oldBinding.expression && !newBinding.expression || !oldBinding.expression && newBinding.expression) {\n        return;\n      }\n\n      return oldBinding.target === newBinding.target;\n    });\n  }\n\n  if (newBindingType === 'camunda:in:businessKey') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingType = oldBinding.type;\n      return oldBindingType === 'camunda:in:businessKey';\n    });\n  }\n\n  if (newBindingType === 'camunda:out') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingType = oldBinding.type;\n      return oldBindingType === 'camunda:out' && (oldBinding.source === newBinding.source || oldBinding.sourceExpression === newBinding.sourceExpression);\n    });\n  }\n\n  if (newBindingType === 'camunda:inputParameter') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingName = oldBinding.name,\n            oldBindingType = oldBinding.type;\n\n      if (oldBindingType !== 'camunda:inputParameter') {\n        return;\n      }\n\n      return oldBindingName === newBindingName && oldBinding.scriptFormat === newBinding.scriptFormat;\n    });\n  }\n\n  if (newBindingType === 'camunda:outputParameter') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingType = oldBinding.type;\n\n      if (oldBindingType !== 'camunda:outputParameter') {\n        return;\n      }\n\n      return oldBinding.source === newBinding.source && oldBinding.scriptFormat === newBinding.scriptFormat;\n    });\n  }\n\n  if (newBindingType === 'camunda:property') {\n    return find(oldProperties, function (oldProperty) {\n      const oldBinding = oldProperty.binding,\n            oldBindingName = oldBinding.name,\n            oldBindingType = oldBinding.type;\n      return oldBindingType === 'camunda:property' && oldBindingName === newBindingName;\n    });\n  }\n\n  if (newBindingType === 'camunda:errorEventDefinition') {\n    return find(oldProperties, function (oldProperty) {\n      const newBindingRef = newBinding.errorRef,\n            oldBinding = oldProperty.binding,\n            oldBindingRef = oldBinding.errorRef,\n            oldBindingType = oldBinding.type;\n      return oldBindingType === 'camunda:errorEventDefinition' && oldBindingRef === newBindingRef;\n    });\n  }\n}\n\nfunction findOldScopeElement(element, scopeTemplate, template) {\n  const scopeName = scopeTemplate.type,\n        id = scopeTemplate.id;\n\n  if (scopeName === 'camunda:Connector') {\n    return findExtension(element, 'camunda:Connector');\n  }\n\n  if (scopeName === 'bpmn:Error') {\n    // (1) find by error event definition binding\n    const errorEventDefinitionBinding = findErrorEventDefinitionBinding(template, id);\n\n    if (!errorEventDefinitionBinding) {\n      return;\n    } // (2) find error event definition\n\n\n    const errorEventDefinition = findOldBusinessObject(element, errorEventDefinitionBinding);\n\n    if (!errorEventDefinition) {\n      return;\n    } // (3) retrieve referenced error\n\n\n    return errorEventDefinition.errorRef;\n  }\n}\n\nfunction isRootElementScope(scopeName) {\n  return ['bpmn:Error'].includes(scopeName);\n}\n\nfunction findOldScopeTemplate(scopeTemplate, oldTemplate) {\n  const scopeName = scopeTemplate.type,\n        scopeId = scopeTemplate.id,\n        scopes = oldTemplate && handleLegacyScopes(oldTemplate.scopes);\n  return scopes && find(scopes, function (scope) {\n    if (isRootElementScope(scopeName)) {\n      return scope.id === scopeId;\n    }\n\n    return scope.type === scopeName;\n  });\n}\n\nfunction findErrorEventDefinitionBinding(template, templateErrorId) {\n  return find(template.properties, function (property) {\n    return property.binding.errorRef === templateErrorId;\n  });\n}\n/**\n * Check whether property was changed after being set by template.\n *\n * @param {djs.model.Base|ModdleElement} element\n * @param {Object} oldProperty\n *\n * @returns {boolean}\n */\n\n\nfunction propertyChanged(element, oldProperty) {\n  const businessObject = getBusinessObject(element);\n  const oldBinding = oldProperty.binding,\n        oldBindingName = oldBinding.name,\n        oldBindingType = oldBinding.type,\n        oldPropertyValue = oldProperty.value;\n  let conditionExpression, definition;\n\n  if (oldBindingType === 'property') {\n    if (oldBindingName === 'conditionExpression') {\n      conditionExpression = businessObject.get('bpmn:conditionExpression');\n      return conditionExpression.get('bpmn:body') !== oldPropertyValue;\n    }\n\n    return businessObject.get(oldBindingName) !== oldPropertyValue;\n  }\n\n  if (oldBindingType === 'camunda:field') {\n    return businessObject.get('camunda:string') !== oldPropertyValue;\n  }\n\n  if (oldBindingType === 'camunda:in') {\n    if (oldBinding.expression) {\n      return businessObject.get('sourceExpression') !== oldPropertyValue;\n    } else {\n      return businessObject.get('camunda:source') !== oldPropertyValue;\n    }\n  }\n\n  if (oldBindingType === 'camunda:in:businessKey') {\n    return businessObject.get('camunda:businessKey') !== oldPropertyValue;\n  }\n\n  if (oldBindingType === 'camunda:out') {\n    return businessObject.get('camunda:target') !== oldPropertyValue;\n  }\n\n  if (oldBindingType === 'camunda:inputParameter') {\n    if (oldBinding.scriptFormat) {\n      definition = businessObject.get('camunda:definition');\n      return definition && definition.get('camunda:value') !== oldPropertyValue;\n    } else {\n      return businessObject.get('camunda:value') !== oldPropertyValue;\n    }\n  }\n\n  if (oldBindingType === 'camunda:outputParameter') {\n    return businessObject.get('camunda:name') !== oldPropertyValue;\n  }\n\n  if (oldBindingType === 'camunda:property') {\n    return businessObject.get('camunda:value') !== oldPropertyValue;\n  }\n\n  if (oldBindingType === 'camunda:errorEventDefinition') {\n    return businessObject.get('expression') !== oldPropertyValue;\n  }\n}\n\nfunction remove(array, item) {\n  const index = array.indexOf(item);\n\n  if (isUndefined(index)) {\n    return array;\n  }\n\n  array.splice(index, 1);\n  return array;\n}\n\nfunction registerHandlers(commandStack, elementTemplates, eventBus) {\n  commandStack.registerHandler('propertiesPanel.camunda.changeTemplate', ChangeElementTemplateHandler); // apply default element templates on shape creation\n\n  eventBus.on(['commandStack.shape.create.postExecuted'], function (context) {\n    applyDefaultTemplate(context.context.shape, elementTemplates, commandStack);\n  }); // apply default element templates on connection creation\n\n  eventBus.on(['commandStack.connection.create.postExecuted'], function (context) {\n    applyDefaultTemplate(context.context.connection, elementTemplates, commandStack);\n  });\n}\n\nregisterHandlers.$inject = ['commandStack', 'elementTemplates', 'eventBus'];\nvar commandsModule = {\n  __init__: [registerHandlers]\n};\n\nfunction applyDefaultTemplate(element, elementTemplates, commandStack) {\n  if (!elementTemplates.get(element) && elementTemplates.getDefault(element)) {\n    const command = 'propertiesPanel.camunda.changeTemplate';\n    const commandContext = {\n      element: element,\n      newTemplate: elementTemplates.getDefault(element)\n    };\n    commandStack.execute(command, commandContext);\n  }\n}\n\nconst CAMUNDA_ERROR_EVENT_DEFINITION_TYPE$1 = 'camunda:errorEventDefinition';\nconst CAMUNDA_EXECUTION_LISTENER_TYPE = 'camunda:executionListener';\nconst CAMUNDA_FIELD_TYPE = 'camunda:field';\nconst CAMUNDA_IN_BUSINESS_KEY_TYPE = 'camunda:in:businessKey';\nconst CAMUNDA_IN_TYPE = 'camunda:in';\nconst CAMUNDA_INPUT_PARAMETER_TYPE$1 = 'camunda:inputParameter';\nconst CAMUNDA_OUT_TYPE = 'camunda:out';\nconst CAMUNDA_OUTPUT_PARAMETER_TYPE$1 = 'camunda:outputParameter';\nconst CAMUNDA_PROPERTY_TYPE = 'camunda:property';\nconst PROPERTY_TYPE = 'property';\nconst EXTENSION_BINDING_TYPES = [CAMUNDA_ERROR_EVENT_DEFINITION_TYPE$1, CAMUNDA_FIELD_TYPE, CAMUNDA_IN_TYPE, CAMUNDA_IN_BUSINESS_KEY_TYPE, CAMUNDA_INPUT_PARAMETER_TYPE$1, CAMUNDA_OUT_TYPE, CAMUNDA_OUTPUT_PARAMETER_TYPE$1, CAMUNDA_PROPERTY_TYPE];\nconst IO_BINDING_TYPES = [CAMUNDA_INPUT_PARAMETER_TYPE$1, CAMUNDA_OUTPUT_PARAMETER_TYPE$1];\nconst IN_OUT_BINDING_TYPES = [CAMUNDA_IN_BUSINESS_KEY_TYPE, CAMUNDA_IN_TYPE, CAMUNDA_OUT_TYPE];\n\nconst PRIMITIVE_MODDLE_TYPES = ['Boolean', 'Integer', 'String'];\nconst DEFAULT_CUSTOM_GROUP = {\n  id: 'ElementTemplates__CustomProperties',\n  label: 'Custom properties'\n};\nfunction CustomProperties(props) {\n  const {\n    element,\n    elementTemplate\n  } = props;\n  const groups = [];\n  const {\n    id,\n    properties,\n    groups: propertyGroups,\n    scopes\n  } = elementTemplate; // (1) group properties by group id\n\n  const groupedProperties = groupByGroupId(properties);\n  const defaultProps = [];\n  forEach(groupedProperties, (properties, groupId) => {\n    const group = findCustomGroup(propertyGroups, groupId);\n\n    if (!group) {\n      return defaultProps.push(...properties);\n    }\n\n    addCustomGroup(groups, {\n      element,\n      id: `ElementTemplates__CustomProperties-${groupId}`,\n      label: group.label,\n      properties: properties,\n      templateId: `${id}-${groupId}`\n    });\n  }); // (2) add default custom props\n\n  if (defaultProps.length) {\n    addCustomGroup(groups, { ...DEFAULT_CUSTOM_GROUP,\n      element,\n      properties: defaultProps,\n      templateId: id\n    });\n  } // (3) add custom scopes props\n\n\n  if (isArray(scopes)) {\n    scopes.forEach(scope => {\n      const {\n        properties,\n        type\n      } = scope;\n      const id = type.replace(/:/g, '-');\n      addCustomGroup(groups, {\n        element,\n        id: `ElementTemplates__CustomGroup-${id}`,\n        label: `Custom properties for scope <${type}>`,\n        properties,\n        templateId: id,\n        scope\n      });\n    });\n  }\n\n  return groups;\n}\n\nfunction addCustomGroup(groups, props) {\n  const {\n    element,\n    id,\n    label,\n    properties,\n    scope,\n    templateId\n  } = props;\n  const customPropertiesGroup = {\n    id,\n    label,\n    component: Group,\n    entries: [],\n    shouldOpen: true\n  };\n  properties.forEach((property, index) => {\n    const entry = createCustomEntry(`custom-entry-${templateId}-${index}`, element, property, scope);\n\n    if (entry) {\n      customPropertiesGroup.entries.push(entry);\n    }\n  });\n\n  if (customPropertiesGroup.entries.length) {\n    groups.push(customPropertiesGroup);\n  }\n}\n\nfunction createCustomEntry(id, element, property, scope) {\n  let {\n    type\n  } = property;\n\n  if (!type) {\n    type = getDefaultType(property);\n  }\n\n  if (type === 'Boolean') {\n    return {\n      id,\n      component: BooleanProperty,\n      isEdited: isCheckboxEntryEdited,\n      property,\n      scope\n    };\n  }\n\n  if (type === 'Dropdown') {\n    return {\n      id,\n      component: DropdownProperty,\n      isEdited: isSelectEntryEdited,\n      property,\n      scope\n    };\n  }\n\n  if (type === 'String') {\n    return {\n      id,\n      component: StringProperty,\n      isEdited: isTextFieldEntryEdited,\n      property,\n      scope\n    };\n  }\n\n  if (type === 'Text') {\n    return {\n      id,\n      component: TextAreaProperty,\n      isEdited: isTextAreaEntryEdited,\n      property,\n      scope\n    };\n  }\n}\n\nfunction getDefaultType(property) {\n  const {\n    binding\n  } = property;\n  const {\n    type\n  } = binding;\n\n  if ([PROPERTY_TYPE, CAMUNDA_PROPERTY_TYPE, CAMUNDA_IN_TYPE, CAMUNDA_IN_BUSINESS_KEY_TYPE, CAMUNDA_OUT_TYPE, CAMUNDA_FIELD_TYPE].includes(type)) {\n    return 'String';\n  }\n\n  if (type === CAMUNDA_EXECUTION_LISTENER_TYPE) {\n    return 'Hidden';\n  }\n}\n\nfunction BooleanProperty(props) {\n  const {\n    element,\n    id,\n    property,\n    scope\n  } = props;\n  const {\n    description,\n    editable,\n    label\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack');\n  return CheckboxEntry({\n    element,\n    getValue: propertyGetter(element, property, scope),\n    id,\n    label,\n    description: PropertyDescription({\n      description\n    }),\n    setValue: propertySetter(bpmnFactory, commandStack, element, property, scope),\n    disabled: editable === false\n  });\n}\n\nfunction DropdownProperty(props) {\n  const {\n    element,\n    id,\n    property,\n    scope\n  } = props;\n  const {\n    description,\n    editable,\n    label\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack');\n\n  const getOptions = () => {\n    const {\n      choices\n    } = property;\n    return choices.map(({\n      name,\n      value\n    }) => {\n      return {\n        label: name,\n        value\n      };\n    });\n  };\n\n  return SelectEntry({\n    element,\n    id,\n    label,\n    getOptions,\n    description: PropertyDescription({\n      description\n    }),\n    getValue: propertyGetter(element, property, scope),\n    setValue: propertySetter(bpmnFactory, commandStack, element, property, scope),\n    disabled: editable === false\n  });\n}\n\nfunction StringProperty(props) {\n  const {\n    element,\n    id,\n    property,\n    scope\n  } = props;\n  const {\n    description,\n    editable,\n    label\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack'),\n        debounce = useService('debounceInput'),\n        translate = useService('translate');\n  return TextFieldEntry({\n    debounce,\n    element,\n    getValue: propertyGetter(element, property, scope),\n    id,\n    label,\n    description: PropertyDescription({\n      description\n    }),\n    setValue: propertySetter(bpmnFactory, commandStack, element, property, scope),\n    validate: propertyValidator(translate, property),\n    disabled: editable === false\n  });\n}\n\nfunction TextAreaProperty(props) {\n  const {\n    element,\n    id,\n    property,\n    scope\n  } = props;\n  const {\n    description,\n    editable,\n    label\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        commandStack = useService('commandStack'),\n        debounce = useService('debounceInput');\n  return TextAreaEntry({\n    debounce,\n    element,\n    id,\n    label,\n    description: PropertyDescription({\n      description\n    }),\n    getValue: propertyGetter(element, property, scope),\n    setValue: propertySetter(bpmnFactory, commandStack, element, property, scope),\n    disabled: editable === false\n  });\n}\n\nfunction propertyGetter(element, property, scope) {\n  return function getValue() {\n    let businessObject = getBusinessObject(element);\n    const {\n      binding,\n      value: defaultValue = ''\n    } = property;\n    const {\n      name,\n      type\n    } = binding;\n\n    if (scope) {\n      businessObject = getScopeBusinessObject(businessObject, scope);\n\n      if (!businessObject) {\n        return defaultValue;\n      }\n    } // property\n\n\n    if (type === 'property') {\n      const value = businessObject.get(name);\n\n      if (name === 'conditionExpression') {\n        if (value) {\n          return value.get('body');\n        }\n\n        return defaultValue;\n      } else {\n        if (!isUndefined(value)) {\n          return value;\n        }\n\n        return defaultValue;\n      }\n    } // camunda:ErrorEventDefinition\n\n\n    if (type === CAMUNDA_ERROR_EVENT_DEFINITION_TYPE$1) {\n      const {\n        errorRef\n      } = binding;\n      const errorEventDefinition = findCamundaErrorEventDefinition(businessObject, errorRef);\n\n      if (errorEventDefinition) {\n        return errorEventDefinition.get('camunda:expression');\n      } else {\n        return '';\n      }\n    } // camunda:Field\n\n\n    if (type === CAMUNDA_FIELD_TYPE) {\n      const camundaFields = findExtensions(businessObject, ['camunda:Field']);\n      const camundaField = camundaFields.find(camundaField => {\n        return camundaField.get('camunda:name') === name;\n      });\n\n      if (camundaField) {\n        return camundaField.get('camunda:string') || camundaField.get('camunda:expression');\n      } else {\n        return '';\n      }\n    } // camunda:Property\n\n\n    if (type === CAMUNDA_PROPERTY_TYPE) {\n      let camundaProperties;\n\n      if (scope) {\n        // TODO(philippfromme): as ony bpmn:Error and camunda:Connector are supported this code is practically dead\n        camundaProperties = businessObject.get('properties');\n      } else {\n        camundaProperties = findExtension(businessObject, 'camunda:Properties');\n      }\n\n      if (camundaProperties) {\n        const camundaProperty = findCamundaProperty(camundaProperties, binding);\n\n        if (camundaProperty) {\n          return camundaProperty.get('camunda:value');\n        }\n      }\n\n      return defaultValue;\n    }\n\n    if (IO_BINDING_TYPES.includes(type)) {\n      let inputOutput;\n\n      if (scope) {\n        inputOutput = businessObject.get('inputOutput');\n      } else {\n        inputOutput = findExtension(businessObject, 'camunda:InputOutput');\n      }\n\n      if (!inputOutput) {\n        return defaultValue;\n      } // camunda:InputParameter\n\n\n      if (type === CAMUNDA_INPUT_PARAMETER_TYPE$1) {\n        const inputParameter = findInputParameter(inputOutput, binding);\n\n        if (inputParameter) {\n          const {\n            scriptFormat\n          } = binding;\n\n          if (scriptFormat) {\n            const definition = inputParameter.get('camunda:definition');\n\n            if (definition) {\n              return definition.get('camunda:value');\n            }\n          } else {\n            return inputParameter.get('value') || '';\n          }\n        }\n\n        return defaultValue;\n      } // camunda:OutputParameter\n\n\n      if (type === CAMUNDA_OUTPUT_PARAMETER_TYPE$1) {\n        const outputParameter = findOutputParameter(inputOutput, binding);\n\n        if (outputParameter) {\n          return outputParameter.get('camunda:name');\n        }\n\n        return defaultValue;\n      }\n    } // camunda:In and camunda:Out\n\n\n    if (IN_OUT_BINDING_TYPES.includes(type)) {\n      const camundaInOut = findCamundaInOut(businessObject, binding);\n\n      if (camundaInOut) {\n        if (type === CAMUNDA_IN_BUSINESS_KEY_TYPE) {\n          return camundaInOut.get('camunda:businessKey');\n        } else if (type === CAMUNDA_OUT_TYPE) {\n          return camundaInOut.get('camunda:target');\n        } else if (type === CAMUNDA_IN_TYPE) {\n          const {\n            expression\n          } = binding;\n\n          if (expression) {\n            return camundaInOut.get('camunda:sourceExpression');\n          } else {\n            return camundaInOut.get('camunda:source');\n          }\n        }\n      }\n\n      return defaultValue;\n    } // should never throw as templates are validated beforehand\n\n\n    throw unknownBindingError(element, property);\n  };\n}\n\nfunction propertySetter(bpmnFactory, commandStack, element, property, scope) {\n  return function setValue(value) {\n    let businessObject = getBusinessObject(element);\n    const {\n      binding\n    } = property;\n    const {\n      name,\n      type\n    } = binding;\n    const rootElement = getRoot(businessObject);\n    let extensionElements;\n    let propertyValue;\n    const commands = [];\n\n    if (EXTENSION_BINDING_TYPES.includes(type)) {\n      extensionElements = businessObject.get('extensionElements');\n\n      if (!extensionElements) {\n        extensionElements = createElement('bpmn:ExtensionElements', null, businessObject, bpmnFactory);\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: {\n            element,\n            moddleElement: businessObject,\n            properties: {\n              extensionElements\n            }\n          }\n        });\n      }\n    }\n\n    if (scope) {\n      businessObject = getScopeBusinessObject(businessObject, scope);\n\n      if (!businessObject) {\n        // bpmn:Error\n        if (scope.type === 'bpmn:Error') {\n          businessObject = createError(scope.id, rootElement, bpmnFactory);\n          commands.push({\n            cmd: 'element.updateModdleProperties',\n            context: {\n              element,\n              moddleElement: rootElement,\n              properties: {\n                rootElements: [...rootElement.get('rootElements'), businessObject]\n              }\n            }\n          });\n        } else {\n          businessObject = createElement(scope.type, null, element, bpmnFactory);\n          commands.push({\n            cmd: 'element.updateModdleProperties',\n            context: {\n              element,\n              moddleElement: extensionElements,\n              properties: {\n                values: [...extensionElements.get('values'), businessObject]\n              }\n            }\n          });\n        }\n      }\n    } // property\n\n\n    if (type === 'property') {\n      if (name === 'conditionExpression') {\n        const {\n          scriptFormat\n        } = binding;\n        propertyValue = createElement('bpmn:FormalExpression', {\n          body: value,\n          language: scriptFormat\n        }, businessObject, bpmnFactory);\n      } else {\n        const propertyDescriptor = businessObject.$descriptor.propertiesByName[name];\n        const {\n          type: propertyType\n        } = propertyDescriptor; // do not override non-primitive types\n\n        if (!PRIMITIVE_MODDLE_TYPES.includes(propertyType)) {\n          throw new Error(`cannot set property of type <${propertyType}>`);\n        }\n\n        if (propertyType === 'Boolean') {\n          propertyValue = !!value;\n        } else if (propertyType === 'Integer') {\n          propertyValue = parseInt(value, 10);\n\n          if (isNaN(propertyValue)) {\n            // do not set NaN value\n            propertyValue = undefined;\n          }\n        } else {\n          // make sure we don't remove the property\n          propertyValue = value || '';\n        }\n      }\n\n      if (!isUndefined(propertyValue)) {\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: {\n            element,\n            moddleElement: businessObject,\n            properties: {\n              [name]: propertyValue\n            }\n          }\n        });\n      }\n    } // camunda:ErrorEventDefinition\n\n\n    if (type === CAMUNDA_ERROR_EVENT_DEFINITION_TYPE$1) {\n      const {\n        errorRef\n      } = binding;\n      const oldCamundaErrorEventDefinition = findCamundaErrorEventDefinition(businessObject, errorRef);\n\n      if (oldCamundaErrorEventDefinition) {\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: {\n            element,\n            moddleElement: oldCamundaErrorEventDefinition,\n            properties: {\n              'camunda:expression': value\n            }\n          }\n        });\n      } else {\n        const newError = createError(binding.errorRef, rootElement, bpmnFactory),\n              newCamundaErrorEventDefinition = createCamundaErrorEventDefinition(value, newError, extensionElements, bpmnFactory);\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: {\n            element,\n            moddleElement: rootElement,\n            properties: {\n              rootElements: [...rootElement.get('rootElements'), newError]\n            }\n          }\n        });\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: {\n            element,\n            moddleElement: extensionElements,\n            properties: {\n              values: [...extensionElements.get('values'), newCamundaErrorEventDefinition]\n            }\n          }\n        });\n      }\n    } // camunda:Field\n\n\n    if (type === CAMUNDA_FIELD_TYPE) {\n      const oldCamundaFields = findExtensions(businessObject, ['camunda:Field']);\n      const newCamundaFields = [];\n\n      if (oldCamundaFields.length) {\n        oldCamundaFields.forEach(camundaField => {\n          if (camundaField.name === name) {\n            newCamundaFields.push(createCamundaFieldInjection(binding, value, bpmnFactory));\n          } else {\n            newCamundaFields.push(camundaField);\n          }\n        });\n      } else {\n        newCamundaFields.push(createCamundaFieldInjection(binding, value, bpmnFactory));\n      }\n\n      const values = extensionElements.get('values').filter(value => !oldCamundaFields.includes(value));\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...values, ...newCamundaFields]\n          }\n        }\n      });\n    } // camunda:Property\n\n\n    if (type === CAMUNDA_PROPERTY_TYPE) {\n      let camundaProperties;\n\n      if (scope) {\n        camundaProperties = businessObject.get('properties');\n      } else {\n        camundaProperties = findExtension(extensionElements, 'camunda:Properties');\n      }\n\n      if (!camundaProperties) {\n        camundaProperties = createElement('camunda:Properties', null, businessObject, bpmnFactory);\n\n        if (scope) {\n          commands.push({\n            cmd: 'element.updateModdleProperties',\n            context: {\n              element,\n              moddleElement: businessObject,\n              properties: {\n                properties: camundaProperties\n              }\n            }\n          });\n        } else {\n          commands.push({\n            cmd: 'element.updateModdleProperties',\n            context: {\n              element,\n              moddleElement: extensionElements,\n              properties: {\n                values: [...extensionElements.get('values'), camundaProperties]\n              }\n            }\n          });\n        }\n      }\n\n      const oldCamundaProperty = findCamundaProperty(camundaProperties, binding);\n      const newCamundaProperty = createCamundaProperty(binding, value, bpmnFactory);\n      const values = camundaProperties.get('values').filter(value => value !== oldCamundaProperty);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: camundaProperties,\n          properties: {\n            values: [...values, newCamundaProperty]\n          }\n        }\n      });\n    }\n\n    if (IO_BINDING_TYPES.includes(type)) {\n      let inputOutput;\n\n      if (scope) {\n        inputOutput = businessObject.get('inputOutput');\n      } else {\n        inputOutput = findExtension(extensionElements, 'camunda:InputOutput');\n      }\n\n      if (!inputOutput) {\n        inputOutput = createElement('camunda:InputOutput', null, businessObject, bpmnFactory);\n\n        if (scope) {\n          commands.push({\n            cmd: 'element.updateModdleProperties',\n            context: {\n              element,\n              moddleElement: businessObject,\n              properties: {\n                inputOutput\n              }\n            }\n          });\n        } else {\n          commands.push({\n            cmd: 'element.updateModdleProperties',\n            context: {\n              element,\n              moddleElement: extensionElements,\n              properties: {\n                values: [...extensionElements.get('values'), inputOutput]\n              }\n            }\n          });\n        }\n      } // camunda:InputParameter\n\n\n      if (type === CAMUNDA_INPUT_PARAMETER_TYPE$1) {\n        const oldCamundaInputParameter = findInputParameter(inputOutput, binding);\n        const newCamundaInputParameter = createInputParameter(binding, value, bpmnFactory);\n        const values = inputOutput.get('camunda:inputParameters').filter(value => value !== oldCamundaInputParameter);\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: {\n            element,\n            moddleElement: inputOutput,\n            properties: {\n              'camunda:inputParameters': [...values, newCamundaInputParameter]\n            }\n          }\n        });\n      } // camunda:OutputParameter\n\n\n      if (type === CAMUNDA_OUTPUT_PARAMETER_TYPE$1) {\n        const oldCamundaOutputParameter = findOutputParameter(inputOutput, binding);\n        const newCamundaOutputParameter = createOutputParameter(binding, value, bpmnFactory);\n        const values = inputOutput.get('camunda:outputParameters').filter(value => value !== oldCamundaOutputParameter);\n        commands.push({\n          cmd: 'element.updateModdleProperties',\n          context: {\n            element,\n            moddleElement: inputOutput,\n            properties: {\n              'camunda:outputParameters': [...values, newCamundaOutputParameter]\n            }\n          }\n        });\n      }\n    } // camunda:In and camunda:Out\n\n\n    if (IN_OUT_BINDING_TYPES.includes(type)) {\n      const oldCamundaInOut = findCamundaInOut(businessObject, binding);\n      let newCamundaInOut;\n\n      if (type === CAMUNDA_IN_TYPE) {\n        newCamundaInOut = createCamundaIn(binding, value, bpmnFactory);\n      } else if (type === CAMUNDA_OUT_TYPE) {\n        newCamundaInOut = createCamundaOut(binding, value, bpmnFactory);\n      } else {\n        newCamundaInOut = createCamundaInWithBusinessKey(value, bpmnFactory);\n      }\n\n      const values = extensionElements.get('values').filter(value => value !== oldCamundaInOut);\n      commands.push({\n        cmd: 'element.updateModdleProperties',\n        context: {\n          element,\n          moddleElement: extensionElements,\n          properties: {\n            values: [...values, newCamundaInOut]\n          }\n        }\n      });\n    }\n\n    if (commands.length) {\n      commandStack.execute('properties-panel.multi-command-executor', commands);\n      return;\n    } // should never throw as templates are validated beforehand\n\n\n    throw unknownBindingError(element, property);\n  };\n}\n\nfunction propertyValidator(translate, property) {\n  return function validate(value) {\n    const {\n      constraints = {}\n    } = property;\n    const {\n      maxLength,\n      minLength,\n      notEmpty\n    } = constraints;\n\n    if (notEmpty && isEmptyString(value)) {\n      return translate('Must not be empty.');\n    }\n\n    if (maxLength && value.length > maxLength) {\n      return translate('Must have max length {maxLength}.', {\n        maxLength\n      });\n    }\n\n    if (minLength && value.length < minLength) {\n      return translate('Must have min length {minLength}.', {\n        minLength\n      });\n    }\n\n    let {\n      pattern\n    } = constraints;\n\n    if (pattern) {\n      let message;\n\n      if (!isString(pattern)) {\n        message = pattern.message;\n        pattern = pattern.value;\n      }\n\n      if (!matchesPattern(value, pattern)) {\n        return message || translate('Must match pattern {pattern}.', {\n          pattern\n        });\n      }\n    }\n  };\n}\n\nfunction getScopeBusinessObject(businessObject, scope) {\n  const {\n    id,\n    type\n  } = scope;\n\n  if (type === 'bpmn:Error') {\n    // retrieve error through referenced error event definition\n    const errorEventDefinition = findCamundaErrorEventDefinition(businessObject, id);\n\n    if (errorEventDefinition) {\n      return errorEventDefinition.get('errorRef');\n    }\n  }\n\n  return findExtension(businessObject, type);\n}\n\nfunction unknownBindingError(element, property) {\n  const businessObject = getBusinessObject(element);\n  const id = businessObject.get('id');\n  const {\n    binding\n  } = property;\n  const {\n    type\n  } = binding;\n  return new Error(`unknown binding <${type}> for element <${id}>, this should never happen`);\n}\n\nfunction isEmptyString(string) {\n  return !string || !string.trim().length;\n}\n\nfunction matchesPattern(string, pattern) {\n  return new RegExp(pattern).test(string);\n}\n\nfunction groupByGroupId(properties) {\n  return groupBy(properties, 'group');\n}\n\nfunction findCustomGroup(groups, id) {\n  return find(groups, g => g.id === id);\n}\n\nfunction ErrorProperties(props) {\n  const {\n    element,\n    index,\n    property\n  } = props;\n  const {\n    binding,\n    label\n  } = property;\n  const {\n    errorRef\n  } = binding;\n  const businessObject = getBusinessObject(element),\n        errorEventDefinitions = findExtensions(businessObject, ['camunda:ErrorEventDefinition']);\n\n  if (!errorEventDefinitions.length) {\n    return;\n  }\n\n  const errorEventDefinition = findCamundaErrorEventDefinition(element, errorRef);\n  const id = `${element.id}-errorEventDefinition-${index}`;\n  let entries = [];\n  entries = Error$1({\n    idPrefix: id,\n    element,\n    errorEventDefinition\n  }); // (1) remove global error referenced entry\n  // entries.shift();\n\n  entries = removeEntry$1(entries, '-errorRef'); // (2) remove throw expression input\n  // entries.pop();\n\n  entries = removeEntry$1(entries, '-expression'); // (3) add disabled throw expression input\n\n  entries.push({\n    id: `${id}-expression`,\n    component: Expression,\n    errorEventDefinition,\n    property\n  });\n  const item = {\n    id,\n    label: label || getErrorLabel(errorEventDefinition),\n    entries\n  };\n  return item;\n}\n\nfunction Expression(props) {\n  const {\n    errorEventDefinition,\n    id\n  } = props;\n  const translate = useService('translate');\n  const debounce = useService('debounceInput');\n\n  const setValue = () => {};\n\n  const getValue = () => {\n    return errorEventDefinition.get('camunda:expression');\n  };\n\n  return TextFieldEntry({\n    element: errorEventDefinition,\n    id,\n    label: translate('Throw expression'),\n    getValue,\n    setValue,\n    debounce,\n    disabled: true\n  });\n}\n\nfunction removeEntry$1(entries, suffix) {\n  const entry = entries.find(({\n    id\n  }) => id.endsWith(suffix));\n  return without(entries, entry);\n}\n\nfunction InputProperties(props) {\n  const {\n    element,\n    index,\n    property\n  } = props;\n  const {\n    binding,\n    description,\n    label\n  } = property;\n  const {\n    name\n  } = binding;\n  const businessObject = getBusinessObject(element),\n        inputOutput = findExtension(businessObject, 'camunda:InputOutput');\n  const inputParameter = inputOutput && findInputParameter(inputOutput, binding);\n  const id = `${element.id}-inputParameter-${index}`;\n  let entries = [];\n\n  if (inputParameter) {\n    entries = InputOutputParameter({\n      idPrefix: id,\n      element,\n      parameter: inputParameter\n    }); // (1) remove name entry\n\n    entries = removeEntry(entries, '-name');\n  } // (2) add local variable assignment entry\n\n\n  entries.unshift({\n    id: `${id}-local-variable-assignment`,\n    component: LocalVariableAssignment,\n    inputParameter,\n    property\n  }); // (3) add description entry\n\n  if (description) {\n    entries.unshift({\n      id: `${id}-description`,\n      component: Description$1,\n      text: description\n    });\n  } // @barmac: binding#name is required so there is no third option\n\n\n  const item = {\n    id,\n    label: label || name,\n    entries\n  };\n  return item;\n} // TODO(philippfromme): add text entry to properties-panel\n\nfunction Description$1(props) {\n  const {\n    id,\n    text\n  } = props;\n  return jsx(\"div\", {\n    class: \"bio-properties-panel-entry\",\n    \"data-entry-id\": id,\n    children: jsx(\"div\", {\n      class: \"bio-properties-panel-description\",\n      children: jsx(PropertyDescription, {\n        description: text\n      })\n    })\n  });\n}\n\nfunction LocalVariableAssignment(props) {\n  const {\n    element,\n    id,\n    property,\n    inputParameter\n  } = props;\n  const {\n    binding\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        modeling = useService('modeling'),\n        translate = useService('translate');\n\n  const getValue = () => {\n    return inputParameter;\n  };\n\n  const setValue = value => {\n    if (value) {\n      addInputParameter(element, property, bpmnFactory, modeling);\n    } else {\n      removeInputParameter(element, binding, modeling);\n    }\n  };\n\n  return ToggleSwitchEntry({\n    id,\n    label: translate('Local variable assignment'),\n    switcherLabel: inputParameter ? translate('On') : translate('Off'),\n    description: inputParameter ? '' : translate('Parameter won\\'t be created as local variable.'),\n    getValue,\n    setValue\n  });\n}\n\nfunction addInputParameter(element, property, bpmnFactory, modeling) {\n  const {\n    binding,\n    value\n  } = property;\n  const businessObject = getBusinessObject(element);\n  const extensionElements = businessObject.get('extensionElements');\n  const inputOutput = findExtension(businessObject, 'camunda:InputOutput');\n  let updatedBusinessObject, update;\n\n  if (!extensionElements) {\n    updatedBusinessObject = businessObject;\n    const extensionElements = createExtensionElements$1(businessObject, bpmnFactory),\n          inputOutput = createInputOutput$1(binding, value, bpmnFactory, extensionElements);\n    extensionElements.values.push(inputOutput);\n    update = {\n      extensionElements\n    };\n  } else if (!inputOutput) {\n    updatedBusinessObject = extensionElements;\n    const inputOutput = createInputOutput$1(binding, value, bpmnFactory, extensionElements);\n    update = {\n      values: extensionElements.get('values').concat(inputOutput)\n    };\n  } else {\n    updatedBusinessObject = inputOutput;\n    const inputParameter = createInputParameter(binding, value, bpmnFactory);\n    inputParameter.$parent = inputOutput;\n    update = {\n      inputParameters: inputOutput.get('camunda:inputParameters').concat(inputParameter)\n    };\n  }\n\n  modeling.updateModdleProperties(element, updatedBusinessObject, update);\n}\n\nfunction removeInputParameter(element, binding, modeling) {\n  const businessObject = getBusinessObject(element);\n  const inputOutput = findExtension(businessObject, 'camunda:InputOutput'),\n        inputParameters = inputOutput.get('camunda:inputParameters');\n  const inputParameter = findInputParameter(inputOutput, binding);\n  modeling.updateModdleProperties(element, inputOutput, {\n    inputParameters: without(inputParameters, inputParameter)\n  });\n}\n\nfunction removeEntry(entries, suffix) {\n  const entry = entries.find(({\n    id\n  }) => id.endsWith(suffix));\n  return without(entries, entry);\n}\n\nfunction createExtensionElements$1(businessObject, bpmnFactory) {\n  return createElement('bpmn:ExtensionElements', {\n    values: []\n  }, businessObject, bpmnFactory);\n}\n\nfunction createInputOutput$1(binding, value, bpmnFactory, extensionElements) {\n  const inputParameter = createInputParameter(binding, value, bpmnFactory);\n  const inputOutput = createElement('camunda:InputOutput', {\n    inputParameters: [inputParameter],\n    outputParameters: []\n  }, extensionElements, bpmnFactory);\n  inputParameter.$parent = inputOutput;\n  return inputOutput;\n}\n\nfunction OutputProperties(props) {\n  const {\n    element,\n    index,\n    injector,\n    property\n  } = props;\n  const {\n    binding,\n    description,\n    label\n  } = property;\n  const {\n    name\n  } = binding;\n  const businessObject = getBusinessObject(element),\n        inputOutput = findExtension(businessObject, 'camunda:InputOutput');\n  const translate = injector.get('translate');\n  const outputParameter = inputOutput && findOutputParameter(inputOutput, binding);\n  const id = `${element.id}-outputParameter-${index}`;\n  let entries = []; // (1) add description entry\n\n  if (description) {\n    entries.push({\n      id: `${id}-description`,\n      component: Description,\n      text: description\n    });\n  } // (2) add local variable assignment entry\n\n\n  entries.push({\n    id: `${id}-local-variable-assignment`,\n    component: ProcessVariableAssignment,\n    outputParameter,\n    property\n  });\n\n  if (outputParameter) {\n    // (3) add assign to process variable entry\n    entries.push({\n      id: `${id}-assign-to-process-variable`,\n      component: AssignToProcessVariable,\n      property\n    });\n  }\n\n  const item = {\n    id,\n    label: label || name || translate('<unnamed>'),\n    entries\n  };\n  return item;\n} // TODO(philippfromme): add text entry to properties-panel\n\nfunction Description(props) {\n  const {\n    id,\n    text\n  } = props;\n  return jsx(\"div\", {\n    class: \"bio-properties-panel-entry\",\n    \"data-entry-id\": id,\n    children: jsx(\"div\", {\n      class: \"bio-properties-panel-description\",\n      children: jsx(PropertyDescription, {\n        description: text\n      })\n    })\n  });\n}\n\nfunction ProcessVariableAssignment(props) {\n  const {\n    element,\n    id,\n    property,\n    outputParameter\n  } = props;\n  const {\n    binding\n  } = property;\n  const bpmnFactory = useService('bpmnFactory'),\n        modeling = useService('modeling'),\n        translate = useService('translate');\n\n  const getValue = () => {\n    return outputParameter;\n  };\n\n  const setValue = value => {\n    if (value) {\n      addOutputParameter(element, property, bpmnFactory, modeling);\n    } else {\n      removeOutputParameter(element, binding, modeling);\n    }\n  };\n\n  return ToggleSwitchEntry({\n    id,\n    label: translate('Process variable assignment'),\n    switcherLabel: outputParameter ? translate('On') : translate('Off'),\n    description: outputParameter ? '' : translate('Parameter won\\'t be available in process scope.'),\n    getValue,\n    setValue\n  });\n}\n\nfunction AssignToProcessVariable(props) {\n  const {\n    element,\n    id,\n    property\n  } = props;\n  const {\n    binding\n  } = property;\n  const inputOutput = findExtension(element, 'camunda:InputOutput'),\n        outputParameter = findOutputParameter(inputOutput, binding);\n  const commandStack = useService('commandStack'),\n        debounce = useService('debounceInput'),\n        translate = useService('translate');\n\n  const setValue = value => {\n    commandStack.execute('element.updateModdleProperties', {\n      element,\n      moddleElement: outputParameter,\n      properties: {\n        name: value\n      }\n    });\n  };\n\n  const getValue = () => {\n    return outputParameter.get('camunda:name');\n  };\n\n  const validate = value => {\n    if (!value) {\n      return translate('Process variable name must not be empty.');\n    } else if (containsSpace(value)) {\n      return translate('Process variable name must not contain spaces.');\n    }\n  };\n\n  return TextFieldEntry({\n    debounce,\n    element: outputParameter,\n    id,\n    label: translate('Assign to process variable'),\n    getValue,\n    setValue,\n    validate\n  });\n}\n\nfunction addOutputParameter(element, property, bpmnFactory, modeling) {\n  const {\n    binding,\n    value\n  } = property;\n  const businessObject = getBusinessObject(element);\n  const extensionElements = businessObject.get('extensionElements');\n  const inputOutput = findExtension(businessObject, 'camunda:InputOutput');\n  let updatedBusinessObject, update;\n\n  if (!extensionElements) {\n    updatedBusinessObject = businessObject;\n    const extensionElements = createExtensionElements(businessObject, bpmnFactory),\n          inputOutput = createInputOutput(binding, value, bpmnFactory, extensionElements);\n    extensionElements.values.push(inputOutput);\n    update = {\n      extensionElements\n    };\n  } else if (!inputOutput) {\n    updatedBusinessObject = extensionElements;\n    const inputOutput = createInputOutput(binding, value, bpmnFactory, extensionElements);\n    update = {\n      values: extensionElements.get('values').concat(inputOutput)\n    };\n  } else {\n    updatedBusinessObject = inputOutput;\n    const outputParameter = createOutputParameter(binding, value, bpmnFactory);\n    outputParameter.$parent = inputOutput;\n    update = {\n      outputParameters: inputOutput.get('camunda:outputParameters').concat(outputParameter)\n    };\n  }\n\n  modeling.updateModdleProperties(element, updatedBusinessObject, update);\n}\n\nfunction removeOutputParameter(element, binding, modeling) {\n  const businessObject = getBusinessObject(element);\n  const inputOutput = findExtension(businessObject, 'camunda:InputOutput'),\n        outputParameters = inputOutput.get('camunda:outputParameters');\n  const outputParameter = findOutputParameter(inputOutput, binding);\n  modeling.updateModdleProperties(element, inputOutput, {\n    outputParameters: without(outputParameters, outputParameter)\n  });\n}\n\nfunction createExtensionElements(businessObject, bpmnFactory) {\n  return createElement('bpmn:ExtensionElements', {\n    values: []\n  }, businessObject, bpmnFactory);\n}\n\nfunction createInputOutput(binding, value, bpmnFactory, extensionElements) {\n  const outputParameter = createOutputParameter(binding, value, bpmnFactory);\n  const inputOutput = createElement('camunda:InputOutput', {\n    inputParameters: [],\n    outputParameters: [outputParameter]\n  }, extensionElements, bpmnFactory);\n  outputParameter.$parent = inputOutput;\n  return inputOutput;\n}\n\nconst CAMUNDA_ERROR_EVENT_DEFINITION_TYPE = 'camunda:errorEventDefinition',\n      CAMUNDA_INPUT_PARAMETER_TYPE = 'camunda:inputParameter',\n      CAMUNDA_OUTPUT_PARAMETER_TYPE = 'camunda:outputParameter';\nconst LOWER_PRIORITY = 300;\nclass ElementTemplatesPropertiesProvider {\n  constructor(elementTemplates, propertiesPanel, injector) {\n    propertiesPanel.registerProvider(LOWER_PRIORITY, this);\n    this._elementTemplates = elementTemplates;\n    this._injector = injector;\n  }\n\n  getGroups(element) {\n    return groups => {\n      const injector = this._injector;\n\n      if (!this._shouldShowTemplateProperties(element)) {\n        return groups;\n      } // (0) Copy provided groups\n\n\n      groups = groups.slice();\n      const templatesGroup = {\n        element,\n        id: 'ElementTemplates__Template',\n        label: 'Template',\n        component: createElementTemplatesGroup(),\n        entries: TemplateProps({\n          element,\n          elementTemplates: this._elementTemplates\n        })\n      }; // (1) Add templates group\n\n      addGroupsAfter('documentation', groups, [templatesGroup]);\n\n      const elementTemplate = this._elementTemplates.get(element);\n\n      if (elementTemplate) {\n        const templateSpecificGroups = [].concat(createInputGroup(element, elementTemplate, injector) || [], createOutputGroup(element, elementTemplate, injector) || [], createErrorGroup(element, elementTemplate, injector) || [], CustomProperties({\n          element,\n          elementTemplate\n        })); // (2) add template-specific properties groups\n\n        addGroupsAfter('ElementTemplates__Template', groups, templateSpecificGroups);\n      } // (3) apply entries visible\n\n\n      if (getTemplateId(element)) {\n        groups = filterWithEntriesVisible(elementTemplate || {}, groups);\n      }\n\n      return groups;\n    };\n  }\n\n  _shouldShowTemplateProperties(element) {\n    return getTemplateId(element) || this._elementTemplates.getAll(element).length;\n  }\n\n}\nElementTemplatesPropertiesProvider.$inject = ['elementTemplates', 'propertiesPanel', 'injector']; // helper /////////////////////\n\nfunction createInputGroup(element, elementTemplate, injector) {\n  const translate = injector.get('translate');\n  const group = {\n    label: translate('Inputs'),\n    id: 'ElementTemplates__Input',\n    component: ListGroup,\n    items: []\n  };\n  const properties = elementTemplate.properties.filter(({\n    binding,\n    type\n  }) => {\n    return !type && binding.type === CAMUNDA_INPUT_PARAMETER_TYPE;\n  });\n  properties.forEach((property, index) => {\n    const item = InputProperties({\n      element,\n      index,\n      property\n    });\n\n    if (item) {\n      group.items.push(item);\n    }\n  }); // remove if empty\n\n  if (!group.items.length) {\n    return null;\n  }\n\n  return group;\n}\n\nfunction createOutputGroup(element, elementTemplate, injector) {\n  const translate = injector.get('translate');\n  const group = {\n    label: translate('Outputs'),\n    id: 'ElementTemplates__Output',\n    component: ListGroup,\n    items: []\n  };\n  const properties = elementTemplate.properties.filter(({\n    binding,\n    type\n  }) => {\n    return !type && binding.type === CAMUNDA_OUTPUT_PARAMETER_TYPE;\n  });\n  properties.forEach((property, index) => {\n    const item = OutputProperties({\n      element,\n      index,\n      property,\n      injector\n    });\n\n    if (item) {\n      group.items.push(item);\n    }\n  }); // remove if empty\n\n  if (!group.items.length) {\n    return null;\n  }\n\n  return group;\n}\n\nfunction createErrorGroup(element, elementTemplate, injector) {\n  const translate = injector.get('translate');\n  const group = {\n    label: translate('Errors'),\n    id: 'ElementTemplates__Error',\n    component: ListGroup,\n    items: []\n  };\n  const properties = elementTemplate.properties.filter(({\n    binding,\n    type\n  }) => {\n    return !type && binding.type === CAMUNDA_ERROR_EVENT_DEFINITION_TYPE;\n  });\n  properties.forEach((property, index) => {\n    const item = ErrorProperties({\n      element,\n      index,\n      property\n    });\n\n    if (item) {\n      group.items.push(item);\n    }\n  }); // remove if empty\n\n  if (!group.items.length) {\n    return null;\n  }\n\n  return group;\n}\n/**\n *\n * @param {string} id\n * @param {Array<{ id: string }} groups\n * @param {Array<{ id: string }>} groupsToAdd\n */\n\n\nfunction addGroupsAfter(id, groups, groupsToAdd) {\n  const index = groups.findIndex(group => group.id === id);\n\n  if (index !== -1) {\n    groups.splice(index + 1, 0, ...groupsToAdd);\n  } else {\n    // add in the beginning if group with provided id is missing\n    groups.unshift(...groupsToAdd);\n  }\n}\n\nfunction filterWithEntriesVisible(template, groups) {\n  if (!template.entriesVisible) {\n    return groups.filter(group => {\n      return group.id === 'general' || group.id.startsWith('ElementTemplates__');\n    });\n  }\n\n  return groups;\n}\n\nvar index = {\n  __depends__: [commandsModule, translateModule, camundaPlatformPropertiesProviderModule],\n  __init__: ['elementTemplatesLoader', 'replaceBehavior', 'elementTemplatesPropertiesProvider'],\n  elementTemplates: ['type', ElementTemplates$1],\n  elementTemplatesLoader: ['type', ElementTemplatesLoader$1],\n  replaceBehavior: ['type', ReplaceBehavior],\n  elementTemplatesPropertiesProvider: ['type', ElementTemplatesPropertiesProvider]\n};\n\n/* eslint-disable react-hooks/rules-of-hooks */\nconst DescriptionProvider = {\n  assignmentDefinitionAssignee: element => {\n    const translate = useService('translate');\n    return jsx(\"a\", {\n      href: \"https://docs.camunda.io/docs/components/modeler/bpmn/user-tasks/#assignments\",\n      target: \"_blank\",\n      rel: \"noopener\",\n      title: translate('User task documentation'),\n      children: translate('How to configure a user task')\n    });\n  },\n  conditionExpression: element => {\n    const translate = useService('translate');\n    return jsx(\"a\", {\n      href: \"https://docs.camunda.io/docs/components/modeler/bpmn/exclusive-gateways/#conditions\",\n      target: \"_blank\",\n      rel: \"noopener\",\n      title: translate('Conditions documentation'),\n      children: translate('How to define conditions')\n    });\n  },\n  decisionId: element => {\n    const translate = useService('translate');\n    return jsx(\"a\", {\n      href: \"https://docs.camunda.io/docs/components/modeler/bpmn/business-rule-tasks/#defining-a-task\",\n      target: \"_blank\",\n      rel: \"noopener\",\n      title: translate('Business rule task documentation'),\n      children: translate('How to configure a business rule task')\n    });\n  },\n  formType: element => {\n    const translate = useService('translate');\n    return jsx(\"a\", {\n      href: \"https://docs.camunda.io/docs/guides/utilizing-forms/#connect-your-form-to-a-bpmn-diagram\",\n      target: \"_blank\",\n      rel: \"noopener\",\n      title: translate('User task form documentation'),\n      children: translate('How to link a form')\n    });\n  },\n  messageSubscriptionCorrelationKey: element => {\n    const translate = useService('translate');\n\n    if (is(element, 'bpmn:ReceiveTask')) {\n      return jsx(\"a\", {\n        href: \"https://docs.camunda.io/docs/components/modeler/bpmn/receive-tasks/#messages\",\n        target: \"_blank\",\n        rel: \"noopener\",\n        title: translate('Receive task documentation'),\n        children: translate('How to configure a receive task')\n      });\n    }\n\n    return jsx(\"a\", {\n      href: \"https://docs.camunda.io/docs/components/modeler/bpmn/message-events/#messages\",\n      target: \"_blank\",\n      rel: \"noopener\",\n      title: translate('Message event documentation'),\n      children: translate('How to configure a message event')\n    });\n  },\n  messageName: element => {\n    const translate = useService('translate');\n\n    if (is(element, 'bpmn:StartEvent') && !isInEventSubProcess(element)) {\n      return jsx(\"a\", {\n        href: \"https://docs.camunda.io/docs/components/modeler/bpmn/message-events/#messages\",\n        target: \"_blank\",\n        rel: \"noopener\",\n        title: translate('Message event documentation'),\n        children: translate('How to configure a message event')\n      });\n    }\n  },\n  targetProcessId: element => {\n    const translate = useService('translate');\n    return jsx(\"a\", {\n      href: \"https://docs.camunda.io/docs/components/modeler/bpmn/call-activities/\",\n      target: \"_blank\",\n      rel: \"noopener\",\n      title: translate('Call activity documentation'),\n      children: translate('How to call another process')\n    });\n  },\n  taskDefinitionType: element => {\n    const translate = useService('translate');\n\n    if (is(element, 'bpmn:ServiceTask')) {\n      return jsx(\"a\", {\n        href: \"https://docs.camunda.io/docs/components/modeler/bpmn/service-tasks/#task-definition\",\n        target: \"_blank\",\n        rel: \"noopener\",\n        title: translate('Service task documentation'),\n        children: translate('How to configure a service task')\n      });\n    }\n\n    if (is(element, 'bpmn:BusinessRuleTask')) {\n      return jsx(\"a\", {\n        href: \"https://docs.camunda.io/docs/components/modeler/bpmn/business-rule-tasks/#defining-a-task\",\n        target: \"_blank\",\n        rel: \"noopener\",\n        title: translate('Business rule task documentation'),\n        children: translate('How to configure a business rule task')\n      });\n    }\n\n    if (is(element, 'bpmn:ScriptTask')) {\n      return jsx(\"a\", {\n        href: \"https://docs.camunda.io/docs/components/modeler/bpmn/script-tasks/#defining-a-task\",\n        target: \"_blank\",\n        rel: \"noopener\",\n        title: translate('Script task documentation'),\n        children: translate('How to configure a script task')\n      });\n    }\n\n    if (is(element, 'bpmn:SendTask')) {\n      return jsx(\"a\", {\n        href: \"https://docs.camunda.io/docs/components/modeler/bpmn/send-tasks/#defining-a-task\",\n        target: \"_blank\",\n        rel: \"noopener\",\n        title: translate('Send task documentation'),\n        children: translate('How to configure a send task')\n      });\n    }\n\n    if (is(element, 'bpmn:ThrowEvent')) {\n      return jsx(\"a\", {\n        href: \"https://docs.camunda.io/docs/components/modeler/bpmn/message-events/#message-throw-events\",\n        target: \"_blank\",\n        rel: \"noopener\",\n        title: translate('Message throw event documentation'),\n        children: translate('How to configure a message throw event')\n      });\n    }\n  },\n  'multiInstance-inputCollection': element => {\n    const translate = useService('translate');\n    return jsx(\"a\", {\n      href: \"https://docs.camunda.io/docs/components/modeler/bpmn/multi-instance/#defining-the-collection-to-iterate-over\",\n      target: \"_blank\",\n      rel: \"noopener\",\n      title: translate('Multi instance documentation'),\n      children: translate('How to configure a multi instance activity')\n    });\n  },\n  errorCode: element => {\n    const translate = useService('translate');\n    return jsx(\"a\", {\n      href: \"https://docs.camunda.io/docs/components/modeler/bpmn/error-events/#defining-the-error\",\n      target: \"_blank\",\n      rel: \"noopener\",\n      title: translate('Error event documentation'),\n      children: translate('How to configure an error event')\n    });\n  }\n};\n\nfunction isInEventSubProcess(element) {\n  const bo = getBusinessObject(element),\n        parent = bo.$parent;\n  return is(parent, 'bpmn:SubProcess') && parent.triggeredByEvent;\n}\n\nexport { index$3 as BpmnPropertiesPanelModule, index$2 as BpmnPropertiesProviderModule, camundaPlatformPropertiesProviderModule as CamundaPlatformPropertiesProviderModule, index$1 as CloudElementTemplatesPropertiesProviderModule, Validator as CloudElementTemplatesValidator, index as ElementTemplatesPropertiesProviderModule, DescriptionProvider as ZeebeDescriptionProvider, zeebePropertiesProviderModule as ZeebePropertiesProviderModule, useService };\n//# sourceMappingURL=index.esm.js.map\n","import { is } from '../../util/ModelUtil';\n\nfunction getLabelAttr(semantic) {\n  if (\n    is(semantic, 'bpmn:FlowElement') ||\n    is(semantic, 'bpmn:Participant') ||\n    is(semantic, 'bpmn:Lane') ||\n    is(semantic, 'bpmn:SequenceFlow') ||\n    is(semantic, 'bpmn:MessageFlow') ||\n    is(semantic, 'bpmn:DataInput') ||\n    is(semantic, 'bpmn:DataOutput')\n  ) {\n    return 'name';\n  }\n\n  if (is(semantic, 'bpmn:TextAnnotation')) {\n    return 'text';\n  }\n\n  if (is(semantic, 'bpmn:Group')) {\n    return 'categoryValueRef';\n  }\n}\n\nfunction getCategoryValue(semantic) {\n  var categoryValueRef = semantic['categoryValueRef'];\n\n  if (!categoryValueRef) {\n    return '';\n  }\n\n\n  return categoryValueRef.value || '';\n}\n\nexport function getLabel(element) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n\n    if (attr === 'categoryValueRef') {\n\n      return getCategoryValue(semantic);\n    }\n\n    return semantic[attr] || '';\n  }\n}\n\n\nexport function setLabel(element, text, isExternal) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n\n    if (attr === 'categoryValueRef') {\n      semantic['categoryValueRef'].value = text;\n    } else {\n      semantic[attr] = text;\n    }\n\n  }\n\n  return element;\n}","import {\n  is,\n  getBusinessObject,\n  getDi\n} from './ModelUtil';\n\nimport {\n  forEach\n} from 'min-dash';\n\n\nexport function isExpanded(element, di) {\n\n  if (is(element, 'bpmn:CallActivity')) {\n    return false;\n  }\n\n  if (is(element, 'bpmn:SubProcess')) {\n    di = di || getDi(element);\n\n    if (di && is(di, 'bpmndi:BPMNPlane')) {\n      return true;\n    }\n\n    return di && !!di.isExpanded;\n  }\n\n  if (is(element, 'bpmn:Participant')) {\n    return !!getBusinessObject(element).processRef;\n  }\n\n  return true;\n}\n\nexport function isInterrupting(element) {\n  return element && getBusinessObject(element).isInterrupting !== false;\n}\n\nexport function isEventSubProcess(element) {\n  return element && !!getBusinessObject(element).triggeredByEvent;\n}\n\nexport function hasEventDefinition(element, eventType) {\n  var bo = getBusinessObject(element),\n      hasEventDefinition = false;\n\n  if (bo.eventDefinitions) {\n    forEach(bo.eventDefinitions, function(event) {\n      if (is(event, eventType)) {\n        hasEventDefinition = true;\n      }\n    });\n  }\n\n  return hasEventDefinition;\n}\n\nexport function hasErrorEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:ErrorEventDefinition');\n}\n\nexport function hasEscalationEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:EscalationEventDefinition');\n}\n\nexport function hasCompensateEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\n}\n","import {\n  some\n} from 'min-dash';\n\n\n/**\n * Is an element of the given BPMN type?\n *\n * @param  {djs.model.Base|ModdleElement} element\n * @param  {string} type\n *\n * @return {boolean}\n */\nexport function is(element, type) {\n  var bo = getBusinessObject(element);\n\n  return bo && (typeof bo.$instanceOf === 'function') && bo.$instanceOf(type);\n}\n\n\n/**\n * Return true if element has any of the given types.\n *\n * @param {djs.model.Base} element\n * @param {Array<string>} types\n *\n * @return {boolean}\n */\nexport function isAny(element, types) {\n  return some(types, function(t) {\n    return is(element, t);\n  });\n}\n\n/**\n * Return the business object for a given element.\n *\n * @param  {djs.model.Base|ModdleElement} element\n *\n * @return {ModdleElement}\n */\nexport function getBusinessObject(element) {\n  return (element && element.businessObject) || element;\n}\n\n/**\n * Return the di object for a given element.\n *\n * @param  {djs.model.Base} element\n *\n * @return {ModdleElement}\n */\nexport function getDi(element) {\n  return element && element.di;\n}","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import {\n  forEach,\n  isFunction,\n  isArray,\n  isNumber,\n  isObject\n} from 'min-dash';\n\n\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * A utility that can be used to plug-in into the command execution for\n * extension and/or validation.\n *\n * @param {EventBus} eventBus\n *\n * @example\n *\n * import inherits from 'inherits-browser';\n *\n * import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n *\n * function CommandLogger(eventBus) {\n *   CommandInterceptor.call(this, eventBus);\n *\n *   this.preExecute(function(event) {\n *     console.log('command pre-execute', event);\n *   });\n * }\n *\n * inherits(CommandLogger, CommandInterceptor);\n *\n */\nexport default function CommandInterceptor(eventBus) {\n  this._eventBus = eventBus;\n}\n\nCommandInterceptor.$inject = [ 'eventBus' ];\n\nfunction unwrapEvent(fn, that) {\n  return function(event) {\n    return fn.call(that || null, event.context, event.command, event);\n  };\n}\n\n/**\n * Register an interceptor for a command execution\n *\n * @param {string|Array<string>} [events] list of commands to register on\n * @param {string} [hook] command hook, i.e. preExecute, executed to listen on\n * @param {number} [priority] the priority on which to hook into the execution\n * @param {Function} handlerFn interceptor to be invoked with (event)\n * @param {boolean} unwrap if true, unwrap the event and pass (context, command, event) to the\n *                          listener instead\n * @param {Object} [that] Pass context (`this`) to the handler function\n */\nCommandInterceptor.prototype.on = function(events, hook, priority, handlerFn, unwrap, that) {\n\n  if (isFunction(hook) || isNumber(hook)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = hook;\n    hook = null;\n  }\n\n  if (isFunction(priority)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (isObject(unwrap)) {\n    that = unwrap;\n    unwrap = false;\n  }\n\n  if (!isFunction(handlerFn)) {\n    throw new Error('handlerFn must be a function');\n  }\n\n  if (!isArray(events)) {\n    events = [ events ];\n  }\n\n  var eventBus = this._eventBus;\n\n  forEach(events, function(event) {\n\n    // concat commandStack(.event)?(.hook)?\n    var fullEvent = [ 'commandStack', event, hook ].filter(function(e) { return e; }).join('.');\n\n    eventBus.on(fullEvent, priority, unwrap ? unwrapEvent(handlerFn, that) : handlerFn, that);\n  });\n};\n\n\nvar hooks = [\n  'canExecute',\n  'preExecute',\n  'preExecuted',\n  'execute',\n  'executed',\n  'postExecute',\n  'postExecuted',\n  'revert',\n  'reverted'\n];\n\n/*\n * Install hook shortcuts\n *\n * This will generate the CommandInterceptor#(preExecute|...|reverted) methods\n * which will in term forward to CommandInterceptor#on.\n */\nforEach(hooks, function(hook) {\n\n  /**\n   * {canExecute|preExecute|preExecuted|execute|executed|postExecute|postExecuted|revert|reverted}\n   *\n   * A named hook for plugging into the command execution\n   *\n   * @param {string|Array<string>} [events] list of commands to register on\n   * @param {number} [priority] the priority on which to hook into the execution\n   * @param {Function} handlerFn interceptor to be invoked with (event)\n   * @param {boolean} [unwrap=false] if true, unwrap the event and pass (context, command, event) to the\n   *                          listener instead\n   * @param {Object} [that] Pass context (`this`) to the handler function\n   */\n  CommandInterceptor.prototype[hook] = function(events, priority, handlerFn, unwrap, that) {\n\n    if (isFunction(events) || isNumber(events)) {\n      that = unwrap;\n      unwrap = handlerFn;\n      handlerFn = priority;\n      priority = events;\n      events = null;\n    }\n\n    this.on(events, hook, priority, handlerFn, unwrap, that);\n  };\n});\n","var DEFAULT_RENDER_PRIORITY = 1000;\n\n/**\n * The base implementation of shape and connection renderers.\n *\n * @param {EventBus} eventBus\n * @param {number} [renderPriority=1000]\n */\nexport default function BaseRenderer(eventBus, renderPriority) {\n  var self = this;\n\n  renderPriority = renderPriority || DEFAULT_RENDER_PRIORITY;\n\n  eventBus.on([ 'render.shape', 'render.connection' ], renderPriority, function(evt, context) {\n    var type = evt.type,\n        element = context.element,\n        visuals = context.gfx,\n        attrs = context.attrs;\n\n    if (self.canRender(element)) {\n      if (type === 'render.shape') {\n        return self.drawShape(visuals, element, attrs);\n      } else {\n        return self.drawConnection(visuals, element, attrs);\n      }\n    }\n  });\n\n  eventBus.on([ 'render.getShapePath', 'render.getConnectionPath' ], renderPriority, function(evt, element) {\n    if (self.canRender(element)) {\n      if (evt.type === 'render.getShapePath') {\n        return self.getShapePath(element);\n      } else {\n        return self.getConnectionPath(element);\n      }\n    }\n  });\n}\n\n/**\n * Should check whether *this* renderer can render\n * the element/connection.\n *\n * @param {element} element\n *\n * @returns {boolean}\n */\nBaseRenderer.prototype.canRender = function() {};\n\n/**\n * Provides the shape's snap svg element to be drawn on the `canvas`.\n *\n * @param {djs.Graphics} visuals\n * @param {Shape} shape\n *\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\n */\nBaseRenderer.prototype.drawShape = function() {};\n\n/**\n * Provides the shape's snap svg element to be drawn on the `canvas`.\n *\n * @param {djs.Graphics} visuals\n * @param {Connection} connection\n *\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\n */\nBaseRenderer.prototype.drawConnection = function() {};\n\n/**\n * Gets the SVG path of a shape that represents it's visual bounds.\n *\n * @param {Shape} shape\n *\n * @return {string} svg path\n */\nBaseRenderer.prototype.getShapePath = function() {};\n\n/**\n * Gets the SVG path of a connection that represents it's visual bounds.\n *\n * @param {Connection} connection\n *\n * @return {string} svg path\n */\nBaseRenderer.prototype.getConnectionPath = function() {};\n","import { isArray } from 'min-dash';\r\n\r\nvar KEYCODE_C = 67;\r\nvar KEYCODE_V = 86;\r\nvar KEYCODE_Y = 89;\r\nvar KEYCODE_Z = 90;\r\n\r\nvar KEYS_COPY = [ 'c', 'C', KEYCODE_C ];\r\nvar KEYS_PASTE = [ 'v', 'V', KEYCODE_V ];\r\nvar KEYS_REDO = [ 'y', 'Y', KEYCODE_Y ];\r\nvar KEYS_UNDO = [ 'z', 'Z', KEYCODE_Z ];\r\n\r\n/**\r\n * Returns true if event was triggered with any modifier\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function hasModifier(event) {\r\n  return (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey);\r\n}\r\n\r\n/**\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isCmd(event) {\r\n\r\n  // ensure we don't react to AltGr\r\n  // (mapped to CTRL + ALT)\r\n  if (event.altKey) {\r\n    return false;\r\n  }\r\n\r\n  return event.ctrlKey || event.metaKey;\r\n}\r\n\r\n/**\r\n * Checks if key pressed is one of provided keys.\r\n *\r\n * @param {string|Array<string>} keys\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isKey(keys, event) {\r\n  keys = isArray(keys) ? keys : [ keys ];\r\n\r\n  return keys.indexOf(event.key) !== -1 || keys.indexOf(event.keyCode) !== -1;\r\n}\r\n\r\n/**\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isShift(event) {\r\n  return event.shiftKey;\r\n}\r\n\r\nexport function isCopy(event) {\r\n  return isCmd(event) && isKey(KEYS_COPY, event);\r\n}\r\n\r\nexport function isPaste(event) {\r\n  return isCmd(event) && isKey(KEYS_PASTE, event);\r\n}\r\n\r\nexport function isUndo(event) {\r\n  return isCmd(event) && !isShift(event) && isKey(KEYS_UNDO, event);\r\n}\r\n\r\nexport function isRedo(event) {\r\n  return isCmd(event) && (\r\n    isKey(KEYS_REDO, event) || (\r\n      isKey(KEYS_UNDO, event) && isShift(event)\r\n    )\r\n  );\r\n}","import inherits from 'inherits-browser';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\n/**\n * A basic provider that may be extended to implement modeling rules.\n *\n * Extensions should implement the init method to actually add their custom\n * modeling checks. Checks may be added via the #addRule(action, fn) method.\n *\n * @param {EventBus} eventBus\n */\nexport default function RuleProvider(eventBus) {\n  CommandInterceptor.call(this, eventBus);\n\n  this.init();\n}\n\nRuleProvider.$inject = [ 'eventBus' ];\n\ninherits(RuleProvider, CommandInterceptor);\n\n\n/**\n * Adds a modeling rule for the given action, implemented through\n * a callback function.\n *\n * The function will receive the modeling specific action context\n * to perform its check. It must return `false` to disallow the\n * action from happening or `true` to allow the action.\n *\n * A rule provider may pass over the evaluation to lower priority\n * rules by returning return nothing (or <code>undefined</code>).\n *\n * @example\n *\n * ResizableRules.prototype.init = function() {\n *\n *   \\/**\n *    * Return `true`, `false` or nothing to denote\n *    * _allowed_, _not allowed_ and _continue evaluating_.\n *    *\\/\n *   this.addRule('shape.resize', function(context) {\n *\n *     var shape = context.shape;\n *\n *     if (!context.newBounds) {\n *       // check general resizability\n *       if (!shape.resizable) {\n *         return false;\n *       }\n *\n *       // not returning anything (read: undefined)\n *       // will continue the evaluation of other rules\n *       // (with lower priority)\n *       return;\n *     } else {\n *       // element must have minimum size of 10*10 points\n *       return context.newBounds.width > 10 && context.newBounds.height > 10;\n *     }\n *   });\n * };\n *\n * @param {string|Array<string>} actions the identifier for the modeling action to check\n * @param {number} [priority] the priority at which this rule is being applied\n * @param {Function} fn the callback function that performs the actual check\n */\nRuleProvider.prototype.addRule = function(actions, priority, fn) {\n\n  var self = this;\n\n  if (typeof actions === 'string') {\n    actions = [ actions ];\n  }\n\n  actions.forEach(function(action) {\n\n    self.canExecute(action, priority, function(context, action, event) {\n      return fn(context);\n    }, true);\n  });\n};\n\n/**\n * Implement this method to add new rules during provider initialization.\n */\nRuleProvider.prototype.init = function() {};","/**\n * A service that provides rules for certain diagram actions.\n *\n * The default implementation will hook into the {@link CommandStack}\n * to perform the actual rule evaluation. Make sure to provide the\n * `commandStack` service with this module if you plan to use it.\n *\n * Together with this implementation you may use the {@link RuleProvider}\n * to implement your own rule checkers.\n *\n * This module is ment to be easily replaced, thus the tiny foot print.\n *\n * @param {Injector} injector\n */\nexport default function Rules(injector) {\n  this._commandStack = injector.get('commandStack', false);\n}\n\nRules.$inject = [ 'injector' ];\n\n\n/**\n * Returns whether or not a given modeling action can be executed\n * in the specified context.\n *\n * This implementation will respond with allow unless anyone\n * objects.\n *\n * @param {string} action the action to be checked\n * @param {Object} [context] the context to check the action in\n *\n * @return {boolean} returns true, false or null depending on whether the\n *                   operation is allowed, not allowed or should be ignored.\n */\nRules.prototype.allowed = function(action, context) {\n  var allowed = true;\n\n  var commandStack = this._commandStack;\n\n  if (commandStack) {\n    allowed = commandStack.canExecute(action, context);\n  }\n\n  // map undefined to true, i.e. no rules\n  return allowed === undefined ? true : allowed;\n};","import Rules from './Rules';\n\nexport default {\n  __init__: [ 'rules' ],\n  rules: [ 'type', Rules ]\n};\n","import translate from './translate';\n\nexport default {\n  translate: [ 'value', translate ]\n};","/**\n * A simple translation stub to be used for multi-language support\n * in diagrams. Can be easily replaced with a more sophisticated\n * solution.\n *\n * @example\n *\n * // use it inside any diagram component by injecting `translate`.\n *\n * function MyService(translate) {\n *   alert(translate('HELLO {you}', { you: 'You!' }));\n * }\n *\n * @param {string} template to interpolate\n * @param {Object} [replacements] a map with substitutes\n *\n * @return {string} the translated string\n */\nexport default function translate(template, replacements) {\n\n  replacements = replacements || {};\n\n  return template.replace(/{([^}]+)}/g, function(_, key) {\n    return replacements[key] || '{' + key + '}';\n  });\n}","/**\n * Failsafe remove an element from a collection\n *\n * @param  {Array<Object>} [collection]\n * @param  {Object} [element]\n *\n * @return {number} the previous index of the element\n */\nexport function remove(collection, element) {\n\n  if (!collection || !element) {\n    return -1;\n  }\n\n  var idx = collection.indexOf(element);\n\n  if (idx !== -1) {\n    collection.splice(idx, 1);\n  }\n\n  return idx;\n}\n\n/**\n * Fail save add an element to the given connection, ensuring\n * it does not yet exist.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n * @param {number} idx\n */\nexport function add(collection, element, idx) {\n\n  if (!collection || !element) {\n    return;\n  }\n\n  if (typeof idx !== 'number') {\n    idx = -1;\n  }\n\n  var currentIdx = collection.indexOf(element);\n\n  if (currentIdx !== -1) {\n\n    if (currentIdx === idx) {\n\n      // nothing to do, position has not changed\n      return;\n    } else {\n\n      if (idx !== -1) {\n\n        // remove from current position\n        collection.splice(currentIdx, 1);\n      } else {\n\n        // already exists in collection\n        return;\n      }\n    }\n  }\n\n  if (idx !== -1) {\n\n    // insert at specified position\n    collection.splice(idx, 0, element);\n  } else {\n\n    // push to end\n    collection.push(element);\n  }\n}\n\n\n/**\n * Fail save get the index of an element in a collection.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n *\n * @return {number} the index or -1 if collection or element do\n *                  not exist or the element is not contained.\n */\nexport function indexOf(collection, element) {\n\n  if (!collection || !element) {\n    return -1;\n  }\n\n  return collection.indexOf(element);\n}\n","/**\n * Util that provides unique IDs.\n *\n * @class djs.util.IdGenerator\n * @constructor\n * @memberOf djs.util\n *\n * The ids can be customized via a given prefix and contain a random value to avoid collisions.\n *\n * @param {string} prefix a prefix to prepend to generated ids (for better readability)\n */\nexport default function IdGenerator(prefix) {\n\n  this._counter = 0;\n  this._prefix = (prefix ? prefix + '-' : '') + Math.floor(Math.random() * 1000000000) + '-';\n}\n\n/**\n * Returns a next unique ID.\n *\n * @method djs.util.IdGenerator#next\n *\n * @returns {string} the id\n */\nIdGenerator.prototype.next = function() {\n  return this._prefix + (++this._counter);\n};\n","function createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar hat_1 = createCommonjsModule(function (module) {\nvar hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n});\n\n/**\n * Create a new id generator / cache instance.\n *\n * You may optionally provide a seed that is used internally.\n *\n * @param {Seed} seed\n */\n\nfunction Ids(seed) {\n  if (!(this instanceof Ids)) {\n    return new Ids(seed);\n  }\n\n  seed = seed || [128, 36, 1];\n  this._seed = seed.length ? hat_1.rack(seed[0], seed[1], seed[2]) : seed;\n}\n/**\n * Generate a next id.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\n\nIds.prototype.next = function (element) {\n  return this._seed(element || true);\n};\n/**\n * Generate a next id with a given prefix.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\n\n\nIds.prototype.nextPrefixed = function (prefix, element) {\n  var id;\n\n  do {\n    id = prefix + this.next(true);\n  } while (this.assigned(id)); // claim {prefix}{random}\n\n\n  this.claim(id, element); // return\n\n  return id;\n};\n/**\n * Manually claim an existing id.\n *\n * @param {String} id\n * @param {String} [element] element the id is claimed by\n */\n\n\nIds.prototype.claim = function (id, element) {\n  this._seed.set(id, element || true);\n};\n/**\n * Returns true if the given id has already been assigned.\n *\n * @param  {String} id\n * @return {Boolean}\n */\n\n\nIds.prototype.assigned = function (id) {\n  return this._seed.get(id) || false;\n};\n/**\n * Unclaim an id.\n *\n * @param  {String} id the id to unclaim\n */\n\n\nIds.prototype.unclaim = function (id) {\n  delete this._seed.hats[id];\n};\n/**\n * Clear all claimed ids.\n */\n\n\nIds.prototype.clear = function () {\n  var hats = this._seed.hats,\n      id;\n\n  for (id in hats) {\n    this.unclaim(id);\n  }\n};\n\nexport default Ids;\n//# sourceMappingURL=index.esm.js.map\n","function e(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}export{e as default};\n//# sourceMappingURL=index.es.js.map\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/**\n * Flatten array, one level deep.\n *\n * @param {Array<?>} arr\n *\n * @return {Array<?>}\n */\nfunction flatten(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\n\nvar nativeToString = Object.prototype.toString;\nvar nativeHasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isUndefined(obj) {\n  return obj === undefined;\n}\nfunction isDefined(obj) {\n  return obj !== undefined;\n}\nfunction isNil(obj) {\n  return obj == null;\n}\nfunction isArray(obj) {\n  return nativeToString.call(obj) === '[object Array]';\n}\nfunction isObject(obj) {\n  return nativeToString.call(obj) === '[object Object]';\n}\nfunction isNumber(obj) {\n  return nativeToString.call(obj) === '[object Number]';\n}\nfunction isFunction(obj) {\n  var tag = nativeToString.call(obj);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object AsyncGeneratorFunction]' || tag === '[object Proxy]';\n}\nfunction isString(obj) {\n  return nativeToString.call(obj) === '[object String]';\n}\n/**\n * Ensure collection is an array.\n *\n * @param {Object} obj\n */\n\nfunction ensureArray(obj) {\n  if (isArray(obj)) {\n    return;\n  }\n\n  throw new Error('must supply array');\n}\n/**\n * Return true, if target owns a property with the given key.\n *\n * @param {Object} target\n * @param {String} key\n *\n * @return {Boolean}\n */\n\nfunction has(target, key) {\n  return nativeHasOwnProperty.call(target, key);\n}\n\n/**\n * Find element in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function|Object} matcher\n *\n * @return {Object}\n */\n\nfunction find(collection, matcher) {\n  matcher = toMatcher(matcher);\n  var match;\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      match = val;\n      return false;\n    }\n  });\n  return match;\n}\n/**\n * Find element index in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function} matcher\n *\n * @return {Object}\n */\n\nfunction findIndex(collection, matcher) {\n  matcher = toMatcher(matcher);\n  var idx = isArray(collection) ? -1 : undefined;\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      idx = key;\n      return false;\n    }\n  });\n  return idx;\n}\n/**\n * Find element in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function} matcher\n *\n * @return {Array} result\n */\n\nfunction filter(collection, matcher) {\n  var result = [];\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      result.push(val);\n    }\n  });\n  return result;\n}\n/**\n * Iterate over collection; returning something\n * (non-undefined) will stop iteration.\n *\n * @param  {Array|Object} collection\n * @param  {Function} iterator\n *\n * @return {Object} return result that stopped the iteration\n */\n\nfunction forEach(collection, iterator) {\n  var val, result;\n\n  if (isUndefined(collection)) {\n    return;\n  }\n\n  var convertKey = isArray(collection) ? toNum : identity;\n\n  for (var key in collection) {\n    if (has(collection, key)) {\n      val = collection[key];\n      result = iterator(val, convertKey(key));\n\n      if (result === false) {\n        return val;\n      }\n    }\n  }\n}\n/**\n * Return collection without element.\n *\n * @param  {Array} arr\n * @param  {Function} matcher\n *\n * @return {Array}\n */\n\nfunction without(arr, matcher) {\n  if (isUndefined(arr)) {\n    return [];\n  }\n\n  ensureArray(arr);\n  matcher = toMatcher(matcher);\n  return arr.filter(function (el, idx) {\n    return !matcher(el, idx);\n  });\n}\n/**\n * Reduce collection, returning a single result.\n *\n * @param  {Object|Array} collection\n * @param  {Function} iterator\n * @param  {Any} result\n *\n * @return {Any} result returned from last iterator\n */\n\nfunction reduce(collection, iterator, result) {\n  forEach(collection, function (value, idx) {\n    result = iterator(result, value, idx);\n  });\n  return result;\n}\n/**\n * Return true if every element in the collection\n * matches the criteria.\n *\n * @param  {Object|Array} collection\n * @param  {Function} matcher\n *\n * @return {Boolean}\n */\n\nfunction every(collection, matcher) {\n  return !!reduce(collection, function (matches, val, key) {\n    return matches && matcher(val, key);\n  }, true);\n}\n/**\n * Return true if some elements in the collection\n * match the criteria.\n *\n * @param  {Object|Array} collection\n * @param  {Function} matcher\n *\n * @return {Boolean}\n */\n\nfunction some(collection, matcher) {\n  return !!find(collection, matcher);\n}\n/**\n * Transform a collection into another collection\n * by piping each member through the given fn.\n *\n * @param  {Object|Array}   collection\n * @param  {Function} fn\n *\n * @return {Array} transformed collection\n */\n\nfunction map(collection, fn) {\n  var result = [];\n  forEach(collection, function (val, key) {\n    result.push(fn(val, key));\n  });\n  return result;\n}\n/**\n * Get the collections keys.\n *\n * @param  {Object|Array} collection\n *\n * @return {Array}\n */\n\nfunction keys(collection) {\n  return collection && Object.keys(collection) || [];\n}\n/**\n * Shorthand for `keys(o).length`.\n *\n * @param  {Object|Array} collection\n *\n * @return {Number}\n */\n\nfunction size(collection) {\n  return keys(collection).length;\n}\n/**\n * Get the values in the collection.\n *\n * @param  {Object|Array} collection\n *\n * @return {Array}\n */\n\nfunction values(collection) {\n  return map(collection, function (val) {\n    return val;\n  });\n}\n/**\n * Group collection members by attribute.\n *\n * @param  {Object|Array} collection\n * @param  {Function} extractor\n *\n * @return {Object} map with { attrValue => [ a, b, c ] }\n */\n\nfunction groupBy(collection, extractor) {\n  var grouped = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  extractor = toExtractor(extractor);\n  forEach(collection, function (val) {\n    var discriminator = extractor(val) || '_';\n    var group = grouped[discriminator];\n\n    if (!group) {\n      group = grouped[discriminator] = [];\n    }\n\n    group.push(val);\n  });\n  return grouped;\n}\nfunction uniqueBy(extractor) {\n  extractor = toExtractor(extractor);\n  var grouped = {};\n\n  for (var _len = arguments.length, collections = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    collections[_key - 1] = arguments[_key];\n  }\n\n  forEach(collections, function (c) {\n    return groupBy(c, extractor, grouped);\n  });\n  var result = map(grouped, function (val, key) {\n    return val[0];\n  });\n  return result;\n}\nvar unionBy = uniqueBy;\n/**\n * Sort collection by criteria.\n *\n * @param  {Object|Array} collection\n * @param  {String|Function} extractor\n *\n * @return {Array}\n */\n\nfunction sortBy(collection, extractor) {\n  extractor = toExtractor(extractor);\n  var sorted = [];\n  forEach(collection, function (value, key) {\n    var disc = extractor(value, key);\n    var entry = {\n      d: disc,\n      v: value\n    };\n\n    for (var idx = 0; idx < sorted.length; idx++) {\n      var d = sorted[idx].d;\n\n      if (disc < d) {\n        sorted.splice(idx, 0, entry);\n        return;\n      }\n    } // not inserted, append (!)\n\n\n    sorted.push(entry);\n  });\n  return map(sorted, function (e) {\n    return e.v;\n  });\n}\n/**\n * Create an object pattern matcher.\n *\n * @example\n *\n * const matcher = matchPattern({ id: 1 });\n *\n * let element = find(elements, matcher);\n *\n * @param  {Object} pattern\n *\n * @return {Function} matcherFn\n */\n\nfunction matchPattern(pattern) {\n  return function (el) {\n    return every(pattern, function (val, key) {\n      return el[key] === val;\n    });\n  };\n}\n\nfunction toExtractor(extractor) {\n  return isFunction(extractor) ? extractor : function (e) {\n    return e[extractor];\n  };\n}\n\nfunction toMatcher(matcher) {\n  return isFunction(matcher) ? matcher : function (e) {\n    return e === matcher;\n  };\n}\n\nfunction identity(arg) {\n  return arg;\n}\n\nfunction toNum(arg) {\n  return Number(arg);\n}\n\n/**\n * Debounce fn, calling it only once if the given time\n * elapsed between calls.\n *\n * Lodash-style the function exposes methods to `#clear`\n * and `#flush` to control internal behavior.\n *\n * @param  {Function} fn\n * @param  {Number} timeout\n *\n * @return {Function} debounced function\n */\nfunction debounce(fn, timeout) {\n  var timer;\n  var lastArgs;\n  var lastThis;\n  var lastNow;\n\n  function fire(force) {\n    var now = Date.now();\n    var scheduledDiff = force ? 0 : lastNow + timeout - now;\n\n    if (scheduledDiff > 0) {\n      return schedule(scheduledDiff);\n    }\n\n    fn.apply(lastThis, lastArgs);\n    clear();\n  }\n\n  function schedule(timeout) {\n    timer = setTimeout(fire, timeout);\n  }\n\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = lastNow = lastArgs = lastThis = undefined;\n  }\n\n  function flush() {\n    if (timer) {\n      fire(true);\n    }\n\n    clear();\n  }\n\n  function callback() {\n    lastNow = Date.now();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n    lastThis = this; // ensure an execution is scheduled\n\n    if (!timer) {\n      schedule(timeout);\n    }\n  }\n\n  callback.flush = flush;\n  callback.cancel = clear;\n  return callback;\n}\n/**\n * Throttle fn, calling at most once\n * in the given interval.\n *\n * @param  {Function} fn\n * @param  {Number} interval\n *\n * @return {Function} throttled function\n */\n\nfunction throttle(fn, interval) {\n  var throttling = false;\n  return function () {\n    if (throttling) {\n      return;\n    }\n\n    fn.apply(void 0, arguments);\n    throttling = true;\n    setTimeout(function () {\n      throttling = false;\n    }, interval);\n  };\n}\n/**\n * Bind function against target <this>.\n *\n * @param  {Function} fn\n * @param  {Object}   target\n *\n * @return {Function} bound function\n */\n\nfunction bind(fn, target) {\n  return fn.bind(target);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Convenience wrapper for `Object.assign`.\n *\n * @param {Object} target\n * @param {...Object} others\n *\n * @return {Object} the target\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    others[_key - 1] = arguments[_key];\n  }\n\n  return _extends.apply(void 0, [target].concat(others));\n}\n/**\n * Sets a nested property of a given object to the specified value.\n *\n * This mutates the object and returns it.\n *\n * @param {Object} target The target of the set operation.\n * @param {(string|number)[]} path The path to the nested value.\n * @param {any} value The value to set.\n */\n\nfunction set(target, path, value) {\n  var currentTarget = target;\n  forEach(path, function (key, idx) {\n    if (typeof key !== 'number' && typeof key !== 'string') {\n      throw new Error('illegal key type: ' + _typeof(key) + '. Key should be of type number or string.');\n    }\n\n    if (key === 'constructor') {\n      throw new Error('illegal key: constructor');\n    }\n\n    if (key === '__proto__') {\n      throw new Error('illegal key: __proto__');\n    }\n\n    var nextKey = path[idx + 1];\n    var nextTarget = currentTarget[key];\n\n    if (isDefined(nextKey) && isNil(nextTarget)) {\n      nextTarget = currentTarget[key] = isNaN(+nextKey) ? {} : [];\n    }\n\n    if (isUndefined(nextKey)) {\n      if (isUndefined(value)) {\n        delete currentTarget[key];\n      } else {\n        currentTarget[key] = value;\n      }\n    } else {\n      currentTarget = nextTarget;\n    }\n  });\n  return target;\n}\n/**\n * Gets a nested property of a given object.\n *\n * @param {Object} target The target of the get operation.\n * @param {(string|number)[]} path The path to the nested value.\n * @param {any} [defaultValue] The value to return if no value exists.\n */\n\nfunction get(target, path, defaultValue) {\n  var currentTarget = target;\n  forEach(path, function (key) {\n    // accessing nil property yields <undefined>\n    if (isNil(currentTarget)) {\n      currentTarget = undefined;\n      return false;\n    }\n\n    currentTarget = currentTarget[key];\n  });\n  return isUndefined(currentTarget) ? defaultValue : currentTarget;\n}\n/**\n * Pick given properties from the target object.\n *\n * @param {Object} target\n * @param {Array} properties\n *\n * @return {Object} target\n */\n\nfunction pick(target, properties) {\n  var result = {};\n  var obj = Object(target);\n  forEach(properties, function (prop) {\n    if (prop in obj) {\n      result[prop] = target[prop];\n    }\n  });\n  return result;\n}\n/**\n * Pick all target properties, excluding the given ones.\n *\n * @param {Object} target\n * @param {Array} properties\n *\n * @return {Object} target\n */\n\nfunction omit(target, properties) {\n  var result = {};\n  var obj = Object(target);\n  forEach(obj, function (prop, key) {\n    if (properties.indexOf(key) === -1) {\n      result[key] = prop;\n    }\n  });\n  return result;\n}\n/**\n * Recursively merge `...sources` into given target.\n *\n * Does support merging objects; does not support merging arrays.\n *\n * @param {Object} target\n * @param {...Object} sources\n *\n * @return {Object} the target\n */\n\nfunction merge(target) {\n  for (var _len2 = arguments.length, sources = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    sources[_key2 - 1] = arguments[_key2];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  forEach(sources, function (source) {\n    // skip non-obj sources, i.e. null\n    if (!source || !isObject(source)) {\n      return;\n    }\n\n    forEach(source, function (sourceVal, key) {\n      if (key === '__proto__') {\n        return;\n      }\n\n      var targetVal = target[key];\n\n      if (isObject(sourceVal)) {\n        if (!isObject(targetVal)) {\n          // override target[key] with object\n          targetVal = {};\n        }\n\n        target[key] = merge(targetVal, sourceVal);\n      } else {\n        target[key] = sourceVal;\n      }\n    });\n  });\n  return target;\n}\n\nexport { assign, bind, debounce, ensureArray, every, filter, find, findIndex, flatten, forEach, get, groupBy, has, isArray, isDefined, isFunction, isNil, isNumber, isObject, isString, isUndefined, keys, map, matchPattern, merge, omit, pick, reduce, set, size, some, sortBy, throttle, unionBy, uniqueBy, values, without };\n","/**\n * Flatten array, one level deep.\n *\n * @param {Array<?>} arr\n *\n * @return {Array<?>}\n */\n\nvar nativeToString = Object.prototype.toString;\nvar nativeHasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isUndefined(obj) {\n  return obj === undefined;\n}\nfunction isArray(obj) {\n  return nativeToString.call(obj) === '[object Array]';\n}\n/**\n * Return true, if target owns a property with the given key.\n *\n * @param {Object} target\n * @param {String} key\n *\n * @return {Boolean}\n */\n\nfunction has(target, key) {\n  return nativeHasOwnProperty.call(target, key);\n}\n/**\n * Iterate over collection; returning something\n * (non-undefined) will stop iteration.\n *\n * @param  {Array|Object} collection\n * @param  {Function} iterator\n *\n * @return {Object} return result that stopped the iteration\n */\n\nfunction forEach(collection, iterator) {\n  var val, result;\n\n  if (isUndefined(collection)) {\n    return;\n  }\n\n  var convertKey = isArray(collection) ? toNum : identity;\n\n  for (var key in collection) {\n    if (has(collection, key)) {\n      val = collection[key];\n      result = iterator(val, convertKey(key));\n\n      if (result === false) {\n        return val;\n      }\n    }\n  }\n}\n\nfunction identity(arg) {\n  return arg;\n}\n\nfunction toNum(arg) {\n  return Number(arg);\n}\n\n/**\n * Assigns style attributes in a style-src compliant way.\n *\n * @param {Element} element\n * @param {...Object} styleSources\n *\n * @return {Element} the element\n */\nfunction assign$1(element) {\n  var target = element.style;\n\n  for (var _len = arguments.length, styleSources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    styleSources[_key - 1] = arguments[_key];\n  }\n\n  forEach(styleSources, function (style) {\n    if (!style) {\n      return;\n    }\n\n    forEach(style, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return element;\n}\n\n/**\n * Set attribute `name` to `val`, or get attr `name`.\n *\n * @param {Element} el\n * @param {String} name\n * @param {String} [val]\n * @api public\n */\nfunction attr(el, name, val) {\n  // get\n  if (arguments.length == 2) {\n    return el.getAttribute(name);\n  }\n\n  // remove\n  if (val === null) {\n    return el.removeAttribute(name);\n  }\n\n  // set\n  el.setAttribute(name, val);\n\n  return el;\n}\n\nvar indexOf = [].indexOf;\n\nvar indexof = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n/**\n * Taken from https://github.com/component/classes\n *\n * Without the component bits.\n */\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nfunction classes(el) {\n  return new ClassList(el);\n}\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function (name) {\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = indexof(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function (name) {\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = indexof(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function (re) {\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function (name, force) {\n  // classList\n  if (this.list) {\n    if ('undefined' !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if ('undefined' !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function () {\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list ? this.list.contains(name) : !!~indexof(this.array(), name);\n};\n\n/**\n * Remove all children from the given element.\n */\nfunction clear(el) {\n\n  var c;\n\n  while (el.childNodes.length) {\n    c = el.childNodes[0];\n    el.removeChild(c);\n  }\n\n  return el;\n}\n\nvar proto = typeof Element !== 'undefined' ? Element.prototype : {};\nvar vendor = proto.matches\n  || proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\nvar matchesSelector = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (!el || el.nodeType !== 1) return false;\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n\n/**\n * Closest\n *\n * @param {Element} el\n * @param {String} selector\n * @param {Boolean} checkYourSelf (optional)\n */\nfunction closest (element, selector, checkYourSelf) {\n  var currentElem = checkYourSelf ? element : element.parentNode;\n\n  while (currentElem && currentElem.nodeType !== document.DOCUMENT_NODE && currentElem.nodeType !== document.DOCUMENT_FRAGMENT_NODE) {\n\n    if (matchesSelector(currentElem, selector)) {\n      return currentElem;\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return matchesSelector(currentElem, selector) ? currentElem : null;\n}\n\nvar bind$1 = window.addEventListener ? 'addEventListener' : 'attachEvent',\n    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n    prefix = bind$1 !== 'addEventListener' ? 'on' : '';\n\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nvar bind_1 = function(el, type, fn, capture){\n  el[bind$1](prefix + type, fn, capture || false);\n  return fn;\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nvar unbind_1 = function(el, type, fn, capture){\n  el[unbind](prefix + type, fn, capture || false);\n  return fn;\n};\n\nvar componentEvent = {\n\tbind: bind_1,\n\tunbind: unbind_1\n};\n\n/**\n * Module dependencies.\n */\n\n/**\n * Delegate event `type` to `selector`\n * and invoke `fn(e)`. A callback function\n * is returned which may be passed to `.unbind()`.\n *\n * @param {Element} el\n * @param {String} selector\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\n// Some events don't bubble, so we want to bind to the capture phase instead\n// when delegating.\nvar forceCaptureEvents = ['focus', 'blur'];\n\nfunction bind$2(el, selector, type, fn, capture) {\n  if (forceCaptureEvents.indexOf(type) !== -1) {\n    capture = true;\n  }\n\n  return componentEvent.bind(el, type, function (e) {\n    var target = e.target || e.srcElement;\n    e.delegateTarget = closest(target, selector, true, el);\n    if (e.delegateTarget) {\n      fn.call(el, e);\n    }\n  }, capture);\n}\n\n/**\n * Unbind event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @api public\n */\nfunction unbind$1(el, type, fn, capture) {\n  if (forceCaptureEvents.indexOf(type) !== -1) {\n    capture = true;\n  }\n\n  return componentEvent.unbind(el, type, fn, capture);\n}\n\nvar delegate = {\n  bind: bind$2,\n  unbind: unbind$1\n};\n\n/**\n * Expose `parse`.\n */\n\nvar domify = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map$1 = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap$1.td =\nmap$1.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap$1.option =\nmap$1.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap$1.thead =\nmap$1.tbody =\nmap$1.colgroup =\nmap$1.caption =\nmap$1.tfoot = [1, '<table>', '</table>'];\n\nmap$1.polyline =\nmap$1.ellipse =\nmap$1.polygon =\nmap$1.circle =\nmap$1.text =\nmap$1.line =\nmap$1.path =\nmap$1.rect =\nmap$1.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map$1[tag] || map$1._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n\nfunction query(selector, el) {\n  el = el || document;\n\n  return el.querySelector(selector);\n}\n\nfunction all(selector, el) {\n  el = el || document;\n\n  return el.querySelectorAll(selector);\n}\n\nfunction remove(el) {\n  el.parentNode && el.parentNode.removeChild(el);\n}\n\nexport { assign$1 as assignStyle, attr, classes, clear, closest, delegate, domify, componentEvent as event, matchesSelector as matches, query, all as queryAll, remove };\n","module.exports = function cmp (a, b) {\n    var pa = a.split('.');\n    var pb = b.split('.');\n    for (var i = 0; i < 3; i++) {\n        var na = Number(pa[i]);\n        var nb = Number(pb[i]);\n        if (na > nb) return 1;\n        if (nb > na) return -1;\n        if (!isNaN(na) && isNaN(nb)) return 1;\n        if (isNaN(na) && !isNaN(nb)) return -1;\n    }\n    return 0;\n};\n","function ensureImported(element, target) {\n\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  return element;\n}\n\n/**\n * appendTo utility\n */\n\n/**\n * Append a node to a target element and return the appended node.\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the appended node\n */\nfunction appendTo(element, target) {\n  return target.appendChild(ensureImported(element, target));\n}\n\n/**\n * append utility\n */\n\n/**\n * Append a node to an element\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the element\n */\nfunction append(target, node) {\n  appendTo(node, target);\n  return target;\n}\n\n/**\n * attribute accessor utility\n */\n\nvar LENGTH_ATTR = 2;\n\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\n\n\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\n\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n  var type = CSS_PROPERTIES[hyphenated];\n\n  if (type) {\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\n\nfunction setAttributes(node, attrs) {\n\n  var names = Object.keys(attrs), i, name;\n\n  for (i = 0, name; (name = names[i]); i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n\n/**\n * Gets or sets raw attributes on a node.\n *\n * @param  {SVGElement} node\n * @param  {Object} [attrs]\n * @param  {String} [name]\n * @param  {String} [value]\n *\n * @return {String}\n */\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n\n  return node;\n}\n\n/**\r\n * Clear utility\r\n */\r\nfunction index(arr, obj) {\r\n  if (arr.indexOf) {\r\n    return arr.indexOf(obj);\r\n  }\r\n\r\n\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nvar re = /\\s+/;\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction defined(o) {\r\n  return typeof o !== 'undefined';\r\n}\r\n\r\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nfunction classes(el) {\r\n  return new ClassList(el);\r\n}\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required');\r\n  }\r\n  this.el = el;\r\n  this.list = el.classList;\r\n}\r\n\r\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.add = function(name) {\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.add(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (!~i) {\r\n    arr.push(name);\r\n  }\r\n\r\n  if (defined(this.el.className.baseVal)) {\r\n    this.el.className.baseVal = arr.join(' ');\r\n  } else {\r\n    this.el.className = arr.join(' ');\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.remove = function(name) {\r\n  if ('[object RegExp]' === toString.call(name)) {\r\n    return this.removeMatching(name);\r\n  }\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.remove(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (~i) {\r\n    arr.splice(i, 1);\r\n  }\r\n  this.el.className.baseVal = arr.join(' ');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\r\n\r\nClassList.prototype.removeMatching = function(re) {\r\n  var arr = this.array();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (re.test(arr[i])) {\r\n      this.remove(arr[i]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.toggle = function(name, force) {\r\n  // classList\r\n  if (this.list) {\r\n    if (defined(force)) {\r\n      if (force !== this.list.toggle(name, force)) {\r\n        this.list.toggle(name); // toggle again to correct\r\n      }\r\n    } else {\r\n      this.list.toggle(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  if (defined(force)) {\r\n    if (!force) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  } else {\r\n    if (this.has(name)) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.array = function() {\r\n  var className = this.el.getAttribute('class') || '';\r\n  var str = className.replace(/^\\s+|\\s+$/g, '');\r\n  var arr = str.split(re);\r\n  if ('' === arr[0]) {\r\n    arr.shift();\r\n  }\r\n  return arr;\r\n};\r\n\r\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.has =\r\nClassList.prototype.contains = function(name) {\r\n  return (\r\n    this.list ?\r\n      this.list.contains(name) :\r\n      !! ~index(this.array(), name)\r\n  );\r\n};\n\nfunction remove(element) {\n  var parent = element.parentNode;\n\n  if (parent) {\n    parent.removeChild(element);\n  }\n\n  return element;\n}\n\n/**\n * Clear utility\n */\n\n/**\n * Removes all children from the given element\n *\n * @param  {DOMElement} element\n * @return {DOMElement} the element (for chaining)\n */\nfunction clear(element) {\n  var child;\n\n  while ((child = element.firstChild)) {\n    remove(child);\n  }\n\n  return element;\n}\n\nfunction clone(element) {\n  return element.cloneNode(true);\n}\n\nvar ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n\n/**\n * DOM parsing utility\n */\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\n\nfunction parse(svg) {\n\n  var unwrap = false;\n\n  // ensure we import a valid svg document\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n    unwrap = true;\n  }\n\n  var parsed = parseDocument(svg);\n\n  if (!unwrap) {\n    return parsed;\n  }\n\n  var fragment = document.createDocumentFragment();\n\n  var parent = parsed.firstChild;\n\n  while (parent.firstChild) {\n    fragment.appendChild(parent.firstChild);\n  }\n\n  return fragment;\n}\n\nfunction parseDocument(svg) {\n\n  var parser;\n\n  // parse\n  parser = new DOMParser();\n  parser.async = false;\n\n  return parser.parseFromString(svg, 'text/xml');\n}\n\n/**\n * Create utility for SVG elements\n */\n\n\n/**\n * Create a specific type from name or SVG markup.\n *\n * @param {String} name the name or markup of the element\n * @param {Object} [attrs] attributes to set on the element\n *\n * @returns {SVGElement}\n */\nfunction create(name, attrs) {\n  var element;\n\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n\n  if (attrs) {\n    attr(element, attrs);\n  }\n\n  return element;\n}\n\n/**\n * Events handling utility\n */\n\nfunction on(node, event, listener, useCapture) {\n  node.addEventListener(event, listener, useCapture);\n}\n\nfunction off(node, event, listener, useCapture) {\n  node.removeEventListener(event, listener, useCapture);\n}\n\n/**\n * Geometry helpers\n */\n\n// fake node used to instantiate svg geometry elements\nvar node = null;\n\nfunction getNode() {\n  if (node === null) {\n    node = create('svg');\n  }\n\n  return node;\n}\n\nfunction extend(object, props) {\n  var i, k, keys = Object.keys(props);\n\n  for (i = 0; (k = keys[i]); i++) {\n    object[k] = props[k];\n  }\n\n  return object;\n}\n\n\nfunction createPoint(x, y) {\n  var point = getNode().createSVGPoint();\n\n  switch (arguments.length) {\n  case 0:\n    return point;\n  case 2:\n    x = {\n      x: x,\n      y: y\n    };\n    break;\n  }\n\n  return extend(point, x);\n}\n\n/**\n * Create matrix via args.\n *\n * @example\n *\n * createMatrix({ a: 1, b: 1 });\n * createMatrix();\n * createMatrix(1, 2, 0, 0, 30, 20);\n *\n * @return {SVGMatrix}\n */\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = getNode().createSVGMatrix();\n\n  switch (arguments.length) {\n  case 0:\n    return matrix;\n  case 1:\n    return extend(matrix, a);\n  case 6:\n    return extend(matrix, {\n      a: a,\n      b: b,\n      c: c,\n      d: d,\n      e: e,\n      f: f\n    });\n  }\n}\n\nfunction createTransform(matrix) {\n  if (matrix) {\n    return getNode().createSVGTransformFromMatrix(matrix);\n  } else {\n    return getNode().createSVGTransform();\n  }\n}\n\n/**\n * Serialization util\n */\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([\\n\\r\"]{1})/g;\n\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '\\''\n};\n\nfunction escape(str, pattern) {\n\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n\n  return str.replace(pattern, replaceFn);\n}\n\nfunction serialize(node, output) {\n\n  var i, len, attrMap, attrNode, childNodes;\n\n  switch (node.nodeType) {\n  // TEXT\n  case 3:\n    // replace special XML characters\n    output.push(escape(node.textContent, TEXT_ENTITIES));\n    break;\n\n  // ELEMENT\n  case 1:\n    output.push('<', node.tagName);\n\n    if (node.hasAttributes()) {\n      attrMap = node.attributes;\n      for (i = 0, len = attrMap.length; i < len; ++i) {\n        attrNode = attrMap.item(i);\n        output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n      }\n    }\n\n    if (node.hasChildNodes()) {\n      output.push('>');\n      childNodes = node.childNodes;\n      for (i = 0, len = childNodes.length; i < len; ++i) {\n        serialize(childNodes.item(i), output);\n      }\n      output.push('</', node.tagName, '>');\n    } else {\n      output.push('/>');\n    }\n    break;\n\n  // COMMENT\n  case 8:\n    output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n    break;\n\n  // CDATA\n  case 4:\n    output.push('<![CDATA[', node.nodeValue, ']]>');\n    break;\n\n  default:\n    throw new Error('unable to handle node ' + node.nodeType);\n  }\n\n  return output;\n}\n\n/**\n * innerHTML like functionality for SVG elements.\n * based on innerSVG (https://code.google.com/p/innersvg)\n */\n\n\nfunction set(element, svg) {\n\n  var parsed = parse(svg);\n\n  // clear element contents\n  clear(element);\n\n  if (!svg) {\n    return;\n  }\n\n  if (!isFragment(parsed)) {\n    // extract <svg> from parsed document\n    parsed = parsed.documentElement;\n  }\n\n  var nodes = slice(parsed.childNodes);\n\n  // import + append each node\n  for (var i = 0; i < nodes.length; i++) {\n    appendTo(nodes[i], element);\n  }\n\n}\n\nfunction get(element) {\n  var child = element.firstChild,\n      output = [];\n\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n\n  return output.join('');\n}\n\nfunction isFragment(node) {\n  return node.nodeName === '#document-fragment';\n}\n\nfunction innerSVG(element, svg) {\n\n  if (svg !== undefined) {\n\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n\n    return element;\n  } else {\n    return get(element);\n  }\n}\n\n\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\n/**\n * Selection utilities\n */\n\nfunction select(node, selector) {\n  return node.querySelector(selector);\n}\n\nfunction selectAll(node, selector) {\n  var nodes = node.querySelectorAll(selector);\n\n  return [].map.call(nodes, function(element) {\n    return element;\n  });\n}\n\n/**\n * prependTo utility\n */\n\n/**\n * Prepend a node to a target element and return the prepended node.\n *\n * @param  {SVGElement} node\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the prepended node\n */\nfunction prependTo(node, target) {\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\n}\n\n/**\n * prepend utility\n */\n\n/**\n * Prepend a node to a target element\n *\n * @param  {SVGElement} target\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the target element\n */\nfunction prepend(target, node) {\n  prependTo(node, target);\n  return target;\n}\n\n/**\n * Replace utility\n */\n\nfunction replace(element, replacement) {\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\n  return replacement;\n}\n\n/**\n * transform accessor utility\n */\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  }\n\n  return transform;\n}\n\n\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n\n  transformList.clear();\n\n  for (i = 0; (t = transforms[i]); i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n}\n\n/**\n * Get or set the transforms on the given node.\n *\n * @param {SVGElement} node\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\n *\n * @return {SVGTransform} the consolidated transform\n */\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n\n  if (transforms) {\n\n    if (!Array.isArray(transforms)) {\n      transforms = [ transforms ];\n    }\n\n    setTransforms(transformList, transforms);\n  }\n\n  return transformList.consolidate();\n}\n\nexport { append, appendTo, attr, classes, clear, clone, create, innerSVG, prepend, prependTo, remove, replace, transform, on, off, createPoint, createMatrix, createTransform, select, selectAll };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":["findDataObjects","process","dataObjects","flowElements","element","$type","push","findDataObject","id","dataObj","findDataReferenceShapes","processShape","refs","shape","children","type","businessObject","dataObjectRef","CommandInterceptor","is","HIGH_PRIORITY","DataObjectInterceptor","constructor","eventBus","bpmnFactory","bpmnUpdater","preExecute","event","context","stopPropagation","executed","parent","existingDataObjects","dataObject","length","create","name","$inject","BaseRenderer","attr","svgAttr","getBusinessObject","isAny","DataObjectRenderer","bpmnRenderer","canRender","labelTarget","drawShape","parentNode","parentObject","$parent","RuleProvider","inherits","DataObjectRules","call","prototype","init","addRule","elements","shapes","target","canDrop","useService","isTextFieldEntryEdited","TextFieldEntry","without","DataObjectArray","props","moddle","commandStack","elementRegistry","processRef","items","map","index","label","entries","DataObjectGroup","idPrefix","autoFocusEntry","remove","removeFactory","add","newDataObject","newElements","get","ids","nextPrefixed","execute","moddleElement","properties","references","ref","changed","component","DataObjectTextField","isEdited","parameter","debounce","setValue","value","getValue","ListGroup","DataObjectSelect","LOW_PRIORITY","DataObjectPropertiesProvider","propertiesPanel","translate","getGroups","groups","createDataObjectSelector","createDataObjectEditor","registerProvider","dataObjectArray","SelectEntry","flowElem","getOptions","options","collectionAdd","collectionRemove","IdGenerator","IoInterceptor","includes","type_name","split","ioSpec","assureIOSpecificationExists","di","generator","ioSpecification","dataIO","next","bpmnElement","updateBounds","planeElement","dataInputs","inputSets","dataOutputs","outputSets","assign","IoPalette","palette","elementFactory","_create","_elementFactory","getPaletteEntries","input_type","output_type","createListener","createShape","width","height","start","createInputListener","createOutputListener","group","className","title","action","dragstart","click","IoRules","position","canCreate","CallActivityPropertiesProvider","_elementRegistry","getGroupsCallback","pushGroup","createCalledElementGroup","CalledElementTextField","calledElement","ConditionsPropertiesProvider","source","createConditionsGroup","conditionGroup","description","ConditionExpressionTextField","conditionExpression","body","conditionExpressionModdleElement","SPIFFWORKFLOW_XML_NAMESPACE","scriptGroup","SCRIPT_TYPE","SpiffExtensionCalledDecision","SpiffExtensionTextInput","SpiffExtensionInstructionsForEndUser","ServiceTaskParameterArray","ServiceTaskOperatorSelect","ExtensionsPropertiesProvider","createScriptGroup","preScriptPostScriptGroup","createUserGroup","createBusinessRuleGroup","createManualTaskPropertiesGroup","createServiceGroup","bpmn","pre","post","SPIFF_PROP","getPropertyObject","bizObj","extensionElements","filter","e","$instanceOf","property","calledDecisionId","extensions","TextAreaEntry","instructionsForEndUser","serviceTaskOperators","previouslyUsedServiceTaskParameterValuesHash","SERVICE_TASK_OPERATOR_ELEMENT_NAME","SERVICE_TASK_PARAMETERS_ELEMENT_NAME","SERVICE_TASK_PARAMETER_ELEMENT_NAME","requestServiceTaskOperators","fire","on","sort","a","b","localeCompare","getServiceTaskOperatorModdleElement","shapeElement","ee","values","getServiceTaskParameterModdleElements","serviceTaskOperatorModdleElement","parameterList","parameters","serviceTaskOperator","find","sto","console","error","previouslyUsedServiceTaskParameterValues","oldServiceTaskOperatorModdleElement","newServiceTaskOperatorModdleElement","newParameterList","forEach","stoParameter","newParameterModdleElement","newExtensionValues","extValue","optionList","serviceTaskParameterModdleElements","serviceTaskParameterModdleElement","serviceTaskParameterEntries","ServiceTaskParameterTextField","SPIFF_PARENT_PROP","getPropertiesObject","extensionElement","parentElement","propertyElement","HeaderButton","PythonScript","getScriptObject","getInstanceOfType","scriptObj","script","LaunchEditorButton","getEntries","scriptType","removeFirstInstanceOfItemFromArrayInPlace","arr","indexOf","splice","RulesModule","MessagesPropertiesProvider","SpiffWorkflowModdle","require","SpiffWorkflowModule","__depends__","__init__","dataObjectInterceptor","dataObjectRules","dataObjectRenderer","dataObjectPropertiesProvider","conditionsPropertiesProvider","extensionsPropertiesProvider","messagesPropertiesProvider","callActivityPropertiesProvider","ioPalette","ioRules","ioInterceptor","module","exports","getRoot","elementId","_seed","hats","startsWith","isMessageElement","isMessageEvent","eventDefinitions","canReceiveMessage","getMessageRefElement","messageEventDefinition","messageRef","findCorrelationKeyForCorrelationProperty","correlationKeyElements","findCorrelationKeys","cke","correlationPropertyRef","findCorrelationPropertiesAndRetrievalExpressionsForMessage","formalExpressions","messageRefElement","root","childElement","rootElements","retrievalExpression","getRetrievalExpressionFromCorrelationProperty","formalExpression","correlationPropertyModdleElement","correlationPropertyRetrievalExpressionModdleElement","getMessageElementForShapeElement","taskMessage","messages","findMessageModdleElements","message","correlationProperty","correlationPropertyRetrievalExpression","findCorrelationProperties","correlationProperties","rootElement","correlationKeys","currentKeys","correlationKey","currentCorrelation","SimpleEntry","CorrelationKeysArray","correlationKeyElement","correlationGroup","newCorrelationKeyElement","currentCorrelationKeyElements","CorrelationKeyTextField","CorrelationPropertyText","disabled","CorrelationPropertiesArray","correlationPropertyArray","MessageCorrelationPropertyGroup","newCorrelationPropertyElement","correlationPropertyId","oldCorrelationKeyElement","MessageCorrelationKeySelect","CorrelationPropertyIdTextField","CorrelationPropertyNameTextField","MessageArray","messageElements","messageElement","messageGroup","newMessageElement","messageId","removeMessageRefs","cpre","fe","ed","MessageIdTextField","MessageNameTextField","MessageCorrelationPropertiesArray","correlationPropertyObjectsForCurrentMessage","allCorrelationPropertyModdleElements","correlationPropertyObject","correlationPropertyElement","cpe","foundElement","cpo","cpme","newRetrievalExpressionElement","newFormalExpression","messagePath","returnObject","MessageCorrelationPropertySelect","MessageCorrelationExpressionTextField","_parameter","MessagePayload","getMessagePayloadObject","messagePayloadObject","messagePayload","$model","MessageSelect","_value","MessageVariable","getMessageVariableObject","messageVariableObject","messageVariable","createCollaborationGroup","messageIndex","findEntry","createMessageGroup","entryId","entryIndex"],"sourceRoot":""}